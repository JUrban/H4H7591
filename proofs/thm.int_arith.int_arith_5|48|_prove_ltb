Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% (103383)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 710
% Passive clauses: 10451
% Generated clauses: 20386
% Final active clauses: 706
% Final passive clauses: 9329
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 404
% Trivial inequalities: 22
% Fw subsumption resolutions: 1630
% Fw demodulations: 342
% Bw demodulations: 4
% 
% Simple tautologies: 256
% Equational tautologies: 55
% Forward subsumptions: 6774
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 12113
% Factoring: 1195
% Forward superposition: 2538
% Backward superposition: 1612
% Self superposition: 46
% Equality factoring: 26
% Equality resolution: 9
% 
% Split clauses: 431
% Split components: 868
% SAT solver clauses: 770
% SAT solver unit clauses: 31
% SAT solver binary clauses: 226
% 
% Sat splits: 430
% 
% TWLsolver clauses: 770
% TWLsolver calls for satisfiability: 460
% 
% Memory used [KB]: 11385
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.int_arith
% (103393)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 437
% Passive clauses: 2663
% Generated clauses: 12620
% Final active clauses: 432
% Final passive clauses: 2214
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 255
% Trivial inequalities: 55
% Fw subsumption resolutions: 923
% Fw demodulations: 706
% Bw demodulations: 17
% Condensations: 397
% Global subsumptions: 22
% 
% Simple tautologies: 309
% Equational tautologies: 20
% Forward subsumptions: 4161
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 3587
% Factoring: 187
% Forward superposition: 1965
% Backward superposition: 1497
% Self superposition: 39
% Equality factoring: 32
% Equality resolution: 17
% 
% Split clauses: 94
% Split components: 188
% SAT solver clauses: 3363
% SAT solver unit clauses: 232
% SAT solver binary clauses: 92
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 94
% 
% TWLsolver clauses: 3275
% TWLsolver calls for satisfiability: 1846
% 
% Memory used [KB]: 13688
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.int_arith
% (103421)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 3917
% Passive clauses: 22944
% Generated clauses: 157605
% Final active clauses: 174
% Final passive clauses: 2326
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 401
% Trivial inequalities: 276
% Fw subsumption resolutions: 3729
% Fw demodulations: 26528
% Bw demodulations: 16441
% Condensations: 2048
% Global subsumptions: 485
% 
% Simple tautologies: 151
% Equational tautologies: 202
% Forward subsumptions: 96528
% Fw demodulations to eq. taut.: 26
% Bw demodulations to eq. taut.: 231
% 
% Unit resulting resolution: 25768
% Factoring: 1
% Forward superposition: 33100
% Backward superposition: 29042
% Self superposition: 285
% Equality factoring: 26
% Equality resolution: 23
% 
% Split clauses: 485
% Split components: 975
% SAT solver clauses: 27130
% SAT solver unit clauses: 2881
% SAT solver binary clauses: 6916
% 
% Sat splits: 485
% Sat splitting refutations: 2728
% 
% Memory used [KB]: 83666
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.int_arith
% (103707)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2258
% Passive clauses: 46885
% Generated clauses: 183002
% Final active clauses: 1777
% Final passive clauses: 37160
% Input formulas: 63
% Initial clauses: 218
% 
% Selected by SInE selection: 56
% SInE iterations: 1
% 
% Duplicate literals: 5091
% Trivial inequalities: 361
% Fw subsumption resolutions: 15665
% Fw demodulations: 14045
% Bw demodulations: 238
% 
% Simple tautologies: 4275
% Equational tautologies: 287
% Forward subsumptions: 86489
% Fw demodulations to eq. taut.: 28
% 
% Binary resolution: 107140
% Factoring: 443
% Forward superposition: 23712
% Backward superposition: 13239
% Self superposition: 304
% Equality factoring: 10
% Equality resolution: 76
% 
% Split clauses: 11547
% Split components: 24872
% SAT solver clauses: 12090
% SAT solver unit clauses: 38
% SAT solver binary clauses: 2238
% 
% Sat splits: 11547
% Sat splitting refutations: 75
% 
% Memory used [KB]: 57184
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.int_arith
% (103794)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 413
% Passive clauses: 2831
% Generated clauses: 15685
% Final active clauses: 405
% Final passive clauses: 2260
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 456
% Trivial inequalities: 220
% Fw subsumption resolutions: 1841
% Fw demodulations: 355
% Bw demodulations: 16
% Global subsumptions: 14
% 
% Simple tautologies: 532
% Equational tautologies: 38
% Forward subsumptions: 8594
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 4021
% Factoring: 18
% Forward superposition: 4464
% Backward superposition: 3862
% Self superposition: 88
% Equality factoring: 6
% Equality resolution: 22
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 3397
% SAT solver unit clauses: 863
% SAT solver binary clauses: 249
% 
% Sat splits: 14
% Sat splitting refutations: 536
% 
% Memory used [KB]: 9594
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.int_arith
% (103816)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1163
% Passive clauses: 6020
% Generated clauses: 20718
% Final active clauses: 777
% Final passive clauses: 4555
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 1026
% Trivial inequalities: 63
% Fw subsumption resolutions: 1345
% Bw subsumption resolutions: 196
% Fw demodulations: 1116
% Bw demodulations: 60
% Condensations: 1864
% Global subsumptions: 1
% 
% Simple tautologies: 1582
% Equational tautologies: 50
% Forward subsumptions: 7517
% Backward subsumptions: 557
% 
% Binary resolution: 9783
% Factoring: 42
% Forward superposition: 2180
% Backward superposition: 2311
% Self superposition: 46
% Equality factoring: 4
% Equality resolution: 17
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 6092
% SAT solver unit clauses: 202
% SAT solver binary clauses: 627
% 
% Sat splits: 1
% Sat splitting refutations: 67
% 
% Memory used [KB]: 11641
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.int_arith
% (103870)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 540
% Passive clauses: 5046
% Generated clauses: 22013
% Final active clauses: 406
% Final passive clauses: 636
% Input formulas: 63
% Initial clauses: 239
% 
% Duplicate literals: 165
% Trivial inequalities: 155
% Fw demodulations: 4666
% Bw demodulations: 2020
% Global subsumptions: 43
% 
% Simple tautologies: 301
% Equational tautologies: 28
% Forward subsumptions: 10446
% Backward subsumptions: 352
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 1457
% Unit resulting resolution: 2840
% Forward superposition: 3780
% Backward superposition: 4243
% Self superposition: 89
% Equality resolution: 2
% 
% Split clauses: 144
% Split components: 292
% SAT solver clauses: 7127
% SAT solver unit clauses: 20
% SAT solver binary clauses: 1717
% 
% Sat splits: 144
% Sat splitting refutations: 31
% 
% Memory used [KB]: 13816
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f152550,plain,(
  $false),
  inference(global_subsumption,[],[f152549,f143590])).
fof(f143590,plain,(
  s('type.integer.int',sK14('const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)),sK3)) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',sK14(sK2,sK3))))),
  inference(backward_demodulation,[],[f143440,f2132])).
fof(f2132,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',sK14(sK2,sK3)))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3)))),
  inference(backward_demodulation,[],[f2073,f2120])).
fof(f2120,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))))),
  inference(backward_demodulation,[],[f2072,f287])).
fof(f287,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))))),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  s('type.integer.int',sK3) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',sK2)))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f158])).
fof(f158,plain,(
  ? [X0,X1,X2] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X1)))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(flattening,[],[f157])).
fof(f157,plain,(
  ? [X0,X1,X2] : ((s('type.integer.int',X2) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(ennf_transformation,[],[f66])).
fof(f66,plain,(
  ~! [X0,X1,X2] : ((s('type.integer.int',X2) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ~! [X0,X1,X2] : ((~s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((~s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((~s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X7))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.int_arith.int_arith_5|48|_prove_ltb')).
fof(f2072,plain,(
  s('type.integer.int',sK14(sK1,sK3)) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))),
  inference(superposition,[],[f1994,f833])).
fof(f833,plain,(
  s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',sK3)))),
  inference(resolution,[],[f285,f393])).
fof(f393,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(X1,X0)),s('type.integer.int',X0))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(X1,X0)),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f252])).
fof(f252,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X3] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f251])).
fof(f251,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ? [X24] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',X6))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_DIVIDES')).
fof(f285,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f191])).
fof(f1994,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK3))),s('type.integer.int',sK3)))) )),
  inference(global_subsumption,[],[f1993,f284])).
fof(f284,plain,(
  s('type.integer.int',sK3) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f191])).
fof(f1993,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK3))),s('type.integer.int',sK3))) | s('type.integer.int',sK3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(trivial_inequality_removal,[],[f1992])).
fof(f1992,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK3))),s('type.integer.int',sK3))) | s('type.integer.int',sK3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f1944,f1815])).
fof(f1815,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK3),s('type.integer.int',sK3)))),
  inference(equality_resolution,[],[f829])).
fof(f829,plain,(
  ( ! [X4] : (s('type.integer.int',sK3) != s('type.integer.int',X4) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f284,f308])).
fof(f308,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X22] : (~s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_MOD_ID')).
fof(f1944,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK3))),s('type.integer.int',sK3))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK3),s('type.integer.int',sK3))) | s('type.integer.int',sK3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1915,f438])).
fof(f438,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X6,X7,X23] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',X6))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_MUL_DIV')).
fof(f1915,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK3),s('type.integer.int',sK3)))))) )),
  inference(backward_demodulation,[],[f1909,f295])).
fof(f295,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X13] : s('type.integer.int',X13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_MUL_RID')).
fof(f1909,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK3),s('type.integer.int',sK3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(equality_resolution,[],[f828])).
fof(f828,plain,(
  ( ! [X3] : (s('type.integer.int',sK3) != s('type.integer.int',X3) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f284,f309])).
fof(f309,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_DIV_ID')).
fof(f2073,plain,(
  s('type.integer.int',sK14(sK2,sK3)) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))),
  inference(superposition,[],[f1994,f921])).
fof(f921,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(sK2,sK3)),s('type.integer.int',sK3)))),
  inference(resolution,[],[f286,f393])).
fof(f286,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f191])).
fof(f143440,plain,(
  s('type.integer.int',sK14('const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)),sK3)) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3)))),
  inference(resolution,[],[f142974,f2074])).
fof(f2074,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',X0)))) | s('type.integer.int',sK14(X0,sK3)) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',sK3)))) )),
  inference(superposition,[],[f1994,f393])).
fof(f142974,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))))),
  inference(superposition,[],[f137002,f921])).
fof(f137002,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK3))))))))) )),
  inference(equality_resolution,[],[f9614])).
fof(f9614,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK3))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK3),s('type.integer.int',X6))))) )),
  inference(superposition,[],[f394,f1676])).
fof(f1676,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK3))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',X1))),s('type.integer.int',sK3)))) )),
  inference(superposition,[],[f437,f833])).
fof(f437,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X13,X14,X21] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X13),s('type.integer.int',X14))),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X21))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X21)))))),
  file('thm.int_arith.int_arith_5|48|_prove_ltb','thm.integer.INT_RDISTRIB')).
fof(f394,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f253])).
fof(f152549,plain,(
  s('type.integer.int',sK14('const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)),sK3)) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',sK14(sK2,sK3))))),
  inference(forward_demodulation,[],[f152252,f143440])).
fof(f152252,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',sK14(sK2,sK3)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))),s('type.integer.int',sK3)))),
  inference(superposition,[],[f9611,f921])).
fof(f9611,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14(sK1,sK3)),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK3))))),s('type.integer.int',sK3)))) )),
  inference(superposition,[],[f1994,f1676])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 885
% Passive clauses: 14097
% Generated clauses: 137214
% Final active clauses: 804
% Final passive clauses: 6830
% Input formulas: 63
% Initial clauses: 368
% Discarded non-redundant clauses: 65979
% 
% Duplicate literals: 7161
% Trivial inequalities: 1264
% Fw demodulations: 12654
% Bw demodulations: 96
% Condensations: 17169
% Global subsumptions: 118
% 
% Simple tautologies: 4615
% Equational tautologies: 71
% Forward subsumptions: 80547
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 23
% 
% Binary resolution: 35696
% Factoring: 45
% Forward superposition: 41793
% Backward superposition: 21403
% Self superposition: 122
% Equality factoring: 77
% Equality resolution: 170
% 
% SAT solver clauses: 14600
% SAT solver unit clauses: 427
% SAT solver binary clauses: 1215
% SAT solver learnt clauses: 235
% SAT solver learnt literals: 618
% 
% TWLsolver clauses: 14215
% TWLsolver calls for satisfiability: 394205
% 
% Memory used [KB]: 70873
% Time elapsed: 7.405 s
% ------------------------------
% ------------------------------
% Success in time 26.456 s
