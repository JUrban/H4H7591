Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pred_set
% (24158)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1354
% Passive clauses: 10366
% Generated clauses: 40137
% Final active clauses: 1287
% Final passive clauses: 8559
% Input formulas: 260
% Initial clauses: 642
% 
% Duplicate literals: 209
% Trivial inequalities: 241
% Fw subsumption resolutions: 1806
% Fw demodulations: 3959
% Bw demodulations: 15
% 
% Simple tautologies: 378
% Equational tautologies: 25
% Forward subsumptions: 22770
% 
% Binary resolution: 9755
% Factoring: 714
% Forward superposition: 14279
% Backward superposition: 8170
% Self superposition: 27
% Equality factoring: 2
% Equality resolution: 27
% 
% Split clauses: 431
% Split components: 864
% SAT solver clauses: 646
% SAT solver unit clauses: 11
% SAT solver binary clauses: 93
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 431
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 644
% TWLsolver calls for satisfiability: 437
% 
% Memory used [KB]: 20084
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pred_set
% (24175)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 686
% Passive clauses: 4593
% Generated clauses: 28569
% Final active clauses: 608
% Final passive clauses: 3591
% Input formulas: 260
% Initial clauses: 642
% 
% Duplicate literals: 97
% Trivial inequalities: 25
% Fw subsumption resolutions: 1062
% Fw demodulations: 4684
% Bw demodulations: 337
% Condensations: 110
% Global subsumptions: 28
% 
% Simple tautologies: 304
% Equational tautologies: 11
% Forward subsumptions: 12225
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 52
% 
% Binary resolution: 3913
% Factoring: 38
% Forward superposition: 8613
% Backward superposition: 4330
% Self superposition: 35
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 49
% Split components: 98
% SAT solver clauses: 6038
% SAT solver unit clauses: 702
% SAT solver binary clauses: 257
% SAT solver learnt clauses: 57
% SAT solver learnt literals: 30
% 
% Sat splits: 49
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 5926
% TWLsolver calls for satisfiability: 4422
% 
% Memory used [KB]: 28528
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.pred_set
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pred_set
% SZS output start Proof for thm.pred_set
fof(f56734,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1156,f1831,f1829,f1155,f1830,f1828,f1161,f1835,f1833,f1160,f1836,f1834,f2829,f2847,f2848,f2850,f2845,f5881,f5883,f5905,f5906,f6337,f6340,f6342,f6345,f6347,f6352,f6353,f6355,f6356,f6358,f6359,f6360,f6361,f6362,f6363,f6365,f6366,f6367,f6368,f6369,f6370,f6371,f6372,f6373,f6374,f6375,f6376,f6377,f6378,f6379,f6380,f6381,f6382,f6383,f6384,f6385,f6386,f6387,f6388,f6389,f6390,f6391,f6392,f6394,f6396,f6398,f6400,f6402,f6405,f6410,f6414,f6422,f6424,f6435,f6450,f6453,f6456,f6459,f6467,f6485,f6507,f6509,f6525,f6527,f6537,f6538,f6540,f6543,f6545,f6547,f6550,f6559,f6563,f6565,f6567,f6569,f6571,f6572,f6576,f6578,f6580,f6582,f6584,f6586,f6589,f6601,f6605,f6611,f6613,f6617,f6619,f6621,f6625,f6627,f6629,f6631,f6636,f6638,f6640,f6642,f6644,f6647,f6649,f6651,f6653,f6655,f6656,f6657,f6658,f6659,f6660,f6661,f6662,f6663,f6664,f6665,f6667,f6668,f6669,f6670,f6671,f6672,f13372,f13376,f13374,f14230,f20116,f20120,f20118,f20610,f20611,f20635,f20636,f5882,f56733])).
fof(f56733,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f56732,f1831])).
fof(f56732,plain,(
  s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | $spl0),
  inference(forward_demodulation,[],[f56731,f1828])).
fof(f56731,plain,(
  s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)))))),
  inference(subsumption_resolution,[],[f56648,f1157])).
fof(f1157,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pred_set.DELETE_EQ_SING',aHL_TRUTH)).
fof(f56648,plain,(
  ~p(s(bool,'T_0')) | s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)))))),
  inference(superposition,[],[f1333,f2061])).
fof(f2061,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(unit_resulting_resolution,[],[f1154,f1188])).
fof(f1188,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f836])).
fof(f836,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f290])).
fof(f290,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.EQ_CLAUSES|split|0')).
fof(f1154,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17))))),
  inference(cnf_transformation,[],[f828])).
fof(f828,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) & (s(fun(sK16,bool),'const.pred_set.EMPTY_0') = s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) | s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0')))) & (s(fun(sK16,bool),'const.pred_set.EMPTY_0') != s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) | s(fun(sK16,bool),sK17) != s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17,sK18])],[f827])).
fof(f827,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) | s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(flattening,[],[f826])).
fof(f826,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & ((s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) | s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))),
  inference(nnf_transformation,[],[f728])).
fof(f728,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) <~> s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) => (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) <=> s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) => (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) <=> s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))) <=> s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))) <=> s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0')))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_EQ_SING')).
fof(f1333,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f752])).
fof(f752,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))))),
  inference(ennf_transformation,[],[f462])).
fof(f462,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))))),
  inference(flattening,[],[f461])).
fof(f461,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_DELETE')).
fof(f5882,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f5882_D])).
fof(f5882_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f20636,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,'F_0')))))) | p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f20636_D])).
fof(f20636_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,'F_0')))))) | p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f20635,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,'F_0')))))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f20592,f1188])).
fof(f20592,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,'F_0')))))) | p(s(bool,X1)) | p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1921,f1172])).
fof(f1172,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pred_set.DELETE_EQ_SING',aHL_BOOL_CASES)).
fof(f1921,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0)))))) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(forward_demodulation,[],[f1549,f1316])).
fof(f1316,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f428])).
fof(f428,plain,(
  ! [X0,X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))),
  inference(flattening,[],[f427])).
fof(f427,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))),
  inference(rectify,[],[f226])).
fof(f226,axiom,(
  ! [X6] : ! [X8,X20] : s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X20))) = s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_ABS')).
fof(f1549,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1034])).
fof(f1034,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1)))) | p(s(bool,X0)) | p(s(bool,X1))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1))))))),
  inference(flattening,[],[f1033])).
fof(f1033,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1)))) | (p(s(bool,X0)) | p(s(bool,X1)))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1))))))),
  inference(nnf_transformation,[],[f623])).
fof(f623,plain,(
  ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1)))) <=> (p(s(bool,X0)) | p(s(bool,X1))))),
  inference(rectify,[],[f144])).
fof(f144,axiom,(
  ! [X40,X41] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X40))),s(bool,X41)))) <=> (p(s(bool,X40)) | p(s(bool,X41))))),
  file('thm.pred_set.DELETE_EQ_SING','|bslash||slash|_HL_0')).
fof(f20611,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X1)))))) | p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f20611_D])).
fof(f20611_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X1)))))) | p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f20610,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X1)))))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f20575,f1188])).
fof(f20575,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X1)))))) | p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1921,f1172])).
fof(f20118,plain,(
  ~p(s(bool,'const.pred_set.SING_1'(s(fun(bool,bool),'const.pred_set.UNIV_0')))) | $spl27),
  inference(cnf_transformation,[],[f20118_D])).
fof(f20118_D,plain,(
  ~p(s(bool,'const.pred_set.SING_1'(s(fun(bool,bool),'const.pred_set.UNIV_0')))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f20120,plain,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,sK26('const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))),bool)),s(fun(bool,bool),'const.pred_set.EMPTY_0'))) | $spl28),
  inference(cnf_transformation,[],[f20120_D])).
fof(f20120_D,plain,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,sK26('const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))),bool)),s(fun(bool,bool),'const.pred_set.EMPTY_0'))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f20116,plain,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,sK26('const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))),bool)),s(fun(bool,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(bool,bool),'const.pred_set.UNIV_0'))))),
  inference(forward_demodulation,[],[f20094,f1159])).
fof(f1159,plain,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))))),
  inference(cnf_transformation,[],[f46])).
fof(f46,axiom,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNIV_BOOL')).
fof(f20094,plain,(
  ~p(s(bool,'const.pred_set.SING_1'(s(fun(bool,bool),'const.pred_set.UNIV_0')))) | s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0'))))) = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,sK26('const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0')))),bool)),s(fun(bool,bool),'const.pred_set.EMPTY_0')))),
  inference(superposition,[],[f1287,f1159])).
fof(f1287,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK26(X1,X0)),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f879])).
fof(f879,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK26(X1,X0)),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & (! [X2] : s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK26])],[f878])).
fof(f878,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | ? [X3] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & (! [X2] : s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f877])).
fof(f877,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | ? [X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & (! [X2] : s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f391])).
fof(f391,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) <=> ? [X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),X7)))) <=> ? [X8] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_DEF')).
fof(f14230,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f14087,f1829])).
fof(f14087,plain,(
  s(fun(sK16,bool),'const.pred_set.EMPTY_0') = s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) | $spl2),
  inference(superposition,[],[f1277,f1830])).
fof(f1277,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f376])).
fof(f376,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)))),
  inference(flattening,[],[f375])).
fof(f375,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X8] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))),s(X6,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_DELETE')).
fof(f13374,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK16,sK28('const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0')),sK16)),s(fun(sK16,bool),sK17)))) | $spl23),
  inference(cnf_transformation,[],[f13374_D])).
fof(f13374_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK16,sK28('const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0')),sK16)),s(fun(sK16,bool),sK17)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f13376,plain,(
  s(fun(sK16,bool),'const.pred_set.UNIV_0') = s(fun(sK16,bool),sK17) | $spl24),
  inference(cnf_transformation,[],[f13376_D])).
fof(f13376_D,plain,(
  s(fun(sK16,bool),'const.pred_set.UNIV_0') = s(fun(sK16,bool),sK17) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f13372,plain,(
  s(fun(sK16,bool),'const.pred_set.UNIV_0') = s(fun(sK16,bool),sK17) | ~p(s(bool,'const.bool.IN_2'(s(sK16,sK28('const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0')),sK16)),s(fun(sK16,bool),sK17)))) | $spl2),
  inference(forward_demodulation,[],[f13355,f1830])).
fof(f13355,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK16,sK28('const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0')),sK16)),s(fun(sK16,bool),sK17)))) | s(fun(sK16,bool),'const.pred_set.UNIV_0') = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | $spl2),
  inference(superposition,[],[f1301,f1830])).
fof(f1301,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK28(X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f891])).
fof(f891,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.bool.IN_2'(s(X0,sK28(X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | ! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK28])],[f890])).
fof(f890,plain,(
  ! [X0,X1] : ((? [X3] : ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | ! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f889])).
fof(f889,plain,(
  ! [X0,X1] : ((? [X2] : ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | ! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f405])).
fof(f405,plain,(
  ! [X0,X1] : (! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1))),
  inference(flattening,[],[f404])).
fof(f404,plain,(
  ! [X0] : ! [X1] : (! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1))),
  inference(rectify,[],[f168])).
fof(f168,axiom,(
  ! [X6] : ! [X7] : (! [X8] : p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> s(fun(X6,bool),'const.pred_set.UNIV_0') = s(fun(X6,bool),X7))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EQ_UNIV')).
fof(f6672,plain,(
  $false | ($spl5 | $spl16)),
  inference(subsumption_resolution,[],[f6324,f1157])).
fof(f6324,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3874])).
fof(f3874,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK62(X0,X1,sK19,X2)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f2058,f1515])).
fof(f1515,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK62(X3,X2,X1,X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(cnf_transformation,[],[f1021])).
fof(f1021,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK61(X3,X2,X1,X0))) | s(bool,'F_0') = s(bool,X1)) & (s(bool,'F_0') != s(bool,X1) | p(s(bool,sK61(X3,X2,X1,X0)))) & ((~p(s(bool,sK62(X3,X2,X1,X0))) | s(bool,'T_0') = s(bool,X1)) & (s(bool,'T_0') != s(bool,X1) | p(s(bool,sK62(X3,X2,X1,X0)))) & s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,sK62(X3,X2,X1,X0)))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,sK61(X3,X2,X1,X0)))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK61,sK62])],[f1020])).
fof(f1020,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s(bool,'F_0') = s(bool,X1)) & (s(bool,'F_0') != s(bool,X1) | p(s(bool,X4))) & ? [X5] : ((~p(s(bool,X5)) | s(bool,'T_0') = s(bool,X1)) & (s(bool,'T_0') != s(bool,X1) | p(s(bool,X5))) & s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X5))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X4))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))))),
  inference(flattening,[],[f1019])).
fof(f1019,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s(bool,'F_0') = s(bool,X1)) & (s(bool,'F_0') != s(bool,X1) | p(s(bool,X4)))) & ? [X5] : (((~p(s(bool,X5)) | s(bool,'T_0') = s(bool,X1)) & (s(bool,'T_0') != s(bool,X1) | p(s(bool,X5)))) & s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X5))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X4))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))))),
  inference(nnf_transformation,[],[f606])).
fof(f606,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s(bool,'F_0') = s(bool,X1)) & ? [X5] : ((p(s(bool,X5)) <=> s(bool,'T_0') = s(bool,X1)) & s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X5))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X4))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))))),
  inference(flattening,[],[f605])).
fof(f605,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s(bool,'F_0') = s(bool,X1)) & ? [X5] : ((p(s(bool,X5)) <=> s(bool,'T_0') = s(bool,X1)) & s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X5))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X4))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))))),
  inference(rectify,[],[f227])).
fof(f227,axiom,(
  ! [X6] : ! [X5,X14,X21] : ? [X13] : ((p(s(bool,X13)) <=> s(bool,'F_0') = s(bool,X5)) & ? [X55] : ((p(s(bool,X55)) <=> s(bool,'T_0') = s(bool,X5)) & s(X6,'const.bool.COND_3'(s(bool,X5),s(X6,X14),s(X6,X21))) = s(X6,'const.min.@_1'(s(fun(X6,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X6,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X55))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X14))))),s(fun(X6,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,X13))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X21)))))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.COND_DEF')).
fof(f2058,plain,(
  s(bool,'T_0') != s(bool,sK19) | $spl5),
  inference(subsumption_resolution,[],[f2049,f1837])).
fof(f1837,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f1163,f1157])).
fof(f1163,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f832])).
fof(f832,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f265])).
fof(f265,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f24])).
fof(f24,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.NOT_CLAUSES|split|1')).
fof(f2049,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK19) | $spl5),
  inference(superposition,[],[f1187,f2023])).
fof(f2023,plain,(
  s(bool,'F_0') = s(bool,sK19) | $spl5),
  inference(unit_resulting_resolution,[],[f1833,f1182])).
fof(f1182,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f735])).
fof(f735,plain,(
  ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0))),
  inference(ennf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0] : (~p(s(bool,X0)) => s(bool,'F_0') = s(bool,X0))),
  inference(flattening,[],[f282])).
fof(f282,plain,(
  ! [X0] : (~p(s(bool,X0)) => s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f233])).
fof(f233,axiom,(
  ! [X11] : (~p(s(bool,X11)) => s(bool,'F_0') = s(bool,X11))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.NOT_F')).
fof(f1187,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f836])).
fof(f6671,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6321,f1157])).
fof(f6321,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3873])).
fof(f3873,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,sK62(X0,X1,'const.pred_set.EMPTY_1'(s(X2,X3)),X4)))) )),
  inference(unit_resulting_resolution,[],[f2048,f1515])).
fof(f2048,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') != s(bool,'const.pred_set.EMPTY_1'(s(X1,X2)))) )),
  inference(subsumption_resolution,[],[f2043,f1837])).
fof(f2043,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.pred_set.EMPTY_1'(s(X1,X2)))) )),
  inference(superposition,[],[f1187,f1252])).
fof(f1252,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.pred_set.EMPTY_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f326])).
fof(f326,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.pred_set.EMPTY_1'(s(X0,X1)))),
  inference(flattening,[],[f325])).
fof(f325,plain,(
  ! [X0] : ! [X1] : s(bool,'F_0') = s(bool,'const.pred_set.EMPTY_1'(s(X0,X1)))),
  inference(rectify,[],[f160])).
fof(f160,axiom,(
  ! [X6] : ! [X5] : s(bool,'F_0') = s(bool,'const.pred_set.EMPTY_1'(s(X6,X5)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_DEF')).
fof(f6670,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6316,f1157])).
fof(f6316,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3872])).
fof(f3872,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK62(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),X3)))) )),
  inference(unit_resulting_resolution,[],[f2189,f1515])).
fof(f2189,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(subsumption_resolution,[],[f2174,f1837])).
fof(f2174,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f1187,f1170])).
fof(f1170,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f174])).
fof(f174,axiom,(
  ! [X6] : s(bool,'F_0') = s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_EMPTY')).
fof(f6669,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6314,f1157])).
fof(f6314,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3871])).
fof(f3871,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK62(X0,X1,'F_0',X2)))) )),
  inference(unit_resulting_resolution,[],[f1167,f1515])).
fof(f1167,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(flattening,[],[f229])).
fof(f229,axiom,(
  ~s(bool,'T_0') = s(bool,'F_0')),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.BOOL_EQ_DISTINCT|split|1')).
fof(f6668,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6307,f1157])).
fof(f6307,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3853])).
fof(f3853,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK61(X0,X1,'T_0',X2)))) )),
  inference(unit_resulting_resolution,[],[f1167,f1513])).
fof(f1513,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK61(X3,X2,X1,X0))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(cnf_transformation,[],[f1021])).
fof(f6667,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643,f6648,f6650,f6652,f6654,f6666])).
fof(f6666,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,'T_0'))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,'T_0'))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f6306,f5882])).
fof(f6306,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,sK62(X3,X2,X1,X0)))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,'T_0'))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1517])).
fof(f6654,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2)))) ) | $spl16),
  inference(forward_demodulation,[],[f6271,f1313])).
fof(f6271,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1512])).
fof(f6652,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6269,f1157])).
fof(f6269,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1510])).
fof(f6650,plain,(
  ( ! [X4,X3,X1] : (s(X1,X3) != s(X1,X4)) ) | $spl16),
  inference(subsumption_resolution,[],[f6268,f1157])).
fof(f6268,plain,(
  ( ! [X4,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X3) != s(X1,X4)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1637])).
fof(f6648,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f6325,f1157])).
fof(f6325,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'T_0'))) ) | $spl16),
  inference(condensation,[],[f6261])).
fof(f6261,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1814])).
fof(f6643,plain,(
  ( ! [X2,X0,X3] : (s(X0,X2) = s(X0,X3)) ) | $spl16),
  inference(subsumption_resolution,[],[f6257,f1157])).
fof(f6257,plain,(
  ( ! [X2,X0,X3] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1460])).
fof(f6641,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6256,f1157])).
fof(f6256,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1353])).
fof(f6639,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6252,f1157])).
fof(f6252,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1380])).
fof(f6637,plain,(
  ( ! [X2,X0,X3] : (s(X0,X2) != s(X0,X3)) ) | $spl16),
  inference(subsumption_resolution,[],[f6251,f1157])).
fof(f6251,plain,(
  ( ! [X2,X0,X3] : (~p(s(bool,'T_0')) | s(X0,X2) != s(X0,X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1464])).
fof(f6630,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6230,f1157])).
fof(f6230,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1348])).
fof(f6628,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6228,f1157])).
fof(f6228,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1290])).
fof(f6626,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6224,f1157])).
fof(f6224,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1293])).
fof(f6624,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6219,f1157])).
fof(f6219,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1291])).
fof(f6620,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6213,f1157])).
fof(f6213,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1350])).
fof(f6618,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6211,f1157])).
fof(f6211,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1346])).
fof(f6616,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6615,f1157])).
fof(f6615,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(forward_demodulation,[],[f6614,f5882])).
fof(f6614,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6210,f1157])).
fof(f6210,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1334])).
fof(f6612,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6208,f1157])).
fof(f6208,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | sP0(X0,X1,X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1392])).
fof(f6610,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6205,f1157])).
fof(f6205,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1382])).
fof(f6604,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6603,f1157])).
fof(f6603,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | sP0(X0,X1,X2) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) ) | $spl16),
  inference(forward_demodulation,[],[f6602,f5882])).
fof(f6602,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6199,f1157])).
fof(f6199,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | sP0(X0,X1,X2) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1388])).
fof(f6600,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK26(X1,X0)),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(subsumption_resolution,[],[f6195,f1157])).
fof(f6195,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK26(X1,X0)),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1287])).
fof(f6585,plain,(
  ( ! [X4,X2,X1] : (s(X1,X2) = s(X1,X4)) ) | $spl16),
  inference(subsumption_resolution,[],[f6188,f1157])).
fof(f6188,plain,(
  ( ! [X4,X2,X1] : (~p(s(bool,'T_0')) | s(X1,X2) = s(X1,X4)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1952])).
fof(f6583,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) = s(X1,X3)) ) | $spl16),
  inference(subsumption_resolution,[],[f6187,f1157])).
fof(f6187,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X2) = s(X1,X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1951])).
fof(f6581,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6186,f1157])).
fof(f6186,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1949])).
fof(f6577,plain,(
  ( ! [X92,X93] : (sP1(X93,'const.marker.Cong_1'(s(bool,X92)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6177,f1157])).
fof(f6177,plain,(
  ( ! [X92,X93] : (~p(s(bool,'T_0')) | sP1(X93,'const.marker.Cong_1'(s(bool,X92)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f3679])).
fof(f6575,plain,(
  ( ! [X90,X91] : (sP1('const.marker.Cong_1'(s(bool,X90)),X91)) ) | $spl16),
  inference(subsumption_resolution,[],[f6176,f1157])).
fof(f6176,plain,(
  ( ! [X90,X91] : (~p(s(bool,'T_0')) | sP1('const.marker.Cong_1'(s(bool,X90)),X91)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f3678])).
fof(f6331,plain,(
  ( ! [X75] : (p(s(bool,X75))) ) | $spl16),
  inference(trivial_inequality_removal,[],[f6173])).
fof(f6173,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,'T_0') | p(s(bool,X75))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f3673])).
fof(f6570,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f6332,f1157])).
fof(f6332,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'T_0'))) ) | $spl16),
  inference(condensation,[],[f6170])).
fof(f6170,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1921])).
fof(f6568,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl16),
  inference(subsumption_resolution,[],[f6168,f1157])).
fof(f6168,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,X1))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1917])).
fof(f6566,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f6167,f1157])).
fof(f6167,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1918])).
fof(f6564,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f6335,f1157])).
fof(f6335,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl16),
  inference(condensation,[],[f6164])).
fof(f6164,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1915])).
fof(f6562,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6561,f1157])).
fof(f6561,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(forward_demodulation,[],[f6560,f5882])).
fof(f6560,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6158,f1157])).
fof(f6158,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1411])).
fof(f6546,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6142,f5882])).
fof(f6142,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK30(X2,X1,X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1340])).
fof(f6544,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6140,f1157])).
fof(f6140,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1301])).
fof(f6539,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6138,f1157])).
fof(f6138,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1281])).
fof(f6536,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) != s(X1,X3)) ) | $spl16),
  inference(subsumption_resolution,[],[f6135,f1157])).
fof(f6135,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X2) != s(X1,X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1624])).
fof(f6526,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK71(X3,X2,X1,X0))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6126,f1157])).
fof(f6126,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK71(X3,X2,X1,X0))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1616])).
fof(f6524,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6124,f1157])).
fof(f6124,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1947])).
fof(f6508,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f6108,f1157])).
fof(f6108,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X2)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1396])).
fof(f6506,plain,(
  ( ! [X2,X0,X3] : (s(X0,X2) != s(X0,X3)) ) | $spl16),
  inference(subsumption_resolution,[],[f6106,f1157])).
fof(f6106,plain,(
  ( ! [X2,X0,X3] : (~p(s(bool,'T_0')) | s(X0,X2) != s(X0,X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1479])).
fof(f6484,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK56(X2,X1,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f6092,f1157])).
fof(f6092,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK56(X2,X1,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1892])).
fof(f6466,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6068,f1157])).
fof(f6068,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1620])).
fof(f6423,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) ) | $spl16),
  inference(forward_demodulation,[],[f6029,f1313])).
fof(f6029,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1459])).
fof(f6421,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(forward_demodulation,[],[f6028,f1313])).
fof(f6028,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1457])).
fof(f6413,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6024,f1157])).
fof(f6024,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1416])).
fof(f6401,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6016,f1157])).
fof(f6016,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1343])).
fof(f6399,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6011,f1157])).
fof(f6011,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1333])).
fof(f6397,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(subsumption_resolution,[],[f6010,f1157])).
fof(f6010,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1332])).
fof(f6395,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) ) | $spl16),
  inference(subsumption_resolution,[],[f6007,f1157])).
fof(f6007,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1305])).
fof(f6001,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5314])).
fof(f6000,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X3)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5302])).
fof(f5999,plain,(
  ( ! [X14,X13] : (sP8('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5192])).
fof(f5998,plain,(
  ( ! [X8,X9] : (sP8('T_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5187])).
fof(f5997,plain,(
  ( ! [X4,X3] : (sP8('T_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5184])).
fof(f5996,plain,(
  ( ! [X2] : (sP8('T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5183])).
fof(f5994,plain,(
  ( ! [X14,X13] : (~sP9('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5005])).
fof(f5992,plain,(
  ( ! [X8,X9] : (~sP9('F_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f5000])).
fof(f5991,plain,(
  ( ! [X4,X3] : (~sP9('F_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4997])).
fof(f5990,plain,(
  ( ! [X2] : (~sP9('F_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4996])).
fof(f5988,plain,(
  ( ! [X14,X13] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X13),s(bool,X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4923])).
fof(f5986,plain,(
  ( ! [X8,X9] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.EMPTY_1'(s(X8,X9)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4918])).
fof(f5985,plain,(
  ( ! [X4,X3] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4915])).
fof(f5984,plain,(
  ( ! [X2] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4914])).
fof(f5982,plain,(
  ( ! [X14,X13] : (sP9('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4858])).
fof(f5980,plain,(
  ( ! [X8,X9] : (sP9('T_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4853])).
fof(f5979,plain,(
  ( ! [X4,X3] : (sP9('T_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4850])).
fof(f5978,plain,(
  ( ! [X2] : (sP9('T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'T_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4849])).
fof(f5976,plain,(
  ( ! [X14,X13] : (sP9('T_0','const.marker.Cong_1'(s(bool,X14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X13),s(bool,X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4785])).
fof(f5974,plain,(
  ( ! [X8,X9] : (sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.EMPTY_1'(s(X8,X9)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4780])).
fof(f5973,plain,(
  ( ! [X4,X3] : (sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4777])).
fof(f5972,plain,(
  ( ! [X2] : (sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4776])).
fof(f5966,plain,(
  ( ! [X144,X145,X143] : (sP2(X145,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X143),s(bool,X144))) | ~p(s(bool,X144)) | p(s(bool,X145))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4508])).
fof(f5965,plain,(
  ( ! [X142,X140,X141] : (sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X140),s(bool,X141)),X142) | ~p(s(bool,X141)) | p(s(bool,X142))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4507])).
fof(f5964,plain,(
  ( ! [X138,X139,X137] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X137),s(bool,X138)),X139) | ~p(s(bool,X138))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4506])).
fof(f5963,plain,(
  ( ! [X134,X136,X135] : (sP1(X136,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X134),s(bool,X135))) | ~p(s(bool,X135))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4505])).
fof(f5960,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4429])).
fof(f5959,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4428])).
fof(f5957,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4425])).
fof(f5956,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f4424])).
fof(f6346,plain,(
  ( ! [X77] : (~p(s(bool,X77))) ) | $spl16),
  inference(subsumption_resolution,[],[f5948,f5882])).
fof(f5948,plain,(
  ( ! [X77] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(bool,X77),s(fun(bool,bool),'_i_0_0'))) | ~p(s(bool,X77))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f3675])).
fof(f5933,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1312])).
fof(f5928,plain,(
  s(fun(bool,bool),'const.pred_set.UNIV_0') = s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.EMPTY_0'))))) | $spl16),
  inference(backward_demodulation,[],[f5882,f1159])).
fof(f5925,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.bool.IN_2'(s(bool,X23),s(fun(bool,bool),'_i_0_0')))) | ~p(s(bool,'|dollar|or_2'(s(bool,X24),s(bool,X23)))) | p(s(bool,X24))) )),
  inference(forward_demodulation,[],[f5877,f1316])).
fof(f5877,plain,(
  ( ! [X24,X23] : (~p(s(bool,'|dollar|or_2'(s(bool,X24),s(bool,X23)))) | p(s(bool,X24)) | p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X23))))) )),
  inference(superposition,[],[f1814,f1259])).
fof(f5907,plain,(
  ( ! [X2,X3] : (~p(s(bool,'|dollar|or_2'(s(bool,X3),s(bool,X2)))) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f5867,f1837])).
fof(f5867,plain,(
  ( ! [X2,X3] : (~p(s(bool,'|dollar|or_2'(s(bool,X3),s(bool,X2)))) | p(s(bool,X3)) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1814,f1172])).
fof(f5902,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.bool.IN_2'(s(bool,X23),s(fun(bool,bool),'_i_0_0')))) | ~p(s(bool,'|dollar|or_2'(s(bool,X23),s(bool,X24)))) | p(s(bool,X24))) )),
  inference(forward_demodulation,[],[f5863,f1316])).
fof(f5863,plain,(
  ( ! [X24,X23] : (~p(s(bool,'|dollar|or_2'(s(bool,X23),s(bool,X24)))) | p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X23)))) | p(s(bool,X24))) )),
  inference(superposition,[],[f1814,f1259])).
fof(f5884,plain,(
  ( ! [X2,X3] : (~p(s(bool,'|dollar|or_2'(s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f5853,f1837])).
fof(f5853,plain,(
  ( ! [X2,X3] : (~p(s(bool,'|dollar|or_2'(s(bool,X2),s(bool,X3)))) | p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1814,f1172])).
fof(f5851,plain,(
  ~p(s(bool,'|dollar|or_2'(s(bool,'F_0'),s(bool,'F_0'))))),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1814])).
fof(f5206,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1525])).
fof(f5207,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) = s(bool,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1525])).
fof(f5208,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1531])).
fof(f5513,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(fun(bool,bool),'_i_0_0'))))) )),
  inference(forward_demodulation,[],[f5210,f1316])).
fof(f5210,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))))) )),
  inference(unit_resulting_resolution,[],[f1259,f1260,f1531])).
fof(f5213,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1565])).
fof(f5214,plain,(
  ( ! [X2,X0,X1] : (sP1('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1260,f1566])).
fof(f5215,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1580])).
fof(f5217,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1580])).
fof(f5218,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1580])).
fof(f5219,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1581])).
fof(f5220,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1584])).
fof(f5231,plain,(
  ( ! [X2,X0,X1] : (sP3('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1676])).
fof(f5234,plain,(
  ( ! [X2,X0,X1] : (sP3('T_0',X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1676])).
fof(f5235,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.pred_set.SING_1'(s(fun(X3,bool),'const.pred_set.INSERT_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1676])).
fof(f5237,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1683])).
fof(f5240,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'T_0','const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1683])).
fof(f5241,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X3,bool),'const.pred_set.INSERT_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1683])).
fof(f5243,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1697])).
fof(f5246,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1698])).
fof(f5251,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1710])).
fof(f5252,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1260,f1837,f1260,f1710])).
fof(f5254,plain,(
  ( ! [X0,X1] : (~sP8('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1714])).
fof(f5262,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1714])).
fof(f5263,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1260,f1837,f1260,f1714])).
fof(f5271,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1715])).
fof(f5272,plain,(
  ( ! [X0,X1] : (~sP7('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1718])).
fof(f5280,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1718])).
fof(f5281,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1260,f1837,f1260,f1718])).
fof(f5288,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1719])).
fof(f5289,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1723])).
fof(f5290,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1724])).
fof(f5291,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1725])).
fof(f5292,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.marker.Cong_1'(s(bool,X2)),X2)) )),
  inference(unit_resulting_resolution,[],[f1169,f1260,f1727])).
fof(f5293,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1170,f1260,f1727])).
fof(f5294,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),happ(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(X2,X3)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1838,f1260,f1727])).
fof(f5295,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.EMPTY_1'(s(X2,X3)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1252,f1260,f1727])).
fof(f5297,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f2061,f1260,f1727])).
fof(f5298,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),happ(s(fun(X2,bool),'const.pred_set.UNIV_0'),s(X2,X3)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1839,f1260,f1727])).
fof(f5299,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.UNIV_1'(s(X2,X3)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1253,f1260,f1727])).
fof(f5301,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),happ(s(fun(bool,bool),'_i_0_0'),s(bool,X2)),X2)) )),
  inference(unit_resulting_resolution,[],[f1259,f1260,f1727])).
fof(f5302,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X3)),X3)) )),
  inference(unit_resulting_resolution,[],[f1312,f1260,f1727])).
fof(f5303,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X2)) )),
  inference(unit_resulting_resolution,[],[f1313,f1260,f1727])).
fof(f5304,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.marker.Cong_1'(s(bool,X2)))) )),
  inference(unit_resulting_resolution,[],[f1169,f1260,f1727])).
fof(f5305,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1170,f1260,f1727])).
fof(f5306,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0',happ(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f1838,f1260,f1727])).
fof(f5307,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','const.pred_set.EMPTY_1'(s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f1252,f1260,f1727])).
fof(f5309,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f2061,f1260,f1727])).
fof(f5310,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0',happ(s(fun(X2,bool),'const.pred_set.UNIV_0'),s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f1839,f1260,f1727])).
fof(f5311,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','const.pred_set.UNIV_1'(s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f1253,f1260,f1727])).
fof(f5313,plain,(
  ( ! [X2,X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X2)))) )),
  inference(unit_resulting_resolution,[],[f1259,f1260,f1727])).
fof(f5314,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) )),
  inference(unit_resulting_resolution,[],[f1312,f1260,f1727])).
fof(f5315,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) )),
  inference(unit_resulting_resolution,[],[f1313,f1260,f1727])).
fof(f5316,plain,(
  ( ! [X0,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1167,f1260,f1728])).
fof(f5317,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f2189,f1260,f1728])).
fof(f5318,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','const.pred_set.EMPTY_1'(s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f2048,f1260,f1728])).
fof(f5320,plain,(
  ( ! [X0,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f1167,f1260,f1728])).
fof(f5321,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f2189,f1260,f1728])).
fof(f5322,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.EMPTY_1'(s(X2,X3)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f2048,f1260,f1728])).
fof(f5324,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1731])).
fof(f5325,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1732])).
fof(f5328,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1981,f1260,f1733])).
fof(f5333,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1981,f1260,f1733])).
fof(f5334,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1981,f1260,f1733])).
fof(f5336,plain,(
  ( ! [X0,X1] : (~sP10('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1737])).
fof(f5342,plain,(
  ( ! [X0,X1] : (~sP10('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1737])).
fof(f5343,plain,(
  ( ! [X2,X0,X3,X1] : (~sP10('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1260,f1837,f1260,f1737])).
fof(f5348,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1738])).
fof(f5349,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1260,f1743])).
fof(f5354,plain,(
  ( ! [X0,X1] : (sP11('T_0','T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1260,f1743])).
fof(f5356,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1260,f1743])).
fof(f5359,plain,(
  ( ! [X0,X1] : (sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1260,f1743])).
fof(f5360,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1260,f1157,f1260,f1743])).
fof(f5361,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1260,f1743])).
fof(f5362,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP11('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X4,bool),'const.pred_set.INSERT_2'(s(X4,X5),s(fun(X4,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1260,f1743])).
fof(f5363,plain,(
  ( ! [X0,X1] : (~sP11('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1260,f1746])).
fof(f5367,plain,(
  ( ! [X0,X1] : (~sP11('F_0','T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1260,f1746])).
fof(f5368,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1260,f1746])).
fof(f5371,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0',X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1747])).
fof(f5374,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1748])).
fof(f5381,plain,(
  ( ! [X0,X1] : (~sP12('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1260,f1754])).
fof(f5386,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1755])).
fof(f5387,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1756])).
fof(f5388,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0',X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1759])).
fof(f5392,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.pred_set.SING_1'(s(fun(X3,bool),'const.pred_set.INSERT_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1759])).
fof(f5393,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1760])).
fof(f5397,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),X4)) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1760])).
fof(f5398,plain,(
  ( ! [X0,X1] : (~sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1260,f1761])).
fof(f5399,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1765])).
fof(f5418,plain,(
  ( ! [X0,X1] : (~sP14('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1260,f1771])).
fof(f5424,plain,(
  ( ! [X0,X1] : (~sP14('T_0','F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1260,f1771])).
fof(f5425,plain,(
  ( ! [X2,X0,X3,X1] : (~sP14('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1837,f1260,f1771])).
fof(f5430,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1773])).
fof(f5431,plain,(
  ( ! [X0,X1] : (sP15('F_0','F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1260,f1775])).
fof(f5434,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1260,f1777])).
fof(f5438,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))),X4)) )),
  inference(unit_resulting_resolution,[],[f1260,f1260,f1777])).
fof(f5439,plain,(
  ( ! [X0,X1] : (~sP15('T_0','F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1260,f1778])).
fof(f5443,plain,(
  ( ! [X0,X1] : (~sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1260,f1778])).
fof(f5444,plain,(
  ( ! [X2,X0,X3,X1] : (~sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'F_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.INSERT_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1837,f1260,f1260,f1778])).
fof(f5446,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1993,f1260,f1808])).
fof(f5447,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1994,f1260,f1808])).
fof(f5448,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1995,f1260,f1808])).
fof(f5449,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1986,f1260,f1809])).
fof(f5450,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1260,f1809])).
fof(f5451,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1988,f1260,f1809])).
fof(f5452,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1989,f1260,f1809])).
fof(f5453,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1811])).
fof(f5454,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1812])).
fof(f5455,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))),X3)) )),
  inference(unit_resulting_resolution,[],[f1260,f1813])).
fof(f5456,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))))))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1911])).
fof(f5457,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(bool,X2))))) )),
  inference(unit_resulting_resolution,[],[f1260,f1912])).
fof(f5458,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),X2)) )),
  inference(unit_resulting_resolution,[],[f1260,f2005])).
fof(f5459,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))))) )),
  inference(unit_resulting_resolution,[],[f1260,f2006])).
fof(f5193,plain,(
  ( ! [X15,X16] : (sP8('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)),'const.marker.Cong_1'(s(bool,X15)))) )),
  inference(superposition,[],[f4770,f1313])).
fof(f5192,plain,(
  ( ! [X14,X13] : (sP8('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) )),
  inference(superposition,[],[f4770,f1312])).
fof(f5191,plain,(
  ( ! [X12] : (sP8('T_0',happ(s(fun(bool,bool),'_i_0_0'),s(bool,X12)),'const.marker.Cong_1'(s(bool,X12)))) )),
  inference(superposition,[],[f4770,f1259])).
fof(f5188,plain,(
  ( ! [X10,X11] : (sP8('T_0','const.pred_set.UNIV_1'(s(X10,X11)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4770,f1253])).
fof(f5187,plain,(
  ( ! [X8,X9] : (sP8('T_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4770,f1252])).
fof(f5186,plain,(
  ( ! [X7] : (sP8('T_0','const.marker.Cong_1'(s(bool,X7)),'const.marker.Cong_1'(s(bool,X7)))) )),
  inference(superposition,[],[f4770,f1169])).
fof(f5185,plain,(
  ( ! [X6,X5] : (sP8('T_0',happ(s(fun(X5,bool),'const.pred_set.UNIV_0'),s(X5,X6)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4770,f1839])).
fof(f5184,plain,(
  ( ! [X4,X3] : (sP8('T_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4770,f1838])).
fof(f5183,plain,(
  ( ! [X2] : (sP8('T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4770,f1170])).
fof(f5182,plain,(
  sP8('T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.marker.Cong_1'(s(bool,'T_0')))),
  inference(superposition,[],[f4770,f2061])).
fof(f5180,plain,(
  ( ! [X0] : (sP8('T_0',X0,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f4770,f1172])).
fof(f5124,plain,(
  ~sP15('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f5115,f1766])).
fof(f5115,plain,(
  ~sP14('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1837,f1771])).
fof(f5106,plain,(
  sP15('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1997,f1157,f1837,f1770])).
fof(f5086,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.pred_set.EMPTY_1'(s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f4148,f1708])).
fof(f5066,plain,(
  ( ! [X0,X1] : (sP7('const.pred_set.EMPTY_1'(s(X0,X1)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f4144,f1708])).
fof(f5006,plain,(
  ( ! [X15,X16] : (~sP9('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)),'const.marker.Cong_1'(s(bool,X15)))) )),
  inference(superposition,[],[f4205,f1313])).
fof(f5005,plain,(
  ( ! [X14,X13] : (~sP9('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) )),
  inference(superposition,[],[f4205,f1312])).
fof(f5004,plain,(
  ( ! [X12] : (~sP9('F_0',happ(s(fun(bool,bool),'_i_0_0'),s(bool,X12)),'const.marker.Cong_1'(s(bool,X12)))) )),
  inference(superposition,[],[f4205,f1259])).
fof(f5001,plain,(
  ( ! [X10,X11] : (~sP9('F_0','const.pred_set.UNIV_1'(s(X10,X11)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4205,f1253])).
fof(f5000,plain,(
  ( ! [X8,X9] : (~sP9('F_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4205,f1252])).
fof(f4998,plain,(
  ( ! [X6,X5] : (~sP9('F_0',happ(s(fun(X5,bool),'const.pred_set.UNIV_0'),s(X5,X6)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4205,f1839])).
fof(f4997,plain,(
  ( ! [X4,X3] : (~sP9('F_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4205,f1838])).
fof(f4996,plain,(
  ( ! [X2] : (~sP9('F_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4205,f1170])).
fof(f4995,plain,(
  ~sP9('F_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.marker.Cong_1'(s(bool,'T_0')))),
  inference(superposition,[],[f4205,f2061])).
fof(f4994,plain,(
  ( ! [X1] : (~sP9('F_0','F_0','const.marker.Cong_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f4205,f1172])).
fof(f4993,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f4205,f1172])).
fof(f4963,plain,(
  ~sP13('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f4954,f1749])).
fof(f4954,plain,(
  ~sP12('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1837,f1754])).
fof(f4945,plain,(
  sP13('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1991,f1837,f1837,f1753])).
fof(f4924,plain,(
  ( ! [X15,X16] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X15)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)))) )),
  inference(superposition,[],[f4196,f1313])).
fof(f4923,plain,(
  ( ! [X14,X13] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X13),s(bool,X14)))) )),
  inference(superposition,[],[f4196,f1312])).
fof(f4922,plain,(
  ( ! [X12] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X12)),happ(s(fun(bool,bool),'_i_0_0'),s(bool,X12)))) )),
  inference(superposition,[],[f4196,f1259])).
fof(f4919,plain,(
  ( ! [X10,X11] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.UNIV_1'(s(X10,X11)))) )),
  inference(superposition,[],[f4196,f1253])).
fof(f4918,plain,(
  ( ! [X8,X9] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'F_0')),'const.pred_set.EMPTY_1'(s(X8,X9)))) )),
  inference(superposition,[],[f4196,f1252])).
fof(f4917,plain,(
  ( ! [X7] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X7)),'const.marker.Cong_1'(s(bool,X7)))) )),
  inference(superposition,[],[f4196,f1169])).
fof(f4916,plain,(
  ( ! [X6,X5] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),happ(s(fun(X5,bool),'const.pred_set.UNIV_0'),s(X5,X6)))) )),
  inference(superposition,[],[f4196,f1839])).
fof(f4915,plain,(
  ( ! [X4,X3] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'F_0')),happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)))) )),
  inference(superposition,[],[f4196,f1838])).
fof(f4914,plain,(
  ( ! [X2] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'F_0')),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f4196,f1170])).
fof(f4913,plain,(
  ~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(superposition,[],[f4196,f2061])).
fof(f4912,plain,(
  ( ! [X1] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X1)),'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f4196,f1172])).
fof(f4911,plain,(
  ( ! [X0] : (~sP9('F_0','const.marker.Cong_1'(s(bool,'F_0')),X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f4196,f1172])).
fof(f4866,plain,(
  ( ! [X0,X1] : (sP8('T_0','const.pred_set.EMPTY_1'(s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f4165,f1709])).
fof(f4859,plain,(
  ( ! [X15,X16] : (sP9('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)),'const.marker.Cong_1'(s(bool,X15)))) )),
  inference(superposition,[],[f4164,f1313])).
fof(f4858,plain,(
  ( ! [X14,X13] : (sP9('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X13),s(bool,X14)),'const.marker.Cong_1'(s(bool,X14)))) )),
  inference(superposition,[],[f4164,f1312])).
fof(f4857,plain,(
  ( ! [X12] : (sP9('T_0',happ(s(fun(bool,bool),'_i_0_0'),s(bool,X12)),'const.marker.Cong_1'(s(bool,X12)))) )),
  inference(superposition,[],[f4164,f1259])).
fof(f4854,plain,(
  ( ! [X10,X11] : (sP9('T_0','const.pred_set.UNIV_1'(s(X10,X11)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4164,f1253])).
fof(f4853,plain,(
  ( ! [X8,X9] : (sP9('T_0','const.pred_set.EMPTY_1'(s(X8,X9)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4164,f1252])).
fof(f4851,plain,(
  ( ! [X6,X5] : (sP9('T_0',happ(s(fun(X5,bool),'const.pred_set.UNIV_0'),s(X5,X6)),'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f4164,f1839])).
fof(f4850,plain,(
  ( ! [X4,X3] : (sP9('T_0',happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4164,f1838])).
fof(f4849,plain,(
  ( ! [X2] : (sP9('T_0','const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),'const.marker.Cong_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f4164,f1170])).
fof(f4848,plain,(
  sP9('T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.marker.Cong_1'(s(bool,'T_0')))),
  inference(superposition,[],[f4164,f2061])).
fof(f4847,plain,(
  ( ! [X1] : (sP9('T_0','F_0','const.marker.Cong_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f4164,f1172])).
fof(f4846,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.marker.Cong_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f4164,f1172])).
fof(f4843,plain,(
  ( ! [X0] : (sP8('T_0','const.marker.Cong_1'(s(bool,X0)),X0)) )),
  inference(unit_resulting_resolution,[],[f4164,f1709])).
fof(f4822,plain,(
  ( ! [X0,X1] : (sP8('T_0','T_0','const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f4160,f1709])).
fof(f4786,plain,(
  ( ! [X15,X16] : (sP9('T_0','const.marker.Cong_1'(s(bool,X15)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)))) )),
  inference(superposition,[],[f4156,f1313])).
fof(f4785,plain,(
  ( ! [X14,X13] : (sP9('T_0','const.marker.Cong_1'(s(bool,X14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X13),s(bool,X14)))) )),
  inference(superposition,[],[f4156,f1312])).
fof(f4784,plain,(
  ( ! [X12] : (sP9('T_0','const.marker.Cong_1'(s(bool,X12)),happ(s(fun(bool,bool),'_i_0_0'),s(bool,X12)))) )),
  inference(superposition,[],[f4156,f1259])).
fof(f4781,plain,(
  ( ! [X10,X11] : (sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),'const.pred_set.UNIV_1'(s(X10,X11)))) )),
  inference(superposition,[],[f4156,f1253])).
fof(f4780,plain,(
  ( ! [X8,X9] : (sP9('T_0','const.marker.Cong_1'(s(bool,'F_0')),'const.pred_set.EMPTY_1'(s(X8,X9)))) )),
  inference(superposition,[],[f4156,f1252])).
fof(f4779,plain,(
  ( ! [X7] : (sP9('T_0','const.marker.Cong_1'(s(bool,X7)),'const.marker.Cong_1'(s(bool,X7)))) )),
  inference(superposition,[],[f4156,f1169])).
fof(f4778,plain,(
  ( ! [X6,X5] : (sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),happ(s(fun(X5,bool),'const.pred_set.UNIV_0'),s(X5,X6)))) )),
  inference(superposition,[],[f4156,f1839])).
fof(f4777,plain,(
  ( ! [X4,X3] : (sP9('T_0','const.marker.Cong_1'(s(bool,'F_0')),happ(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(X3,X4)))) )),
  inference(superposition,[],[f4156,f1838])).
fof(f4776,plain,(
  ( ! [X2] : (sP9('T_0','const.marker.Cong_1'(s(bool,'F_0')),'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f4156,f1170])).
fof(f4775,plain,(
  sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(superposition,[],[f4156,f2061])).
fof(f4774,plain,(
  ( ! [X1] : (sP9('T_0','const.marker.Cong_1'(s(bool,X1)),'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f4156,f1172])).
fof(f4773,plain,(
  ( ! [X0] : (sP9('T_0','const.marker.Cong_1'(s(bool,'F_0')),X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f4156,f1172])).
fof(f4770,plain,(
  ( ! [X0] : (sP8('T_0',X0,'const.marker.Cong_1'(s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f4156,f1709])).
fof(f4758,plain,(
  ~sP11('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f4749,f1730])).
fof(f4749,plain,(
  ~sP10('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1157,f1737])).
fof(f4739,plain,(
  sP11('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1980,f1157,f1157,f1733])).
fof(f4740,plain,(
  sP11('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1981,f1157,f1157,f1733])).
fof(f4735,plain,(
  ~sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f4724,f1707])).
fof(f4724,plain,(
  ~sP6('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1837,f1722])).
fof(f4716,plain,(
  ~sP9('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f4706,f1708])).
fof(f4706,plain,(
  ~sP7('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1157,f1718])).
fof(f4687,plain,(
  ~sP8('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1157,f1714])).
fof(f4629,plain,(
  ( ! [X152,X151,X153] : (~p(s(bool,X151)) | p(s(bool,X153)) | sP2(X153,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X151),s(bool,X152)))) )),
  inference(superposition,[],[f1584,f1313])).
fof(f4628,plain,(
  ( ! [X149,X150,X148] : (~p(s(bool,X148)) | p(s(bool,X150)) | sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X148),s(bool,X149)),X150)) )),
  inference(superposition,[],[f1581,f1313])).
fof(f4627,plain,(
  ( ! [X146,X147,X145] : (~p(s(bool,X145)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),X147)) )),
  inference(superposition,[],[f1566,f1313])).
fof(f4626,plain,(
  ( ! [X144,X142,X143] : (~p(s(bool,X142)) | sP1(X144,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X142),s(bool,X143)))) )),
  inference(superposition,[],[f1565,f1313])).
fof(f4581,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f1313,f1172])).
fof(f4539,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK62(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3)))) )),
  inference(unit_resulting_resolution,[],[f1313,f1516])).
fof(f4541,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK61(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),X3)))) )),
  inference(unit_resulting_resolution,[],[f1313,f1514])).
fof(f4543,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1313,f1729])).
fof(f4544,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1313,f1727])).
fof(f4546,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK60(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X1,X2),s(X1,X3)),X2,X1)))) )),
  inference(unit_resulting_resolution,[],[f1313,f1511])).
fof(f4547,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1313,f1729])).
fof(f4548,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1313,f1727])).
fof(f4550,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK60(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(X2,X1),s(X2,X3)),X2)))) )),
  inference(unit_resulting_resolution,[],[f1313,f1511])).
fof(f4508,plain,(
  ( ! [X144,X145,X143] : (~p(s(bool,X144)) | p(s(bool,X145)) | sP2(X145,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X143),s(bool,X144)))) )),
  inference(superposition,[],[f1584,f1312])).
fof(f4507,plain,(
  ( ! [X142,X140,X141] : (~p(s(bool,X141)) | p(s(bool,X142)) | sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X140),s(bool,X141)),X142)) )),
  inference(superposition,[],[f1581,f1312])).
fof(f4506,plain,(
  ( ! [X138,X139,X137] : (~p(s(bool,X138)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X137),s(bool,X138)),X139)) )),
  inference(superposition,[],[f1566,f1312])).
fof(f4505,plain,(
  ( ! [X134,X136,X135] : (~p(s(bool,X135)) | sP1(X136,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X134),s(bool,X135)))) )),
  inference(superposition,[],[f1565,f1312])).
fof(f4462,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f1312,f1172])).
fof(f4432,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1312,f1172])).
fof(f4420,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK62(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3)))) )),
  inference(unit_resulting_resolution,[],[f1312,f1516])).
fof(f4422,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK61(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),X3)))) )),
  inference(unit_resulting_resolution,[],[f1312,f1514])).
fof(f4424,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1312,f1729])).
fof(f4425,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1312,f1727])).
fof(f4427,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK60(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X1,X2),s(X1,X3)),X3,X1)))) )),
  inference(unit_resulting_resolution,[],[f1312,f1511])).
fof(f4428,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1312,f1729])).
fof(f4429,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1312,f1727])).
fof(f4431,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK60(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(X2,X3),s(X2,X1)),X2)))) )),
  inference(unit_resulting_resolution,[],[f1312,f1511])).
fof(f4399,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X35)) | sP2(X35,happ(s(fun(X33,bool),'const.pred_set.UNIV_0'),s(X33,X34)))) )),
  inference(subsumption_resolution,[],[f4347,f1157])).
fof(f4347,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | sP2(X35,happ(s(fun(X33,bool),'const.pred_set.UNIV_0'),s(X33,X34)))) )),
  inference(superposition,[],[f1584,f1839])).
fof(f4398,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP2(happ(s(fun(X30,bool),'const.pred_set.UNIV_0'),s(X30,X31)),X32)) )),
  inference(subsumption_resolution,[],[f4346,f1157])).
fof(f4346,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP2(happ(s(fun(X30,bool),'const.pred_set.UNIV_0'),s(X30,X31)),X32)) )),
  inference(superposition,[],[f1581,f1839])).
fof(f4397,plain,(
  ( ! [X28,X29,X27] : (sP1(happ(s(fun(X27,bool),'const.pred_set.UNIV_0'),s(X27,X28)),X29)) )),
  inference(subsumption_resolution,[],[f4345,f1157])).
fof(f4345,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP1(happ(s(fun(X27,bool),'const.pred_set.UNIV_0'),s(X27,X28)),X29)) )),
  inference(superposition,[],[f1566,f1839])).
fof(f4396,plain,(
  ( ! [X26,X24,X25] : (sP1(X26,happ(s(fun(X24,bool),'const.pred_set.UNIV_0'),s(X24,X25)))) )),
  inference(subsumption_resolution,[],[f4344,f1157])).
fof(f4344,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP1(X26,happ(s(fun(X24,bool),'const.pred_set.UNIV_0'),s(X24,X25)))) )),
  inference(superposition,[],[f1565,f1839])).
fof(f4311,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,sK62(X0,X1,happ(s(fun(X2,bool),'const.pred_set.UNIV_0'),s(X2,X3)),X4)))) )),
  inference(unit_resulting_resolution,[],[f1839,f1516])).
fof(f4313,plain,(
  ( ! [X0,X1] : (~sP9('F_0',happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1839,f1729])).
fof(f4314,plain,(
  ( ! [X0,X1] : (sP9('T_0',happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1839,f1727])).
fof(f4315,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,happ(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(X1,X2)),'T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1839,f1511])).
fof(f4316,plain,(
  ( ! [X0,X1] : (~sP9('F_0','T_0',happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1839,f1729])).
fof(f4317,plain,(
  ( ! [X0,X1] : (sP9('T_0','T_0',happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1839,f1727])).
fof(f4319,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'T_0',happ(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(X1,X2)),bool)))) )),
  inference(unit_resulting_resolution,[],[f1839,f1511])).
fof(f4292,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,happ(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(X6,X7)))) )),
  inference(subsumption_resolution,[],[f4241,f1837])).
fof(f4241,plain,(
  ( ! [X6,X7] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,happ(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(X6,X7)))) )),
  inference(superposition,[],[f1187,f1838])).
fof(f4229,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'const.pred_set.EMPTY_0'),s(bool,X1))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f1838,f1172])).
fof(f4218,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,sK61(X0,X1,happ(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(X2,X3)),X4)))) )),
  inference(unit_resulting_resolution,[],[f1838,f1514])).
fof(f4220,plain,(
  ( ! [X0,X1] : (~sP9('F_0',happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1838,f1729])).
fof(f4221,plain,(
  ( ! [X0,X1] : (sP9('T_0',happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1838,f1727])).
fof(f4223,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,happ(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(X1,X2)),'F_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1838,f1511])).
fof(f4224,plain,(
  ( ! [X0,X1] : (~sP9('F_0','F_0',happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1838,f1729])).
fof(f4225,plain,(
  ( ! [X0,X1] : (sP9('T_0','F_0',happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1838,f1727])).
fof(f4226,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'F_0',happ(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(X1,X2)),bool)))) )),
  inference(unit_resulting_resolution,[],[f1838,f1511])).
fof(f4196,plain,(
  ( ! [X0] : (~sP9('F_0','const.marker.Cong_1'(s(bool,X0)),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1169,f1729])).
fof(f4197,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.pred_set.EMPTY_1'(s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1252,f1729])).
fof(f4200,plain,(
  ( ! [X0] : (~sP9('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1170,f1729])).
fof(f4201,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.pred_set.UNIV_1'(s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1253,f1729])).
fof(f4202,plain,(
  ~sP9('F_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0')),
  inference(unit_resulting_resolution,[],[f1837,f2061,f1729])).
fof(f4204,plain,(
  ( ! [X0] : (~sP9('F_0',happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1259,f1729])).
fof(f4205,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.marker.Cong_1'(s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1169,f1729])).
fof(f4206,plain,(
  ( ! [X0,X1] : (~sP9('F_0','F_0','const.pred_set.EMPTY_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1252,f1729])).
fof(f4209,plain,(
  ( ! [X0] : (~sP9('F_0','F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1170,f1729])).
fof(f4210,plain,(
  ( ! [X0,X1] : (~sP9('F_0','T_0','const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1253,f1729])).
fof(f4211,plain,(
  ~sP9('F_0','T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(unit_resulting_resolution,[],[f1837,f2061,f1729])).
fof(f4213,plain,(
  ( ! [X0] : (~sP9('F_0',X0,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1259,f1729])).
fof(f4181,plain,(
  ~sP9('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1157,f1167,f1728])).
fof(f4182,plain,(
  ( ! [X0] : (~sP9('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f2189,f1728])).
fof(f4183,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.pred_set.EMPTY_1'(s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f2048,f1728])).
fof(f4186,plain,(
  ~sP9('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1157,f1167,f1728])).
fof(f4187,plain,(
  ( ! [X0] : (~sP9('T_0','T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f2189,f1728])).
fof(f4188,plain,(
  ( ! [X0,X1] : (~sP9('T_0','T_0','const.pred_set.EMPTY_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f2048,f1728])).
fof(f4156,plain,(
  ( ! [X0] : (sP9('T_0','const.marker.Cong_1'(s(bool,X0)),X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1169,f1727])).
fof(f4157,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.pred_set.EMPTY_1'(s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1252,f1727])).
fof(f4159,plain,(
  ( ! [X0] : (sP9('T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1170,f1727])).
fof(f4160,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.pred_set.UNIV_1'(s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1253,f1727])).
fof(f4161,plain,(
  sP9('T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0')),
  inference(unit_resulting_resolution,[],[f1157,f2061,f1727])).
fof(f4163,plain,(
  ( ! [X0] : (sP9('T_0',happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)),X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1259,f1727])).
fof(f4164,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.marker.Cong_1'(s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1169,f1727])).
fof(f4165,plain,(
  ( ! [X0,X1] : (sP9('T_0','F_0','const.pred_set.EMPTY_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1252,f1727])).
fof(f4167,plain,(
  ( ! [X0] : (sP9('T_0','F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1170,f1727])).
fof(f4168,plain,(
  ( ! [X0,X1] : (sP9('T_0','T_0','const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1253,f1727])).
fof(f4169,plain,(
  sP9('T_0','T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(unit_resulting_resolution,[],[f1157,f2061,f1727])).
fof(f4171,plain,(
  ( ! [X0] : (sP9('T_0',X0,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1259,f1727])).
fof(f4142,plain,(
  sP9('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1837,f1167,f1726])).
fof(f4143,plain,(
  ( ! [X0] : (sP9('F_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2189,f1726])).
fof(f4144,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.pred_set.EMPTY_1'(s(X0,X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2048,f1726])).
fof(f4146,plain,(
  sP9('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1837,f1167,f1726])).
fof(f4147,plain,(
  ( ! [X0] : (sP9('F_0','T_0','const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2189,f1726])).
fof(f4148,plain,(
  ( ! [X0,X1] : (sP9('F_0','T_0','const.pred_set.EMPTY_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f2048,f1726])).
fof(f4137,plain,(
  ( ! [X17,X18] : (s(bool,X18) != s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'_i_0_0'))) | ~p(s(bool,X17)) | p(s(bool,X18))) )),
  inference(forward_demodulation,[],[f4118,f1316])).
fof(f4118,plain,(
  ( ! [X17,X18] : (~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17)))) )),
  inference(superposition,[],[f1531,f1259])).
fof(f4093,plain,(
  ( ! [X17,X18] : (s(bool,X18) = s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'_i_0_0'))) | ~p(s(bool,X17)) | ~p(s(bool,X18))) )),
  inference(forward_demodulation,[],[f4078,f1316])).
fof(f4078,plain,(
  ( ! [X17,X18] : (~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17)))) )),
  inference(superposition,[],[f1525,f1259])).
fof(f3929,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f1187])).
fof(f3932,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1522])).
fof(f3933,plain,(
  ( ! [X0,X1] : (s(bool,sK60(X0,'T_0','F_0',bool)) = s(bool,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1522])).
fof(f3934,plain,(
  ( ! [X0] : (~sP2(sK60(X0,'T_0','F_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1579])).
fof(f3936,plain,(
  ( ! [X0] : (~sP2('F_0',sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1579])).
fof(f3937,plain,(
  ( ! [X0,X1] : (~sP2(sK60(X0,'T_0','F_0',bool),sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1579])).
fof(f3938,plain,(
  ( ! [X0] : (sP2('T_0',sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1581])).
fof(f3939,plain,(
  ( ! [X0] : (sP2(sK60(X0,'T_0','F_0',bool),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1584])).
fof(f3940,plain,(
  ( ! [X0,X1] : (~sP3(X0,sK60(X1,'T_0','F_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1671])).
fof(f3943,plain,(
  ( ! [X0,X1] : (~sP3(X0,'F_0',sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1671])).
fof(f3944,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,sK60(X1,'T_0','F_0',bool),sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1671])).
fof(f3947,plain,(
  ( ! [X0,X1] : (~sP3(sK60(X0,'T_0','F_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1672])).
fof(f3951,plain,(
  ( ! [X0,X1] : (~sP3('F_0',sK60(X0,'T_0','F_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1672])).
fof(f3952,plain,(
  ( ! [X2,X0,X1] : (~sP3(sK60(X0,'T_0','F_0',bool),sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1672])).
fof(f3954,plain,(
  ( ! [X0,X1] : (~sP4(sK60(X0,'T_0','F_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1681])).
fof(f3957,plain,(
  ( ! [X0,X1] : (~sP4('F_0',X0,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1681])).
fof(f3958,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK60(X0,'T_0','F_0',bool),X1,sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1681])).
fof(f3961,plain,(
  ( ! [X0,X1] : (~sP4(sK60(X0,'T_0','F_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1682])).
fof(f3964,plain,(
  ( ! [X0,X1] : (~sP4('F_0',sK60(X0,'T_0','F_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1682])).
fof(f3965,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK60(X0,'T_0','F_0',bool),sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1682])).
fof(f3968,plain,(
  ( ! [X0,X1] : (~sP5(sK60(X0,'T_0','F_0',bool),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1697])).
fof(f3970,plain,(
  ( ! [X0,X1] : (~sP5(sK60(X0,'T_0','F_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1698])).
fof(f3972,plain,(
  ( ! [X0,X1] : (sP5(X0,sK60(X1,'T_0','F_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1699])).
fof(f3975,plain,(
  ( ! [X0,X1] : (sP5(X0,'F_0',sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1699])).
fof(f3976,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,sK60(X1,'T_0','F_0',bool),sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1699])).
fof(f3978,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1716])).
fof(f3979,plain,(
  ( ! [X2,X0,X1] : (sP8(sK60(X0,'T_0','F_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1717])).
fof(f3980,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1720])).
fof(f3981,plain,(
  ( ! [X2,X0,X1] : (sP7(sK60(X0,'T_0','F_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1721])).
fof(f3982,plain,(
  ( ! [X0,X1] : (~sP11('T_0',X0,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1731])).
fof(f3985,plain,(
  ( ! [X0,X1] : (~sP11('T_0',sK60(X0,'T_0','F_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1732])).
fof(f3988,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1739])).
fof(f3989,plain,(
  ( ! [X2,X0,X1] : (sP10(sK60(X0,'T_0','F_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1740])).
fof(f3990,plain,(
  ( ! [X0,X1] : (sP11('F_0',X0,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1741])).
fof(f3994,plain,(
  ( ! [X2,X0,X1] : (sP11(sK60(X0,'T_0','F_0',bool),X1,sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1741])).
fof(f3995,plain,(
  ( ! [X0,X1] : (sP11('F_0',sK60(X0,'T_0','F_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1742])).
fof(f3999,plain,(
  ( ! [X2,X0,X1] : (sP11(sK60(X0,'T_0','F_0',bool),sK60(X1,'T_0','F_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1742])).
fof(f4000,plain,(
  ( ! [X0,X1] : (~sP13(sK60(X0,'T_0','F_0',bool),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1747])).
fof(f4001,plain,(
  ( ! [X0,X1] : (~sP13(sK60(X0,'T_0','F_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1748])).
fof(f4002,plain,(
  ( ! [X2,X0,X1] : (sP12(sK60(X0,'T_0','F_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1757])).
fof(f4003,plain,(
  ( ! [X0,X1] : (~sP15(sK60(X0,'T_0','F_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1764])).
fof(f4005,plain,(
  ( ! [X0,X1] : (~sP15('F_0',X0,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1764])).
fof(f4006,plain,(
  ( ! [X2,X0,X1] : (~sP15(sK60(X0,'T_0','F_0',bool),X1,sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1764])).
fof(f4009,plain,(
  ( ! [X0,X1] : (~sP15(sK60(X0,'T_0','F_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1765])).
fof(f4010,plain,(
  ( ! [X2,X0,X1] : (sP14(X0,X1,sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f1772])).
fof(f4011,plain,(
  ( ! [X2,X0,X1] : (sP14(sK60(X0,'T_0','F_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3697,f1774])).
fof(f4012,plain,(
  ( ! [X0,X1] : (sP15('T_0',X0,sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3697,f1776])).
fof(f4015,plain,(
  ( ! [X0,X1] : (sP11(sK60(X0,'T_0','F_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1983,f3697,f1810])).
fof(f4017,plain,(
  ( ! [X0,X1] : (sP11(sK60(X0,'T_0','F_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1985,f3697,f1810])).
fof(f4018,plain,(
  ( ! [X0] : (~sP1(sK60(X0,'T_0','F_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1922])).
fof(f4026,plain,(
  ( ! [X0] : (~sP1('F_0',sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3697,f1922])).
fof(f4027,plain,(
  ( ! [X0,X1] : (~sP1(sK60(X0,'T_0','F_0',bool),sK60(X1,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f3697,f1922])).
fof(f4034,plain,(
  ( ! [X0] : (sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),sK60(X0,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f2134])).
fof(f4035,plain,(
  ( ! [X2,X0,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),sK60(X2,'T_0','F_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3697,f2135])).
fof(f4036,plain,(
  ( ! [X0] : (sP2(sK60(X0,'T_0','F_0',bool),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f3697,f2147])).
fof(f4037,plain,(
  ( ! [X2,X0,X1] : (sP2(sK60(X0,'T_0','F_0',bool),'const.pred_set.UNIV_1'(s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f3697,f2148])).
fof(f3918,plain,(
  ( ! [X17,X18] : (s(bool,X18) = s(bool,'const.bool.IN_2'(s(bool,X17),s(fun(bool,bool),'_i_0_0'))) | p(s(bool,X17)) | p(s(bool,X18))) )),
  inference(forward_demodulation,[],[f3899,f1316])).
fof(f3899,plain,(
  ( ! [X17,X18] : (p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17)))) )),
  inference(superposition,[],[f1522,f1259])).
fof(f3910,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f3890,f1837])).
fof(f3890,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1522,f1172])).
fof(f3885,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,sK62(X0,X1,X2,X3))) )),
  inference(subsumption_resolution,[],[f3884,f1837])).
fof(f3884,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,sK62(X0,X1,X2,X3))) )),
  inference(superposition,[],[f1516,f1172])).
fof(f3879,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,sK62(X0,X1,'const.pred_set.UNIV_1'(s(X2,X3)),X4)))) )),
  inference(unit_resulting_resolution,[],[f1253,f1516])).
fof(f3880,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK62(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)))) )),
  inference(unit_resulting_resolution,[],[f2061,f1516])).
fof(f3882,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK62(X0,X1,'const.marker.Cong_1'(s(bool,'T_0')),X2)))) )),
  inference(unit_resulting_resolution,[],[f1169,f1516])).
fof(f3883,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK62(X0,X1,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'T_0')),X2)))) )),
  inference(unit_resulting_resolution,[],[f1259,f1516])).
fof(f3865,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') = s(bool,sK61(X0,X1,X2,X3))) )),
  inference(subsumption_resolution,[],[f3864,f1837])).
fof(f3864,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') = s(bool,sK61(X0,X1,X2,X3))) )),
  inference(superposition,[],[f1514,f1172])).
fof(f3859,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,sK61(X0,X1,'const.pred_set.EMPTY_1'(s(X2,X3)),X4)))) )),
  inference(unit_resulting_resolution,[],[f1252,f1514])).
fof(f3861,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK61(X0,X1,'const.pred_set.SING_1'(s(fun(X2,bool),'const.pred_set.EMPTY_0')),X3)))) )),
  inference(unit_resulting_resolution,[],[f1170,f1514])).
fof(f3862,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK61(X0,X1,'const.marker.Cong_1'(s(bool,'F_0')),X2)))) )),
  inference(unit_resulting_resolution,[],[f1169,f1514])).
fof(f3863,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK61(X0,X1,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')),X2)))) )),
  inference(unit_resulting_resolution,[],[f1259,f1514])).
fof(f3725,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f1182])).
fof(f3726,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f1187])).
fof(f3727,plain,(
  ( ! [X0] : (~sP2(sK60(X0,'F_0','T_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1579])).
fof(f3729,plain,(
  ( ! [X0] : (~sP2('F_0',sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1579])).
fof(f3730,plain,(
  ( ! [X0,X1] : (~sP2(sK60(X0,'F_0','T_0',bool),sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1579])).
fof(f3731,plain,(
  ( ! [X0] : (sP2('T_0',sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1581])).
fof(f3732,plain,(
  ( ! [X0] : (sP2(sK60(X0,'F_0','T_0',bool),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1584])).
fof(f3733,plain,(
  ( ! [X0,X1] : (~sP3(X0,sK60(X1,'F_0','T_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1671])).
fof(f3736,plain,(
  ( ! [X0,X1] : (~sP3(X0,'F_0',sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1671])).
fof(f3737,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,sK60(X1,'F_0','T_0',bool),sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1671])).
fof(f3740,plain,(
  ( ! [X0,X1] : (~sP3(sK60(X0,'F_0','T_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1672])).
fof(f3744,plain,(
  ( ! [X0,X1] : (~sP3('F_0',sK60(X0,'F_0','T_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1672])).
fof(f3745,plain,(
  ( ! [X2,X0,X1] : (~sP3(sK60(X0,'F_0','T_0',bool),sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1672])).
fof(f3747,plain,(
  ( ! [X0,X1] : (~sP4(sK60(X0,'F_0','T_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1681])).
fof(f3750,plain,(
  ( ! [X0,X1] : (~sP4('F_0',X0,sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1681])).
fof(f3751,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK60(X0,'F_0','T_0',bool),X1,sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1681])).
fof(f3754,plain,(
  ( ! [X0,X1] : (~sP4(sK60(X0,'F_0','T_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1682])).
fof(f3757,plain,(
  ( ! [X0,X1] : (~sP4('F_0',sK60(X0,'F_0','T_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1682])).
fof(f3758,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK60(X0,'F_0','T_0',bool),sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1682])).
fof(f3761,plain,(
  ( ! [X0,X1] : (~sP5(sK60(X0,'F_0','T_0',bool),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1697])).
fof(f3763,plain,(
  ( ! [X0,X1] : (~sP5(sK60(X0,'F_0','T_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1698])).
fof(f3765,plain,(
  ( ! [X0,X1] : (sP5(X0,sK60(X1,'F_0','T_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1699])).
fof(f3768,plain,(
  ( ! [X0,X1] : (sP5(X0,'F_0',sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1699])).
fof(f3769,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,sK60(X1,'F_0','T_0',bool),sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1699])).
fof(f3771,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1716])).
fof(f3772,plain,(
  ( ! [X2,X0,X1] : (sP8(sK60(X0,'F_0','T_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1717])).
fof(f3773,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1720])).
fof(f3774,plain,(
  ( ! [X2,X0,X1] : (sP7(sK60(X0,'F_0','T_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1721])).
fof(f3775,plain,(
  ( ! [X0,X1] : (~sP11('T_0',X0,sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1731])).
fof(f3778,plain,(
  ( ! [X0,X1] : (~sP11('T_0',sK60(X0,'F_0','T_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1732])).
fof(f3781,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1739])).
fof(f3782,plain,(
  ( ! [X2,X0,X1] : (sP10(sK60(X0,'F_0','T_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1740])).
fof(f3783,plain,(
  ( ! [X0,X1] : (sP11('F_0',X0,sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1741])).
fof(f3787,plain,(
  ( ! [X2,X0,X1] : (sP11(sK60(X0,'F_0','T_0',bool),X1,sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1741])).
fof(f3788,plain,(
  ( ! [X0,X1] : (sP11('F_0',sK60(X0,'F_0','T_0',bool),X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1742])).
fof(f3792,plain,(
  ( ! [X2,X0,X1] : (sP11(sK60(X0,'F_0','T_0',bool),sK60(X1,'F_0','T_0',bool),X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1742])).
fof(f3793,plain,(
  ( ! [X0,X1] : (~sP13(sK60(X0,'F_0','T_0',bool),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1747])).
fof(f3794,plain,(
  ( ! [X0,X1] : (~sP13(sK60(X0,'F_0','T_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1748])).
fof(f3795,plain,(
  ( ! [X2,X0,X1] : (sP12(sK60(X0,'F_0','T_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1757])).
fof(f3796,plain,(
  ( ! [X0,X1] : (~sP15(sK60(X0,'F_0','T_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1764])).
fof(f3798,plain,(
  ( ! [X0,X1] : (~sP15('F_0',X0,sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1764])).
fof(f3799,plain,(
  ( ! [X2,X0,X1] : (~sP15(sK60(X0,'F_0','T_0',bool),X1,sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1764])).
fof(f3802,plain,(
  ( ! [X0,X1] : (~sP15(sK60(X0,'F_0','T_0',bool),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1765])).
fof(f3803,plain,(
  ( ! [X2,X0,X1] : (sP14(X0,X1,sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f1772])).
fof(f3804,plain,(
  ( ! [X2,X0,X1] : (sP14(sK60(X0,'F_0','T_0',bool),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3691,f1774])).
fof(f3805,plain,(
  ( ! [X0,X1] : (sP15('T_0',X0,sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1157,f3691,f1776])).
fof(f3808,plain,(
  ( ! [X0,X1] : (sP11(sK60(X0,'F_0','T_0',bool),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1983,f3691,f1810])).
fof(f3810,plain,(
  ( ! [X0,X1] : (sP11(sK60(X0,'F_0','T_0',bool),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1985,f3691,f1810])).
fof(f3811,plain,(
  ( ! [X0] : (~sP1(sK60(X0,'F_0','T_0',bool),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1922])).
fof(f3819,plain,(
  ( ! [X0] : (~sP1('F_0',sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f1837,f3691,f1922])).
fof(f3820,plain,(
  ( ! [X0,X1] : (~sP1(sK60(X0,'F_0','T_0',bool),sK60(X1,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f3691,f1922])).
fof(f3827,plain,(
  ( ! [X0] : (sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),sK60(X0,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f2134])).
fof(f3828,plain,(
  ( ! [X2,X0,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),sK60(X2,'F_0','T_0',bool))) )),
  inference(unit_resulting_resolution,[],[f3691,f2135])).
fof(f3829,plain,(
  ( ! [X0] : (sP2(sK60(X0,'F_0','T_0',bool),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f3691,f2147])).
fof(f3830,plain,(
  ( ! [X2,X0,X1] : (sP2(sK60(X0,'F_0','T_0',bool),'const.pred_set.UNIV_1'(s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f3691,f2148])).
fof(f3723,plain,(
  ( ! [X2,X0,X3,X1] : (s(X3,X1) != s(X3,X2) | s(bool,'T_0') = s(bool,sK60(X0,X1,X2,X3))) )),
  inference(subsumption_resolution,[],[f3722,f1837])).
fof(f3722,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s(X3,X1) != s(X3,X2) | s(bool,'T_0') = s(bool,sK60(X0,X1,X2,X3))) )),
  inference(superposition,[],[f1511,f1172])).
fof(f3705,plain,(
  ( ! [X0,X1] : (p(s(bool,sK60(X0,'const.marker.Cong_1'(s(bool,X1)),X1,bool)))) )),
  inference(unit_resulting_resolution,[],[f1169,f1511])).
fof(f3706,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'const.pred_set.EMPTY_1'(s(X1,X2)),'F_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1252,f1511])).
fof(f3708,plain,(
  ( ! [X0,X1] : (p(s(bool,sK60(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1170,f1511])).
fof(f3709,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'const.pred_set.UNIV_1'(s(X1,X2)),'T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1253,f1511])).
fof(f3710,plain,(
  ( ! [X0] : (p(s(bool,sK60(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f2061,f1511])).
fof(f3712,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,happ(s(fun(X1,X1),'_i_0_0'),s(X1,X2)),X2,X1)))) )),
  inference(unit_resulting_resolution,[],[f1259,f1511])).
fof(f3714,plain,(
  ( ! [X0,X1] : (p(s(bool,sK60(X0,X1,'const.marker.Cong_1'(s(bool,X1)),bool)))) )),
  inference(unit_resulting_resolution,[],[f1169,f1511])).
fof(f3715,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'F_0','const.pred_set.EMPTY_1'(s(X1,X2)),bool)))) )),
  inference(unit_resulting_resolution,[],[f1252,f1511])).
fof(f3717,plain,(
  ( ! [X0,X1] : (p(s(bool,sK60(X0,'F_0','const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.EMPTY_0')),bool)))) )),
  inference(unit_resulting_resolution,[],[f1170,f1511])).
fof(f3718,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,'T_0','const.pred_set.UNIV_1'(s(X1,X2)),bool)))) )),
  inference(unit_resulting_resolution,[],[f1253,f1511])).
fof(f3719,plain,(
  ( ! [X0] : (p(s(bool,sK60(X0,'T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),bool)))) )),
  inference(unit_resulting_resolution,[],[f2061,f1511])).
fof(f3721,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,sK60(X0,X1,happ(s(fun(X2,X2),'_i_0_0'),s(X2,X1)),X2)))) )),
  inference(unit_resulting_resolution,[],[f1259,f1511])).
fof(f3691,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,'F_0','T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1167,f1510])).
fof(f3692,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK60(X0,'const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.EMPTY_0')),'T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f2189,f1510])).
fof(f3693,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK60(X0,'const.pred_set.EMPTY_1'(s(X1,X2)),'T_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f2048,f1510])).
fof(f3696,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK60(X0,'const.pred_set.UNIV_0','const.pred_set.EMPTY_0',fun(X1,bool))))) )),
  inference(unit_resulting_resolution,[],[f1248,f1510])).
fof(f3697,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,'T_0','F_0',bool)))) )),
  inference(unit_resulting_resolution,[],[f1167,f1510])).
fof(f3698,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK60(X0,'T_0','const.pred_set.SING_1'(s(fun(X1,bool),'const.pred_set.EMPTY_0')),bool)))) )),
  inference(unit_resulting_resolution,[],[f2189,f1510])).
fof(f3699,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK60(X0,'T_0','const.pred_set.EMPTY_1'(s(X1,X2)),bool)))) )),
  inference(unit_resulting_resolution,[],[f2048,f1510])).
fof(f3702,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK60(X0,'const.pred_set.EMPTY_0','const.pred_set.UNIV_0',fun(X1,bool))))) )),
  inference(unit_resulting_resolution,[],[f1248,f1510])).
fof(f3688,plain,(
  ( ! [X0] : (~sP0(X0,'const.pred_set.EMPTY_0','const.pred_set.UNIV_0')) )),
  inference(unit_resulting_resolution,[],[f1248,f1387])).
fof(f3690,plain,(
  ( ! [X0] : (~sP0(X0,'const.pred_set.UNIV_0','const.pred_set.EMPTY_0')) )),
  inference(unit_resulting_resolution,[],[f1248,f1387])).
fof(f3679,plain,(
  ( ! [X92,X93] : (~p(s(bool,'const.bool.IN_2'(s(bool,X92),s(fun(bool,bool),'_i_0_0')))) | sP1(X93,'const.marker.Cong_1'(s(bool,X92)))) )),
  inference(forward_demodulation,[],[f3665,f1316])).
fof(f3665,plain,(
  ( ! [X92,X93] : (sP1(X93,'const.marker.Cong_1'(s(bool,X92))) | ~p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X92))))) )),
  inference(superposition,[],[f2006,f1259])).
fof(f3678,plain,(
  ( ! [X90,X91] : (~p(s(bool,'const.bool.IN_2'(s(bool,X90),s(fun(bool,bool),'_i_0_0')))) | sP1('const.marker.Cong_1'(s(bool,X90)),X91)) )),
  inference(forward_demodulation,[],[f3664,f1316])).
fof(f3664,plain,(
  ( ! [X90,X91] : (sP1('const.marker.Cong_1'(s(bool,X90)),X91) | ~p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X90))))) )),
  inference(superposition,[],[f2005,f1259])).
fof(f3677,plain,(
  ( ! [X88,X89] : (p(s(bool,'|dollar|or_2'(s(bool,'const.bool.IN_2'(s(bool,X88),s(fun(bool,bool),'_i_0_0'))),s(bool,X89)))) | ~p(s(bool,X88))) )),
  inference(forward_demodulation,[],[f3663,f1316])).
fof(f3663,plain,(
  ( ! [X88,X89] : (~p(s(bool,X88)) | p(s(bool,'|dollar|or_2'(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X88))),s(bool,X89))))) )),
  inference(superposition,[],[f1912,f1259])).
fof(f3676,plain,(
  ( ! [X87,X86] : (p(s(bool,'|dollar|or_2'(s(bool,X87),s(bool,'const.bool.IN_2'(s(bool,X86),s(fun(bool,bool),'_i_0_0')))))) | ~p(s(bool,X86))) )),
  inference(forward_demodulation,[],[f3662,f1316])).
fof(f3662,plain,(
  ( ! [X87,X86] : (~p(s(bool,X86)) | p(s(bool,'|dollar|or_2'(s(bool,X87),s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X86))))))) )),
  inference(superposition,[],[f1911,f1259])).
fof(f3661,plain,(
  ( ! [X85,X84] : (~p(s(bool,X84)) | p(s(bool,X85)) | sP2(X85,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X84)))) )),
  inference(superposition,[],[f1584,f1259])).
fof(f3660,plain,(
  ( ! [X83,X82] : (~p(s(bool,X82)) | p(s(bool,X83)) | sP2(happ(s(fun(bool,bool),'_i_0_0'),s(bool,X82)),X83)) )),
  inference(superposition,[],[f1581,f1259])).
fof(f3659,plain,(
  ( ! [X80,X81] : (~p(s(bool,X80)) | sP1(happ(s(fun(bool,bool),'_i_0_0'),s(bool,X80)),X81)) )),
  inference(superposition,[],[f1566,f1259])).
fof(f3658,plain,(
  ( ! [X78,X79] : (~p(s(bool,X78)) | sP1(X79,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X78)))) )),
  inference(superposition,[],[f1565,f1259])).
fof(f3675,plain,(
  ( ! [X77] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,X77),s(fun(bool,bool),'_i_0_0'))) | ~p(s(bool,X77))) )),
  inference(forward_demodulation,[],[f3657,f1316])).
fof(f3657,plain,(
  ( ! [X77] : (~p(s(bool,X77)) | s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X77)))) )),
  inference(superposition,[],[f1191,f1259])).
fof(f3674,plain,(
  ( ! [X76] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,X76),s(fun(bool,bool),'_i_0_0'))) | ~p(s(bool,X76))) )),
  inference(forward_demodulation,[],[f3656,f1316])).
fof(f3656,plain,(
  ( ! [X76] : (~p(s(bool,X76)) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X76)))) )),
  inference(superposition,[],[f1188,f1259])).
fof(f3673,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'_i_0_0'))) | p(s(bool,X75))) )),
  inference(forward_demodulation,[],[f3655,f1316])).
fof(f3655,plain,(
  ( ! [X75] : (p(s(bool,X75)) | s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X75)))) )),
  inference(superposition,[],[f1187,f1259])).
fof(f3672,plain,(
  ( ! [X74] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(bool,X74),s(fun(bool,bool),'_i_0_0'))) | p(s(bool,X74))) )),
  inference(forward_demodulation,[],[f3654,f1316])).
fof(f3654,plain,(
  ( ! [X74] : (p(s(bool,X74)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74)))) )),
  inference(superposition,[],[f1182,f1259])).
fof(f3622,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) )),
  inference(superposition,[],[f1259,f1172])).
fof(f3671,plain,(
  p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'_i_0_0'))))),
  inference(forward_demodulation,[],[f3609,f1316])).
fof(f3609,plain,(
  p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'T_0'))))),
  inference(unit_resulting_resolution,[],[f1259,f1187])).
fof(f3670,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'_i_0_0'))))),
  inference(forward_demodulation,[],[f3610,f1316])).
fof(f3610,plain,(
  ~p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))))),
  inference(unit_resulting_resolution,[],[f1259,f1191])).
fof(f3542,plain,(
  ( ! [X0] : (p(s(bool,'|dollar|or_2'(s(bool,'T_0'),s(bool,X0))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1912])).
fof(f3515,plain,(
  ( ! [X0] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,'T_0'))))) )),
  inference(unit_resulting_resolution,[],[f1157,f1911])).
fof(f3387,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1182])).
fof(f3388,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1187])).
fof(f3389,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1579])).
fof(f3391,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1579])).
fof(f3392,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1579])).
fof(f3393,plain,(
  ( ! [X0,X1] : (sP2('T_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1581])).
fof(f3394,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1584])).
fof(f3395,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1671])).
fof(f3398,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,'F_0','const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1671])).
fof(f3399,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP3(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1671])).
fof(f3402,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1672])).
fof(f3406,plain,(
  ( ! [X2,X0,X1] : (~sP3('F_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1672])).
fof(f3407,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP3('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1672])).
fof(f3409,plain,(
  ( ! [X2,X0,X1] : (~sP4('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1681])).
fof(f3412,plain,(
  ( ! [X2,X0,X1] : (~sP4('F_0',X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1681])).
fof(f3413,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP4('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.pred_set.PSUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1681])).
fof(f3416,plain,(
  ( ! [X2,X0,X1] : (~sP4('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1682])).
fof(f3419,plain,(
  ( ! [X2,X0,X1] : (~sP4('F_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1682])).
fof(f3420,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP4('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1682])).
fof(f3423,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1697])).
fof(f3425,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1698])).
fof(f3427,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1699])).
fof(f3430,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'F_0','const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1699])).
fof(f3431,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP5(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1699])).
fof(f3433,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1716])).
fof(f3434,plain,(
  ( ! [X2,X0,X3,X1] : (sP8('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1717])).
fof(f3435,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1720])).
fof(f3436,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1721])).
fof(f3437,plain,(
  ( ! [X2,X0,X1] : (~sP11('T_0',X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1731])).
fof(f3440,plain,(
  ( ! [X2,X0,X1] : (~sP11('T_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1732])).
fof(f3443,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1739])).
fof(f3444,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1740])).
fof(f3445,plain,(
  ( ! [X2,X0,X1] : (sP11('F_0',X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1741])).
fof(f3449,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.pred_set.PSUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1741])).
fof(f3450,plain,(
  ( ! [X2,X0,X1] : (sP11('F_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1742])).
fof(f3454,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1742])).
fof(f3455,plain,(
  ( ! [X2,X0,X1] : (~sP13('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1747])).
fof(f3456,plain,(
  ( ! [X2,X0,X1] : (~sP13('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1748])).
fof(f3457,plain,(
  ( ! [X2,X0,X3,X1] : (sP12('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1757])).
fof(f3458,plain,(
  ( ! [X2,X0,X1] : (~sP15('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1764])).
fof(f3460,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0',X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1764])).
fof(f3461,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP15('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.pred_set.PSUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1764])).
fof(f3464,plain,(
  ( ! [X2,X0,X1] : (~sP15('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1765])).
fof(f3465,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,X1,'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1772])).
fof(f3466,plain,(
  ( ! [X2,X0,X3,X1] : (sP14('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1308,f1774])).
fof(f3467,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0',X0,'const.pred_set.PSUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1308,f1776])).
fof(f3470,plain,(
  ( ! [X2,X0,X1] : (sP11('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1983,f1308,f1810])).
fof(f3472,plain,(
  ( ! [X2,X0,X1] : (sP11('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1985,f1308,f1810])).
fof(f3473,plain,(
  ( ! [X0,X1] : (~sP1('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1922])).
fof(f3481,plain,(
  ( ! [X0,X1] : (~sP1('F_0','const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1308,f1922])).
fof(f3482,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1922])).
fof(f3489,plain,(
  ( ! [X0,X1] : (sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f2134])).
fof(f3490,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),'const.pred_set.PSUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1308,f2135])).
fof(f3491,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1308,f2147])).
fof(f3492,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.UNIV_1'(s(X2,X3)))) )),
  inference(unit_resulting_resolution,[],[f1308,f2148])).
fof(f3267,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1188])).
fof(f3268,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1191])).
fof(f3269,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1565])).
fof(f3270,plain,(
  ( ! [X2,X0,X1] : (sP1('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1258,f1566])).
fof(f3271,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1580])).
fof(f3273,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1580])).
fof(f3274,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1580])).
fof(f3275,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1581])).
fof(f3276,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1584])).
fof(f3287,plain,(
  ( ! [X2,X0,X1] : (sP3('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1676])).
fof(f3290,plain,(
  ( ! [X2,X0,X1] : (sP3('T_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1676])).
fof(f3291,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'const.pred_set.SUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1676])).
fof(f3293,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1683])).
fof(f3296,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'T_0','const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1683])).
fof(f3297,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),'const.pred_set.SUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1683])).
fof(f3299,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1697])).
fof(f3302,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1698])).
fof(f3305,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1715])).
fof(f3306,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1719])).
fof(f3307,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1723])).
fof(f3308,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1724])).
fof(f3309,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1725])).
fof(f3310,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1731])).
fof(f3311,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1732])).
fof(f3312,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1738])).
fof(f3313,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1747])).
fof(f3316,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1748])).
fof(f3319,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1755])).
fof(f3320,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1756])).
fof(f3321,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1759])).
fof(f3325,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'const.pred_set.SUBSET_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1759])).
fof(f3326,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1760])).
fof(f3330,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1760])).
fof(f3331,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1258,f1765])).
fof(f3334,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1773])).
fof(f3336,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1258,f1777])).
fof(f3340,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.pred_set.SUBSET_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.UNIV_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1258,f1258,f1777])).
fof(f3342,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1993,f1258,f1808])).
fof(f3343,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1994,f1258,f1808])).
fof(f3344,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1995,f1258,f1808])).
fof(f3345,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1986,f1258,f1809])).
fof(f3346,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1258,f1809])).
fof(f3347,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1988,f1258,f1809])).
fof(f3348,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1989,f1258,f1809])).
fof(f3349,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1811])).
fof(f3350,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1812])).
fof(f3351,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1258,f1813])).
fof(f3352,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1258,f2005])).
fof(f3353,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.pred_set.SUBSET_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f1258,f2006])).
fof(f3168,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1188])).
fof(f3169,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1191])).
fof(f3170,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1565])).
fof(f3171,plain,(
  ( ! [X2,X0,X1] : (sP1('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1257,f1566])).
fof(f3172,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1580])).
fof(f3174,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1580])).
fof(f3175,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1580])).
fof(f3176,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1581])).
fof(f3177,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1584])).
fof(f3188,plain,(
  ( ! [X2,X0,X1] : (sP3('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1676])).
fof(f3191,plain,(
  ( ! [X2,X0,X1] : (sP3('T_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1676])).
fof(f3192,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.pred_set.DISJOINT_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1676])).
fof(f3194,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1683])).
fof(f3197,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'T_0','const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1683])).
fof(f3198,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.pred_set.DISJOINT_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1683])).
fof(f3200,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1697])).
fof(f3203,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1698])).
fof(f3206,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1715])).
fof(f3207,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1719])).
fof(f3208,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1723])).
fof(f3209,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1724])).
fof(f3210,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1725])).
fof(f3211,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1731])).
fof(f3212,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1732])).
fof(f3213,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1738])).
fof(f3214,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1747])).
fof(f3217,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1748])).
fof(f3220,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1755])).
fof(f3221,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1756])).
fof(f3222,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1759])).
fof(f3226,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.pred_set.DISJOINT_2'(s(fun(X3,bool),X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1759])).
fof(f3227,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1760])).
fof(f3231,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1760])).
fof(f3232,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1257,f1765])).
fof(f3235,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1773])).
fof(f3237,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1257,f1777])).
fof(f3241,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1257,f1257,f1777])).
fof(f3243,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1993,f1257,f1808])).
fof(f3244,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1994,f1257,f1808])).
fof(f3245,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1995,f1257,f1808])).
fof(f3246,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1986,f1257,f1809])).
fof(f3247,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1257,f1809])).
fof(f3248,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1988,f1257,f1809])).
fof(f3249,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1989,f1257,f1809])).
fof(f3250,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1811])).
fof(f3251,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1812])).
fof(f3252,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1257,f1813])).
fof(f3253,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1257,f2005])).
fof(f3254,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(unit_resulting_resolution,[],[f1257,f2006])).
fof(f3056,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1188])).
fof(f3057,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1191])).
fof(f3058,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1565])).
fof(f3059,plain,(
  ( ! [X2,X0,X1] : (sP1('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1256,f1566])).
fof(f3060,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1580])).
fof(f3062,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1580])).
fof(f3063,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1580])).
fof(f3064,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1581])).
fof(f3065,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1584])).
fof(f3076,plain,(
  ( ! [X2,X0,X1] : (sP3('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1676])).
fof(f3079,plain,(
  ( ! [X2,X0,X1] : (sP3('T_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1676])).
fof(f3080,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.pred_set.SUBSET_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1676])).
fof(f3082,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1683])).
fof(f3085,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'T_0','const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1683])).
fof(f3086,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),'const.pred_set.SUBSET_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1683])).
fof(f3088,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1697])).
fof(f3091,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1698])).
fof(f3094,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1715])).
fof(f3095,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1719])).
fof(f3096,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1723])).
fof(f3097,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1724])).
fof(f3098,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1725])).
fof(f3099,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1731])).
fof(f3100,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1732])).
fof(f3101,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1738])).
fof(f3102,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1747])).
fof(f3105,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1748])).
fof(f3108,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1755])).
fof(f3109,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1756])).
fof(f3110,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0',X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1759])).
fof(f3114,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.pred_set.SUBSET_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1759])).
fof(f3115,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1760])).
fof(f3119,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1760])).
fof(f3120,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1256,f1765])).
fof(f3123,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1773])).
fof(f3125,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0','const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1256,f1777])).
fof(f3129,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.SUBSET_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f1256,f1256,f1777])).
fof(f3131,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1993,f1256,f1808])).
fof(f3132,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1994,f1256,f1808])).
fof(f3133,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1995,f1256,f1808])).
fof(f3134,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1986,f1256,f1809])).
fof(f3135,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1256,f1809])).
fof(f3136,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1988,f1256,f1809])).
fof(f3137,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1989,f1256,f1809])).
fof(f3138,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1811])).
fof(f3139,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1812])).
fof(f3140,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1256,f1813])).
fof(f3141,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1256,f2005])).
fof(f3142,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.pred_set.SUBSET_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))))) )),
  inference(unit_resulting_resolution,[],[f1256,f2006])).
fof(f2910,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1188])).
fof(f2911,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1191])).
fof(f2912,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1565])).
fof(f2913,plain,(
  ( ! [X2,X0,X1] : (sP1('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1255,f1566])).
fof(f2914,plain,(
  ( ! [X0,X1] : (~sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1580])).
fof(f2916,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1580])).
fof(f2917,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1580])).
fof(f2918,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1581])).
fof(f2919,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1584])).
fof(f2930,plain,(
  ( ! [X2,X0,X1] : (sP3('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1676])).
fof(f2933,plain,(
  ( ! [X2,X0,X1] : (sP3('T_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1676])).
fof(f2934,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP3('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.pred_set.DISJOINT_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1676])).
fof(f2936,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1683])).
fof(f2939,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'T_0','const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1683])).
fof(f2940,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),'const.pred_set.DISJOINT_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1683])).
fof(f2942,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1697])).
fof(f2945,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1698])).
fof(f2948,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1715])).
fof(f2949,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1719])).
fof(f2950,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1723])).
fof(f2951,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1724])).
fof(f2952,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1725])).
fof(f2953,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1731])).
fof(f2954,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'F_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1732])).
fof(f2955,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1738])).
fof(f2956,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1747])).
fof(f2959,plain,(
  ( ! [X2,X0,X1] : (~sP13('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1748])).
fof(f2962,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1755])).
fof(f2963,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1756])).
fof(f2964,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0',X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1759])).
fof(f2968,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.pred_set.DISJOINT_2'(s(fun(X3,bool),'const.pred_set.EMPTY_0'),s(fun(X3,bool),X4)))) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1759])).
fof(f2969,plain,(
  ( ! [X2,X0,X1] : (sP13('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1760])).
fof(f2973,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1760])).
fof(f2974,plain,(
  ( ! [X2,X0,X1] : (~sP15('F_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1837,f1255,f1765])).
fof(f2977,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1773])).
fof(f2979,plain,(
  ( ! [X2,X0,X1] : (sP15('T_0','const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1157,f1255,f1777])).
fof(f2983,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.pred_set.DISJOINT_2'(s(fun(X2,bool),'const.pred_set.EMPTY_0'),s(fun(X2,bool),X3)),X4)) )),
  inference(unit_resulting_resolution,[],[f1255,f1255,f1777])).
fof(f2985,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1993,f1255,f1808])).
fof(f2986,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1994,f1255,f1808])).
fof(f2987,plain,(
  ( ! [X2,X0,X1] : (sP15('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1995,f1255,f1808])).
fof(f2988,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1986,f1255,f1809])).
fof(f2989,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1255,f1809])).
fof(f2990,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f1988,f1255,f1809])).
fof(f2991,plain,(
  ( ! [X2,X0,X1] : (sP13('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X2)) )),
  inference(unit_resulting_resolution,[],[f1989,f1255,f1809])).
fof(f2992,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1811])).
fof(f2993,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1812])).
fof(f2994,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)),X3)) )),
  inference(unit_resulting_resolution,[],[f1255,f1813])).
fof(f2995,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),X2)) )),
  inference(unit_resulting_resolution,[],[f1255,f2005])).
fof(f2996,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X1,bool),'const.pred_set.EMPTY_0'),s(fun(X1,bool),X2)))))) )),
  inference(unit_resulting_resolution,[],[f1255,f2006])).
fof(f2725,plain,(
  s(bool,'F_0') = s(bool,happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f2711,f1182])).
fof(f2726,plain,(
  s(bool,'T_0') != s(bool,happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f2711,f1187])).
fof(f2727,plain,(
  ~sP2(happ(s(bool,'~_1'),s(bool,'T_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1579])).
fof(f2729,plain,(
  ~sP2('F_0',happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1579])).
fof(f2730,plain,(
  ~sP2(happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1579])).
fof(f2731,plain,(
  sP2('T_0',happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1581])).
fof(f2732,plain,(
  sP2(happ(s(bool,'~_1'),s(bool,'T_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1584])).
fof(f2733,plain,(
  ( ! [X0] : (~sP3(X0,happ(s(bool,'~_1'),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1671])).
fof(f2736,plain,(
  ( ! [X0] : (~sP3(X0,'F_0',happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1671])).
fof(f2737,plain,(
  ( ! [X0] : (~sP3(X0,happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1671])).
fof(f2740,plain,(
  ( ! [X0] : (~sP3(happ(s(bool,'~_1'),s(bool,'T_0')),'F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1672])).
fof(f2744,plain,(
  ( ! [X0] : (~sP3('F_0',happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1672])).
fof(f2745,plain,(
  ( ! [X0] : (~sP3(happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1672])).
fof(f2747,plain,(
  ( ! [X0] : (~sP4(happ(s(bool,'~_1'),s(bool,'T_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1681])).
fof(f2750,plain,(
  ( ! [X0] : (~sP4('F_0',X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1681])).
fof(f2751,plain,(
  ( ! [X0] : (~sP4(happ(s(bool,'~_1'),s(bool,'T_0')),X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1681])).
fof(f2754,plain,(
  ( ! [X0] : (~sP4(happ(s(bool,'~_1'),s(bool,'T_0')),'F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1682])).
fof(f2757,plain,(
  ( ! [X0] : (~sP4('F_0',happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1682])).
fof(f2758,plain,(
  ( ! [X0] : (~sP4(happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1682])).
fof(f2761,plain,(
  ( ! [X0] : (~sP5(happ(s(bool,'~_1'),s(bool,'T_0')),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1697])).
fof(f2763,plain,(
  ( ! [X0] : (~sP5(happ(s(bool,'~_1'),s(bool,'T_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1698])).
fof(f2765,plain,(
  ( ! [X0] : (sP5(X0,happ(s(bool,'~_1'),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1699])).
fof(f2768,plain,(
  ( ! [X0] : (sP5(X0,'F_0',happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1699])).
fof(f2769,plain,(
  ( ! [X0] : (sP5(X0,happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1699])).
fof(f2771,plain,(
  ( ! [X0,X1] : (sP8(X0,happ(s(bool,'~_1'),s(bool,'T_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1716])).
fof(f2772,plain,(
  ( ! [X0,X1] : (sP8(happ(s(bool,'~_1'),s(bool,'T_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1717])).
fof(f2773,plain,(
  ( ! [X0,X1] : (sP7(X0,happ(s(bool,'~_1'),s(bool,'T_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1720])).
fof(f2774,plain,(
  ( ! [X0,X1] : (sP7(happ(s(bool,'~_1'),s(bool,'T_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1721])).
fof(f2775,plain,(
  ( ! [X0] : (~sP11('T_0',X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1731])).
fof(f2778,plain,(
  ( ! [X0] : (~sP11('T_0',happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1732])).
fof(f2781,plain,(
  ( ! [X0,X1] : (sP10(X0,happ(s(bool,'~_1'),s(bool,'T_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1739])).
fof(f2782,plain,(
  ( ! [X0,X1] : (sP10(happ(s(bool,'~_1'),s(bool,'T_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1740])).
fof(f2783,plain,(
  ( ! [X0] : (sP11('F_0',X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1741])).
fof(f2787,plain,(
  ( ! [X0] : (sP11(happ(s(bool,'~_1'),s(bool,'T_0')),X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1741])).
fof(f2788,plain,(
  ( ! [X0] : (sP11('F_0',happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1742])).
fof(f2792,plain,(
  ( ! [X0] : (sP11(happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1742])).
fof(f2793,plain,(
  ( ! [X0] : (~sP13(happ(s(bool,'~_1'),s(bool,'T_0')),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1747])).
fof(f2794,plain,(
  ( ! [X0] : (~sP13(happ(s(bool,'~_1'),s(bool,'T_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1748])).
fof(f2795,plain,(
  ( ! [X0,X1] : (sP12(happ(s(bool,'~_1'),s(bool,'T_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1757])).
fof(f2796,plain,(
  ( ! [X0] : (~sP15(happ(s(bool,'~_1'),s(bool,'T_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1764])).
fof(f2798,plain,(
  ( ! [X0] : (~sP15('F_0',X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1764])).
fof(f2799,plain,(
  ( ! [X0] : (~sP15(happ(s(bool,'~_1'),s(bool,'T_0')),X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1764])).
fof(f2802,plain,(
  ( ! [X0] : (~sP15(happ(s(bool,'~_1'),s(bool,'T_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1765])).
fof(f2803,plain,(
  ( ! [X0,X1] : (sP14(X0,X1,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f1772])).
fof(f2804,plain,(
  ( ! [X0,X1] : (sP14(happ(s(bool,'~_1'),s(bool,'T_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f2711,f1774])).
fof(f2805,plain,(
  ( ! [X0] : (sP15('T_0',X0,happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f2711,f1776])).
fof(f2808,plain,(
  ( ! [X0] : (sP11(happ(s(bool,'~_1'),s(bool,'T_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1983,f2711,f1810])).
fof(f2810,plain,(
  ( ! [X0] : (sP11(happ(s(bool,'~_1'),s(bool,'T_0')),'F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1985,f2711,f1810])).
fof(f2811,plain,(
  ~sP1(happ(s(bool,'~_1'),s(bool,'T_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1922])).
fof(f2818,plain,(
  ~sP1('F_0',happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f1837,f2711,f1922])).
fof(f2819,plain,(
  ~sP1(happ(s(bool,'~_1'),s(bool,'T_0')),happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f2711,f2711,f1922])).
fof(f2825,plain,(
  sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),happ(s(bool,'~_1'),s(bool,'T_0')))),
  inference(unit_resulting_resolution,[],[f2711,f2134])).
fof(f2826,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),happ(s(bool,'~_1'),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f2711,f2135])).
fof(f2827,plain,(
  sP2(happ(s(bool,'~_1'),s(bool,'T_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(unit_resulting_resolution,[],[f2711,f2147])).
fof(f2828,plain,(
  ( ! [X0,X1] : (sP2(happ(s(bool,'~_1'),s(bool,'T_0')),'const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f2711,f2148])).
fof(f2711,plain,(
  ~p(s(bool,happ(s(bool,'~_1'),s(bool,'T_0'))))),
  inference(unit_resulting_resolution,[],[f1157,f1195])).
fof(f2619,plain,(
  ( ! [X19] : (s(bool,X19) = s(bool,'const.pred_set.EMPTY_1'(s(bool,X19))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f1252,f1172])).
fof(f2604,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'const.marker.Cong_1'(s(bool,X3)))) )),
  inference(superposition,[],[f1172,f1169])).
fof(f2601,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1172,f1172])).
fof(f2560,plain,(
  ( ! [X0] : (sP13('T_0',X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1987,f1157,f1809])).
fof(f2562,plain,(
  ( ! [X0] : (sP13('T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0)) )),
  inference(unit_resulting_resolution,[],[f1989,f1157,f1809])).
fof(f2546,plain,(
  ( ! [X0] : (sP15('T_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0)) )),
  inference(unit_resulting_resolution,[],[f1995,f1157,f1808])).
fof(f2535,plain,(
  ( ! [X0] : (sP15('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1777])).
fof(f2529,plain,(
  ( ! [X0] : (sP15('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1776])).
fof(f2526,plain,(
  ( ! [X0] : (~sP15('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1765])).
fof(f2525,plain,(
  ( ! [X0] : (~sP15('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1764])).
fof(f2521,plain,(
  ( ! [X0] : (sP13('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1760])).
fof(f2514,plain,(
  ( ! [X0] : (sP13('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1759])).
fof(f2512,plain,(
  ( ! [X0] : (~sP13('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1748])).
fof(f2511,plain,(
  ( ! [X0] : (~sP13('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1747])).
fof(f2504,plain,(
  ( ! [X0] : (sP11('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1742])).
fof(f2501,plain,(
  ( ! [X0] : (sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1741])).
fof(f2498,plain,(
  ( ! [X0] : (~sP11('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1732])).
fof(f2487,plain,(
  ( ! [X0] : (~sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1837,f1731])).
fof(f2474,plain,(
  ( ! [X0] : (sP5(X0,'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1699])).
fof(f2460,plain,(
  ( ! [X0] : (~sP5('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1698])).
fof(f2446,plain,(
  ( ! [X0] : (~sP5('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1697])).
fof(f2432,plain,(
  ( ! [X0] : (sP4(X0,'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1683])).
fof(f2418,plain,(
  ( ! [X0] : (~sP4('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1682])).
fof(f2404,plain,(
  ( ! [X0] : (~sP4('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1681])).
fof(f2390,plain,(
  ( ! [X0] : (sP3('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1676])).
fof(f2336,plain,(
  ( ! [X0] : (~sP3('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1672])).
fof(f2326,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f1837,f2148])).
fof(f2323,plain,(
  ( ! [X0] : (~sP3(X0,'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1671])).
fof(f2254,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f1182])).
fof(f2255,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f1187])).
fof(f2256,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1307,f1579])).
fof(f2258,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1307,f1579])).
fof(f2259,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f1307,f1579])).
fof(f2260,plain,(
  ( ! [X0,X1] : (sP2('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1307,f1581])).
fof(f2261,plain,(
  ( ! [X0,X1] : (sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1307,f1584])).
fof(f2262,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1716])).
fof(f2263,plain,(
  ( ! [X2,X0,X3,X1] : (sP8('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1717])).
fof(f2264,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1720])).
fof(f2265,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1721])).
fof(f2266,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1739])).
fof(f2267,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1740])).
fof(f2268,plain,(
  ( ! [X2,X0,X3,X1] : (sP12('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1757])).
fof(f2269,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f1772])).
fof(f2270,plain,(
  ( ! [X2,X0,X3,X1] : (sP14('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1307,f1774])).
fof(f2271,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1307,f1922])).
fof(f2277,plain,(
  ( ! [X0,X1] : (~sP1('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1307,f1922])).
fof(f2278,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f1307,f1922])).
fof(f2283,plain,(
  ( ! [X0,X1] : (sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f2134])).
fof(f2284,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f1307,f2135])).
fof(f2285,plain,(
  ( ! [X0,X1] : (sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1307,f2147])).
fof(f2237,plain,(
  ( ! [X0,X1] : (sP2('const.pred_set.UNIV_1'(s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f2135])).
fof(f2195,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1188])).
fof(f2196,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1191])).
fof(f2197,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1565])).
fof(f2198,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1254,f1566])).
fof(f2199,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1254,f1580])).
fof(f2201,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f1254,f1580])).
fof(f2202,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1254,f1580])).
fof(f2203,plain,(
  ( ! [X0,X1] : (sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1254,f1581])).
fof(f2204,plain,(
  ( ! [X0,X1] : (sP2('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1837,f1254,f1584])).
fof(f2205,plain,(
  ( ! [X2,X0,X3,X1] : (sP8(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1715])).
fof(f2206,plain,(
  ( ! [X2,X0,X3,X1] : (sP7(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1719])).
fof(f2207,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1723])).
fof(f2208,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1724])).
fof(f2209,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1725])).
fof(f2210,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1738])).
fof(f2211,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.UNIV_0')))) )),
  inference(unit_resulting_resolution,[],[f1254,f1755])).
fof(f2212,plain,(
  ( ! [X2,X0,X3,X1] : (sP12(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1756])).
fof(f2213,plain,(
  ( ! [X2,X0,X3,X1] : (sP14(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1773])).
fof(f2214,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1811])).
fof(f2215,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1812])).
fof(f2216,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1254,f1813])).
fof(f2217,plain,(
  ( ! [X2,X0,X1] : (sP1('const.marker.Cong_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),X2)) )),
  inference(unit_resulting_resolution,[],[f1254,f2005])).
fof(f2218,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.marker.Cong_1'(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.UNIV_0')))))) )),
  inference(unit_resulting_resolution,[],[f1254,f2006])).
fof(f2192,plain,(
  sP2('F_0','const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))),
  inference(unit_resulting_resolution,[],[f1837,f2147])).
fof(f2160,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1922])).
fof(f2151,plain,(
  sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),'F_0')),
  inference(unit_resulting_resolution,[],[f1837,f2134])).
fof(f2148,plain,(
  ( ! [X6,X8,X7] : (sP2(X8,'const.pred_set.UNIV_1'(s(X6,X7))) | p(s(bool,X8))) )),
  inference(subsumption_resolution,[],[f2145,f1157])).
fof(f2145,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | sP2(X8,'const.pred_set.UNIV_1'(s(X6,X7)))) )),
  inference(superposition,[],[f1584,f1253])).
fof(f2143,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | sP2(X2,'const.marker.Cong_1'(s(bool,X1)))) )),
  inference(superposition,[],[f1584,f1169])).
fof(f2147,plain,(
  ( ! [X0] : (sP2(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17))) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f2142,f1157])).
fof(f2142,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP2(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(superposition,[],[f1584,f2061])).
fof(f2141,plain,(
  sP2('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1584])).
fof(f2135,plain,(
  ( ! [X6,X8,X7] : (sP2('const.pred_set.UNIV_1'(s(X6,X7)),X8) | p(s(bool,X8))) )),
  inference(subsumption_resolution,[],[f2132,f1157])).
fof(f2132,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | sP2('const.pred_set.UNIV_1'(s(X6,X7)),X8)) )),
  inference(superposition,[],[f1581,f1253])).
fof(f2130,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | sP2('const.marker.Cong_1'(s(bool,X1)),X2)) )),
  inference(superposition,[],[f1581,f1169])).
fof(f2134,plain,(
  ( ! [X0] : (sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f2129,f1157])).
fof(f2129,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0)) )),
  inference(superposition,[],[f1581,f2061])).
fof(f2128,plain,(
  sP2('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f1837,f1157,f1581])).
fof(f2126,plain,(
  ~sP2('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1157,f1157,f1580])).
fof(f2125,plain,(
  ~sP2('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1837,f1837,f1579])).
fof(f2108,plain,(
  ( ! [X0] : (sP1(X0,'const.marker.Cong_1'(s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f1157,f2006])).
fof(f2083,plain,(
  ( ! [X0] : (sP1('const.marker.Cong_1'(s(bool,'T_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f2005])).
fof(f2022,plain,(
  ( ! [X6,X7,X5] : (sP1(X7,'const.pred_set.UNIV_1'(s(X5,X6)))) )),
  inference(subsumption_resolution,[],[f2019,f1157])).
fof(f2019,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'T_0')) | sP1(X7,'const.pred_set.UNIV_1'(s(X5,X6)))) )),
  inference(superposition,[],[f1565,f1253])).
fof(f2021,plain,(
  ( ! [X4,X2,X3] : (sP1('const.pred_set.UNIV_1'(s(X2,X3)),X4)) )),
  inference(subsumption_resolution,[],[f2018,f1157])).
fof(f2018,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | sP1('const.pred_set.UNIV_1'(s(X2,X3)),X4)) )),
  inference(superposition,[],[f1566,f1253])).
fof(f2006,plain,(
  ( ! [X2,X3] : (sP1(X3,'const.marker.Cong_1'(s(bool,X2))) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f1565,f1169])).
fof(f2005,plain,(
  ( ! [X0,X1] : (sP1('const.marker.Cong_1'(s(bool,X0)),X1) | ~p(s(bool,X0))) )),
  inference(superposition,[],[f1566,f1169])).
fof(f2002,plain,(
  ( ! [X0,X1] : (sP3(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1813])).
fof(f2003,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1813])).
fof(f2000,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1812])).
fof(f2001,plain,(
  ( ! [X0,X1] : (sP4('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1812])).
fof(f1998,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1811])).
fof(f1999,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1811])).
fof(f1997,plain,(
  ( ! [X0,X1] : (sP14('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1774])).
fof(f1994,plain,(
  ( ! [X0,X1] : (sP14(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1773])).
fof(f1995,plain,(
  ( ! [X0,X1] : (sP14(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1773])).
fof(f1993,plain,(
  ( ! [X0,X1] : (sP14(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f1837,f1772])).
fof(f1991,plain,(
  ( ! [X0,X1] : (sP12('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1757])).
fof(f1988,plain,(
  ( ! [X0,X1] : (sP12(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1756])).
fof(f1989,plain,(
  ( ! [X0,X1] : (sP12(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1756])).
fof(f1986,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1755])).
fof(f1987,plain,(
  ( ! [X0,X1] : (sP12(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1755])).
fof(f1985,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1740])).
fof(f1983,plain,(
  ( ! [X0,X1] : (sP10(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1739])).
fof(f1980,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1738])).
fof(f1981,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1738])).
fof(f1978,plain,(
  ( ! [X0,X1] : (sP6('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1725])).
fof(f1979,plain,(
  ( ! [X0,X1] : (sP6('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1725])).
fof(f1976,plain,(
  ( ! [X0,X1] : (sP6(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1157,f1724])).
fof(f1977,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X1)) )),
  inference(unit_resulting_resolution,[],[f1154,f1724])).
fof(f1974,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1723])).
fof(f1975,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1723])).
fof(f1973,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1721])).
fof(f1971,plain,(
  ( ! [X0,X1] : (sP7(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1720])).
fof(f1968,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1719])).
fof(f1969,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1719])).
fof(f1967,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1717])).
fof(f1965,plain,(
  ( ! [X0,X1] : (sP8(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f1837,f1716])).
fof(f1962,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1715])).
fof(f1963,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1715])).
fof(f1960,plain,(
  ( ! [X0] : (sP1('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f1157,f1566])).
fof(f1961,plain,(
  ( ! [X0] : (sP1('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),X0)) )),
  inference(unit_resulting_resolution,[],[f1154,f1566])).
fof(f1958,plain,(
  ( ! [X0] : (sP1(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f1157,f1565])).
fof(f1959,plain,(
  ( ! [X0] : (sP1(X0,'const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)))) )),
  inference(unit_resulting_resolution,[],[f1154,f1565])).
fof(f1795,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))) )),
  inference(cnf_transformation,[],[f727])).
fof(f727,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))),
  inference(flattening,[],[f726])).
fof(f726,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8] : s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))),
  inference(rectify,[],[f254])).
fof(f254,axiom,(
  ! [X27,X29,X28,X58,X30] : ! [X31,X32,X33,X34] : s(fun(X28,X27),happ(s(fun(X30,fun(X28,X27)),'_dst_x00x11x11_3'(s(fun(X29,fun(X58,X27)),X31),s(fun(X30,fun(X28,X29)),X32),s(fun(X30,fun(X28,X58)),X33))),s(X30,X34))) = s(fun(X28,X27),'_dst_x0x1x1_3'(s(fun(X29,fun(X58,X27)),X31),s(fun(X28,X29),happ(s(fun(X30,fun(X28,X29)),X32),s(X30,X34))),s(fun(X28,X58),happ(s(fun(X30,fun(X28,X58)),X33),s(X30,X34)))))),
  file('thm.pred_set.DELETE_EQ_SING','_dst_x00x11x11_ax')).
fof(f1794,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f725])).
fof(f725,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f724])).
fof(f724,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X27,X28,X29,X30] : ! [X31,X32,X33,X34] : s(X27,happ(s(fun(X30,X27),'_dst_x0x1x1_3'(s(fun(X28,fun(X29,X27)),X31),s(fun(X30,X28),X32),s(fun(X30,X29),X33))),s(X30,X34))) = s(X27,happ(s(fun(X29,X27),happ(s(fun(X28,fun(X29,X27)),X31),s(X28,happ(s(fun(X30,X28),X32),s(X30,X34))))),s(X29,happ(s(fun(X30,X29),X33),s(X30,X34)))))),
  file('thm.pred_set.DELETE_EQ_SING','_dst_x0x1x1_ax')).
fof(f1785,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),'_dst_x1x1_2'(s(fun(X2,fun(X1,X0)),X3),s(fun(X2,X1),X4))),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),happ(s(fun(X2,fun(X1,X0)),X3),s(X2,X5))),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f722])).
fof(f722,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X2,X0),'_dst_x1x1_2'(s(fun(X2,fun(X1,X0)),X3),s(fun(X2,X1),X4))),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),happ(s(fun(X2,fun(X1,X0)),X3),s(X2,X5))),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f721])).
fof(f721,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X2,X0),'_dst_x1x1_2'(s(fun(X2,fun(X1,X0)),X3),s(fun(X2,X1),X4))),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),happ(s(fun(X2,fun(X1,X0)),X3),s(X2,X5))),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f116])).
fof(f116,axiom,(
  ! [X27,X28,X30] : ! [X31,X32,X34] : s(X27,happ(s(fun(X30,X27),'_dst_x1x1_2'(s(fun(X30,fun(X28,X27)),X31),s(fun(X30,X28),X32))),s(X30,X34))) = s(X27,happ(s(fun(X28,X27),happ(s(fun(X30,fun(X28,X27)),X31),s(X30,X34))),s(X28,happ(s(fun(X30,X28),X32),s(X30,X34)))))),
  file('thm.pred_set.DELETE_EQ_SING','_dst_x1x1_ax')).
fof(f1957,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),'const.pair.UNCURRY_2'(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X3))))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X5))))) )),
  inference(backward_demodulation,[],[f1784,f1945])).
fof(f1956,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),'const.pair.UNCURRY_2'(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X3))))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X5)))) | s(X1,X2) != s(X1,X4)) )),
  inference(backward_demodulation,[],[f1784,f1944])).
fof(f1955,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X3))))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X5))))) )),
  inference(backward_demodulation,[],[f1784,f1943])).
fof(f1954,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X3))))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X5)))) | s(X1,X2) != s(X1,X3)) )),
  inference(backward_demodulation,[],[f1784,f1942])).
fof(f1953,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X2))))),s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X4)))))) )),
  inference(backward_demodulation,[],[f1784,f1932])).
fof(f1952,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),'const.pair.UNCURRY_2'(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X3))))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) = s(X1,X4)) )),
  inference(backward_demodulation,[],[f1784,f1655])).
fof(f1951,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X3))))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) = s(X1,X3)) )),
  inference(backward_demodulation,[],[f1784,f1652])).
fof(f1950,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),'const.pair.UNCURRY_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s('type.pair.prod'(X0,X0),'const.pair.,_2'(s(X0,X2),s(X0,X1))))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | s(X0,X1) != s(X0,X2)) )),
  inference(backward_demodulation,[],[f1784,f1909])).
fof(f1949,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),'const.pair.UNCURRY_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s('type.pair.prod'(X0,X0),'const.pair.,_2'(s(X0,X2),s(X0,X1))))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | s(X0,X1) = s(X0,X2)) )),
  inference(backward_demodulation,[],[f1784,f1508])).
fof(f1948,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),'const.pair.UNCURRY_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s('type.pair.prod'(X0,X0),'const.pair.,_2'(s(X0,X2),s(X0,X1))))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))) )),
  inference(backward_demodulation,[],[f1784,f1910])).
fof(f1784,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5))) = s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f720])).
fof(f720,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5))) = s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))),
  inference(flattening,[],[f719])).
fof(f719,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X4))),s(X2,X5))) = s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X5)))))),
  inference(rectify,[],[f252])).
fof(f252,axiom,(
  ! [X38,X6,X15] : ! [X22,X8,X12] : s(X38,happ(s(fun(X15,X38),happ(s(fun(X6,fun(X15,X38)),X22),s(X6,X8))),s(X15,X12))) = s(X38,'const.pair.UNCURRY_2'(s(fun(X6,fun(X15,X38)),X22),s('type.pair.prod'(X6,X15),'const.pair.,_2'(s(X6,X8),s(X15,X12)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pair.UNCURRY_DEF')).
fof(f1783,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f718])).
fof(f718,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f717])).
fof(f717,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f119])).
fof(f119,axiom,(
  ! [X27,X30,X28] : ! [X31,X32,X34] : s(X27,happ(s(fun(X28,X27),happ(s(fun(X30,fun(X28,X27)),X31),s(X30,X34))),s(X28,X32))) = s(X27,happ(s(fun(X30,X27),'_dst_x1x0_2'(s(fun(X30,fun(X28,X27)),X31),s(X28,X32))),s(X30,X34)))),
  file('thm.pred_set.DELETE_EQ_SING','_dst_x1x0_ax')).
fof(f1782,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f716])).
fof(f716,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f715])).
fof(f715,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f222])).
fof(f222,axiom,(
  ! [X27,X28,X30] : ! [X31,X32,X34] : s(X27,happ(s(fun(X28,X27),X31),s(X28,happ(s(fun(X30,X28),X32),s(X30,X34))))) = s(X27,happ(s(fun(X30,X27),'_dst_x0x1_2'(s(fun(X28,X27),X31),s(fun(X30,X28),X32))),s(X30,X34)))),
  file('thm.pred_set.DELETE_EQ_SING','_dst_x0x1_ax')).
fof(f1781,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),X4))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),'const.pair.UNCURRY_1'(s(fun(X1,fun(X2,X0)),X3))),s('type.pair.prod'(X1,X2),X4)))) )),
  inference(cnf_transformation,[],[f714])).
fof(f714,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),X4))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),'const.pair.UNCURRY_1'(s(fun(X1,fun(X2,X0)),X3))),s('type.pair.prod'(X1,X2),X4)))),
  inference(flattening,[],[f713])).
fof(f713,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s(X0,'const.pair.UNCURRY_2'(s(fun(X1,fun(X2,X0)),X3),s('type.pair.prod'(X1,X2),X4))) = s(X0,happ(s(fun('type.pair.prod'(X1,X2),X0),'const.pair.UNCURRY_1'(s(fun(X1,fun(X2,X0)),X3))),s('type.pair.prod'(X1,X2),X4)))),
  inference(rectify,[],[f253])).
fof(f253,axiom,(
  ! [X38,X6,X15] : ! [X17,X18] : s(X38,'const.pair.UNCURRY_2'(s(fun(X6,fun(X15,X38)),X17),s('type.pair.prod'(X6,X15),X18))) = s(X38,happ(s(fun('type.pair.prod'(X6,X15),X38),'const.pair.UNCURRY_1'(s(fun(X6,fun(X15,X38)),X17))),s('type.pair.prod'(X6,X15),X18)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_1_2_const.pair.UNCURRY')).
fof(f1775,plain,(
  ( ! [X2,X0,X1] : (sP15(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1151])).
fof(f1151,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP15(X2,X0,X1)) & (~sP15(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f1150])).
fof(f1150,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP15(X2,X0,X1)) & (~sP15(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f825])).
fof(f825,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP15(X2,X0,X1))),
  inference(definition_folding,[],[f797,f824,f823])).
fof(f823,plain,(
  ! [X2,X0,X1] : (sP14(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP14])])).
fof(f824,plain,(
  ! [X2,X0,X1] : (sP15(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP14(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP15])])).
fof(f797,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f712])).
fof(f712,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f711])).
fof(f711,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f155])).
fof(f155,axiom,(
  ! [X35,X36,X37] : ((p(s(bool,X37)) <=> (p(s(bool,X36)) => p(s(bool,X35)))) <=> ((p(s(bool,X37)) | p(s(bool,X36))) & (p(s(bool,X37)) | ~p(s(bool,X35))) & (~p(s(bool,X36)) | p(s(bool,X35)) | ~p(s(bool,X37)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.sat.sat_27_prove_ltb')).
fof(f1776,plain,(
  ( ! [X2,X0,X1] : (sP15(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1151])).
fof(f1777,plain,(
  ( ! [X2,X0,X1] : (sP15(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1151])).
fof(f1778,plain,(
  ( ! [X2,X0,X1] : (~sP15(X2,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1151])).
fof(f1771,plain,(
  ( ! [X2,X0,X1] : (~sP14(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1149])).
fof(f1149,plain,(
  ! [X0,X1,X2] : ((~sP14(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP14(X0,X1,X2)))),
  inference(rectify,[],[f1148])).
fof(f1148,plain,(
  ! [X2,X0,X1] : ((~sP14(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP14(X2,X0,X1)))),
  inference(flattening,[],[f1147])).
fof(f1147,plain,(
  ! [X2,X0,X1] : ((~sP14(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP14(X2,X0,X1)))),
  inference(nnf_transformation,[],[f823])).
fof(f1772,plain,(
  ( ! [X2,X0,X1] : (sP14(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1149])).
fof(f1773,plain,(
  ( ! [X2,X0,X1] : (sP14(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1149])).
fof(f1774,plain,(
  ( ! [X2,X0,X1] : (sP14(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1149])).
fof(f1764,plain,(
  ( ! [X2,X0,X1] : (~sP15(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1146,plain,(
  ! [X0,X1,X2] : ((~sP15(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP14(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP14(X0,X1,X2) | sP15(X0,X1,X2)))),
  inference(rectify,[],[f1145])).
fof(f1145,plain,(
  ! [X2,X0,X1] : ((~sP15(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP14(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP14(X2,X0,X1) | sP15(X2,X0,X1)))),
  inference(flattening,[],[f1144])).
fof(f1144,plain,(
  ! [X2,X0,X1] : ((~sP15(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP14(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP14(X2,X0,X1)) | sP15(X2,X0,X1)))),
  inference(nnf_transformation,[],[f824])).
fof(f1765,plain,(
  ( ! [X2,X0,X1] : (~sP15(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1766,plain,(
  ( ! [X2,X0,X1] : (~sP15(X0,X1,X2) | sP14(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1808,plain,(
  ( ! [X2,X0,X1] : (sP15(X0,X1,X2) | ~sP14(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f1767])).
fof(f1767,plain,(
  ( ! [X2,X0,X1] : (sP15(X0,X1,X2) | ~sP14(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1768,plain,(
  ( ! [X2,X0,X1] : (sP15(X0,X1,X2) | ~sP14(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1769,plain,(
  ( ! [X2,X0,X1] : (sP15(X0,X1,X2) | ~sP14(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1770,plain,(
  ( ! [X2,X0,X1] : (sP15(X0,X1,X2) | ~sP14(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1146])).
fof(f1758,plain,(
  ( ! [X2,X0,X1] : (sP13(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1143])).
fof(f1143,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP13(X2,X0,X1)) & (~sP13(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f1142])).
fof(f1142,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP13(X2,X0,X1)) & (~sP13(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f822])).
fof(f822,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP13(X2,X0,X1))),
  inference(definition_folding,[],[f710,f821,f820])).
fof(f820,plain,(
  ! [X2,X0,X1] : (sP12(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f821,plain,(
  ! [X2,X0,X1] : (sP13(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f710,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f709])).
fof(f709,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f133])).
fof(f133,axiom,(
  ! [X35,X36,X37] : ((p(s(bool,X37)) <=> (p(s(bool,X36)) | p(s(bool,X35)))) <=> ((p(s(bool,X37)) | ~p(s(bool,X36))) & (p(s(bool,X37)) | ~p(s(bool,X35))) & (p(s(bool,X36)) | p(s(bool,X35)) | ~p(s(bool,X37)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.sat.sat_25_prove_ltb')).
fof(f1759,plain,(
  ( ! [X2,X0,X1] : (sP13(X2,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1143])).
fof(f1760,plain,(
  ( ! [X2,X0,X1] : (sP13(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1143])).
fof(f1761,plain,(
  ( ! [X2,X0,X1] : (~sP13(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1143])).
fof(f1754,plain,(
  ( ! [X2,X0,X1] : (~sP12(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1141])).
fof(f1141,plain,(
  ! [X0,X1,X2] : ((~sP12(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP12(X0,X1,X2)))),
  inference(rectify,[],[f1140])).
fof(f1140,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP12(X2,X0,X1)))),
  inference(flattening,[],[f1139])).
fof(f1139,plain,(
  ! [X2,X0,X1] : ((~sP12(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP12(X2,X0,X1)))),
  inference(nnf_transformation,[],[f820])).
fof(f1755,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1141])).
fof(f1756,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1141])).
fof(f1757,plain,(
  ( ! [X2,X0,X1] : (sP12(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1141])).
fof(f1747,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1138,plain,(
  ! [X0,X1,X2] : ((~sP13(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP12(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP12(X0,X1,X2) | sP13(X0,X1,X2)))),
  inference(rectify,[],[f1137])).
fof(f1137,plain,(
  ! [X2,X0,X1] : ((~sP13(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP12(X2,X0,X1) | sP13(X2,X0,X1)))),
  inference(flattening,[],[f1136])).
fof(f1136,plain,(
  ! [X2,X0,X1] : ((~sP13(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP12(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP12(X2,X0,X1)) | sP13(X2,X0,X1)))),
  inference(nnf_transformation,[],[f821])).
fof(f1748,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1749,plain,(
  ( ! [X2,X0,X1] : (~sP13(X0,X1,X2) | sP12(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1809,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f1750])).
fof(f1750,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1751,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1752,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1753,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2) | ~sP12(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1138])).
fof(f1741,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1135])).
fof(f1135,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f1134])).
fof(f1134,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f819])).
fof(f819,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f708,f818,f817])).
fof(f817,plain,(
  ! [X0,X1,X2] : (sP10(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f818,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> (sP10(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f708,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f707])).
fof(f707,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f139])).
fof(f139,axiom,(
  ! [X35,X36,X37] : ((p(s(bool,X37)) <=> (p(s(bool,X36)) & p(s(bool,X35)))) <=> ((p(s(bool,X37)) | ~p(s(bool,X36)) | ~p(s(bool,X35))) & (p(s(bool,X36)) | ~p(s(bool,X37))) & (p(s(bool,X35)) | ~p(s(bool,X37)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.sat.sat_23_prove_ltb')).
fof(f1742,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1135])).
fof(f1743,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1135])).
fof(f1746,plain,(
  ( ! [X2,X0,X1] : (~sP11(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1135])).
fof(f1737,plain,(
  ( ! [X2,X0,X1] : (~sP10(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1133])).
fof(f1133,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(flattening,[],[f1132])).
fof(f1132,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(nnf_transformation,[],[f817])).
fof(f1738,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1133])).
fof(f1739,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1133])).
fof(f1740,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1133])).
fof(f1730,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f1131])).
fof(f1131,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | (sP10(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP10(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f1130])).
fof(f1130,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | (sP10(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP10(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f1129])).
fof(f1129,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | (sP10(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP10(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f818])).
fof(f1731,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1131])).
fof(f1732,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1131])).
fof(f1733,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f1131])).
fof(f1810,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | p(s(bool,X0)) | ~sP10(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f1736])).
fof(f1736,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP10(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f1131])).
fof(f1726,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1128])).
fof(f1128,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP9(X2,X1,X0)) & (~sP9(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f816])).
fof(f816,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP9(X2,X1,X0))),
  inference(definition_folding,[],[f706,f815,f814,f813,f812])).
fof(f812,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f813,plain,(
  ! [X1,X0,X2] : (sP7(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f814,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f815,plain,(
  ! [X2,X1,X0] : (sP9(X2,X1,X0) <=> (sP6(X0,X1,X2) & sP7(X1,X0,X2) & sP8(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f706,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f705])).
fof(f705,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f132])).
fof(f132,axiom,(
  ! [X35,X36,X37] : ((p(s(bool,X37)) <=> s(bool,X35) = s(bool,X36)) <=> ((p(s(bool,X37)) | p(s(bool,X36)) | p(s(bool,X35))) & (p(s(bool,X37)) | ~p(s(bool,X35)) | ~p(s(bool,X36))) & (p(s(bool,X36)) | ~p(s(bool,X35)) | ~p(s(bool,X37))) & (p(s(bool,X35)) | ~p(s(bool,X36)) | ~p(s(bool,X37)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.sat.sat_2|49|_prove_ltb')).
fof(f1727,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1128])).
fof(f1728,plain,(
  ( ! [X2,X0,X1] : (~sP9(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f1128])).
fof(f1729,plain,(
  ( ! [X2,X0,X1] : (~sP9(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1128])).
fof(f1722,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1127])).
fof(f1127,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f1126])).
fof(f1126,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f812])).
fof(f1723,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1127])).
fof(f1724,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1127])).
fof(f1725,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1127])).
fof(f1718,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1125])).
fof(f1125,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f1124])).
fof(f1124,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(flattening,[],[f1123])).
fof(f1123,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(nnf_transformation,[],[f813])).
fof(f1719,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1125])).
fof(f1720,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1125])).
fof(f1721,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1125])).
fof(f1714,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1122])).
fof(f1122,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f1121])).
fof(f1121,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f1120])).
fof(f1120,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f814])).
fof(f1715,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1122])).
fof(f1716,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1122])).
fof(f1717,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1122])).
fof(f1707,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP6(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1119,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | (sP6(X2,X1,X0) & sP7(X1,X2,X0) & sP8(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X2,X1,X0) | ~sP7(X1,X2,X0) | ~sP8(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f1118])).
fof(f1118,plain,(
  ! [X2,X1,X0] : ((~sP9(X2,X1,X0) | (sP6(X0,X1,X2) & sP7(X1,X0,X2) & sP8(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | ~sP7(X1,X0,X2) | ~sP8(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP9(X2,X1,X0)))),
  inference(flattening,[],[f1117])).
fof(f1117,plain,(
  ! [X2,X1,X0] : ((~sP9(X2,X1,X0) | (sP6(X0,X1,X2) & sP7(X1,X0,X2) & sP8(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | ~sP7(X1,X0,X2) | ~sP8(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP9(X2,X1,X0)))),
  inference(nnf_transformation,[],[f815])).
fof(f1708,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP7(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1709,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1710,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1711,plain,(
  ( ! [X2,X0,X1] : (~sP7(X1,X2,X0) | ~p(s(bool,X2)) | ~sP8(X0,X2,X1) | sP9(X0,X1,X2) | ~sP6(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1712,plain,(
  ( ! [X2,X0,X1] : (~sP7(X1,X2,X0) | p(s(bool,X1)) | ~sP8(X0,X2,X1) | sP9(X0,X1,X2) | ~sP6(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1713,plain,(
  ( ! [X2,X0,X1] : (~sP7(X1,X2,X0) | p(s(bool,X0)) | ~sP8(X0,X2,X1) | sP9(X0,X1,X2) | ~sP6(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f1119])).
fof(f1697,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1114])).
fof(f1114,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | ((~p(s(bool,X2)) | p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X2)) & ~p(s(bool,X0))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f1113])).
fof(f1113,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & ((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f1112])).
fof(f1112,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))))) & (((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f810])).
fof(f810,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f1698,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1114])).
fof(f1699,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1114])).
fof(f1811,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f1702])).
fof(f1702,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1114])).
fof(f1681,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1107])).
fof(f1107,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | ((p(s(bool,X2)) | p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X2)) & ~p(s(bool,X0))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f1106])).
fof(f1106,plain,(
  ! [X0,X2,X1] : ((~sP4(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0))) | sP4(X0,X2,X1)))),
  inference(flattening,[],[f1105])).
fof(f1105,plain,(
  ! [X0,X2,X1] : ((~sP4(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0)))) | sP4(X0,X2,X1)))),
  inference(nnf_transformation,[],[f808])).
fof(f808,plain,(
  ! [X0,X2,X1] : (sP4(X0,X2,X1) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f1682,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1107])).
fof(f1683,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1107])).
fof(f1812,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f1686])).
fof(f1686,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1107])).
fof(f1671,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1102,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | ((p(s(bool,X1)) | p(s(bool,X2))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f1101])).
fof(f1101,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2))) | sP3(X2,X0,X1)))),
  inference(flattening,[],[f1100])).
fof(f1100,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & (((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2)))) | sP3(X2,X0,X1)))),
  inference(nnf_transformation,[],[f806])).
fof(f806,plain,(
  ! [X2,X0,X1] : (sP3(X2,X0,X1) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f1672,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1813,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(duplicate_literal_removal,[],[f1673])).
fof(f1673,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1674,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1675,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1676,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f1102])).
fof(f1947,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1)))))) | s(X0,X1) = s(X0,X2)) )),
  inference(forward_demodulation,[],[f1657,f1316])).
fof(f1657,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f1095])).
fof(f1095,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f698])).
fof(f698,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f143])).
fof(f143,axiom,(
  ! [X39,X40,X41] : (p(s(bool,happ(s(fun(X39,bool),happ(s(fun(X39,fun(X39,bool)),'=_0'),s(X39,X40))),s(X39,X41)))) <=> s(X39,X40) = s(X39,X41))),
  file('thm.pred_set.DELETE_EQ_SING',arity_0_HL_EQ)).
fof(f1946,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1)))))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f1658,f1316])).
fof(f1658,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f1095])).
fof(f1945,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(forward_demodulation,[],[f1654,f1316])).
fof(f1654,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(cnf_transformation,[],[f1094])).
fof(f1094,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) & s(X1,X2) = s(X1,X4))) & (~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) | s(X1,X2) != s(X1,X4) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(flattening,[],[f1093])).
fof(f1093,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) & s(X1,X2) = s(X1,X4))) & ((~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) | s(X1,X2) != s(X1,X4)) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(nnf_transformation,[],[f697])).
fof(f697,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) & s(X1,X2) = s(X1,X4)))),
  inference(flattening,[],[f696])).
fof(f696,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3)))) & s(X1,X2) = s(X1,X4)))),
  inference(rectify,[],[f180])).
fof(f180,axiom,(
  ! [X15,X6] : ! [X8,X25,X26,X20] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X15),happ(s(fun(X15,'type.pair.prod'(X6,X15)),happ(s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(X6,X26))),s(X15,X25))),s(fun('type.pair.prod'(X6,X15),bool),'const.pred_set.GSPEC_1'(s(fun(X15,'type.pair.prod'('type.pair.prod'(X6,X15),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X6,X15),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'const.pair.,_0'),s(fun(X15,'type.pair.prod'(X6,X15)),happ(s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(X6,X8))),s(fun(X15,bool),X20)))))))) <=> (p(s(bool,happ(s(fun(X15,bool),X20),s(X15,X25)))) & s(X6,X8) = s(X6,X26)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PAIR_IN_GSPEC_2')).
fof(f1655,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,X4) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(cnf_transformation,[],[f1094])).
fof(f1944,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X5)))) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) != s(X1,X4)) )),
  inference(forward_demodulation,[],[f1656,f1316])).
fof(f1656,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,X0),happ(s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X4))),s(X0,X3))),s(fun('type.pair.prod'(X1,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X1,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X1,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X1,X0)),happ(s(fun(X1,fun(X0,'type.pair.prod'(X1,X0))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) != s(X1,X4) | ~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f1094])).
fof(f1943,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(forward_demodulation,[],[f1651,f1316])).
fof(f1651,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(cnf_transformation,[],[f1092])).
fof(f1092,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3))) & (~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) | s(X1,X2) != s(X1,X3) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(flattening,[],[f1091])).
fof(f1091,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3))) & ((~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) | s(X1,X2) != s(X1,X3)) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(nnf_transformation,[],[f695])).
fof(f695,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3)))),
  inference(flattening,[],[f694])).
fof(f694,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3)))),
  inference(rectify,[],[f182])).
fof(f182,axiom,(
  ! [X6,X15] : ! [X8,X25,X26,X20] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X15),happ(s(fun(X15,'type.pair.prod'(X6,X15)),happ(s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(X6,X26))),s(X15,X25))),s(fun('type.pair.prod'(X6,X15),bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'('type.pair.prod'(X6,X15),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X6,X15),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'const.pair.,_0'),s(fun(X6,'type.pair.prod'(X6,X15)),'_dst_x1x0_2'(s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(X15,X8))),s(fun(X6,bool),X20)))))))) <=> (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X26)))) & s(X15,X8) = s(X15,X25)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PAIR_IN_GSPEC_|49|')).
fof(f1652,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(cnf_transformation,[],[f1092])).
fof(f1942,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X5)))) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) != s(X1,X3)) )),
  inference(forward_demodulation,[],[f1653,f1316])).
fof(f1653,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | s(X1,X2) != s(X1,X3) | ~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f1092])).
fof(f1941,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4)))))) | p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4)))))) | ~p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))) )),
  inference(forward_demodulation,[],[f1940,f1316])).
fof(f1940,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | ~p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))) )),
  inference(forward_demodulation,[],[f1648,f1316])).
fof(f1648,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | ~p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))) )),
  inference(cnf_transformation,[],[f1090])).
fof(f1090,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))) & ((~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))) | p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))))),
  inference(flattening,[],[f1089])).
fof(f1089,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) | (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5)))))) & ((~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))) | p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))))),
  inference(nnf_transformation,[],[f693])).
fof(f693,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) <=> (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))))),
  inference(flattening,[],[f692])).
fof(f692,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) <=> (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))))),
  inference(rectify,[],[f244])).
fof(f244,axiom,(
  ! [X6,X15] : ! [X54,X53,X8,X12] : (p(s(bool,'const.relation.RUNION_4'(s(fun(X6,fun(X15,bool)),X54),s(fun(X6,fun(X15,bool)),X53),s(X6,X8),s(X15,X12)))) <=> (p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X54),s(X6,X8))),s(X15,X12)))) | p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X53),s(X6,X8))),s(X15,X12))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.RUNION')).
fof(f1939,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4)))))) | p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))) )),
  inference(forward_demodulation,[],[f1649,f1316])).
fof(f1649,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5))))) )),
  inference(cnf_transformation,[],[f1090])).
fof(f1938,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4)))))) | p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))))) )),
  inference(forward_demodulation,[],[f1650,f1316])).
fof(f1650,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X5))))) )),
  inference(cnf_transformation,[],[f1090])).
fof(f1642,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X0,X2) = s(X0,X4)) )),
  inference(cnf_transformation,[],[f1086])).
fof(f1086,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(flattening,[],[f1085])).
fof(f1085,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & ((s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5)) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(nnf_transformation,[],[f689])).
fof(f689,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(flattening,[],[f688])).
fof(f688,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(rectify,[],[f237])).
fof(f237,axiom,(
  ! [X6,X15] : ! [X8,X12,X26,X25] : (s('type.pair.prod'(X6,X15),'const.pair.,_2'(s(X6,X8),s(X15,X12))) = s('type.pair.prod'(X6,X15),'const.pair.,_2'(s(X6,X26),s(X15,X25))) <=> (s(X6,X8) = s(X6,X26) & s(X15,X12) = s(X15,X25)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pair.CLOSED_PAIR_EQ')).
fof(f1643,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X1,X3) = s(X1,X5)) )),
  inference(cnf_transformation,[],[f1086])).
fof(f1644,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f1086])).
fof(f1937,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4)))))) | ~p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5))))) )),
  inference(forward_demodulation,[],[f1639,f1316])).
fof(f1639,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | ~p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f1084])).
fof(f1084,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) | (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))))) & (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5))))))),
  inference(flattening,[],[f1083])).
fof(f1083,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) | (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))))) & ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))) | p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5))))))),
  inference(nnf_transformation,[],[f687])).
fof(f687,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) <=> (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))))),
  inference(flattening,[],[f686])).
fof(f686,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) <=> (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))))),
  inference(rectify,[],[f187])).
fof(f187,axiom,(
  ! [X15,X6] : ! [X43,X7,X8,X12] : (p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X6,fun(X15,bool)),X43),s(fun(X6,bool),X7),s(X6,X8),s(X15,X12)))) <=> (p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X43),s(X6,X8))),s(X15,X12)))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.RRESTRICT_DEF')).
fof(f1640,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) | p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f1084])).
fof(f1936,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4)))))) | p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))) )),
  inference(forward_demodulation,[],[f1641,f1316])).
fof(f1641,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.relation.RRESTRICT_4'(s(fun(X1,fun(X0,bool)),X2),s(fun(X1,bool),X3),s(X1,X4),s(X0,X5)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f1084])).
fof(f1935,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4)))))) | ~p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5))))) )),
  inference(forward_demodulation,[],[f1636,f1316])).
fof(f1636,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | ~p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f1082])).
fof(f1082,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) | (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & s(X1,X3) != s(X1,X4))) & (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | s(X1,X3) = s(X1,X4) | p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5))))))),
  inference(flattening,[],[f1081])).
fof(f1081,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) | (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & s(X1,X3) != s(X1,X4))) & ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) | s(X1,X3) = s(X1,X4)) | p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5))))))),
  inference(nnf_transformation,[],[f685])).
fof(f685,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) <=> (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & s(X1,X3) != s(X1,X4)))),
  inference(flattening,[],[f684])).
fof(f684,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) <=> (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5)))) & ~s(X1,X3) = s(X1,X4)))),
  inference(rectify,[],[f240])).
fof(f240,axiom,(
  ! [X15,X6] : ! [X43,X8,X57,X23] : (p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X6,fun(X15,bool)),X43),s(X6,X8),s(X6,X57),s(X15,X23)))) <=> (p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X43),s(X6,X57))),s(X15,X23)))) & ~s(X6,X8) = s(X6,X57)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.RDOM_DELETE_DEF')).
fof(f1637,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) | s(X1,X3) != s(X1,X4)) )),
  inference(cnf_transformation,[],[f1082])).
fof(f1934,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4)))))) | p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) | s(X1,X3) = s(X1,X4)) )),
  inference(forward_demodulation,[],[f1638,f1316])).
fof(f1638,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3),s(X1,X4),s(X0,X5)))) | s(X1,X3) = s(X1,X4) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),X2),s(X1,X4))),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f1082])).
fof(f1933,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X5)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))) | s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f1635,f1316])).
fof(f1635,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))) | s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) | ~p(s(bool,happ(s(fun(X1,bool),X5),s(X1,X3))))) )),
  inference(cnf_transformation,[],[f793])).
fof(f793,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (~p(s(bool,happ(s(fun(X1,bool),X5),s(X1,X3)))) | s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))))),
  inference(flattening,[],[f792])).
fof(f792,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,happ(s(fun(X1,bool),X5),s(X1,X3)))) | s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))))),
  inference(ennf_transformation,[],[f683])).
fof(f683,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,happ(s(fun(X1,bool),X5),s(X1,X3)))) & s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X3)))) => p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))))),
  inference(flattening,[],[f682])).
fof(f682,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : ((p(s(bool,happ(s(fun(X1,bool),X5),s(X1,X3)))) & s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X3)))) => p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),'_dst_x0x1x1_3'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X1,X0),X2),s(fun(X1,bool),X5)))))))))),
  inference(rectify,[],[f185])).
fof(f185,axiom,(
  ! [X15,X6] : ! [X22,X12,X8,X20] : ((p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X12)))) & s(X15,X8) = s(X15,happ(s(fun(X6,X15),X22),s(X6,X12)))) => p(s(bool,'const.bool.IN_2'(s(X15,X8),s(fun(X15,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X15,bool)),'_dst_x0x1x1_3'(s(fun(X15,fun(bool,'type.pair.prod'(X15,bool))),'const.pair.,_0'),s(fun(X6,X15),X22),s(fun(X6,bool),X20)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_GSPEC')).
fof(f1634,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3))),s(X0,X4))),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f681])).
fof(f681,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3))),s(X0,X4))),s(X1,X5)))),
  inference(flattening,[],[f680])).
fof(f680,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(bool,'const.relation.RUNION_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,fun(X1,bool)),X3))),s(X0,X4))),s(X1,X5)))),
  inference(rectify,[],[f245])).
fof(f245,axiom,(
  ! [X6,X15] : ! [X17,X18,X19,X56] : s(bool,'const.relation.RUNION_4'(s(fun(X6,fun(X15,bool)),X17),s(fun(X6,fun(X15,bool)),X18),s(X6,X19),s(X15,X56))) = s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),'const.relation.RUNION_2'(s(fun(X6,fun(X15,bool)),X17),s(fun(X6,fun(X15,bool)),X18))),s(X6,X19))),s(X15,X56)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_4_const.relation.RUNION')).
fof(f1633,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.relation.RRESTRICT_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RRESTRICT_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3))),s(X0,X4))),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f679])).
fof(f679,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(bool,'const.relation.RRESTRICT_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RRESTRICT_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3))),s(X0,X4))),s(X1,X5)))),
  inference(flattening,[],[f678])).
fof(f678,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(bool,'const.relation.RRESTRICT_4'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RRESTRICT_2'(s(fun(X0,fun(X1,bool)),X2),s(fun(X0,bool),X3))),s(X0,X4))),s(X1,X5)))),
  inference(rectify,[],[f257])).
fof(f257,axiom,(
  ! [X6,X15] : ! [X17,X18,X19,X56] : s(bool,'const.relation.RRESTRICT_4'(s(fun(X6,fun(X15,bool)),X17),s(fun(X6,bool),X18),s(X6,X19),s(X15,X56))) = s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),'const.relation.RRESTRICT_2'(s(fun(X6,fun(X15,bool)),X17),s(fun(X6,bool),X18))),s(X6,X19))),s(X15,X56)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_4_const.relation.RRESTRICT')).
fof(f1632,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X0,X4))),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f677])).
fof(f677,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X0,X4))),s(X1,X5)))),
  inference(flattening,[],[f676])).
fof(f676,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3),s(X0,X4),s(X1,X5))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X0,X4))),s(X1,X5)))),
  inference(rectify,[],[f239])).
fof(f239,axiom,(
  ! [X6,X15] : ! [X17,X18,X19,X56] : s(bool,'const.relation.RDOM_DELETE_4'(s(fun(X6,fun(X15,bool)),X17),s(X6,X18),s(X6,X19),s(X15,X56))) = s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X6,fun(X15,bool)),X17),s(X6,X18))),s(X6,X19))),s(X15,X56)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_4_const.relation.RDOM_DELETE')).
fof(f1629,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3))))))))) )),
  inference(cnf_transformation,[],[f1080])).
fof(f1080,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3))))))))))),
  inference(flattening,[],[f1079])).
fof(f1079,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3))))))))))),
  inference(nnf_transformation,[],[f675])).
fof(f675,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(flattening,[],[f674])).
fof(f674,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(rectify,[],[f203])).
fof(f203,axiom,(
  ! [X6,X15] : ! [X8,X53,X54] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),'const.relation.RUNION_2'(s(fun(X6,fun(X15,bool)),X54),s(fun(X6,fun(X15,bool)),X53)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X54)))))) | p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X53))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.IN_RDOM_RUNION')).
fof(f1630,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X4))))))) )),
  inference(cnf_transformation,[],[f1080])).
fof(f1631,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),'const.relation.RUNION_2'(s(fun(X0,fun(X1,bool)),X4),s(fun(X0,fun(X1,bool)),X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(cnf_transformation,[],[f1080])).
fof(f1626,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3))))))))) )),
  inference(cnf_transformation,[],[f1078])).
fof(f1078,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3)))))) & (~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3))))))))))),
  inference(flattening,[],[f1077])).
fof(f1077,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3))))))))))),
  inference(nnf_transformation,[],[f673])).
fof(f673,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3))))))),
  inference(flattening,[],[f672])).
fof(f672,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3))))))),
  inference(rectify,[],[f200])).
fof(f200,axiom,(
  ! [X15,X6] : ! [X8,X7,X43] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),'const.relation.RRESTRICT_2'(s(fun(X6,fun(X15,bool)),X43),s(fun(X6,bool),X7)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X43)))))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.IN_RDOM_RRESTRICT')).
fof(f1627,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3))))))))) )),
  inference(cnf_transformation,[],[f1078])).
fof(f1628,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RRESTRICT_2'(s(fun(X1,fun(X0,bool)),X4),s(fun(X1,bool),X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4))))))) )),
  inference(cnf_transformation,[],[f1078])).
fof(f1623,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3))))))))) )),
  inference(cnf_transformation,[],[f1076])).
fof(f1076,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & s(X1,X2) != s(X1,X3))) & (~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | s(X1,X2) = s(X1,X3) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3))))))))))),
  inference(flattening,[],[f1075])).
fof(f1075,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3)))))))) | (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & s(X1,X2) != s(X1,X3))) & ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) | s(X1,X2) = s(X1,X3)) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3))))))))))),
  inference(nnf_transformation,[],[f671])).
fof(f671,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & s(X1,X2) != s(X1,X3)))),
  inference(flattening,[],[f670])).
fof(f670,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4)))))) & ~s(X1,X2) = s(X1,X3)))),
  inference(rectify,[],[f181])).
fof(f181,axiom,(
  ! [X15,X6] : ! [X8,X48,X43] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X6,fun(X15,bool)),X43),s(X6,X48)))))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X43)))))) & ~s(X6,X8) = s(X6,X48)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.IN_RDOM_DELETE')).
fof(f1624,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,X2) != s(X1,X3) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3))))))))) )),
  inference(cnf_transformation,[],[f1076])).
fof(f1625,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),'const.relation.RDOM_DELETE_2'(s(fun(X1,fun(X0,bool)),X4),s(X1,X3)))))))) | s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X4))))))) )),
  inference(cnf_transformation,[],[f1076])).
fof(f1621,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))) | p(s(bool,'const.bool.IN_2'(s(X0,sK72(X4,X3,X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f1074])).
fof(f1074,plain,(
  ! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,sK72(X4,X3,X2,X1,X0)),s(fun(X0,bool),X2)))) & s(X1,happ(s(fun(X0,X1),X3),s(X0,sK72(X4,X3,X2,X1,X0)))) != s(X1,happ(s(fun(X0,X1),X4),s(X0,sK72(X4,X3,X2,X1,X0))))) | s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK72])],[f791])).
fof(f791,plain,(
  ! [X0,X1,X2,X3,X4] : (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) & s(X1,happ(s(fun(X0,X1),X3),s(X0,X5))) != s(X1,happ(s(fun(X0,X1),X4),s(X0,X5)))) | s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))))),
  inference(ennf_transformation,[],[f669])).
fof(f669,plain,(
  ! [X0,X1,X2,X3,X4] : (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) => s(X1,happ(s(fun(X0,X1),X3),s(X0,X5))) = s(X1,happ(s(fun(X0,X1),X4),s(X0,X5)))) => s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))))),
  inference(flattening,[],[f668])).
fof(f668,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) => s(X1,happ(s(fun(X0,X1),X3),s(X0,X5))) = s(X1,happ(s(fun(X0,X1),X4),s(X0,X5)))) => s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))))),
  inference(rectify,[],[f175])).
fof(f175,axiom,(
  ! [X6,X15] : ! [X37,X46,X47] : (! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X37)))) => s(X15,happ(s(fun(X6,X15),X46),s(X6,X8))) = s(X15,happ(s(fun(X6,X15),X47),s(X6,X8)))) => s(fun(X6,X15),'const.bool.RES_ABSTRACT_2'(s(fun(X6,bool),X37),s(fun(X6,X15),X46))) = s(fun(X6,X15),'const.bool.RES_ABSTRACT_2'(s(fun(X6,bool),X37),s(fun(X6,X15),X47))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_ABSTRACT_DEF|split|1')).
fof(f1622,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X3))) = s(fun(X0,X1),'const.bool.RES_ABSTRACT_2'(s(fun(X0,bool),X2),s(fun(X0,X1),X4))) | s(X1,happ(s(fun(X0,X1),X3),s(X0,sK72(X4,X3,X2,X1,X0)))) != s(X1,happ(s(fun(X0,X1),X4),s(X0,sK72(X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f1074])).
fof(f1620,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X2))))) )),
  inference(cnf_transformation,[],[f790])).
fof(f790,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X2)))) | s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))))),
  inference(ennf_transformation,[],[f667])).
fof(f667,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X2)))) => s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))))),
  inference(flattening,[],[f666])).
fof(f666,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X2)))) => s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) = s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))))),
  inference(rectify,[],[f183])).
fof(f183,axiom,(
  ! [X15,X6] : ! [X37,X49,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X37)))) => s(X15,happ(s(fun(X6,X15),X49),s(X6,X8))) = s(X15,'const.bool.RES_ABSTRACT_3'(s(fun(X6,bool),X37),s(fun(X6,X15),X49),s(X6,X8))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_ABSTRACT_DEF|split|0')).
fof(f1932,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X3))),s(X1,X2))),s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X4)))))) )),
  inference(forward_demodulation,[],[f1931,f1316])).
fof(f1931,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))),s(X1,X2))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X3))),s(X1,X2))),s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X4)))))) )),
  inference(forward_demodulation,[],[f1619,f1603])).
fof(f1619,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))),s(X1,X2))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X3))),s(X1,X2))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X4)))))))))) )),
  inference(cnf_transformation,[],[f665])).
fof(f665,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))),s(X1,X2))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X3))),s(X1,X2))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X4)))))))))),
  inference(flattening,[],[f664])).
fof(f664,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X4),s(X0,X3))),s(X1,X2))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X3))),s(X1,X2))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X4)))))))))),
  inference(rectify,[],[f214])).
fof(f214,axiom,(
  ! [X6,X15] : ! [X12,X8,X20] : s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X20),s(X6,X8))),s(X15,X12))) = s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X15),happ(s(fun(X15,'type.pair.prod'(X6,X15)),happ(s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(X6,X8))),s(X15,X12))),s(fun('type.pair.prod'(X6,X15),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X6,X15),'type.pair.prod'('type.pair.prod'(X6,X15),bool)),'const.pair.UNCURRY_1'(s(fun(X6,fun(X15,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X6,X15),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'const.pair.,_0'),s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(fun(X6,fun(X15,bool)),X20)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PAIR_IN_GSPEC_IFF')).
fof(f1618,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),'const.bool.RES_ABSTRACT_2'(s(fun(X1,bool),X2),s(fun(X1,X0),X3))),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f663])).
fof(f663,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),'const.bool.RES_ABSTRACT_2'(s(fun(X1,bool),X2),s(fun(X1,X0),X3))),s(X1,X4)))),
  inference(flattening,[],[f662])).
fof(f662,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,'const.bool.RES_ABSTRACT_3'(s(fun(X1,bool),X2),s(fun(X1,X0),X3),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),'const.bool.RES_ABSTRACT_2'(s(fun(X1,bool),X2),s(fun(X1,X0),X3))),s(X1,X4)))),
  inference(rectify,[],[f241])).
fof(f241,axiom,(
  ! [X15,X6] : ! [X17,X18,X19] : s(X15,'const.bool.RES_ABSTRACT_3'(s(fun(X6,bool),X17),s(fun(X6,X15),X18),s(X6,X19))) = s(X15,happ(s(fun(X6,X15),'const.bool.RES_ABSTRACT_2'(s(fun(X6,bool),X17),s(fun(X6,X15),X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.bool.RES_ABSTRACT')).
fof(f1616,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK71(X3,X2,X1,X0)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))) )),
  inference(cnf_transformation,[],[f1073])).
fof(f1073,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK71(X3,X2,X1,X0))))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK71])],[f1072])).
fof(f1072,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | ? [X5] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X5)))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(rectify,[],[f1071])).
fof(f1071,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(nnf_transformation,[],[f661])).
fof(f661,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(flattening,[],[f660])).
fof(f660,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X6,X15] : ! [X22,X23] : (p(s(bool,'const.bool.IN_2'(s(X6,X23),s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X15,'type.pair.prod'(X6,bool)),X22)))))) <=> ? [X8] : s('type.pair.prod'(X6,bool),'const.pair.,_2'(s(X6,X23),s(bool,'T_0'))) = s('type.pair.prod'(X6,bool),happ(s(fun(X15,'type.pair.prod'(X6,bool)),X22),s(X15,X8))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.GSPECIFICATION')).
fof(f1617,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f1073])).
fof(f1930,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,sK70(X3,X2,X1,X0))))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(forward_demodulation,[],[f1614,f1316])).
fof(f1614,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,sK70(X3,X2,X1,X0)))),s(X1,X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(cnf_transformation,[],[f1070])).
fof(f1070,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,sK70(X3,X2,X1,X0)))),s(X1,X2))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2)))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK70])],[f1069])).
fof(f1069,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ? [X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X5))),s(X1,X2))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2)))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(rectify,[],[f1068])).
fof(f1068,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2)))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(nnf_transformation,[],[f659])).
fof(f659,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2)))))),
  inference(flattening,[],[f658])).
fof(f658,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2)))))),
  inference(rectify,[],[f202])).
fof(f202,axiom,(
  ! [X15,X6] : ! [X12,X43] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.relation.RRANGE_1'(s(fun(X15,fun(X6,bool)),X43)))))) <=> ? [X8] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X15,fun(X6,bool)),X43),s(X15,X8))),s(X6,X12)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.IN_RRANGE')).
fof(f1929,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4)))))) | p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(forward_demodulation,[],[f1615,f1316])).
fof(f1615,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X4))),s(X1,X2))))) )),
  inference(cnf_transformation,[],[f1070])).
fof(f1928,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,sK69(X3,X2,X1,X0)),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(forward_demodulation,[],[f1612,f1316])).
fof(f1612,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,sK69(X3,X2,X1,X0))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(cnf_transformation,[],[f1067])).
fof(f1067,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,sK69(X3,X2,X1,X0)))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK69])],[f1066])).
fof(f1066,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ? [X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X5))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(rectify,[],[f1065])).
fof(f1065,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))))),
  inference(nnf_transformation,[],[f657])).
fof(f657,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4)))))),
  inference(flattening,[],[f656])).
fof(f656,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4)))))),
  inference(rectify,[],[f193])).
fof(f193,axiom,(
  ! [X6,X15] : ! [X8,X43] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X43)))))) <=> ? [X12] : p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X43),s(X6,X8))),s(X15,X12)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.IN_RDOM')).
fof(f1927,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3))))))) )),
  inference(forward_demodulation,[],[f1613,f1316])).
fof(f1613,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.relation.RDOM_1'(s(fun(X0,fun(X1,bool)),X3)))))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X3),s(X0,X2))),s(X1,X4))))) )),
  inference(cnf_transformation,[],[f1067])).
fof(f1926,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,sK68(X3,X2,X1,X0)),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))))) | ~p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))) )),
  inference(forward_demodulation,[],[f1610,f1316])).
fof(f1610,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,sK68(X3,X2,X1,X0))))) | ~p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f1064])).
fof(f1064,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,sK68(X3,X2,X1,X0)))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4)))) | p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK68])],[f1063])).
fof(f1063,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) | ? [X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X5))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4)))) | p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))))),
  inference(rectify,[],[f1062])).
fof(f1062,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4)))) | p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f655])).
fof(f655,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4)))))),
  inference(flattening,[],[f654])).
fof(f654,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4)))))),
  inference(rectify,[],[f177])).
fof(f177,axiom,(
  ! [X6,X15] : ! [X43,X8] : (p(s(bool,'const.relation.RDOM_2'(s(fun(X6,fun(X15,bool)),X43),s(X6,X8)))) <=> ? [X12] : p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X43),s(X6,X8))),s(X15,X12)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.RDOM_DEF')).
fof(f1925,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))))) | p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))))) )),
  inference(forward_demodulation,[],[f1611,f1316])).
fof(f1611,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.relation.RDOM_2'(s(fun(X0,fun(X1,bool)),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4))))) )),
  inference(cnf_transformation,[],[f1064])).
fof(f1924,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,sK67(X3,X2,X1,X0))))))) | ~p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))) )),
  inference(forward_demodulation,[],[f1608,f1316])).
fof(f1608,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,sK67(X3,X2,X1,X0)))),s(X1,X3)))) | ~p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))) )),
  inference(cnf_transformation,[],[f1061])).
fof(f1061,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,sK67(X3,X2,X1,X0)))),s(X1,X3))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3)))) | p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK67])],[f1060])).
fof(f1060,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) | ? [X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X5))),s(X1,X3))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3)))) | p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))))),
  inference(rectify,[],[f1059])).
fof(f1059,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3))))) & (! [X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3)))) | p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))))),
  inference(nnf_transformation,[],[f653])).
fof(f653,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3)))))),
  inference(flattening,[],[f652])).
fof(f652,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) <=> ? [X4] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3)))))),
  inference(rectify,[],[f236])).
fof(f236,axiom,(
  ! [X6,X15] : ! [X43,X12] : (p(s(bool,'const.relation.RRANGE_2'(s(fun(X6,fun(X15,bool)),X43),s(X15,X12)))) <=> ? [X8] : p(s(bool,happ(s(fun(X15,bool),happ(s(fun(X6,fun(X15,bool)),X43),s(X6,X8))),s(X15,X12)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.RRANGE')).
fof(f1923,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4)))))) | p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))))) )),
  inference(forward_demodulation,[],[f1609,f1316])).
fof(f1609,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X3))))) )),
  inference(cnf_transformation,[],[f1061])).
fof(f1607,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK66(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK66(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f1058])).
fof(f1058,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK66(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK66(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK66])],[f789])).
fof(f789,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f651])).
fof(f651,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f650])).
fof(f650,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.pred_set.DELETE_EQ_SING',aHL_EXT)).
fof(f1606,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f649])).
fof(f649,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X2))),s(X1,X3)))),
  inference(flattening,[],[f648])).
fof(f648,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.relation.RRANGE_2'(s(fun(X0,fun(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RRANGE_1'(s(fun(X0,fun(X1,bool)),X2))),s(X1,X3)))),
  inference(rectify,[],[f235])).
fof(f235,axiom,(
  ! [X6,X15] : ! [X17,X18] : s(bool,'const.relation.RRANGE_2'(s(fun(X6,fun(X15,bool)),X17),s(X15,X18))) = s(bool,happ(s(fun(X15,bool),'const.relation.RRANGE_1'(s(fun(X6,fun(X15,bool)),X17))),s(X15,X18)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_1_2_const.relation.RRANGE')).
fof(f1605,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.relation.RDOM_2'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f647])).
fof(f647,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.relation.RDOM_2'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X2))),s(X1,X3)))),
  inference(flattening,[],[f646])).
fof(f646,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.relation.RDOM_2'(s(fun(X1,fun(X0,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.relation.RDOM_1'(s(fun(X1,fun(X0,bool)),X2))),s(X1,X3)))),
  inference(rectify,[],[f176])).
fof(f176,axiom,(
  ! [X15,X6] : ! [X17,X18] : s(bool,'const.relation.RDOM_2'(s(fun(X6,fun(X15,bool)),X17),s(X6,X18))) = s(bool,happ(s(fun(X6,bool),'const.relation.RDOM_1'(s(fun(X6,fun(X15,bool)),X17))),s(X6,X18)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_1_2_const.relation.RDOM')).
fof(f1603,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X2))) = s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X2)))))))) )),
  inference(cnf_transformation,[],[f643])).
fof(f643,plain,(
  ! [X0,X1,X2] : s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X2))) = s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X2)))))))),
  inference(flattening,[],[f642])).
fof(f642,plain,(
  ! [X0,X1] : ! [X2] : s(fun('type.pair.prod'(X0,X1),bool),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,bool)),X2))) = s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X0,X1),'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'const.pair.UNCURRY_1'(s(fun(X0,fun(X1,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(fun(X0,fun(X1,bool)),X2)))))))),
  inference(rectify,[],[f251])).
fof(f251,axiom,(
  ! [X6,X15] : ! [X20] : s(fun('type.pair.prod'(X6,X15),bool),'const.pair.UNCURRY_1'(s(fun(X6,fun(X15,bool)),X20))) = s(fun('type.pair.prod'(X6,X15),bool),'const.pred_set.GSPEC_1'(s(fun('type.pair.prod'(X6,X15),'type.pair.prod'('type.pair.prod'(X6,X15),bool)),'const.pair.UNCURRY_1'(s(fun(X6,fun(X15,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'_dst_x00x11x11_3'(s(fun('type.pair.prod'(X6,X15),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X15),bool))),'const.pair.,_0'),s(fun(X6,fun(X15,'type.pair.prod'(X6,X15))),'const.pair.,_0'),s(fun(X6,fun(X15,bool)),X20)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.GSPEC_PAIR_ETA')).
fof(f1589,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f1051])).
fof(f1051,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f635])).
fof(f635,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f634])).
fof(f634,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f250])).
fof(f250,axiom,(
  ! [X49,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X49),s('type.num.num',X51)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X51),s('type.num.num',X49)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.arithmetic.NOT_LESS')).
fof(f1590,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f1051])).
fof(f1579,plain,(
  ( ! [X0,X1] : (~sP2(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1049])).
fof(f1049,plain,(
  ! [X0,X1] : ((~sP2(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1)))),
  inference(rectify,[],[f1048])).
fof(f1048,plain,(
  ! [X1,X0] : ((~sP2(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP2(X1,X0)))),
  inference(flattening,[],[f1047])).
fof(f1047,plain,(
  ! [X1,X0] : ((~sP2(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP2(X1,X0)))),
  inference(nnf_transformation,[],[f804])).
fof(f804,plain,(
  ! [X1,X0] : (sP2(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f1580,plain,(
  ( ! [X0,X1] : (~sP2(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1049])).
fof(f1581,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP2(X0,X1)) )),
  inference(cnf_transformation,[],[f1049])).
fof(f1584,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP2(X0,X1)) )),
  inference(cnf_transformation,[],[f1049])).
fof(f1922,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f1564,f1837])).
fof(f1564,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f1042])).
fof(f1042,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP1(X0,X1)))),
  inference(flattening,[],[f1041])).
fof(f1041,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP1(X0,X1)))),
  inference(nnf_transformation,[],[f802])).
fof(f802,plain,(
  ! [X0,X1] : (sP1(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f1565,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f1042])).
fof(f1566,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f1042])).
fof(f1920,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))))))) )),
  inference(forward_demodulation,[],[f1550,f1316])).
fof(f1550,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1)))) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1034])).
fof(f1919,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))))))) )),
  inference(forward_demodulation,[],[f1551,f1316])).
fof(f1551,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(bool,X0))),s(bool,X1)))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1034])).
fof(f1918,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0)))))) | p(s(bool,X0))) )),
  inference(forward_demodulation,[],[f1546,f1316])).
fof(f1546,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | ~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1032])).
fof(f1032,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1)))) | (p(s(bool,X0)) & p(s(bool,X1)))) & (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1))))))),
  inference(flattening,[],[f1031])).
fof(f1031,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1)))) | (p(s(bool,X0)) & p(s(bool,X1)))) & ((~p(s(bool,X0)) | ~p(s(bool,X1))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1))))))),
  inference(nnf_transformation,[],[f622])).
fof(f622,plain,(
  ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1)))) <=> (p(s(bool,X0)) & p(s(bool,X1))))),
  inference(rectify,[],[f206])).
fof(f206,axiom,(
  ! [X40,X41] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X40))),s(bool,X41)))) <=> (p(s(bool,X40)) & p(s(bool,X41))))),
  file('thm.pred_set.DELETE_EQ_SING','|slash||bslash|_HL_0')).
fof(f1917,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0)))))) | p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1547,f1316])).
fof(f1547,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | ~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1032])).
fof(f1916,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))))))) )),
  inference(forward_demodulation,[],[f1548,f1316])).
fof(f1548,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(bool,X0))),s(bool,X1)))) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1032])).
fof(f1915,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'==>_1'(s(bool,X0))))))) )),
  inference(forward_demodulation,[],[f1543,f1316])).
fof(f1543,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1030])).
fof(f1030,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) | ~p(s(bool,X0)) | p(s(bool,X1))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1))))))),
  inference(flattening,[],[f1029])).
fof(f1029,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) | (~p(s(bool,X0)) | p(s(bool,X1)))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1))))))),
  inference(nnf_transformation,[],[f780])).
fof(f780,plain,(
  ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) <=> (~p(s(bool,X0)) | p(s(bool,X1))))),
  inference(ennf_transformation,[],[f621])).
fof(f621,plain,(
  ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) <=> (p(s(bool,X0)) => p(s(bool,X1))))),
  inference(rectify,[],[f231])).
fof(f231,axiom,(
  ! [X40,X41] : (p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X40))),s(bool,X41)))) <=> (p(s(bool,X40)) => p(s(bool,X41))))),
  file('thm.pred_set.DELETE_EQ_SING','==>_HL_1')).
fof(f1914,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'==>_1'(s(bool,X0)))))) | p(s(bool,X0))) )),
  inference(forward_demodulation,[],[f1544,f1316])).
fof(f1544,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1030])).
fof(f1913,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'==>_1'(s(bool,X0))))))) )),
  inference(forward_demodulation,[],[f1545,f1316])).
fof(f1545,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),'==>_1'(s(bool,X0))),s(bool,X1)))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1030])).
fof(f1814,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|or_2'(s(bool,X1),s(bool,X0)))) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(condensation,[],[f1536])).
fof(f1536,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,X3)) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1028])).
fof(f1028,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) | ! [X3] : ((p(s(bool,X0)) & ~p(s(bool,X3))) | (p(s(bool,X1)) & ~p(s(bool,X3))) | p(s(bool,X3)))) & (((~p(s(bool,X0)) | p(s(bool,sK65(X1,X0)))) & (~p(s(bool,X1)) | p(s(bool,sK65(X1,X0)))) & ~p(s(bool,sK65(X1,X0)))) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK65])],[f1027])).
fof(f1027,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) | ! [X3] : ((p(s(bool,X0)) & ~p(s(bool,X3))) | (p(s(bool,X1)) & ~p(s(bool,X3))) | p(s(bool,X3)))) & (? [X2] : ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))) & ~p(s(bool,X2))) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))))),
  inference(rectify,[],[f1026])).
fof(f1026,plain,(
  ! [X0,X1] : ((~p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) | ! [X2] : ((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2))) | p(s(bool,X2)))) & (? [X2] : ((~p(s(bool,X0)) | p(s(bool,X2))) & (~p(s(bool,X1)) | p(s(bool,X2))) & ~p(s(bool,X2))) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))))),
  inference(nnf_transformation,[],[f779])).
fof(f779,plain,(
  ! [X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) <=> ! [X2] : ((p(s(bool,X0)) & ~p(s(bool,X2))) | (p(s(bool,X1)) & ~p(s(bool,X2))) | p(s(bool,X2))))),
  inference(flattening,[],[f778])).
fof(f778,plain,(
  ! [X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) <=> ! [X2] : ((p(s(bool,X0)) & ~p(s(bool,X2))) | ((p(s(bool,X1)) & ~p(s(bool,X2))) | p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f620])).
fof(f620,plain,(
  ! [X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) <=> ! [X2] : ((p(s(bool,X0)) => p(s(bool,X2))) => ((p(s(bool,X1)) => p(s(bool,X2))) => p(s(bool,X2)))))),
  inference(rectify,[],[f230])).
fof(f230,axiom,(
  ! [X5,X21] : (p(s(bool,'|dollar|or_2'(s(bool,X5),s(bool,X21)))) <=> ! [X11] : ((p(s(bool,X5)) => p(s(bool,X11))) => ((p(s(bool,X21)) => p(s(bool,X11))) => p(s(bool,X11)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.OR_DEF')).
fof(f1912,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))) )),
  inference(subsumption_resolution,[],[f1540,f1542])).
fof(f1540,plain,(
  ( ! [X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) | p(s(bool,sK65(X1,X0))) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f1028])).
fof(f1911,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))) )),
  inference(subsumption_resolution,[],[f1541,f1542])).
fof(f1541,plain,(
  ( ! [X0,X1] : (p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1)))) | p(s(bool,sK65(X1,X0))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f1028])).
fof(f1542,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK65(X1,X0))) | p(s(bool,'|dollar|or_2'(s(bool,X0),s(bool,X1))))) )),
  inference(cnf_transformation,[],[f1028])).
fof(f1531,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f1025])).
fof(f1025,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f1024])).
fof(f1024,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & (((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f777])).
fof(f777,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0)))))),
  inference(ennf_transformation,[],[f619])).
fof(f619,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) => p(s(bool,X1))) & (p(s(bool,X1)) => p(s(bool,X0)))))),
  inference(rectify,[],[f149])).
fof(f149,axiom,(
  ! [X9,X10] : (s(bool,X9) = s(bool,X10) <=> ((p(s(bool,X9)) => p(s(bool,X10))) & (p(s(bool,X10)) => p(s(bool,X9)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.EQ_IMP_THM')).
fof(f1522,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f768])).
fof(f768,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f767])).
fof(f767,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f611])).
fof(f611,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.IMP_ANTISYM_AX')).
fof(f1525,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f768])).
fof(f1520,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))) | p(s(bool,'const.bool.IN_2'(s(X0,sK64(X4,X3,X2,X1,X0)),s(fun(X0,bool),X3)))) | s(fun(X0,bool),X3) != s(fun(X0,bool),X4)) )),
  inference(cnf_transformation,[],[f1023])).
fof(f1023,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | (p(s(bool,'const.bool.IN_2'(s(X0,sK64(X4,X3,X2,X1,X0)),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,sK64(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,sK64(X4,X3,X2,X1,X0))))) | s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK64])],[f766])).
fof(f766,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f765])).
fof(f765,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(ennf_transformation,[],[f610])).
fof(f610,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) = s(fun(X0,bool),X4) => (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f609])).
fof(f609,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s(fun(X0,bool),X3) = s(fun(X0,bool),X4) => (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(rectify,[],[f167])).
fof(f167,axiom,(
  ! [X6] : ! [X45,X22,X42,X20] : (s(fun(X6,bool),X20) = s(fun(X6,bool),X42) => (! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X42)))) => s(bool,happ(s(fun(X6,bool),X22),s(X6,X8))) = s(bool,happ(s(fun(X6,bool),X45),s(X6,X8)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X6,bool),X20),s(fun(X6,bool),X22))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X6,bool),X42),s(fun(X6,bool),X45)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_FORALL_CONG')).
fof(f1521,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))) | s(bool,happ(s(fun(X0,bool),X1),s(X0,sK64(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,sK64(X4,X3,X2,X1,X0)))) | s(fun(X0,bool),X3) != s(fun(X0,bool),X4)) )),
  inference(cnf_transformation,[],[f1023])).
fof(f1518,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))) | p(s(bool,'const.bool.IN_2'(s(X0,sK63(X4,X3,X2,X1,X0)),s(fun(X0,bool),X3)))) | s(fun(X0,bool),X3) != s(fun(X0,bool),X4)) )),
  inference(cnf_transformation,[],[f1022])).
fof(f1022,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | (p(s(bool,'const.bool.IN_2'(s(X0,sK63(X4,X3,X2,X1,X0)),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,sK63(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,sK63(X4,X3,X2,X1,X0))))) | s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK63])],[f764])).
fof(f764,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f763])).
fof(f763,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) != s(fun(X0,bool),X4) | (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) & s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(ennf_transformation,[],[f608])).
fof(f608,plain,(
  ! [X0,X1,X2,X3,X4] : (s(fun(X0,bool),X3) = s(fun(X0,bool),X4) => (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) => s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f607])).
fof(f607,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s(fun(X0,bool),X3) = s(fun(X0,bool),X4) => (! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X3)))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) => s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))))),
  inference(rectify,[],[f166])).
fof(f166,axiom,(
  ! [X6] : ! [X45,X22,X42,X20] : (s(fun(X6,bool),X20) = s(fun(X6,bool),X42) => (! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X42)))) => s(bool,happ(s(fun(X6,bool),X22),s(X6,X8))) = s(bool,happ(s(fun(X6,bool),X45),s(X6,X8)))) => s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X20),s(fun(X6,bool),X22))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X42),s(fun(X6,bool),X45)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_EXISTS_CONG')).
fof(f1519,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))) | s(bool,happ(s(fun(X0,bool),X1),s(X0,sK63(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X2),s(X0,sK63(X4,X3,X2,X1,X0)))) | s(fun(X0,bool),X3) != s(fun(X0,bool),X4)) )),
  inference(cnf_transformation,[],[f1022])).
fof(f1514,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK61(X3,X2,X1,X0))) | s(bool,'F_0') != s(bool,X1)) )),
  inference(cnf_transformation,[],[f1021])).
fof(f1516,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK62(X3,X2,X1,X0))) | s(bool,'T_0') != s(bool,X1)) )),
  inference(cnf_transformation,[],[f1021])).
fof(f1517,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.bool.COND_3'(s(bool,X1),s(X0,X2),s(X0,X3))) = s(X0,'const.min.@_1'(s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,sK62(X3,X2,X1,X0)))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'==>_1'(s(bool,sK61(X3,X2,X1,X0)))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X3)))))))))) )),
  inference(cnf_transformation,[],[f1021])).
fof(f1510,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK60(X3,X2,X1,X0))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f1018])).
fof(f1018,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK60(X3,X2,X1,X0))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,sK60(X3,X2,X1,X0)))) & s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,sK60(X3,X2,X1,X0)),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK60])],[f1017])).
fof(f1017,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,X4))) & s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,X4),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))))))))),
  inference(flattening,[],[f1016])).
fof(f1016,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,X4)))) & s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,X4),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))))))))),
  inference(nnf_transformation,[],[f604])).
fof(f604,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s(X0,X1) = s(X0,X2)) & s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,X4),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))))))))),
  inference(flattening,[],[f603])).
fof(f603,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s(X0,X1) = s(X0,X2)) & s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,X4),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))))))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6] : ! [X8,X12,X7] : ? [X13] : ((p(s(bool,X13)) <=> s(X6,X8) = s(X6,X12)) & s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(X6,X12))) = s(fun(X6,bool),'const.bool.COND_3'(s(bool,X13),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X12))),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X12))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_INSERT')).
fof(f1511,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,sK60(X3,X2,X1,X0))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f1018])).
fof(f1512,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))),s(X0,X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,sK60(X3,X2,X1,X0)),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2)))))))) )),
  inference(cnf_transformation,[],[f1018])).
fof(f1910,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3))))))))) )),
  inference(forward_demodulation,[],[f1507,f1316])).
fof(f1507,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3))))))))) )),
  inference(cnf_transformation,[],[f1015])).
fof(f1015,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) & s(X0,X1) = s(X0,X2))) & (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) | s(X0,X1) != s(X0,X2) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3))))))))))),
  inference(flattening,[],[f1014])).
fof(f1014,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) & s(X0,X1) = s(X0,X2))) & ((~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3))))))))))),
  inference(nnf_transformation,[],[f602])).
fof(f602,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) & s(X0,X1) = s(X0,X2)))),
  inference(flattening,[],[f601])).
fof(f601,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2)))) & s(X0,X1) = s(X0,X2)))),
  inference(rectify,[],[f186])).
fof(f186,axiom,(
  ! [X6] : ! [X25,X26,X20] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X6),happ(s(fun(X6,'type.pair.prod'(X6,X6)),happ(s(fun(X6,fun(X6,'type.pair.prod'(X6,X6))),'const.pair.,_0'),s(X6,X26))),s(X6,X25))),s(fun('type.pair.prod'(X6,X6),bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'('type.pair.prod'(X6,X6),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X6,X6),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X6),bool))),'const.pair.,_0'),s(fun(X6,'type.pair.prod'(X6,X6)),'_dst_x1x1_2'(s(fun(X6,fun(X6,'type.pair.prod'(X6,X6))),'const.pair.,_0'),s(fun(X6,X6),'_i_0_0'))),s(fun(X6,bool),X20)))))))) <=> (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X26)))) & s(X6,X25) = s(X6,X26)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PAIR_IN_GSPEC_same')).
fof(f1508,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,X2) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3))))))))) )),
  inference(cnf_transformation,[],[f1015])).
fof(f1909,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f1509,f1316])).
fof(f1509,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X0),happ(s(fun(X0,'type.pair.prod'(X0,X0)),happ(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(X0,X2))),s(X0,X1))),s(fun('type.pair.prod'(X0,X0),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X0),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X0),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X0),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X0)),'_dst_x1x1_2'(s(fun(X0,fun(X0,'type.pair.prod'(X0,X0))),'const.pair.,_0'),s(fun(X0,X0),'_i_0_0'))),s(fun(X0,bool),X3)))))))) | s(X0,X1) != s(X0,X2) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f1015])).
fof(f1505,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))))) | s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f1013])).
fof(f1013,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) | s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2)))))) & (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))))) | s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))),
  inference(nnf_transformation,[],[f600])).
fof(f600,plain,(
  ! [X0,X1,X2,X3] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) <=> s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(flattening,[],[f599])).
fof(f599,plain,(
  ! [X0] : ! [X1,X2,X3] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) <=> s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X6] : ! [X7,X8,X16] : (s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))) = s(bool,'const.bool.IN_2'(s(X6,X16),s(fun(X6,bool),X7))) <=> s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X16))))) = s(bool,'const.bool.IN_2'(s(X6,X16),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_DELETE_EQ')).
fof(f1506,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) | s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2)))))) )),
  inference(cnf_transformation,[],[f1013])).
fof(f1502,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f1012])).
fof(f1012,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(flattening,[],[f1011])).
fof(f1011,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(nnf_transformation,[],[f598])).
fof(f598,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f597])).
fof(f597,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) | p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_UNION')).
fof(f1503,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f1012])).
fof(f1504,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f1012])).
fof(f1499,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))))))) )),
  inference(cnf_transformation,[],[f1010])).
fof(f1010,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) | (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) & (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))))))))),
  inference(flattening,[],[f1009])).
fof(f1009,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) | (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))))))))),
  inference(nnf_transformation,[],[f596])).
fof(f596,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) <=> (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f595])).
fof(f595,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) <=> (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X6] : ! [X8,X7,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X11),s(X6,X8)))))) <=> (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_DELETE')).
fof(f1500,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1010])).
fof(f1501,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f1010])).
fof(f1496,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f1008])).
fof(f1008,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))))),
  inference(flattening,[],[f1007])).
fof(f1007,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))))),
  inference(nnf_transformation,[],[f594])).
fof(f594,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f593])).
fof(f593,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X6] : ! [X8,X7,X11] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X11),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7)))))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X11),s(fun(X6,bool),X7)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_INSERT|39|')).
fof(f1497,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f1008])).
fof(f1498,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f1008])).
fof(f1493,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1006])).
fof(f1006,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f1005])).
fof(f1005,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f592])).
fof(f592,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f591])).
fof(f591,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X6] : ! [X8,X7,X11] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_INSERT')).
fof(f1494,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1006])).
fof(f1495,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1006])).
fof(f1490,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f1004])).
fof(f1004,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(flattening,[],[f1003])).
fof(f1003,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(nnf_transformation,[],[f590])).
fof(f590,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f589])).
fof(f589,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_DIFF')).
fof(f1491,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f1004])).
fof(f1492,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f1004])).
fof(f1487,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1002])).
fof(f1002,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f1001])).
fof(f1001,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f588])).
fof(f588,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f587])).
fof(f587,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f101])).
fof(f101,axiom,(
  ! [X6] : ! [X8,X7,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11)))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_SUBSET')).
fof(f1488,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1002])).
fof(f1489,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f1002])).
fof(f1484,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f1000])).
fof(f1000,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(flattening,[],[f999])).
fof(f999,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))))),
  inference(nnf_transformation,[],[f586])).
fof(f586,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f585])).
fof(f585,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_INTER')).
fof(f1485,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f1000])).
fof(f1486,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f1000])).
fof(f1481,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | s(X0,X1) = s(X0,X2) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))) )),
  inference(cnf_transformation,[],[f998])).
fof(f998,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))))),
  inference(flattening,[],[f997])).
fof(f997,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))))),
  inference(nnf_transformation,[],[f584])).
fof(f584,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f583])).
fof(f583,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X8,X12,X7] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X12),s(fun(X6,bool),X7)))))) <=> (s(X6,X8) = s(X6,X12) | p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_INSERT')).
fof(f1482,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f998])).
fof(f1483,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))) )),
  inference(cnf_transformation,[],[f998])).
fof(f1478,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f996])).
fof(f996,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,X3) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))))))),
  inference(flattening,[],[f995])).
fof(f995,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,X3)) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))))))))),
  inference(nnf_transformation,[],[f582])).
fof(f582,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3)))),
  inference(flattening,[],[f581])).
fof(f581,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & ~s(X0,X2) = s(X0,X3)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7,X8,X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X12)))))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & ~s(X6,X8) = s(X6,X12)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_DELETE')).
fof(f1479,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) | s(X0,X2) != s(X0,X3)) )),
  inference(cnf_transformation,[],[f996])).
fof(f1480,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3)))))) | s(X0,X2) = s(X0,X3) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f996])).
fof(f1475,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f994])).
fof(f994,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f993])).
fof(f993,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f580])).
fof(f580,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f579])).
fof(f579,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f194])).
fof(f194,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.pred_set.UNION_3'(s(fun(X6,bool),X7),s(fun(X6,bool),X11),s(X6,X8)))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) | p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNION_applied')).
fof(f1476,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f994])).
fof(f1477,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f994])).
fof(f1472,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f992])).
fof(f992,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f991])).
fof(f991,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f578])).
fof(f578,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f577])).
fof(f577,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f188])).
fof(f188,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.pred_set.DIFF_3'(s(fun(X6,bool),X7),s(fun(X6,bool),X11),s(X6,X8)))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_applied')).
fof(f1473,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f992])).
fof(f1474,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f992])).
fof(f1469,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f990])).
fof(f990,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f989])).
fof(f989,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f576])).
fof(f576,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f575])).
fof(f575,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f189])).
fof(f189,axiom,(
  ! [X6] : ! [X7,X11,X8] : (p(s(bool,'const.pred_set.INTER_3'(s(fun(X6,bool),X7),s(fun(X6,bool),X11),s(X6,X8)))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INTER_applied')).
fof(f1470,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f990])).
fof(f1471,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f990])).
fof(f1466,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f988])).
fof(f988,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1))))))),
  inference(flattening,[],[f987])).
fof(f987,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) | (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1))))))),
  inference(nnf_transformation,[],[f574])).
fof(f574,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f573])).
fof(f573,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f179])).
fof(f179,axiom,(
  ! [X6] : ! [X8,X12,X7] : (p(s(bool,'const.pred_set.INSERT_3'(s(X6,X12),s(fun(X6,bool),X7),s(X6,X8)))) <=> (s(X6,X8) = s(X6,X12) | p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_applied')).
fof(f1467,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f988])).
fof(f1468,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),X3),s(X0,X1))))) )),
  inference(cnf_transformation,[],[f988])).
fof(f1463,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f986])).
fof(f986,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,X3) | p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2))))))),
  inference(flattening,[],[f985])).
fof(f985,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3))) & ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,X3)) | p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2))))))),
  inference(nnf_transformation,[],[f572])).
fof(f572,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & s(X0,X2) != s(X0,X3)))),
  inference(flattening,[],[f571])).
fof(f571,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) <=> (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) & ~s(X0,X2) = s(X0,X3)))),
  inference(rectify,[],[f178])).
fof(f178,axiom,(
  ! [X6] : ! [X7,X8,X12] : (p(s(bool,'const.pred_set.DELETE_3'(s(fun(X6,bool),X7),s(X6,X12),s(X6,X8)))) <=> (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & ~s(X6,X8) = s(X6,X12)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_applied')).
fof(f1464,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2)))) | s(X0,X2) != s(X0,X3)) )),
  inference(cnf_transformation,[],[f986])).
fof(f1465,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,X3) | p(s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X3),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f986])).
fof(f1460,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) | s(X0,X2) = s(X0,X3)) )),
  inference(cnf_transformation,[],[f984])).
fof(f984,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) | (s(X0,X2) = s(X0,X3) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))))) & (s(X0,X2) != s(X0,X3) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3))))))),
  inference(flattening,[],[f983])).
fof(f983,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) | (s(X0,X2) = s(X0,X3) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))))) & ((s(X0,X2) != s(X0,X3) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) | p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f570])).
fof(f570,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) <=> (s(X0,X2) = s(X0,X3) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(flattening,[],[f569])).
fof(f569,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) <=> (s(X0,X2) = s(X0,X3) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f184])).
fof(f184,axiom,(
  ! [X6] : ! [X50,X8,X12] : (p(s(bool,'const.relation.diag_3'(s(fun(X6,bool),X50),s(X6,X8),s(X6,X12)))) <=> (s(X6,X8) = s(X6,X12) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X50))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.relation.diag_def')).
fof(f1461,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f984])).
fof(f1462,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.relation.diag_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3)))) | s(X0,X2) != s(X0,X3)) )),
  inference(cnf_transformation,[],[f984])).
fof(f1459,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))) )),
  inference(cnf_transformation,[],[f568])).
fof(f568,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))),
  inference(flattening,[],[f567])).
fof(f567,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))),s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))),
  inference(rectify,[],[f112])).
fof(f112,axiom,(
  ! [X6] : ! [X8,X7,X11] : s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))),s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_INTER')).
fof(f1908,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))))) )),
  inference(forward_demodulation,[],[f1458,f1456])).
fof(f1458,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))))) )),
  inference(cnf_transformation,[],[f566])).
fof(f566,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f565])).
fof(f565,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))))))),
  inference(rectify,[],[f113])).
fof(f113,axiom,(
  ! [X6] : ! [X8,X7,X11] : s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_UNION')).
fof(f1457,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))))) )),
  inference(cnf_transformation,[],[f564])).
fof(f564,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))))),
  inference(flattening,[],[f563])).
fof(f563,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X6] : ! [X7,X11,X8] : s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.bool.COND_3'(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))),s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_DIFF')).
fof(f1456,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) )),
  inference(cnf_transformation,[],[f562])).
fof(f562,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))),
  inference(flattening,[],[f561])).
fof(f561,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X6] : ! [X8,X7,X11] : s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_UNION_EQ')).
fof(f1455,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f560])).
fof(f560,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f559])).
fof(f559,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X6] : ! [X7,X11,X8] : s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))),s(X6,X8))) = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_INTER')).
fof(f1454,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X2))))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f558])).
fof(f558,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X2))))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f557])).
fof(f557,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X2))))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : ! [X7,X11,X8] : s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X11))))) = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_INSERT')).
fof(f1453,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f556])).
fof(f556,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(X0,X1)))),
  inference(flattening,[],[f555])).
fof(f555,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X2))),s(X0,X1)))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6] : ! [X8,X12,X7] : s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(X6,X12))) = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X12))),s(X6,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_COMM')).
fof(f1452,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3)))))) )),
  inference(cnf_transformation,[],[f554])).
fof(f554,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3)))))),
  inference(flattening,[],[f553])).
fof(f553,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3)))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X6] : ! [X8,X12,X7] : s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X12),s(fun(X6,bool),X7))))) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_COMM')).
fof(f1907,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(backward_demodulation,[],[f1451,f1315])).
fof(f1451,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X3)))) )),
  inference(cnf_transformation,[],[f552])).
fof(f552,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X3)))),
  inference(flattening,[],[f551])).
fof(f551,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X3)))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X6] : ! [X8,X7,X11] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X11))))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_INSERT_DELETE')).
fof(f1450,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X3))),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f550])).
fof(f550,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X3))),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f549])).
fof(f549,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X3))),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X3))),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f74])).
fof(f74,axiom,(
  ! [X6] : ! [X7,X11,X8] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(fun(X6,bool),X11))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X11),s(X6,X8))),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_DELETE_SYM')).
fof(f1449,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f548])).
fof(f548,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(flattening,[],[f547])).
fof(f547,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.UNION_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(rectify,[],[f213])).
fof(f213,axiom,(
  ! [X6] : ! [X17,X18,X19] : s(bool,'const.pred_set.UNION_3'(s(fun(X6,bool),X17),s(fun(X6,bool),X18),s(X6,X19))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X17),s(fun(X6,bool),X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.pred_set.UNION')).
fof(f1448,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f546])).
fof(f546,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(flattening,[],[f545])).
fof(f545,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(rectify,[],[f207])).
fof(f207,axiom,(
  ! [X6] : ! [X17,X18,X19] : s(bool,'const.pred_set.DIFF_3'(s(fun(X6,bool),X17),s(fun(X6,bool),X18),s(X6,X19))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X17),s(fun(X6,bool),X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.pred_set.DIFF')).
fof(f1447,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f544])).
fof(f544,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(flattening,[],[f543])).
fof(f543,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.INTER_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(rectify,[],[f208])).
fof(f208,axiom,(
  ! [X6] : ! [X17,X18,X19] : s(bool,'const.pred_set.INTER_3'(s(fun(X6,bool),X17),s(fun(X6,bool),X18),s(X6,X19))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X17),s(fun(X6,bool),X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.pred_set.INTER')).
fof(f1446,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f542])).
fof(f542,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))),s(X0,X3)))),
  inference(flattening,[],[f541])).
fof(f541,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.DELETE_3'(s(fun(X0,bool),X1),s(X0,X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))),s(X0,X3)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6] : ! [X17,X18,X19] : s(bool,'const.pred_set.DELETE_3'(s(fun(X6,bool),X17),s(X6,X18),s(X6,X19))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X17),s(X6,X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.pred_set.DELETE')).
fof(f1445,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.INSERT_3'(s(X0,X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f540])).
fof(f540,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.INSERT_3'(s(X0,X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(flattening,[],[f539])).
fof(f539,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.pred_set.INSERT_3'(s(X0,X1),s(fun(X0,bool),X2),s(X0,X3))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(X0,X3)))),
  inference(rectify,[],[f104])).
fof(f104,axiom,(
  ! [X6] : ! [X17,X18,X19] : s(bool,'const.pred_set.INSERT_3'(s(X6,X17),s(fun(X6,bool),X18),s(X6,X19))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X17),s(fun(X6,bool),X18))),s(X6,X19)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_2_3_const.pred_set.INSERT')).
fof(f1443,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f536])).
fof(f536,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f535])).
fof(f535,plain,(
  ! [X0] : ! [X1,X2] : ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X6] : ! [X8,X7] : ~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NOT_EMPTY_INSERT')).
fof(f1906,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK57(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1905,f1316])).
fof(f1905,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK57(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8))))) )),
  inference(forward_demodulation,[],[f1904,f1316])).
fof(f1904,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK57(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8))))) )),
  inference(forward_demodulation,[],[f1439,f1316])).
fof(f1439,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK58(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK57(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8))))) )),
  inference(cnf_transformation,[],[f982])).
fof(f982,plain,(
  ! [X0,X1,X2] : ((! [X8] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK57(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK58(X2,X1,X0)))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK59(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK59(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK57,sK58,sK59])],[f981])).
fof(f981,plain,(
  ! [X0,X1,X2] : ((! [X8] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) | ? [X7] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X7)))) | ? [X6] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f980])).
fof(f980,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f979])).
fof(f979,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f534])).
fof(f534,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f533])).
fof(f533,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f243])).
fof(f243,axiom,(
  ! [X6] : ! [X20,X42] : (? [X8] : (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) | p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))) <=> (? [X8] : p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) | ? [X8] : p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.EXISTS_OR_THM')).
fof(f1903,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK57(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1902,f1316])).
fof(f1902,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK57(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) )),
  inference(forward_demodulation,[],[f1901,f1316])).
fof(f1901,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK58(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK57(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) )),
  inference(forward_demodulation,[],[f1440,f1316])).
fof(f1440,plain,(
  ( ! [X2,X0,X8,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK58(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK57(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) )),
  inference(cnf_transformation,[],[f982])).
fof(f1900,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1899,f1316])).
fof(f1899,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) )),
  inference(forward_demodulation,[],[f1898,f1316])).
fof(f1898,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK59(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) )),
  inference(forward_demodulation,[],[f1441,f1316])).
fof(f1441,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK59(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK59(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f982])).
fof(f1897,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1896,f1316])).
fof(f1896,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) )),
  inference(forward_demodulation,[],[f1895,f1316])).
fof(f1895,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK59(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK59(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) )),
  inference(forward_demodulation,[],[f1442,f1316])).
fof(f1442,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK59(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK59(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f982])).
fof(f1892,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,sK56(X2,X1,X0))) )),
  inference(forward_demodulation,[],[f1437,f1316])).
fof(f1437,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK56(X2,X1,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f978])).
fof(f978,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK56(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK56(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK56])],[f977])).
fof(f977,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f976])).
fof(f976,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f532])).
fof(f532,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f531])).
fof(f531,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X6] : ! [X20,X26] : (? [X8] : (s(X6,X8) = s(X6,X26) & p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8))))) <=> p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X26)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.UNWIND_THM2')).
fof(f1891,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK56(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f1890,f1316])).
fof(f1890,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK56(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f1438,f1316])).
fof(f1438,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK56(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f978])).
fof(f1432,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK53(X2,X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f975,plain,(
  ! [X0,X1,X2] : ((! [X8] : ~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X1)))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK53(X2,X1,X0)),s(fun(X0,bool),X1)))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,sK53(X2,X1,X0)))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X7))))))))) & (! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK54(X4,X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,sK54(X4,X2,X1,X0))))))))) | p(s(bool,'const.bool.IN_2'(s(X0,sK55(X2,X1,X0)),s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK53,sK54,sK55])],[f974])).
fof(f974,plain,(
  ! [X0,X1,X2] : ((! [X8] : ~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X1)))) | ? [X6] : (p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X1)))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X6))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X7))))))))) & (! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5)))))))) | ? [X3] : p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f973])).
fof(f973,plain,(
  ! [X0,X1,X2] : ((! [X3] : ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5))))))))) & (! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5)))))))) | ? [X3] : p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f762])).
fof(f762,plain,(
  ! [X0,X1,X2] : (? [X3] : p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) <=> ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5)))))))))),
  inference(ennf_transformation,[],[f530])).
fof(f530,plain,(
  ! [X0,X1,X2] : (? [X3] : p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) <=> ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5)))))))))),
  inference(flattening,[],[f529])).
fof(f529,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) <=> ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X5)))))))))),
  inference(rectify,[],[f201])).
fof(f201,axiom,(
  ! [X6] : ! [X7,X52] : (? [X8] : p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> ? [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & ! [X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X7)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X6,'type.num.num'),X52),s(X6,X8))),s('type.num.num',happ(s(fun(X6,'type.num.num'),X52),s(X6,X12)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SET_MINIMUM')).
fof(f1816,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X3),s(X0,sK53(X3,X2,X0)))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X3),s(X0,X1))))))) )),
  inference(condensation,[],[f1433])).
fof(f1433,plain,(
  ( ! [X2,X0,X8,X7,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,sK53(X2,X1,X0)))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X7)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X8),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f1434,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK55(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK54(X4,X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f1435,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK55(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,X4))),s('type.num.num',happ(s(fun(X0,'type.num.num'),X2),s(X0,sK54(X4,X2,X1,X0))))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f975])).
fof(f1889,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,sK52(X2,X1,X0))) )),
  inference(forward_demodulation,[],[f1429,f1316])).
fof(f1429,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK52(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f972])).
fof(f972,plain,(
  ! [X0,X1,X2] : (((s(X0,X2) = s(X0,sK52(X2,X1,X0)) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK52(X2,X1,X0)))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK52])],[f971])).
fof(f971,plain,(
  ! [X0,X1,X2] : ((? [X4] : (s(X0,X2) = s(X0,X4) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f970])).
fof(f970,plain,(
  ! [X0,X1,X2] : ((? [X3] : (s(X0,X2) = s(X0,X3) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f761])).
fof(f761,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(ennf_transformation,[],[f528])).
fof(f528,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f527])).
fof(f527,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f151])).
fof(f151,axiom,(
  ! [X6] : ! [X22,X23] : (! [X8] : (s(X6,X8) = s(X6,X23) => p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X8))))) <=> p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X23)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.UNWIND_FORALL_THM2')).
fof(f1888,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK52(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f1887,f1316])).
fof(f1887,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK52(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1430,f1316])).
fof(f1430,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK52(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f972])).
fof(f1886,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(X0,X2) != s(X0,X3)) )),
  inference(forward_demodulation,[],[f1885,f1316])).
fof(f1885,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f1431,f1316])).
fof(f1431,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f972])).
fof(f1884,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK50(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1883,f1316])).
fof(f1883,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK50(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1425,f1316])).
fof(f1425,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK50(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f969])).
fof(f969,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK50(X2,X1,X0))))) & ~p(s(bool,X1))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1))) & ((~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK51(X2,X1,X0))))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK50,sK51])],[f968])).
fof(f968,plain,(
  ! [X0,X1,X2] : ((? [X6] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) & ~p(s(bool,X1))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(rectify,[],[f967])).
fof(f967,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,X1))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(flattening,[],[f966])).
fof(f966,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & ~p(s(bool,X1))) | (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1)))) & ((? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & ~p(s(bool,X1))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)))))),
  inference(nnf_transformation,[],[f526])).
fof(f526,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1))) <=> (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))))),
  inference(flattening,[],[f525])).
fof(f525,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1))) <=> (! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,X1))))),
  inference(rectify,[],[f220])).
fof(f220,axiom,(
  ! [X6] : ! [X42,X20] : (! [X8] : (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) | p(s(bool,X42))) <=> (! [X8] : p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) | p(s(bool,X42))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.LEFT_FORALL_OR_THM')).
fof(f1882,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK51(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1881,f1316])).
fof(f1881,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK51(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1427,f1316])).
fof(f1427,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK51(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f969])).
fof(f1880,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK48(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1879,f1316])).
fof(f1879,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK48(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1422,f1316])).
fof(f1422,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK48(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f965])).
fof(f965,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK48(X2,X1,X0)))))) | p(s(bool,X1)) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ((~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK49(X2,X1,X0)))))) | ! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK48,sK49])],[f964])).
fof(f964,plain,(
  ! [X0,X1,X2] : ((? [X6] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) | p(s(bool,X1)) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ((~p(s(bool,X1)) & ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f963])).
fof(f963,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,X1)) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ((~p(s(bool,X1)) & ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f962])).
fof(f962,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,X1)) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (p(s(bool,X1)) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((~p(s(bool,X1)) & ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f524])).
fof(f524,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (p(s(bool,X1)) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f523])).
fof(f523,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,X1)) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (p(s(bool,X1)) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f221])).
fof(f221,axiom,(
  ! [X6] : ! [X20,X42] : (! [X8] : (p(s(bool,X20)) | p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))) <=> (p(s(bool,X20)) | ! [X8] : p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RIGHT_FORALL_OR_THM')).
fof(f1878,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK49(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1877,f1316])).
fof(f1877,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK49(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1424,f1316])).
fof(f1424,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK49(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f965])).
fof(f1876,plain,(
  ( ! [X2,X0,X7,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f1875,f1316])).
fof(f1875,plain,(
  ( ! [X2,X0,X7,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1874,f1316])).
fof(f1874,plain,(
  ( ! [X2,X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X7),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK45(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1417,f1316])).
fof(f1417,plain,(
  ( ! [X2,X0,X7,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X7)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK45(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f961])).
fof(f961,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK45(X2,X1,X0)))))) | (! [X7] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X7)))) & ! [X6] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK47(X2,X1,X0))))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46,sK47])],[f960])).
fof(f960,plain,(
  ! [X0,X1,X2] : ((? [X8] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) | (! [X7] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X7)))) & ! [X6] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))))) & (? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f959])).
fof(f959,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f958])).
fof(f958,plain,(
  ! [X0,X1,X2] : ((? [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f522])).
fof(f522,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f521])).
fof(f521,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f152])).
fof(f152,axiom,(
  ! [X6] : ! [X20,X42] : (! [X8] : (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) & p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))) <=> (! [X8] : p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) & ! [X8] : p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.FORALL_AND_THM')).
fof(f1873,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1872,f1316])).
fof(f1872,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK45(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1871,f1316])).
fof(f1871,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X6),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK45(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1418,f1316])).
fof(f1418,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK45(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f961])).
fof(f1870,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK46(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK47(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f1869,f1316])).
fof(f1869,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK47(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1868,f1316])).
fof(f1868,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK47(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1419,f1316])).
fof(f1419,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK47(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f961])).
fof(f1867,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK46(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK47(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1866,f1316])).
fof(f1866,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK47(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1865,f1316])).
fof(f1865,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK47(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1420,f1316])).
fof(f1420,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK47(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f961])).
fof(f1416,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f957])).
fof(f957,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))) & (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f520])).
fof(f520,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ! [X0] : ! [X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X8,X7] : (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_NON_ELEMENT')).
fof(f1411,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f956])).
fof(f956,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ((~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1))))) & (p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X2))))))) & (! [X3] : ((p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK44])],[f955])).
fof(f955,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ? [X4] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))))) & (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2))))))) & (! [X3] : ((p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)))),
  inference(rectify,[],[f954])).
fof(f954,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ? [X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) & (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))) & (! [X3] : ((p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) & (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)))),
  inference(nnf_transformation,[],[f518])).
fof(f518,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),X1) != s(fun(X0,bool),X2) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))),
  inference(flattening,[],[f517])).
fof(f517,plain,(
  ! [X0] : ! [X1,X2] : (~s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f145])).
fof(f145,axiom,(
  ! [X6] : ! [X7,X11] : (~s(fun(X6,bool),X7) = s(fun(X6,bool),X11) <=> ? [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11)))) <=> ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NOT_EQUAL_SETS')).
fof(f1412,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK44(X2,X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f956])).
fof(f1414,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f956])).
fof(f1864,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK42(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) | ~p(s(bool,X2))) )),
  inference(forward_demodulation,[],[f1863,f1316])).
fof(f1863,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X1)))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK42(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1407,f1316])).
fof(f1407,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK42(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f953])).
fof(f953,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK42(X2,X1,X0))))) | ~p(s(bool,X2)) | ! [X5] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & ((~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK43(X2,X1,X0))))) | ~p(s(bool,X2))) | (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42,sK43])],[f952])).
fof(f952,plain,(
  ! [X0,X1,X2] : ((? [X6] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2)) | ! [X5] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f951])).
fof(f951,plain,(
  ! [X0,X1,X2] : ((? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2)) | ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f950])).
fof(f950,plain,(
  ! [X0,X1,X2] : (((? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f516])).
fof(f516,plain,(
  ! [X0,X1,X2] : ((! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f515])).
fof(f515,plain,(
  ! [X0] : ! [X1,X2] : ((! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f218])).
fof(f218,axiom,(
  ! [X6] : ! [X20,X42] : ((! [X8] : p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) & p(s(bool,X42))) <=> ! [X8] : (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) & p(s(bool,X42))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.LEFT_AND_FORALL_THM')).
fof(f1862,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK43(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,X2))) )),
  inference(forward_demodulation,[],[f1861,f1316])).
fof(f1861,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK43(X2,X1,X0)))))) )),
  inference(forward_demodulation,[],[f1409,f1316])).
fof(f1409,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK43(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f953])).
fof(f1860,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK40(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | ~p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1859,f1316])).
fof(f1859,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK40(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1404,f1316])).
fof(f1404,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK40(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f949])).
fof(f949,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK40(X2,X1,X0))))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK41(X2,X1,X0)))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK40,sK41])],[f948])).
fof(f948,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X6] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f947])).
fof(f947,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f946])).
fof(f946,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f514])).
fof(f514,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f513])).
fof(f513,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f219])).
fof(f219,axiom,(
  ! [X6] : ! [X20,X42] : ((p(s(bool,X20)) & ! [X8] : p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))) <=> ! [X8] : (p(s(bool,X20)) & p(s(bool,happ(s(fun(X6,bool),X42),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RIGHT_AND_FORALL_THM')).
fof(f1858,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK41(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1857,f1316])).
fof(f1857,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK41(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(forward_demodulation,[],[f1406,f1316])).
fof(f1406,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK41(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f949])).
fof(f1401,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f945])).
fof(f945,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(nnf_transformation,[],[f512])).
fof(f512,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f511])).
fof(f511,plain,(
  ! [X0] : ! [X1,X2] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : ! [X8,X12] : (s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.EMPTY_0'))) <=> s(X6,X8) = s(X6,X12))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EQUAL_SING')).
fof(f1402,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f945])).
fof(f1398,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f944])).
fof(f944,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f943])).
fof(f943,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2))) & ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2)) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))))),
  inference(nnf_transformation,[],[f510])).
fof(f510,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) <=> (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)))),
  inference(flattening,[],[f509])).
fof(f509,plain,(
  ! [X0] : ! [X1,X2] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) <=> (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)))),
  inference(rectify,[],[f129])).
fof(f129,axiom,(
  ! [X6] : ! [X7,X11] : (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) <=> (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) & s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_UNION')).
fof(f1399,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f944])).
fof(f1400,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f944])).
fof(f1396,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f942])).
fof(f942,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))))),
  inference(nnf_transformation,[],[f508])).
fof(f508,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f507])).
fof(f507,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X8,X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.EMPTY_0')))))) <=> s(X6,X8) = s(X6,X12))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_SING')).
fof(f1397,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f942])).
fof(f1856,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))) )),
  inference(subsumption_resolution,[],[f1389,f1386])).
fof(f1389,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f941,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) | sP0(X0,X1,X2)) & (((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) & (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2)) & ~sP0(X0,X1,X2)) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))))),
  inference(flattening,[],[f940])).
fof(f940,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) | ((p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) | sP0(X0,X1,X2))) & (((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) & (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2)) & ~sP0(X0,X1,X2)) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))))),
  inference(nnf_transformation,[],[f801])).
fof(f801,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) <=> ((p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) | sP0(X0,X1,X2)))),
  inference(definition_folding,[],[f506,f800])).
fof(f800,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f506,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) <=> ((p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),X1) = s(fun(X0,bool),X2))))),
  inference(flattening,[],[f505])).
fof(f505,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) <=> ((p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),X1) = s(fun(X0,bool),X2))))),
  inference(rectify,[],[f125])).
fof(f125,axiom,(
  ! [X6] : ! [X11,X7] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))))) <=> ((p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),X7)))) & s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X11)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),X11)))) & s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7)) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),X7)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),X11)))) & s(fun(X6,bool),X7) = s(fun(X6,bool),X11))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_UNION')).
fof(f1855,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(subsumption_resolution,[],[f1390,f1386])).
fof(f1390,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1854,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(subsumption_resolution,[],[f1391,f1385])).
fof(f1391,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1392,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1393,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1394,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1395,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X1,X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f941])).
fof(f1385,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X1,X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f939])).
fof(f939,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),X1) = s(fun(X0,bool),X2))) & (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | sP0(X0,X1,X2)))),
  inference(flattening,[],[f938])).
fof(f938,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) & s(fun(X0,bool),X1) = s(fun(X0,bool),X2))) & ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) | sP0(X0,X1,X2)))),
  inference(nnf_transformation,[],[f800])).
fof(f1386,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X1,X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f939])).
fof(f1387,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X1,X2) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f939])).
fof(f1388,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f939])).
fof(f1382,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f937])).
fof(f937,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) & ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) & s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))))),
  inference(flattening,[],[f936])).
fof(f936,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) & ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) & s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))))),
  inference(nnf_transformation,[],[f504])).
fof(f504,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) <=> (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(flattening,[],[f503])).
fof(f503,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) <=> (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7)))))) <=> (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) | s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0')))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_INSERT')).
fof(f1383,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X2) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f937])).
fof(f1384,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) | p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f937])).
fof(f1380,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f935])).
fof(f935,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1))))))),
  inference(nnf_transformation,[],[f502])).
fof(f502,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f501])).
fof(f501,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f169])).
fof(f169,axiom,(
  ! [X6] : ! [X8,X12] : (p(s(bool,'const.pred_set.INSERT_3'(s(X6,X12),s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(X6,X8)))) <=> s(X6,X8) = s(X6,X12))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING_applied')).
fof(f1381,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.INSERT_3'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f935])).
fof(f1377,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK39(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f934])).
fof(f934,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (~p(s(bool,'const.bool.IN_2'(s(X0,sK39(X2,X1,X0)),s(fun(X0,bool),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK39(X2,X1,X0)),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))))) & (! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK39])],[f933])).
fof(f933,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X4),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))))) & (! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f932])).
fof(f932,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))))) & (! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f500])).
fof(f500,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f499])).
fof(f499,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> ? [X8] : (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PSUBSET_INSERT_SUBSET')).
fof(f1378,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK39(X2,X1,X0)),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f934])).
fof(f1379,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X3),s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f934])).
fof(f1374,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK38(X2,X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f931])).
fof(f931,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK38(X2,X1,X0)),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK38(X2,X1,X0))))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK38])],[f930])).
fof(f930,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f929])).
fof(f929,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f498])).
fof(f498,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f497])).
fof(f497,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f80])).
fof(f80,axiom,(
  ! [X6] : ! [X5,X21] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X5),s(fun(X6,bool),X21)))) <=> ? [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X5)))) & p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_EXISTS_DEF')).
fof(f1853,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK38(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1375,f1316])).
fof(f1375,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK38(X2,X1,X0))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f931])).
fof(f1371,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK37(X2,X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f928])).
fof(f928,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK37(X2,X1,X0)),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK37(X2,X1,X0))))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37])],[f927])).
fof(f927,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f926])).
fof(f926,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f496])).
fof(f496,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f495])).
fof(f495,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f195])).
fof(f195,axiom,(
  ! [X6] : ! [X20,X22] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X20),s(fun(X6,bool),X22)))) <=> ? [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X20)))) & p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_EXISTS_THM')).
fof(f1851,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK37(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1372,f1316])).
fof(f1372,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK37(X2,X1,X0))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f928])).
fof(f1850,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1373,f1316])).
fof(f1373,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f928])).
fof(f1368,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f925])).
fof(f925,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK36(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK36(X2,X1,X0)),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK36])],[f924])).
fof(f924,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f923])).
fof(f923,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f760])).
fof(f760,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f494])).
fof(f494,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f493])).
fof(f493,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> ! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_DEF')).
fof(f1369,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK36(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f925])).
fof(f1370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK36(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f925])).
fof(f1366,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK35(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f922])).
fof(f922,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK35(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK35(X2,X1,X0)))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK35])],[f921])).
fof(f921,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f920])).
fof(f920,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f759])).
fof(f759,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(ennf_transformation,[],[f492])).
fof(f492,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f491])).
fof(f491,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f198])).
fof(f198,axiom,(
  ! [X6] : ! [X20,X22] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X6,bool),X20),s(fun(X6,bool),X22)))) <=> ! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X20)))) => p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_FORALL_THM')).
fof(f1848,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK35(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1367,f1316])).
fof(f1367,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK35(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f922])).
fof(f1847,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1362,f1316])).
fof(f1362,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f919])).
fof(f919,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK34(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK34(X2,X1,X0)))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK34])],[f918])).
fof(f918,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f917])).
fof(f917,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f758])).
fof(f758,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(ennf_transformation,[],[f490])).
fof(f490,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f489])).
fof(f489,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X6] : ! [X5,X21] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X6,bool),X5),s(fun(X6,bool),X21)))) <=> ! [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X5)))) => p(s(bool,happ(s(fun(X6,bool),X21),s(X6,X8))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.RES_FORALL_DEF')).
fof(f1363,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK34(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f919])).
fof(f1846,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK34(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1364,f1316])).
fof(f1364,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK34(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f919])).
fof(f1359,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f916])).
fof(f916,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK33(X2,X1,X0)),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,sK33(X2,X1,X0)),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33])],[f915])).
fof(f915,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f914])).
fof(f914,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f757])).
fof(f757,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f488])).
fof(f488,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ~? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f487])).
fof(f487,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ~? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f159])).
fof(f159,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> ~? [X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_DISJOINT')).
fof(f1360,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK33(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f916])).
fof(f1361,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK33(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f916])).
fof(f1356,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK32(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f913])).
fof(f913,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & (p(s(bool,'const.bool.IN_2'(s(X0,sK32(X2,X1,X0)),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK32(X2,X1,X0)),s(fun(X0,bool),X1))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK32])],[f912])).
fof(f912,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f911])).
fof(f911,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f910])).
fof(f910,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))))) & ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f486])).
fof(f486,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))))),
  inference(flattening,[],[f485])).
fof(f485,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))))))),
  inference(rectify,[],[f196])).
fof(f196,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) & ? [X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X11)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X7)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PSUBSET_MEMBER')).
fof(f1357,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK32(X2,X1,X0)),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f913])).
fof(f1358,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f913])).
fof(f1352,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f909])).
fof(f909,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & s(fun(X0,bool),X1) != s(fun(X0,bool),X2))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f908])).
fof(f908,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & s(fun(X0,bool),X1) != s(fun(X0,bool),X2))) & ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f484])).
fof(f484,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & s(fun(X0,bool),X1) != s(fun(X0,bool),X2)))),
  inference(flattening,[],[f483])).
fof(f483,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & ~s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(rectify,[],[f158])).
fof(f158,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) & ~s(fun(X6,bool),X7) = s(fun(X6,bool),X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PSUBSET_DEF')).
fof(f1353,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f909])).
fof(f1354,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f909])).
fof(f1350,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f907])).
fof(f907,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & (s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f482])).
fof(f482,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f481])).
fof(f481,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f259])).
fof(f259,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_INTER_ABSORPTION')).
fof(f1351,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f907])).
fof(f1348,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f906])).
fof(f906,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f480])).
fof(f480,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f479])).
fof(f479,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_DEF')).
fof(f1349,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f906])).
fof(f1346,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f905])).
fof(f905,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f478])).
fof(f478,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f477])).
fof(f477,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f261])).
fof(f261,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) <=> s(fun(X6,bool),X11) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_UNION_ABSORPTION')).
fof(f1347,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f905])).
fof(f1343,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f904])).
fof(f904,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0))))))) & (! [X3] : (s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK31])],[f903])).
fof(f903,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | ? [X4] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X4))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X4)))))) & (! [X3] : (s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f902])).
fof(f902,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | ? [X3] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))))) & (! [X3] : (s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f476])).
fof(f476,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> ? [X3] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f475])).
fof(f475,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> ? [X3] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> ? [X11] : (s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X11))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DECOMPOSITION')).
fof(f1344,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f904])).
fof(f1345,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))) )),
  inference(cnf_transformation,[],[f904])).
fof(f1342,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f901])).
fof(f901,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))) & (s(fun(X0,bool),X2) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f474])).
fof(f474,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f473])).
fof(f473,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) <=> s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.ABSORPTION')).
fof(f1339,plain,(
  ( ! [X4,X2,X0,X1] : (s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f900])).
fof(f900,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (s(bool,'const.bool.IN_2'(s(X0,sK30(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK30(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK30])],[f899])).
fof(f899,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(rectify,[],[f898])).
fof(f898,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(nnf_transformation,[],[f472])).
fof(f472,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f471])).
fof(f471,plain,(
  ! [X0] : ! [X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X7,X11] : (s(fun(X6,bool),X7) = s(fun(X6,bool),X11) <=> ! [X8] : s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7))) = s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EXTENSION')).
fof(f1340,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'const.bool.IN_2'(s(X0,sK30(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK30(X2,X1,X0)),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f900])).
fof(f1336,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f756])).
fof(f756,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | ! [X3] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(ennf_transformation,[],[f468])).
fof(f468,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => ! [X3] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f467])).
fof(f467,plain,(
  ! [X0] : ! [X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => ! [X3] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X6] : ! [X8,X7] : (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => ! [X11] : s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) = s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_INSERT')).
fof(f1335,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f755])).
fof(f755,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))),
  inference(ennf_transformation,[],[f466])).
fof(f466,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))),
  inference(flattening,[],[f465])).
fof(f465,plain,(
  ! [X0] : ! [X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X8,X7] : (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_NON_ELEMENT_RWT')).
fof(f1334,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f754])).
fof(f754,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2))),
  inference(flattening,[],[f753])).
fof(f753,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2))),
  inference(ennf_transformation,[],[f464])).
fof(f464,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))) => s(fun(X0,bool),X1) = s(fun(X0,bool),X2))),
  inference(flattening,[],[f463])).
fof(f463,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1))))) => s(fun(X0,bool),X1) = s(fun(X0,bool),X2))),
  inference(rectify,[],[f260])).
fof(f260,axiom,(
  ! [X6] : ! [X7,X11] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X11),s(fun(X6,bool),X7))))) => s(fun(X6,bool),X7) = s(fun(X6,bool),X11))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_ANTISYM')).
fof(f1332,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f751])).
fof(f751,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) | s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))),
  inference(ennf_transformation,[],[f460])).
fof(f460,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f459])).
fof(f459,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2)))) => s(fun(X0,bool),X2) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) => s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.ABSORPTION_RWT')).
fof(f1845,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) )),
  inference(forward_demodulation,[],[f1844,f1316])).
fof(f1844,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f1331,f1276])).
fof(f1331,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f750])).
fof(f750,plain,(
  ! [X0,X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(ennf_transformation,[],[f458])).
fof(f458,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(flattening,[],[f457])).
fof(f457,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))))),
  inference(rectify,[],[f204])).
fof(f204,axiom,(
  ! [X6] : ! [X20,X8] : (p(s(bool,happ(s(fun(X6,bool),X20),s(X6,X8)))) => p(s(bool,happ(s(fun(X6,bool),X20),s(X6,'const.min.@_1'(s(fun(X6,bool),X20)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.SELECT_AX')).
fof(f1330,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))))) )),
  inference(cnf_transformation,[],[f456])).
fof(f456,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))))),
  inference(flattening,[],[f455])).
fof(f455,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))))),
  inference(rectify,[],[f255])).
fof(f255,axiom,(
  ! [X6] : ! [X7,X11] : s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X6,bool)),'_dst_x1x1_2'(s(fun(X6,fun(bool,'type.pair.prod'(X6,bool))),'const.pair.,_0'),s(fun(X6,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X7))),s(fun(X6,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X11)))))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_DEF')).
fof(f1329,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))) )),
  inference(cnf_transformation,[],[f454])).
fof(f454,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(flattening,[],[f453])).
fof(f453,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(rectify,[],[f248])).
fof(f248,axiom,(
  ! [X6] : ! [X7,X11] : s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X6,bool)),'_dst_x1x1_2'(s(fun(X6,fun(bool,'type.pair.prod'(X6,bool))),'const.pair.,_0'),s(fun(X6,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|slash||bslash|_0'),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X7))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X11)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INTER_DEF')).
fof(f1328,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))) )),
  inference(cnf_transformation,[],[f452])).
fof(f452,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(flattening,[],[f451])).
fof(f451,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(rectify,[],[f246])).
fof(f246,axiom,(
  ! [X6] : ! [X7,X11] : s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) = s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X6,bool)),'_dst_x1x1_2'(s(fun(X6,fun(bool,'type.pair.prod'(X6,bool))),'const.pair.,_0'),s(fun(X6,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X7))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X11)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNION_DEF')).
fof(f1327,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))) )),
  inference(cnf_transformation,[],[f450])).
fof(f450,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(flattening,[],[f449])).
fof(f449,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(fun(X0,bool),X2)))))))))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X6] : ! [X8,X7] : s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))) = s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X6,bool)),'_dst_x1x1_2'(s(fun(X6,fun(bool,'type.pair.prod'(X6,bool))),'const.pair.,_0'),s(fun(X6,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X8))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(fun(X6,bool),X7)))))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_DEF')).
fof(f1325,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),happ(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(X0,X1))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f446])).
fof(f446,plain,(
  ! [X0,X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),happ(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(X0,X1))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f445])).
fof(f445,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),happ(s(fun(X0,fun(fun(X0,bool),bool)),'const.bool.IN_0'),s(X0,X1))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f114])).
fof(f114,axiom,(
  ! [X6] : ! [X17,X18] : s(bool,'const.bool.IN_2'(s(X6,X17),s(fun(X6,bool),X18))) = s(bool,happ(s(fun(fun(X6,bool),bool),happ(s(fun(X6,fun(fun(X6,bool),bool)),'const.bool.IN_0'),s(X6,X17))),s(fun(X6,bool),X18)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_0_2_const.bool.IN')).
fof(f1324,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(cnf_transformation,[],[f444])).
fof(f444,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(flattening,[],[f443])).
fof(f443,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,X2))) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X7,X8] : s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))) = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0')))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_DEF')).
fof(f1323,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f442])).
fof(f442,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f441])).
fof(f441,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X6] : ! [X7,X8] : s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_SING_UNION')).
fof(f1322,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))) )),
  inference(cnf_transformation,[],[f440])).
fof(f440,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f439])).
fof(f439,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2)))))),
  inference(rectify,[],[f92])).
fof(f92,axiom,(
  ! [X6] : ! [X8,X7] : s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_INSERT')).
fof(f1321,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f438])).
fof(f438,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(X0,X1)))),
  inference(flattening,[],[f437])).
fof(f437,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(X0,X1)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X6] : ! [X8,X7] : s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))) = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(X6,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_DELETE')).
fof(f1320,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0,X1,X2] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f435])).
fof(f435,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f97])).
fof(f97,axiom,(
  ! [X6] : ! [X7,X11] : s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X11))) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X11),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_SYM')).
fof(f1841,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK20(X0))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0))))) )),
  inference(backward_demodulation,[],[f1316,f1825])).
fof(f1842,plain,(
  ( ! [X0,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK20(X0)),s(fun('type.num.num',bool),X0))))) )),
  inference(forward_demodulation,[],[f1840,f1316])).
fof(f1840,plain,(
  ( ! [X0,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) | p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK20(X0)))))) )),
  inference(backward_demodulation,[],[f1316,f1185])).
fof(f1315,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f426])).
fof(f426,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f425])).
fof(f425,plain,(
  ! [X0] : ! [X1,X2] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X2),s(X0,X1))),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X6] : ! [X8,X7] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,X8))),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DELETE_SUBSET')).
fof(f1314,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(cnf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f423])).
fof(f423,plain,(
  ! [X0] : ! [X1,X2] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f109])).
fof(f109,axiom,(
  ! [X6] : ! [X8,X7] : p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.COMPONENT')).
fof(f1313,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f422])).
fof(f422,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f421])).
fof(f421,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f117])).
fof(f117,axiom,(
  ! [X6] : ! [X9,X10] : s(X6,X9) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X9),s(X6,X10)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.COND_CLAUSES|split|0')).
fof(f1312,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f419])).
fof(f419,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X6] : ! [X9,X10] : s(X6,X10) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X9),s(X6,X10)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.COND_CLAUSES|split|1')).
fof(f1311,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))) )),
  inference(cnf_transformation,[],[f418])).
fof(f418,plain,(
  ! [X0,X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))),
  inference(flattening,[],[f417])).
fof(f417,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f197])).
fof(f197,axiom,(
  ! [X6] : ! [X7] : ~p(s(bool,'const.bool.IN_2'(s(X6,'const.pred_set.CHOICE_1'(s(fun(X6,bool),X7))),s(fun(X6,bool),'const.pred_set.REST_1'(s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.CHOICE_NOT_IN_REST')).
fof(f1309,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f414])).
fof(f414,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(flattening,[],[f413])).
fof(f413,plain,(
  ! [X0] : ! [X1] : ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6] : ! [X8] : ~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NOT_EMPTY_SING')).
fof(f1308,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f412])).
fof(f412,plain,(
  ! [X0,X1] : ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f411])).
fof(f411,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f171])).
fof(f171,axiom,(
  ! [X6] : ! [X7] : ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NOT_PSUBSET_EMPTY')).
fof(f1307,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f410])).
fof(f410,plain,(
  ! [X0,X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f409])).
fof(f409,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X8] : ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NOT_IN_EMPTY')).
fof(f1305,plain,(
  ( ! [X0,X3,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f896])).
fof(f896,plain,(
  ! [X0,X1] : ((! [X3] : ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | p(s(bool,'const.bool.IN_2'(s(X0,sK29(X1,X0)),s(fun(X0,bool),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29])],[f895])).
fof(f895,plain,(
  ! [X0,X1] : ((! [X3] : ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ? [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f894])).
fof(f894,plain,(
  ! [X0,X1] : ((! [X2] : ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ? [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f408])).
fof(f408,plain,(
  ! [X0,X1] : (? [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1))),
  inference(flattening,[],[f407])).
fof(f407,plain,(
  ! [X0] : ! [X1] : (? [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) <=> ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X6] : ! [X7] : (? [X8] : p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))) <=> ~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.MEMBER_NOT_EMPTY')).
fof(f1306,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK29(X1,X0)),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f896])).
fof(f1302,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f891])).
fof(f1297,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK27(X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f886])).
fof(f886,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK27(X1,X0)),s(fun(X0,bool),X1))))) & (! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK27])],[f885])).
fof(f885,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) | ? [X3] : ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))))) & (! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))))),
  inference(rectify,[],[f884])).
fof(f884,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) | ? [X2] : ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) & (! [X2] : p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))))),
  inference(nnf_transformation,[],[f402])).
fof(f402,plain,(
  ! [X0,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) <=> ? [X2] : ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f401])).
fof(f401,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) <=> ? [X2] : ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f192])).
fof(f192,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.UNIV_0')))) <=> ? [X8] : ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.PSUBSET_UNIV')).
fof(f1298,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f886])).
fof(f1293,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f882])).
fof(f882,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1))))))),
  inference(nnf_transformation,[],[f398])).
fof(f398,plain,(
  ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) <=> s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1))),
  inference(flattening,[],[f397])).
fof(f397,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) <=> s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),X1))),
  inference(rectify,[],[f258])).
fof(f258,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.UNIV_0'),s(fun(X6,bool),X7)))) <=> s(fun(X6,bool),'const.pred_set.UNIV_0') = s(fun(X6,bool),X7))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNIV_SUBSET')).
fof(f1294,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.UNIV_0') != s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f882])).
fof(f1291,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f881])).
fof(f881,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) & (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))),
  inference(nnf_transformation,[],[f396])).
fof(f396,plain,(
  ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) <=> s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1))),
  inference(flattening,[],[f395])).
fof(f395,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) <=> s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1))),
  inference(rectify,[],[f120])).
fof(f120,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0')))) <=> s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_EMPTY')).
fof(f1292,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f881])).
fof(f1289,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f880])).
fof(f880,plain,(
  ! [X0,X1] : ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)))),
  inference(nnf_transformation,[],[f394])).
fof(f394,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) <=> p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f393])).
fof(f393,plain,(
  ! [X0] : ! [X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) <=> p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f83])).
fof(f83,axiom,(
  ! [X6] : ! [X7] : (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) <=> p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_EMPTY_REFL')).
fof(f1290,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f880])).
fof(f1288,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),X1)))) | s(fun(X0,bool),X1) != s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f879])).
fof(f1284,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f749])).
fof(f749,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))),
  inference(ennf_transformation,[],[f388])).
fof(f388,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) => s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))),
  inference(flattening,[],[f387])).
fof(f387,plain,(
  ! [X0] : ! [X1] : (~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) => s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f96])).
fof(f96,axiom,(
  ! [X6] : ! [X7] : (~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) => s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,'const.pred_set.CHOICE_1'(s(fun(X6,bool),X7))),s(fun(X6,bool),'const.pred_set.REST_1'(s(fun(X6,bool),X7))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.CHOICE_INSERT_REST')).
fof(f1283,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f748])).
fof(f748,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(ennf_transformation,[],[f386])).
fof(f386,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) => p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f385])).
fof(f385,plain,(
  ! [X0] : ! [X1] : (~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) => p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f123])).
fof(f123,axiom,(
  ! [X6] : ! [X7] : (~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) => p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X6,bool),'const.pred_set.REST_1'(s(fun(X6,bool),X7))),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.REST_PSUBSET')).
fof(f1282,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f747])).
fof(f747,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(ennf_transformation,[],[f384])).
fof(f384,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) => p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f383])).
fof(f383,plain,(
  ! [X0] : ! [X1] : (~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) => p(s(bool,'const.bool.IN_2'(s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f98])).
fof(f98,axiom,(
  ! [X6] : ! [X7] : (~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) => p(s(bool,'const.bool.IN_2'(s(X6,'const.pred_set.CHOICE_1'(s(fun(X6,bool),X7))),s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.CHOICE_DEF')).
fof(f1280,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK24(X1,X0)),s(fun(X0,bool),sK25(X1,X0)))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f875])).
fof(f875,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,sK24(X1,X0)),s(fun(X0,bool),sK25(X1,X0)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK24(X1,X0)),s(fun(X0,bool),sK25(X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24,sK25])],[f382])).
fof(f382,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ? [X2,X3] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f381])).
fof(f381,plain,(
  ! [X0] : ! [X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ? [X2,X3] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6] : ! [X7] : (s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) | ? [X8,X11] : (s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X11))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X11))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SET_CASES')).
fof(f1281,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK24(X1,X0)),s(fun(X0,bool),sK25(X1,X0))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(cnf_transformation,[],[f875])).
fof(f1279,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),X1)))))) )),
  inference(cnf_transformation,[],[f380])).
fof(f380,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f379])).
fof(f379,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X0,bool)),'_dst_x1x1_2'(s(fun(X0,fun(bool,'type.pair.prod'(X0,bool))),'const.pair.,_0'),s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f247])).
fof(f247,axiom,(
  ! [X6] : ! [X20] : s(fun(X6,bool),X20) = s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'(X6,bool)),'_dst_x1x1_2'(s(fun(X6,fun(bool,'type.pair.prod'(X6,bool))),'const.pair.,_0'),s(fun(X6,bool),X20)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.GSPEC_ETA')).
fof(f1278,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1)))))) )),
  inference(cnf_transformation,[],[f378])).
fof(f378,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f377])).
fof(f377,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))) = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X1),s(X0,'const.pred_set.CHOICE_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.REST_1'(s(fun(X6,bool),X7))) = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),X7),s(X6,'const.pred_set.CHOICE_1'(s(fun(X6,bool),X7)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.REST_DEF')).
fof(f1276,plain,(
  ( ! [X0,X1] : (s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))) )),
  inference(cnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0,X1] : s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f373])).
fof(f373,plain,(
  ! [X0] : ! [X1] : s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))) = s(bool,happ(s(fun(X0,bool),X1),s(X0,'const.min.@_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X6] : ! [X5] : s(bool,'|dollar|exists_1'(s(fun(X6,bool),X5))) = s(bool,happ(s(fun(X6,bool),X5),s(X6,'const.min.@_1'(s(fun(X6,bool),X5)))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.EXISTS_DEF')).
fof(f1274,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f370])).
fof(f370,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(flattening,[],[f369])).
fof(f369,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f162])).
fof(f162,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNION_EMPTY|split|1')).
fof(f1273,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f368])).
fof(f368,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f367])).
fof(f367,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f161])).
fof(f161,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INTER_IDEMPOT')).
fof(f1272,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f366])).
fof(f366,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f365])).
fof(f365,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_EQ_EMPTY')).
fof(f1271,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f364])).
fof(f364,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(flattening,[],[f363])).
fof(f363,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f163])).
fof(f163,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_EMPTY')).
fof(f1270,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f362])).
fof(f362,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(flattening,[],[f361])).
fof(f361,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INTER_EMPTY|split|1')).
fof(f1269,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f359])).
fof(f359,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INTER_EMPTY|split|0')).
fof(f1268,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f358])).
fof(f358,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f357])).
fof(f357,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f164])).
fof(f164,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNION_EMPTY|split|0')).
fof(f1267,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(cnf_transformation,[],[f356])).
fof(f356,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),
  inference(flattening,[],[f355])).
fof(f355,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.UNIV_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DIFF_UNIV')).
fof(f1266,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f354])).
fof(f354,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f353])).
fof(f353,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f130])).
fof(f130,axiom,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(X6,bool),X7)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_DIFF')).
fof(f1265,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f352])).
fof(f352,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1))))),
  inference(flattening,[],[f351])).
fof(f351,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.REST_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X1))))),
  inference(rectify,[],[f211])).
fof(f211,axiom,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.REST_1'(s(fun(X6,bool),X7))),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.REST_SUBSET')).
fof(f1264,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f350])).
fof(f350,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))),
  inference(flattening,[],[f349])).
fof(f349,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X8] : s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.DELETE_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(X6,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_DELETE')).
fof(f1263,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))) )),
  inference(cnf_transformation,[],[f348])).
fof(f348,plain,(
  ! [X0,X1] : s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),
  inference(flattening,[],[f347])).
fof(f347,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),'const.pred_set.UNIV_0') = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0')))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X6] : ! [X8] : s(fun(X6,bool),'const.pred_set.UNIV_0') = s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.UNIV_0')))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.INSERT_UNIV')).
fof(f1839,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f1262,f1253])).
fof(f1262,plain,(
  ( ! [X0,X1] : (s(bool,'const.pred_set.UNIV_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f346])).
fof(f346,plain,(
  ! [X0,X1] : s(bool,'const.pred_set.UNIV_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))),
  inference(flattening,[],[f345])).
fof(f345,plain,(
  ! [X0] : ! [X1] : s(bool,'const.pred_set.UNIV_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(X0,X1)))),
  inference(rectify,[],[f210])).
fof(f210,axiom,(
  ! [X6] : ! [X17] : s(bool,'const.pred_set.UNIV_1'(s(X6,X17))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.UNIV_0'),s(X6,X17)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_0_1_const.pred_set.UNIV')).
fof(f1838,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f1261,f1252])).
fof(f1261,plain,(
  ( ! [X0,X1] : (s(bool,'const.pred_set.EMPTY_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f344])).
fof(f344,plain,(
  ! [X0,X1] : s(bool,'const.pred_set.EMPTY_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))),
  inference(flattening,[],[f343])).
fof(f343,plain,(
  ! [X0] : ! [X1] : s(bool,'const.pred_set.EMPTY_1'(s(X0,X1))) = s(bool,happ(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(X0,X1)))),
  inference(rectify,[],[f121])).
fof(f121,axiom,(
  ! [X6] : ! [X17] : s(bool,'const.pred_set.EMPTY_1'(s(X6,X17))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(X6,X17)))),
  file('thm.pred_set.DELETE_EQ_SING','ARITY_0_1_const.pred_set.EMPTY')).
fof(f1260,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))) )),
  inference(cnf_transformation,[],[f342])).
fof(f342,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))),
  inference(flattening,[],[f341])).
fof(f341,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.SING_1'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6] : ! [X8] : p(s(bool,'const.pred_set.SING_1'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SING')).
fof(f1259,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f340])).
fof(f340,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f339])).
fof(f339,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f238])).
fof(f238,axiom,(
  ! [X30] : ! [X32] : s(X30,X32) = s(X30,happ(s(fun(X30,X30),'_i_0_0'),s(X30,X32)))),
  file('thm.pred_set.DELETE_EQ_SING','_i0_ax')).
fof(f1258,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))) )),
  inference(cnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(flattening,[],[f337])).
fof(f337,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(rectify,[],[f242])).
fof(f242,axiom,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.UNIV_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.SUBSET_UNIV')).
fof(f1257,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f336])).
fof(f336,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f335])).
fof(f335,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f172])).
fof(f172,axiom,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_EMPTY|split|1')).
fof(f1256,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f334])).
fof(f334,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))),
  inference(flattening,[],[f333])).
fof(f333,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))),
  inference(rectify,[],[f170])).
fof(f170,axiom,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_SUBSET')).
fof(f1255,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f332])).
fof(f332,plain,(
  ! [X0,X1] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))),
  inference(flattening,[],[f331])).
fof(f331,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(X0,bool),X1))))),
  inference(rectify,[],[f173])).
fof(f173,axiom,(
  ! [X6] : ! [X7] : p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(X6,bool),X7))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.DISJOINT_EMPTY|split|0')).
fof(f1254,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))) )),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(flattening,[],[f329])).
fof(f329,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))),
  inference(rectify,[],[f90])).
fof(f90,axiom,(
  ! [X6] : ! [X8] : p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.pred_set.UNIV_0'))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.IN_UNIV')).
fof(f1253,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.pred_set.UNIV_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.pred_set.UNIV_1'(s(X0,X1)))),
  inference(flattening,[],[f327])).
fof(f327,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.pred_set.UNIV_1'(s(X0,X1)))),
  inference(rectify,[],[f209])).
fof(f209,axiom,(
  ! [X6] : ! [X5] : s(bool,'T_0') = s(bool,'const.pred_set.UNIV_1'(s(X6,X5)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.UNIV_DEF')).
fof(f1248,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')) )),
  inference(cnf_transformation,[],[f318])).
fof(f318,plain,(
  ! [X0] : s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')),
  inference(flattening,[],[f317])).
fof(f317,plain,(
  ! [X0] : ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNIV_0')),
  inference(rectify,[],[f165])).
fof(f165,axiom,(
  ! [X6] : ~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),'const.pred_set.UNIV_0')),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.EMPTY_NOT_UNIV')).
fof(f1244,plain,(
  ( ! [X6,X0] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK21(X0)),s(fun('type.num.num',bool),X0))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f874,plain,(
  ! [X0] : ((! [X6] : ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X0)))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK21(X0)),s(fun('type.num.num',bool),X0)))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK21(X0)),s('type.num.num',X5))))))) & (! [X2] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK22(X2,X0)),s(fun('type.num.num',bool),X0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',sK22(X2,X0))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK23(X0)),s(fun('type.num.num',bool),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21,sK22,sK23])],[f873])).
fof(f873,plain,(
  ! [X0] : ((! [X6] : ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X0)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),X0)))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))))))) & (! [X2] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | ? [X1] : p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0))))))),
  inference(rectify,[],[f872])).
fof(f872,plain,(
  ! [X0] : ((! [X1] : ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0)))) | ? [X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))))))) & (! [X2] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | ? [X1] : p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0))))))),
  inference(nnf_transformation,[],[f745])).
fof(f745,plain,(
  ! [X0] : (? [X1] : p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0)))) <=> ? [X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))))))),
  inference(ennf_transformation,[],[f316])).
fof(f316,plain,(
  ! [X0] : (? [X1] : p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X0)))) <=> ? [X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) & ! [X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),X0)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))))))),
  inference(rectify,[],[f191])).
fof(f191,axiom,(
  ! [X7] : (? [X51] : p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),X7)))) <=> ? [X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),X7)))) & ! [X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),X7)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X51),s('type.num.num',X49)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.pred_set.NUM_SET_WOP')).
fof(f1818,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK21(X1)),s('type.num.num',X0))))) )),
  inference(condensation,[],[f1245])).
fof(f1245,plain,(
  ( ! [X6,X0,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK21(X0)),s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X0)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X0))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f1246,plain,(
  ( ! [X2,X0] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK22(X2,X0)),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK23(X0)),s(fun('type.num.num',bool),X0))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f1247,plain,(
  ( ! [X2,X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',sK22(X2,X0))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK23(X0)),s(fun('type.num.num',bool),X0)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),X0))))) )),
  inference(cnf_transformation,[],[f874])).
fof(f1195,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,happ(s(bool,'~_1'),s(bool,X0))))) )),
  inference(cnf_transformation,[],[f840])).
fof(f840,plain,(
  ! [X0] : ((~p(s(bool,happ(s(bool,'~_1'),s(bool,X0)))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | p(s(bool,happ(s(bool,'~_1'),s(bool,X0))))))),
  inference(nnf_transformation,[],[f297])).
fof(f297,plain,(
  ! [X0] : (p(s(bool,happ(s(bool,'~_1'),s(bool,X0)))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f296])).
fof(f296,plain,(
  ! [X0] : (p(s(bool,happ(s(bool,'~_1'),s(bool,X0)))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f256])).
fof(f256,axiom,(
  ! [X40] : (p(s(bool,happ(s(bool,'~_1'),s(bool,X40)))) <=> ~p(s(bool,X40)))),
  file('thm.pred_set.DELETE_EQ_SING',arity_1_HL_NEG)).
fof(f1196,plain,(
  ( ! [X0] : (p(s(bool,happ(s(bool,'~_1'),s(bool,X0)))) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f840])).
fof(f1191,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f838])).
fof(f838,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f293])).
fof(f293,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f292])).
fof(f292,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.EQ_CLAUSES|split|3')).
fof(f1185,plain,(
  ( ! [X0,X3] : (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK20(X0))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3))))) )),
  inference(cnf_transformation,[],[f835])).
fof(f835,plain,(
  ! [X0] : (! [X3] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))) | (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK20(X0))))) & ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK20(X0))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK20])],[f834])).
fof(f834,plain,(
  ! [X0] : (! [X3] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))) | ? [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) & ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X1)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(rectify,[],[f739])).
fof(f739,plain,(
  ! [X0] : (! [X1] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) | ? [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))))))),
  inference(ennf_transformation,[],[f289])).
fof(f289,plain,(
  ! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) => ? [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))) & ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))))))),
  inference(flattening,[],[f288])).
fof(f288,plain,(
  ! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) => ? [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))) & ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))))))),
  inference(rectify,[],[f249])).
fof(f249,axiom,(
  ! [X20] : (? [X51] : p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',X51)))) => ? [X51] : (p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',X51)))) & ! [X49] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X49),s('type.num.num',X51)))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',X49)))))))),
  file('thm.pred_set.DELETE_EQ_SING','thm.arithmetic.WOP')).
fof(f1825,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK20(X0)))))) )),
  inference(condensation,[],[f1186])).
fof(f1186,plain,(
  ( ! [X2,X0,X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',sK20(X0))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3))))) )),
  inference(cnf_transformation,[],[f835])).
fof(f1169,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.marker.Cong_1'(s(bool,X0)))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0] : s(bool,X0) = s(bool,'const.marker.Cong_1'(s(bool,X0)))),
  inference(rectify,[],[f78])).
fof(f78,axiom,(
  ! [X8] : s(bool,X8) = s(bool,'const.marker.Cong_1'(s(bool,X8)))),
  file('thm.pred_set.DELETE_EQ_SING','thm.marker.Cong_def')).
fof(f6665,plain,(
  $false | ($spl5 | $spl16)),
  inference(subsumption_resolution,[],[f6304,f1157])).
fof(f6304,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3694])).
fof(f3694,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,sK19,'T_0',bool)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f2058,f1510])).
fof(f6664,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6299,f1157])).
fof(f6299,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3693])).
fof(f6663,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6294,f1157])).
fof(f6294,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3696])).
fof(f6662,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6291,f1157])).
fof(f6291,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3692])).
fof(f6661,plain,(
  $false | ($spl1 | $spl16)),
  inference(subsumption_resolution,[],[f6289,f1157])).
fof(f6289,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3701])).
fof(f3701,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,'const.pred_set.EMPTY_0','const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)),fun(sK16,bool))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1829,f1510])).
fof(f6660,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6288,f1157])).
fof(f6288,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3702])).
fof(f6659,plain,(
  $false | ($spl1 | $spl16)),
  inference(subsumption_resolution,[],[f6287,f1157])).
fof(f6287,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3695])).
fof(f3695,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)),'const.pred_set.EMPTY_0',fun(sK16,bool))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1829,f1510])).
fof(f6658,plain,(
  $false | ($spl5 | $spl16)),
  inference(subsumption_resolution,[],[f6281,f1157])).
fof(f6281,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3700])).
fof(f3700,plain,(
  ( ! [X0] : (~p(s(bool,sK60(X0,'T_0',sK19,bool)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f2058,f1510])).
fof(f6657,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6278,f1157])).
fof(f6278,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3699])).
fof(f6656,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6276,f1157])).
fof(f6276,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f3698])).
fof(f6655,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643,f6648,f6650,f6652,f6654])).
fof(f6653,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643,f6648,f6650,f6652])).
fof(f6651,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643,f6648,f6650])).
fof(f6649,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643,f6648])).
fof(f6647,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6646,f1157])).
fof(f6646,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6645,f5882])).
fof(f6645,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6259,f1157])).
fof(f6259,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1590])).
fof(f6644,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641,f6643])).
fof(f6642,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639,f6641])).
fof(f6640,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637,f6639])).
fof(f6638,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630,f6637])).
fof(f6636,plain,(
  $false | ($spl10 | $spl16)),
  inference(subsumption_resolution,[],[f6326,f1157])).
fof(f6326,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl16)),
  inference(condensation,[],[f6250])).
fof(f6250,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,X0))) ) | ($spl10 | $spl16)),
  inference(backward_demodulation,[],[f5882,f2851])).
fof(f2851,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,happ(s(bool,'T_0'),s(bool,X0))))) ) | $spl10),
  inference(backward_demodulation,[],[f2845,f1195])).
fof(f6631,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628,f6630])).
fof(f6629,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626,f6628])).
fof(f6627,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624,f6626])).
fof(f6625,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620,f6624])).
fof(f6621,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618,f6620])).
fof(f6619,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616,f6618])).
fof(f6617,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612,f6616])).
fof(f6613,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610,f6612])).
fof(f6611,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604,f6610])).
fof(f6605,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600,f6604])).
fof(f6601,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585,f6600])).
fof(f6589,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6588,f1157])).
fof(f6588,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6587,f5882])).
fof(f6587,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK20(X0)))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6189,f1157])).
fof(f6189,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',sK20(X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1841])).
fof(f6586,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583,f6585])).
fof(f6584,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581,f6583])).
fof(f6582,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577,f6581])).
fof(f6580,plain,(
  $false | ($spl10 | $spl16)),
  inference(subsumption_resolution,[],[f6579,f1157])).
fof(f6579,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl16)),
  inference(forward_demodulation,[],[f6330,f5882])).
fof(f6330,plain,(
  ~p(s(bool,happ(s(bool,'T_0'),s(bool,'T_0')))) | ($spl10 | $spl16)),
  inference(condensation,[],[f6178])).
fof(f6178,plain,(
  ( ! [X94] : (~p(s(bool,happ(s(bool,'T_0'),s(bool,'T_0')))) | ~p(s(bool,X94))) ) | ($spl10 | $spl16)),
  inference(backward_demodulation,[],[f5882,f3680])).
fof(f3680,plain,(
  ( ! [X94] : (~p(s(bool,happ(s(bool,'T_0'),s(bool,'const.bool.IN_2'(s(bool,X94),s(fun(bool,bool),'_i_0_0')))))) | ~p(s(bool,X94))) ) | $spl10),
  inference(forward_demodulation,[],[f3666,f1316])).
fof(f3666,plain,(
  ( ! [X94] : (~p(s(bool,X94)) | ~p(s(bool,happ(s(bool,'T_0'),s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X94))))))) ) | $spl10),
  inference(superposition,[],[f2851,f1259])).
fof(f6578,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575,f6577])).
fof(f6576,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331,f6575])).
fof(f6572,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570,f6331])).
fof(f6571,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568,f6570])).
fof(f6569,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566,f6568])).
fof(f6567,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564,f6566])).
fof(f6565,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562,f6564])).
fof(f6563,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546,f6562])).
fof(f6559,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6558,f1157])).
fof(f6558,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6557,f5882])).
fof(f6557,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6157,f1157])).
fof(f6157,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1377])).
fof(f6550,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6549,f1157])).
fof(f6549,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6548,f5882])).
fof(f6548,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6143,f1157])).
fof(f6143,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1357])).
fof(f6547,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544,f6546])).
fof(f6545,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539,f6544])).
fof(f6543,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6542,f1157])).
fof(f6542,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6541,f5882])).
fof(f6541,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6139,f1157])).
fof(f6139,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.PSUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.UNIV_0'))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1297])).
fof(f6540,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536,f6539])).
fof(f6538,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6137,f1157])).
fof(f6137,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f1311])).
fof(f6537,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526,f6536])).
fof(f6527,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524,f6526])).
fof(f6525,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508,f6524])).
fof(f6509,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506,f6508])).
fof(f6507,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484,f6506])).
fof(f6485,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466,f6484])).
fof(f6467,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423,f6466])).
fof(f6459,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6458,f1157])).
fof(f6458,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6457,f5882])).
fof(f6457,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6061,f1157])).
fof(f6061,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.pred_set.DELETE_2'(s(fun(X0,bool),X3),s(X0,X1))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1499])).
fof(f6456,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6455,f1157])).
fof(f6455,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6454,f5882])).
fof(f6454,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6059,f1157])).
fof(f6059,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X3),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1497])).
fof(f6453,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6452,f1157])).
fof(f6452,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6451,f5882])).
fof(f6451,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6057,f1157])).
fof(f6057,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1494])).
fof(f6450,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6449,f1157])).
fof(f6449,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6448,f5882])).
fof(f6448,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6055,f1157])).
fof(f6055,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1491])).
fof(f6435,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6434,f1157])).
fof(f6434,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6433,f5882])).
fof(f6433,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6040,f1157])).
fof(f6040,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.DIFF_3'(s(fun(X0,bool),X1),s(fun(X0,bool),X2),s(X0,X3))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1473])).
fof(f6424,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421,f6423])).
fof(f6422,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413,f6421])).
fof(f6414,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401,f6413])).
fof(f6410,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6409,f1157])).
fof(f6409,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6408,f5882])).
fof(f6408,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6407,f1157])).
fof(f6407,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(forward_demodulation,[],[f6406,f5882])).
fof(f6406,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6020,f1157])).
fof(f6020,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1359])).
fof(f6405,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6404,f1157])).
fof(f6404,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6403,f5882])).
fof(f6403,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0)))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6017,f1157])).
fof(f6017,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),sK31(X2,X1,X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1344])).
fof(f6402,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399,f6401])).
fof(f6400,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397,f6399])).
fof(f6398,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395,f6397])).
fof(f6396,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001,f6395])).
fof(f6394,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6393,f1157])).
fof(f6393,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f6004,f5882])).
fof(f6004,plain,(
  ~p(s(bool,'|dollar|or_2'(s(bool,'T_0'),s(bool,'T_0')))) | $spl16),
  inference(backward_demodulation,[],[f5882,f5851])).
fof(f6392,plain,(
  $false | ($spl2 | $spl16)),
  inference(global_subsumption,[],[f6003,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001])).
fof(f6003,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(sK16,bool),sK17)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl2 | $spl16)),
  inference(backward_demodulation,[],[f5882,f5654])).
fof(f5654,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(sK16,bool),sK17)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1312,f5476,f1727])).
fof(f5476,plain,(
  p(s(bool,'const.pred_set.SING_1'(s(fun(sK16,bool),sK17)))) | $spl2),
  inference(superposition,[],[f1260,f1830])).
fof(f6391,plain,(
  $false | ($spl2 | $spl16)),
  inference(global_subsumption,[],[f6002,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001])).
fof(f6002,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(sK16,bool),sK17)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl2 | $spl16)),
  inference(backward_demodulation,[],[f5882,f5642])).
fof(f5642,plain,(
  ( ! [X0,X1] : (sP9('const.pred_set.SING_1'(s(fun(sK16,bool),sK17)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1312,f5476,f1727])).
fof(f6390,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000,f6001])).
fof(f6389,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999,f6000])).
fof(f6388,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998,f5999])).
fof(f6387,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997,f5998])).
fof(f6386,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996,f5997])).
fof(f6385,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994,f5996])).
fof(f6384,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992,f5994])).
fof(f6383,plain,(
  $false | ($spl5 | $spl16)),
  inference(global_subsumption,[],[f5993,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992])).
fof(f5993,plain,(
  ~sP9('F_0',sK19,'const.marker.Cong_1'(s(bool,'T_0'))) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f5003])).
fof(f5003,plain,(
  ~sP9('F_0',sK19,'const.marker.Cong_1'(s(bool,'F_0'))) | $spl5),
  inference(superposition,[],[f4205,f2023])).
fof(f6382,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991,f5992])).
fof(f6381,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990,f5991])).
fof(f6380,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988,f5990])).
fof(f6379,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986,f5988])).
fof(f6378,plain,(
  $false | ($spl5 | $spl16)),
  inference(global_subsumption,[],[f5987,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986])).
fof(f5987,plain,(
  ~sP9('F_0','const.marker.Cong_1'(s(bool,'T_0')),sK19) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f4921])).
fof(f4921,plain,(
  ~sP9('F_0','const.marker.Cong_1'(s(bool,'F_0')),sK19) | $spl5),
  inference(superposition,[],[f4196,f2023])).
fof(f6377,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985,f5986])).
fof(f6376,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984,f5985])).
fof(f6375,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982,f5984])).
fof(f6374,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980,f5982])).
fof(f6373,plain,(
  $false | ($spl5 | $spl16)),
  inference(global_subsumption,[],[f5981,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980])).
fof(f5981,plain,(
  sP9('T_0',sK19,'const.marker.Cong_1'(s(bool,'T_0'))) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f4856])).
fof(f4856,plain,(
  sP9('T_0',sK19,'const.marker.Cong_1'(s(bool,'F_0'))) | $spl5),
  inference(superposition,[],[f4164,f2023])).
fof(f6372,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979,f5980])).
fof(f6371,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978,f5979])).
fof(f6370,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976,f5978])).
fof(f6369,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974,f5976])).
fof(f6368,plain,(
  $false | ($spl5 | $spl16)),
  inference(global_subsumption,[],[f5975,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974])).
fof(f5975,plain,(
  sP9('T_0','const.marker.Cong_1'(s(bool,'T_0')),sK19) | ($spl5 | $spl16)),
  inference(backward_demodulation,[],[f5882,f4783])).
fof(f4783,plain,(
  sP9('T_0','const.marker.Cong_1'(s(bool,'F_0')),sK19) | $spl5),
  inference(superposition,[],[f4156,f2023])).
fof(f6367,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973,f5974])).
fof(f6366,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972,f5973])).
fof(f6365,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966,f5972])).
fof(f6363,plain,(
  $false | ($spl10 | $spl16)),
  inference(global_subsumption,[],[f5968,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966])).
fof(f5968,plain,(
  ( ! [X165,X164] : (sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X164),s(bool,X165)),'~_1') | p(s(bool,X165))) ) | ($spl10 | $spl16)),
  inference(backward_demodulation,[],[f5882,f4516])).
fof(f4516,plain,(
  ( ! [X165,X164] : (p(s(bool,X165)) | sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X164),s(bool,X165)),'~_1')) ) | $spl10),
  inference(superposition,[],[f3053,f1312])).
fof(f3053,plain,(
  ( ! [X3] : (p(s(bool,X3)) | sP2(X3,'~_1')) ) | $spl10),
  inference(subsumption_resolution,[],[f3017,f1157])).
fof(f3017,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,X3)) | sP2(X3,'~_1')) ) | $spl10),
  inference(superposition,[],[f1584,f2845])).
fof(f6362,plain,(
  $false | ($spl10 | $spl16)),
  inference(global_subsumption,[],[f5967,f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966])).
fof(f5967,plain,(
  ( ! [X163,X162] : (sP2('~_1','const.bool.COND_3'(s(bool,'T_0'),s(bool,X162),s(bool,X163))) | p(s(bool,X163))) ) | ($spl10 | $spl16)),
  inference(backward_demodulation,[],[f5882,f4515])).
fof(f4515,plain,(
  ( ! [X163,X162] : (p(s(bool,X163)) | sP2('~_1','const.bool.COND_3'(s(bool,'F_0'),s(bool,X162),s(bool,X163)))) ) | $spl10),
  inference(superposition,[],[f3052,f1312])).
fof(f3052,plain,(
  ( ! [X2] : (p(s(bool,X2)) | sP2('~_1',X2)) ) | $spl10),
  inference(subsumption_resolution,[],[f3016,f1157])).
fof(f3016,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | sP2('~_1',X2)) ) | $spl10),
  inference(superposition,[],[f1581,f2845])).
fof(f6361,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965,f5966])).
fof(f6360,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964,f5965])).
fof(f6359,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963,f5964])).
fof(f6358,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960,f5963])).
fof(f6356,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959,f5960])).
fof(f6355,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957,f5959])).
fof(f6353,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956,f5957])).
fof(f6352,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346,f5956])).
fof(f6347,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f1156,f1155,f1154,f1157,f1159,f1161,f1160,f1837,f1167,f1169,f1170,f1172,f1182,f1825,f1185,f1188,f1187,f1191,f1196,f1195,f1247,f1246,f1818,f1244,f1248,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1838,f1839,f1263,f1264,f1265,f1266,f1267,f1268,f1269,f1270,f1271,f1272,f1273,f1274,f1276,f1277,f1278,f1279,f1281,f1280,f1282,f1283,f1284,f1288,f1287,f1290,f1289,f1292,f1291,f1294,f1293,f1298,f1297,f1302,f1301,f1306,f1305,f1307,f1308,f1309,f1311,f1312,f1313,f1314,f1315,f1316,f1842,f1841,f1320,f1321,f1322,f1323,f1324,f1325,f1327,f1328,f1329,f1330,f1845,f1332,f1333,f1334,f1335,f1336,f1340,f1339,f1342,f1345,f1344,f1343,f1347,f1346,f1349,f1348,f1351,f1350,f1354,f1353,f1352,f1358,f1357,f1356,f1361,f1360,f1359,f1846,f1363,f1847,f1848,f1366,f1370,f1369,f1368,f1850,f1851,f1371,f1853,f1374,f1379,f1378,f1377,f1381,f1380,f1384,f1383,f1382,f1388,f1387,f1386,f1385,f1395,f1394,f1393,f1392,f1854,f1855,f1856,f1397,f1396,f1400,f1399,f1398,f1402,f1401,f1858,f1860,f1862,f1864,f1414,f1412,f1411,f1416,f1867,f1870,f1873,f1876,f1878,f1880,f1882,f1884,f1886,f1888,f1889,f1435,f1434,f1816,f1432,f1891,f1892,f1897,f1900,f1903,f1906,f1443,f1445,f1446,f1447,f1448,f1449,f1450,f1451,f1907,f1452,f1453,f1454,f1455,f1456,f1457,f1908,f1459,f1462,f1461,f1460,f1465,f1464,f1463,f1468,f1467,f1466,f1471,f1470,f1469,f1474,f1473,f1472,f1477,f1476,f1475,f1480,f1479,f1478,f1483,f1482,f1481,f1486,f1485,f1484,f1489,f1488,f1487,f1492,f1491,f1490,f1495,f1494,f1493,f1498,f1497,f1496,f1501,f1500,f1499,f1504,f1503,f1502,f1506,f1505,f1909,f1508,f1910,f1512,f1511,f1510,f1517,f1516,f1515,f1514,f1513,f1519,f1518,f1521,f1520,f1525,f1522,f1531,f1542,f1911,f1912,f1814,f1913,f1914,f1915,f1916,f1917,f1918,f1919,f1920,f1921,f1566,f1565,f1922,f1584,f1581,f1580,f1579,f1590,f1589,f1603,f1605,f1606,f1607,f1923,f1924,f1925,f1926,f1927,f1928,f1929,f1930,f1617,f1616,f1618,f1932,f1620,f1622,f1621,f1625,f1624,f1623,f1628,f1627,f1626,f1631,f1630,f1629,f1632,f1633,f1634,f1933,f1934,f1637,f1935,f1936,f1640,f1937,f1644,f1643,f1642,f1938,f1939,f1941,f1942,f1652,f1943,f1944,f1655,f1945,f1946,f1947,f1676,f1675,f1674,f1813,f1672,f1671,f1812,f1683,f1682,f1681,f1811,f1699,f1698,f1697,f1713,f1712,f1711,f1710,f1709,f1708,f1707,f1717,f1716,f1715,f1714,f1721,f1720,f1719,f1718,f1725,f1724,f1723,f1722,f1729,f1728,f1727,f1726,f1810,f1733,f1732,f1731,f1730,f1740,f1739,f1738,f1737,f1746,f1743,f1742,f1741,f1753,f1752,f1751,f1809,f1749,f1748,f1747,f1757,f1756,f1755,f1754,f1761,f1760,f1759,f1758,f1770,f1769,f1768,f1808,f1766,f1765,f1764,f1774,f1773,f1772,f1771,f1778,f1777,f1776,f1775,f1781,f1782,f1783,f1784,f1948,f1949,f1950,f1951,f1952,f1953,f1954,f1955,f1956,f1957,f1785,f1794,f1795,f1959,f1958,f1961,f1960,f1963,f1962,f1965,f1967,f1969,f1968,f1971,f1973,f1975,f1974,f1977,f1976,f1979,f1978,f1981,f1980,f1983,f1985,f1987,f1986,f1989,f1988,f1991,f1993,f1995,f1994,f1997,f1999,f1998,f2001,f2000,f2003,f2002,f2005,f2006,f2021,f2022,f2048,f2061,f2083,f2108,f2125,f2126,f2128,f2134,f2130,f2135,f2141,f2147,f2143,f2148,f2151,f2160,f2189,f2192,f2218,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2209,f2208,f2207,f2206,f2205,f2204,f2203,f2202,f2201,f2199,f2198,f2197,f2196,f2195,f2237,f2285,f2284,f2283,f2278,f2277,f2271,f2270,f2269,f2268,f2267,f2266,f2265,f2264,f2263,f2262,f2261,f2260,f2259,f2258,f2256,f2255,f2254,f2323,f2326,f2336,f2390,f2404,f2418,f2432,f2446,f2460,f2474,f2487,f2498,f2501,f2504,f2511,f2512,f2514,f2521,f2525,f2526,f2529,f2535,f2546,f2562,f2560,f2601,f2604,f2619,f2711,f2828,f2827,f2826,f2825,f2819,f2818,f2811,f2810,f2808,f2805,f2804,f2803,f2802,f2799,f2798,f2796,f2795,f2794,f2793,f2792,f2788,f2787,f2783,f2782,f2781,f2778,f2775,f2774,f2773,f2772,f2771,f2769,f2768,f2765,f2763,f2761,f2758,f2757,f2754,f2751,f2750,f2747,f2745,f2744,f2740,f2737,f2736,f2733,f2732,f2731,f2730,f2729,f2727,f2726,f2725,f2829,f2848,f2996,f2995,f2994,f2993,f2992,f2991,f2990,f2989,f2988,f2987,f2986,f2985,f2983,f2979,f2977,f2974,f2973,f2969,f2968,f2964,f2963,f2962,f2959,f2956,f2955,f2954,f2953,f2952,f2951,f2950,f2949,f2948,f2945,f2942,f2940,f2939,f2936,f2934,f2933,f2930,f2919,f2918,f2917,f2916,f2914,f2913,f2912,f2911,f2910,f3142,f3141,f3140,f3139,f3138,f3137,f3136,f3135,f3134,f3133,f3132,f3131,f3129,f3125,f3123,f3120,f3119,f3115,f3114,f3110,f3109,f3108,f3105,f3102,f3101,f3100,f3099,f3098,f3097,f3096,f3095,f3094,f3091,f3088,f3086,f3085,f3082,f3080,f3079,f3076,f3065,f3064,f3063,f3062,f3060,f3059,f3058,f3057,f3056,f3254,f3253,f3252,f3251,f3250,f3249,f3248,f3247,f3246,f3245,f3244,f3243,f3241,f3237,f3235,f3232,f3231,f3227,f3226,f3222,f3221,f3220,f3217,f3214,f3213,f3212,f3211,f3210,f3209,f3208,f3207,f3206,f3203,f3200,f3198,f3197,f3194,f3192,f3191,f3188,f3177,f3176,f3175,f3174,f3172,f3171,f3170,f3169,f3168,f3353,f3352,f3351,f3350,f3349,f3348,f3347,f3346,f3345,f3344,f3343,f3342,f3340,f3336,f3334,f3331,f3330,f3326,f3325,f3321,f3320,f3319,f3316,f3313,f3312,f3311,f3310,f3309,f3308,f3307,f3306,f3305,f3302,f3299,f3297,f3296,f3293,f3291,f3290,f3287,f3276,f3275,f3274,f3273,f3271,f3270,f3269,f3268,f3267,f3492,f3491,f3490,f3489,f3482,f3481,f3473,f3472,f3470,f3467,f3466,f3465,f3464,f3461,f3460,f3458,f3457,f3456,f3455,f3454,f3450,f3449,f3445,f3444,f3443,f3440,f3437,f3436,f3435,f3434,f3433,f3431,f3430,f3427,f3425,f3423,f3420,f3419,f3416,f3413,f3412,f3409,f3407,f3406,f3402,f3399,f3398,f3395,f3394,f3393,f3392,f3391,f3389,f3388,f3387,f3515,f3542,f3670,f3671,f3622,f3672,f3673,f3674,f3675,f3658,f3659,f3660,f3661,f3676,f3677,f3678,f3679,f3690,f3688,f3702,f3699,f3698,f3697,f3696,f3693,f3692,f3691,f3721,f3719,f3718,f3717,f3715,f3714,f3712,f3710,f3709,f3708,f3706,f3705,f3723,f3830,f3829,f3828,f3827,f3820,f3819,f3811,f3810,f3808,f3805,f3804,f3803,f3802,f3799,f3798,f3796,f3795,f3794,f3793,f3792,f3788,f3787,f3783,f3782,f3781,f3778,f3775,f3774,f3773,f3772,f3771,f3769,f3768,f3765,f3763,f3761,f3758,f3757,f3754,f3751,f3750,f3747,f3745,f3744,f3740,f3737,f3736,f3733,f3732,f3731,f3730,f3729,f3727,f3726,f3725,f3853,f3863,f3862,f3861,f3859,f3865,f3873,f3872,f3871,f3883,f3882,f3880,f3879,f3885,f3910,f3918,f4037,f4036,f4035,f4034,f4027,f4026,f4018,f4017,f4015,f4012,f4011,f4010,f4009,f4006,f4005,f4003,f4002,f4001,f4000,f3999,f3995,f3994,f3990,f3989,f3988,f3985,f3982,f3981,f3980,f3979,f3978,f3976,f3975,f3972,f3970,f3968,f3965,f3964,f3961,f3958,f3957,f3954,f3952,f3951,f3947,f3944,f3943,f3940,f3939,f3938,f3937,f3936,f3934,f3933,f3932,f3929,f4093,f4137,f4148,f4147,f4146,f4144,f4143,f4142,f4171,f4169,f4168,f4167,f4165,f4164,f4163,f4161,f4160,f4159,f4157,f4156,f4188,f4187,f4186,f4183,f4182,f4181,f4213,f4211,f4210,f4209,f4206,f4205,f4204,f4202,f4201,f4200,f4197,f4196,f4226,f4225,f4224,f4223,f4221,f4220,f4218,f4229,f4292,f4319,f4317,f4316,f4315,f4314,f4313,f4311,f4396,f4397,f4398,f4399,f4431,f4429,f4428,f4427,f4425,f4424,f4422,f4420,f4432,f4462,f4505,f4506,f4507,f4508,f4550,f4548,f4547,f4546,f4544,f4543,f4541,f4539,f4581,f4626,f4627,f4628,f4629,f4687,f4706,f4716,f4724,f4735,f4740,f4739,f4749,f4758,f4770,f4773,f4774,f4775,f4776,f4777,f4778,f4779,f4780,f4781,f4784,f4785,f4786,f4822,f4843,f4846,f4847,f4848,f4849,f4850,f4851,f4853,f4854,f4857,f4858,f4859,f4866,f4911,f4912,f4913,f4914,f4915,f4916,f4917,f4918,f4919,f4922,f4923,f4924,f4945,f4954,f4963,f4993,f4994,f4995,f4996,f4997,f4998,f5000,f5001,f5004,f5005,f5006,f5066,f5086,f5106,f5115,f5124,f5180,f5182,f5183,f5184,f5185,f5186,f5187,f5188,f5191,f5192,f5193,f5459,f5458,f5457,f5456,f5455,f5454,f5453,f5452,f5451,f5450,f5449,f5448,f5447,f5446,f5444,f5443,f5439,f5438,f5434,f5431,f5430,f5425,f5424,f5418,f5399,f5398,f5397,f5393,f5392,f5388,f5387,f5386,f5381,f5374,f5371,f5368,f5367,f5363,f5362,f5361,f5360,f5359,f5356,f5354,f5349,f5348,f5343,f5342,f5336,f5334,f5333,f5328,f5325,f5324,f5322,f5321,f5320,f5318,f5317,f5316,f5315,f5314,f5313,f5311,f5310,f5309,f5307,f5306,f5305,f5304,f5303,f5302,f5301,f5299,f5298,f5297,f5295,f5294,f5293,f5292,f5291,f5290,f5289,f5288,f5281,f5280,f5272,f5271,f5263,f5262,f5254,f5252,f5251,f5246,f5243,f5241,f5240,f5237,f5235,f5234,f5231,f5220,f5219,f5218,f5217,f5215,f5214,f5213,f5513,f5208,f5207,f5206,f5851,f5881,f5884,f5902,f5905,f5907,f5925,f5882,f5928,f5933,f6346])).
fof(f6345,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6344,f1157])).
fof(f6344,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f5946,f5882])).
fof(f5946,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'_i_0_0')))) | $spl16),
  inference(backward_demodulation,[],[f5882,f3670])).
fof(f6342,plain,(
  $false | ($spl13 | $spl16)),
  inference(subsumption_resolution,[],[f6341,f1157])).
fof(f6341,plain,(
  ~p(s(bool,'T_0')) | ($spl13 | $spl16)),
  inference(forward_demodulation,[],[f5941,f5882])).
fof(f5941,plain,(
  ~p(s(bool,happ(s(bool,'T_0'),s(bool,'T_0')))) | ($spl13 | $spl16)),
  inference(backward_demodulation,[],[f5882,f2847])).
fof(f6340,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f5936,f1157])).
fof(f5936,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f5882,f1837])).
fof(f6337,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f6336,f5882])).
fof(f6336,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0)) ) | $spl16),
  inference(subsumption_resolution,[],[f5931,f1187])).
fof(f5931,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f5882,f1191])).
fof(f5906,plain,(
  ( ! [X1] : (~p(s(bool,'|dollar|or_2'(s(bool,X1),s(bool,'F_0')))) | p(s(bool,X1))) ) | $spl20),
  inference(cnf_transformation,[],[f5906_D])).
fof(f5906_D,plain,(
  ( ! [X1] : (~p(s(bool,'|dollar|or_2'(s(bool,X1),s(bool,'F_0')))) | p(s(bool,X1))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f5905,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|or_2'(s(bool,X1),s(bool,'F_0')))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f5866,f1188])).
fof(f5866,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|or_2'(s(bool,X1),s(bool,'F_0')))) | p(s(bool,X1)) | p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1814,f1172])).
fof(f5883,plain,(
  ( ! [X1] : (~p(s(bool,'|dollar|or_2'(s(bool,'F_0'),s(bool,X1)))) | p(s(bool,X1))) ) | $spl18),
  inference(cnf_transformation,[],[f5883_D])).
fof(f5883_D,plain,(
  ( ! [X1] : (~p(s(bool,'|dollar|or_2'(s(bool,'F_0'),s(bool,X1)))) | p(s(bool,X1))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5881,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|or_2'(s(bool,'F_0'),s(bool,X1)))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f5852,f1188])).
fof(f5852,plain,(
  ( ! [X0,X1] : (~p(s(bool,'|dollar|or_2'(s(bool,'F_0'),s(bool,X1)))) | p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1814,f1172])).
fof(f2845,plain,(
  s(bool,'T_0') = s(bool,'~_1') | $spl10),
  inference(cnf_transformation,[],[f2845_D])).
fof(f2845_D,plain,(
  s(bool,'T_0') = s(bool,'~_1') <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2850,plain,(
  sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),happ(s(bool,'F_0'),s(bool,'T_0'))) | $spl14),
  inference(cnf_transformation,[],[f2850_D])).
fof(f2850_D,plain,(
  sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),happ(s(bool,'F_0'),s(bool,'T_0'))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2848,plain,(
  sP2('const.bool.IN_2'(s(sK16,sK18),s(fun(sK16,bool),sK17)),happ(s(bool,'F_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'~_1')),
  inference(superposition,[],[f2825,f1172])).
fof(f2847,plain,(
  ~p(s(bool,happ(s(bool,'F_0'),s(bool,'T_0')))) | $spl13),
  inference(cnf_transformation,[],[f2847_D])).
fof(f2847_D,plain,(
  ~p(s(bool,happ(s(bool,'F_0'),s(bool,'T_0')))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f2829,plain,(
  ~p(s(bool,happ(s(bool,'F_0'),s(bool,'T_0')))) | s(bool,'T_0') = s(bool,'~_1')),
  inference(superposition,[],[f2711,f1172])).
fof(f1834,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f1834_D])).
fof(f1834_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1836,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl8),
  inference(cnf_transformation,[],[f1836_D])).
fof(f1836_D,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1160,plain,(
  ( ! [X1] : (p(s(bool,X1)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f831])).
fof(f831,plain,(
  (~p(s(bool,'F_0')) | ! [X1] : p(s(bool,X1))) & (~p(s(bool,sK19)) | p(s(bool,'F_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f830])).
fof(f830,plain,(
  (~p(s(bool,'F_0')) | ! [X1] : p(s(bool,X1))) & (? [X0] : ~p(s(bool,X0)) | p(s(bool,'F_0')))),
  inference(rectify,[],[f829])).
fof(f829,plain,(
  (~p(s(bool,'F_0')) | ! [X0] : p(s(bool,X0))) & (? [X0] : ~p(s(bool,X0)) | p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f264])).
fof(f264,plain,(
  p(s(bool,'F_0')) <=> ! [X0] : p(s(bool,X0))),
  inference(rectify,[],[f232])).
fof(f232,axiom,(
  p(s(bool,'F_0')) <=> ! [X11] : p(s(bool,X11))),
  file('thm.pred_set.DELETE_EQ_SING','thm.bool.F_DEF')).
fof(f1833,plain,(
  ~p(s(bool,sK19)) | $spl5),
  inference(cnf_transformation,[],[f1833_D])).
fof(f1833_D,plain,(
  ~p(s(bool,sK19)) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1835,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(cnf_transformation,[],[f1835_D])).
fof(f1835_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1161,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,sK19))),
  inference(cnf_transformation,[],[f831])).
fof(f1828,plain,(
  s(fun(sK16,bool),'const.pred_set.EMPTY_0') = s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) | $spl0),
  inference(cnf_transformation,[],[f1828_D])).
fof(f1828_D,plain,(
  s(fun(sK16,bool),'const.pred_set.EMPTY_0') = s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1830,plain,(
  s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | $spl2),
  inference(cnf_transformation,[],[f1830_D])).
fof(f1830_D,plain,(
  s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1155,plain,(
  s(fun(sK16,bool),sK17) = s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | s(fun(sK16,bool),'const.pred_set.EMPTY_0') = s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)))),
  inference(cnf_transformation,[],[f828])).
fof(f1829,plain,(
  s(fun(sK16,bool),'const.pred_set.EMPTY_0') != s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) | $spl1),
  inference(cnf_transformation,[],[f1829_D])).
fof(f1829_D,plain,(
  s(fun(sK16,bool),'const.pred_set.EMPTY_0') != s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1831,plain,(
  s(fun(sK16,bool),sK17) != s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | $spl3),
  inference(cnf_transformation,[],[f1831_D])).
fof(f1831_D,plain,(
  s(fun(sK16,bool),sK17) != s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f1156,plain,(
  s(fun(sK16,bool),sK17) != s(fun(sK16,bool),'const.pred_set.INSERT_2'(s(sK16,sK18),s(fun(sK16,bool),'const.pred_set.EMPTY_0'))) | s(fun(sK16,bool),'const.pred_set.EMPTY_0') != s(fun(sK16,bool),'const.pred_set.DELETE_2'(s(fun(sK16,bool),sK17),s(sK16,sK18)))),
  inference(cnf_transformation,[],[f828])).
% SZS output end Proof for thm.pred_set
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 968
% Passive clauses: 6153
% Generated clauses: 55962
% Final active clauses: 826
% Final passive clauses: 4261
% Input formulas: 260
% Initial clauses: 642
% 
% Duplicate literals: 12
% Trivial inequalities: 41
% Fw subsumption resolutions: 771
% Fw demodulations: 19726
% Bw demodulations: 828
% Condensations: 158
% Global subsumptions: 91
% 
% Simple tautologies: 177
% Equational tautologies: 34
% Forward subsumptions: 20592
% Fw demodulations to eq. taut.: 8071
% Bw demodulations to eq. taut.: 37
% 
% Unit resulting resolution: 17766
% Factoring: 1
% Forward superposition: 9343
% Backward superposition: 6099
% Self superposition: 56
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 6394
% SAT solver unit clauses: 3233
% SAT solver binary clauses: 2211
% 
% Sat splits: 12
% Sat splitting refutations: 124
% 
% Memory used [KB]: 35820
% Time elapsed: 1.958 s
% ------------------------------
% ------------------------------
% Success in time 3.29 s
