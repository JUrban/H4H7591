Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f1070,plain,(
  $false),
  inference(subsumption_resolution,[],[f139,f165])).
fof(f165,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : ! [X7] : s('type.list.list'(X8),'const.list.NIL_0') = s('type.list.list'(X8),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X8),'const.list.NIL_0')))),
  file('thm.list.DROP_compute|split|1','thm.list.DROP_def|split|0')).
fof(f139,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f95])).
fof(f95,plain,(
  ? [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.list.list'(X6),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.list.DROP_compute|split|1','thm.list.DROP_compute|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 194
% Generated clauses: 899
% Final active clauses: 32
% Final passive clauses: 144
% Input formulas: 37
% Initial clauses: 79
% 
% Duplicate literals: 61
% Trivial inequalities: 18
% Fw subsumption resolutions: 75
% Fw demodulations: 55
% Bw demodulations: 1
% 
% Simple tautologies: 79
% Equational tautologies: 21
% Forward subsumptions: 394
% 
% Binary resolution: 49
% Factoring: 1
% Forward superposition: 187
% Backward superposition: 301
% Self superposition: 33
% Equality factoring: 28
% Equality resolution: 6
% 
% Split clauses: 10
% Split components: 21
% SAT solver clauses: 16
% SAT solver unit clauses: 4
% SAT solver binary clauses: 11
% 
% Sat splits: 10
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1023
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.022 s
