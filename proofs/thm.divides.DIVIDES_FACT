Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.divides
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.divides
% SZS output start Proof for thm.divides
fof(f7769,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7754,f111,f171])).
fof(f171,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f111,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.divides.DIVIDES_FACT',aHL_FALSITY)).
fof(f7754,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f7710,f183])).
fof(f183,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(resolution,[],[f118,f141])).
fof(f141,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X8] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0'))))),
  file('thm.divides.DIVIDES_FACT','thm.prim_rec.NOT_LESS_|48|')).
fof(f118,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.divides.DIVIDES_FACT','thm.bool.EQ_CLAUSES|split|1')).
fof(f7710,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(backward_demodulation,[],[f7699,f187])).
fof(f187,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))),
  inference(resolution,[],[f119,f106])).
fof(f106,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f65])).
fof(f65,plain,(
  ? [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X6)))))))),
  file('thm.divides.DIVIDES_FACT','thm.divides.DIVIDES_FACT')).
fof(f119,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f81])).
fof(f7699,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl1),
  inference(trivial_inequality_removal,[],[f7666])).
fof(f7666,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl1),
  inference(superposition,[],[f568,f665])).
fof(f665,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK1(X0)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(superposition,[],[f114,f116])).
fof(f116,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1])],[f37])).
fof(f37,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | ? [X8] : s('type.num.num',X7) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),
  file('thm.divides.DIVIDES_FACT','thm.arithmetic.num_CASES')).
fof(f114,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X8)))))),
  file('thm.divides.DIVIDES_FACT','thm.arithmetic.FACT|split|1')).
fof(f568,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f560,f145])).
fof(f145,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))),
  file('thm.divides.DIVIDES_FACT','thm.arithmetic.MULT_SYM')).
fof(f560,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK0)))) ) | $spl1),
  inference(subsumption_resolution,[],[f552,f171])).
fof(f552,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f151,f214])).
fof(f214,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0)))))),
  inference(resolution,[],[f107,f123])).
fof(f123,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.divides.DIVIDES_FACT','thm.bool.EQ_CLAUSES|split|3')).
fof(f107,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f79])).
fof(f151,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(X1,X0)),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X19,X6] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',X19),s('type.num.num',X6)))) <=> ? [X20] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X19))))),
  file('thm.divides.DIVIDES_FACT','thm.divides.divides_def')).
% SZS output end Proof for thm.divides
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 127
% Passive clauses: 824
% Generated clauses: 7558
% Final active clauses: 104
% Final passive clauses: 583
% Input formulas: 30
% Initial clauses: 63
% 
% Duplicate literals: 224
% Trivial inequalities: 428
% Fw subsumption resolutions: 861
% Fw demodulations: 1182
% Bw demodulations: 17
% 
% Simple tautologies: 230
% Equational tautologies: 24
% Forward subsumptions: 3805
% 
% Binary resolution: 113
% Factoring: 1
% Forward superposition: 2260
% Backward superposition: 2265
% Self superposition: 56
% Equality factoring: 40
% Equality resolution: 29
% 
% Split clauses: 37
% Split components: 77
% SAT solver clauses: 89
% SAT solver unit clauses: 5
% SAT solver binary clauses: 24
% SAT solver learnt clauses: 1
% 
% Sat splits: 37
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 83
% TWLsolver calls for satisfiability: 28
% 
% Memory used [KB]: 3582
% Time elapsed: 0.128 s
% ------------------------------
% ------------------------------
% Success in time 0.13 s
