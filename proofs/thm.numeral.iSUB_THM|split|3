Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.numeral
% (22945)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 408
% Passive clauses: 7573
% Generated clauses: 22494
% Final active clauses: 393
% Final passive clauses: 6796
% Input formulas: 37
% Initial clauses: 61
% 
% Duplicate literals: 381
% Trivial inequalities: 6
% Fw subsumption resolutions: 1586
% Fw demodulations: 1130
% Bw demodulations: 9
% 
% Simple tautologies: 124
% Equational tautologies: 55
% Forward subsumptions: 11159
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 5194
% Factoring: 845
% Forward superposition: 6210
% Backward superposition: 6793
% Self superposition: 105
% Equality factoring: 28
% 
% Split clauses: 434
% Split components: 873
% SAT solver clauses: 567
% SAT solver unit clauses: 5
% SAT solver binary clauses: 41
% 
% Sat splits: 434
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 567
% TWLsolver calls for satisfiability: 73
% 
% Memory used [KB]: 15863
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (23082)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 236
% Passive clauses: 2247
% Generated clauses: 13391
% Final active clauses: 225
% Final passive clauses: 2003
% Input formulas: 37
% Initial clauses: 61
% 
% Duplicate literals: 325
% Trivial inequalities: 6
% Fw subsumption resolutions: 581
% Fw demodulations: 478
% Bw demodulations: 15
% Condensations: 496
% Global subsumptions: 4
% 
% Simple tautologies: 109
% Equational tautologies: 24
% Forward subsumptions: 6236
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 1382
% Factoring: 305
% Forward superposition: 3522
% Backward superposition: 3806
% Self superposition: 99
% Equality factoring: 26
% 
% Split clauses: 84
% Split components: 173
% SAT solver clauses: 2731
% SAT solver unit clauses: 83
% SAT solver binary clauses: 36
% SAT solver learnt clauses: 8
% 
% Sat splits: 84
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2715
% TWLsolver calls for satisfiability: 337
% 
% Memory used [KB]: 19957
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f67382,plain,(
  $false),
  inference(subsumption_resolution,[],[f111,f29987])).
fof(f29987,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X5),s('type.num.num',X4))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f29857,f28235])).
fof(f28235,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X8))))),s('type.num.num',X7)))) )),
  inference(forward_demodulation,[],[f28110,f16443])).
fof(f16443,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f1961,f146])).
fof(f146,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X9] : ! [X19,X20] : s(X9,X19) = s(X9,'const.bool.COND_3'(s(bool,'T_0'),s(X9,X19),s(X9,X20)))),
  file('thm.numeral.iSUB_THM|split|3','thm.bool.COND_CLAUSES|split|0')).
fof(f1961,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1960,f168])).
fof(f168,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X15,X16] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X8),s('type.num.num',X15),s('type.num.num',X16))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X8),s('type.num.num',X15))),s('type.num.num',X16)))),
  file('thm.numeral.iSUB_THM|split|3','ARITY_2_3_const.numeral.iSUB')).
fof(f1960,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1959,f119])).
fof(f119,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X8))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X8)))),
  file('thm.numeral.iSUB_THM|split|3','ARITY_0_1_const.numeral.iDUB')).
fof(f1959,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1958,f171])).
fof(f171,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X23,X24,X25] : ! [X26,X27,X28] : s(X23,happ(s(fun(X24,X23),X26),s(X24,happ(s(fun(X25,X24),X27),s(X25,X28))))) = s(X23,happ(s(fun(X25,X23),'_dst_x0x1_2'(s(fun(X24,X23),X26),s(fun(X25,X24),X27))),s(X25,X28)))),
  file('thm.numeral.iSUB_THM|split|3','_dst_x0x1_ax')).
fof(f1958,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1957,f168])).
fof(f1957,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1956,f120])).
fof(f120,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X8)))),
  file('thm.numeral.iSUB_THM|split|3','ARITY_0_1_const.arithmetic.BIT|49|')).
fof(f1956,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f1955,f171])).
fof(f1955,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f1854,f152])).
fof(f152,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X9] : ! [X6,X10,X21,X22] : s(X9,happ(s(fun('type.num.num',X9),X22),s('type.num.num',X6))) = s(X9,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(X9,X10),s(fun('type.num.num',X9),X21),s(fun('type.num.num',X9),X22)))),
  file('thm.numeral.iSUB_THM|split|3','thm.numeral.iBIT_cases|split|2')).
fof(f1854,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s('type.num.num',X2))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X3))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3)))))))))) )),
  inference(superposition,[],[f175,f152])).
fof(f175,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f174,f168])).
fof(f174,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f169,f120])).
fof(f169,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X17,X6,X14] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X17),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num',X14))) = s('type.num.num','const.bool.COND_3'(s(bool,X17),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X14),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|3','thm.numeral.iSUB_DEF|split|2')).
fof(f28110,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X8))))),s('type.num.num',X7)))) )),
  inference(superposition,[],[f1899,f152])).
fof(f1899,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num',X3))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X4))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f175,f146])).
fof(f29857,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X5))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f4263,f153])).
fof(f153,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9] : ! [X6,X10,X21,X22] : s(X9,happ(s(fun('type.num.num',X9),X21),s('type.num.num',X6))) = s(X9,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(X9,X10),s(fun('type.num.num',X9),X21),s(fun('type.num.num',X9),X22)))),
  file('thm.numeral.iSUB_THM|split|3','thm.numeral.iBIT_cases|split|1')).
fof(f4263,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X5))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))) )),
  inference(backward_demodulation,[],[f4194,f1900])).
fof(f1900,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X5))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f175,f147])).
fof(f147,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X9] : ! [X19,X20] : s(X9,X20) = s(X9,'const.bool.COND_3'(s(bool,'F_0'),s(X9,X19),s(X9,X20)))),
  file('thm.numeral.iSUB_THM|split|3','thm.bool.COND_CLAUSES|split|1')).
fof(f4194,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f1988,f146])).
fof(f1988,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(backward_demodulation,[],[f1900,f178])).
fof(f178,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f177,f168])).
fof(f177,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f176,f120])).
fof(f176,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f170,f119])).
fof(f170,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X17,X6,X14] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X17),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))))),s('type.num.num',X14))) = s('type.num.num','const.bool.COND_3'(s(bool,X17),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X14),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X14),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|3','thm.numeral.iSUB_DEF|split|1')).
fof(f111,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK1),s('type.num.num',sK2))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2)))))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK1),s('type.num.num',sK2))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f85])).
fof(f85,plain,(
  ? [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))),
  file('thm.numeral.iSUB_THM|split|3','thm.numeral.iSUB_THM|split|3')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 350
% Passive clauses: 8798
% Generated clauses: 71331
% Final active clauses: 133
% Final passive clauses: 346
% Input formulas: 37
% Initial clauses: 61
% Discarded non-redundant clauses: 6380
% 
% Duplicate literals: 2261
% Trivial inequalities: 164
% Fw subsumption resolutions: 2494
% Fw demodulations: 9203
% Bw demodulations: 3290
% Condensations: 4006
% Global subsumptions: 7
% 
% Simple tautologies: 194
% Equational tautologies: 127
% Forward subsumptions: 41929
% Fw demodulations to eq. taut.: 15
% Bw demodulations to eq. taut.: 353
% 
% Unit resulting resolution: 1295
% Forward superposition: 20007
% Backward superposition: 21642
% Self superposition: 330
% Equality factoring: 76
% Equality resolution: 5
% 
% Split clauses: 283
% Split components: 572
% SAT solver clauses: 9388
% SAT solver unit clauses: 748
% SAT solver binary clauses: 1492
% 
% Sat splits: 283
% Sat splitting refutations: 15
% 
% Memory used [KB]: 81491
% Time elapsed: 4.634 s
% ------------------------------
% ------------------------------
% Success in time 5.97 s
