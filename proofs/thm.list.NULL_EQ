Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f3874,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3855,f257,f399,f397,f408,f258,f400,f398,f265,f402])).
fof(f402,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f265,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.NULL_EQ',aHL_FALSITY)).
fof(f398,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl1),
  inference(cnf_transformation,[],[f398_D])).
fof(f398_D,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f400,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | $spl3),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f258,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1) | ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))))),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  (p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1)) & (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f198])).
fof(f198,plain,(
  ? [X0,X1] : ((p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)))),
  inference(nnf_transformation,[],[f177])).
fof(f177,plain,(
  ? [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <~> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.NULL_EQ','thm.list.NULL_EQ')).
fof(f408,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f407,f266])).
fof(f266,plain,(
  ( ! [X0] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),'const.list.NIL_0'))))),
  file('thm.list.NULL_EQ','thm.list.NULL|split|0')).
fof(f407,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f399,f398])).
fof(f397,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl0),
  inference(cnf_transformation,[],[f397_D])).
fof(f397_D,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f399,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl2),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f257,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))))),
  inference(cnf_transformation,[],[f199])).
fof(f3855,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f3854,f400])).
fof(f3854,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f3784,f410])).
fof(f410,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl5),
  inference(resolution,[],[f270,f402])).
fof(f270,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.list.NULL_EQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f3784,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl0),
  inference(superposition,[],[f3743,f413])).
fof(f413,plain,(
  s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))) | $spl0),
  inference(resolution,[],[f271,f397])).
fof(f271,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f202])).
fof(f3743,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X4),X5))) | s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),X5)) )),
  inference(superposition,[],[f337,f326])).
fof(f326,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK2(X1,X0)),s('type.list.list'(X0),sK3(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f237])).
fof(f237,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK2(X1,X0)),s('type.list.list'(X0),sK3(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3])],[f106])).
fof(f106,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X6] : ! [X7] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) | ? [X8,X9] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9))))),
  file('thm.list.NULL_EQ','thm.list.list_CASES')).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2] : s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8,X9] : s(bool,'F_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  file('thm.list.NULL_EQ','thm.list.NULL_DEF|split|1')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 67
% Passive clauses: 664
% Generated clauses: 3541
% Final active clauses: 56
% Final passive clauses: 551
% Input formulas: 69
% Initial clauses: 137
% 
% Duplicate literals: 181
% Trivial inequalities: 55
% Fw subsumption resolutions: 322
% Fw demodulations: 304
% Bw demodulations: 9
% 
% Simple tautologies: 138
% Equational tautologies: 34
% Forward subsumptions: 1784
% 
% Binary resolution: 111
% Factoring: 1
% Forward superposition: 948
% Backward superposition: 1322
% Self superposition: 66
% Equality factoring: 54
% Equality resolution: 9
% 
% Split clauses: 56
% Split components: 113
% SAT solver clauses: 93
% SAT solver unit clauses: 5
% SAT solver binary clauses: 60
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 56
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 87
% TWLsolver calls for satisfiability: 21
% 
% Memory used [KB]: 2430
% Time elapsed: 0.132 s
% ------------------------------
% ------------------------------
% Success in time 0.155 s
