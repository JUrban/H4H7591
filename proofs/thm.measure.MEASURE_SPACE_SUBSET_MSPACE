Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (85577)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 240
% Passive clauses: 2758
% Generated clauses: 19829
% Final active clauses: 225
% Final passive clauses: 2277
% Input formulas: 24
% Initial clauses: 73
% 
% Duplicate literals: 1001
% Trivial inequalities: 256
% Fw subsumption resolutions: 3514
% Fw demodulations: 2489
% Bw demodulations: 10
% 
% Simple tautologies: 332
% Equational tautologies: 18
% Forward subsumptions: 7664
% 
% Binary resolution: 1702
% Forward superposition: 6718
% Backward superposition: 3676
% Self superposition: 79
% Equality factoring: 32
% Equality resolution: 47
% 
% Split clauses: 993
% Split components: 2004
% SAT solver clauses: 2014
% SAT solver unit clauses: 18
% SAT solver binary clauses: 132
% 
% Sat splits: 993
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2011
% TWLsolver calls for satisfiability: 335
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% (85618)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 225
% Passive clauses: 815
% Generated clauses: 11577
% Final active clauses: 182
% Final passive clauses: 456
% Input formulas: 24
% Initial clauses: 73
% 
% Duplicate literals: 702
% Trivial inequalities: 176
% Fw subsumption resolutions: 1407
% Fw demodulations: 579
% Bw demodulations: 120
% Condensations: 1233
% Global subsumptions: 4
% 
% Simple tautologies: 260
% Equational tautologies: 21
% Forward subsumptions: 4837
% Bw demodulations to eq. taut.: 37
% 
% Binary resolution: 582
% Forward superposition: 3315
% Backward superposition: 2189
% Self superposition: 79
% Equality factoring: 56
% Equality resolution: 49
% 
% Split clauses: 324
% Split components: 655
% SAT solver clauses: 1547
% SAT solver unit clauses: 80
% SAT solver binary clauses: 48
% SAT solver learnt clauses: 8
% 
% Sat splits: 324
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1530
% TWLsolver calls for satisfiability: 762
% 
% Memory used [KB]: 9722
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.measure
% (85644)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 291
% Passive clauses: 1485
% Generated clauses: 125422
% Final active clauses: 63
% Final passive clauses: 173
% Input formulas: 24
% Initial clauses: 73
% 
% Duplicate literals: 5459
% Trivial inequalities: 662
% Fw subsumption resolutions: 12140
% Fw demodulations: 10590
% Bw demodulations: 888
% Condensations: 11801
% Global subsumptions: 2866
% 
% Simple tautologies: 1094
% Equational tautologies: 525
% Forward subsumptions: 73662
% Fw demodulations to eq. taut.: 31
% Bw demodulations to eq. taut.: 42
% 
% Unit resulting resolution: 2160
% Forward superposition: 25350
% Backward superposition: 20917
% Self superposition: 544
% Equality factoring: 278
% Equality resolution: 81
% 
% Split clauses: 208
% Split components: 421
% SAT solver clauses: 7625
% SAT solver unit clauses: 44
% SAT solver binary clauses: 203
% 
% Sat splits: 208
% Sat splitting refutations: 2855
% 
% Memory used [KB]: 82258
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f2289,plain,(
  $false),
  inference(subsumption_resolution,[],[f2288,f173])).
fof(f173,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE',aHL_FALSITY)).
fof(f2288,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f2287,f1702])).
fof(f1702,plain,(
  s(bool,'F_0') = s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))),
  inference(subsumption_resolution,[],[f1693,f173])).
fof(f1693,plain,(
  p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))),
  inference(superposition,[],[f1546,f230])).
fof(f230,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(sK1,bool),sK2),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))),
  inference(resolution,[],[f111,f166])).
fof(f166,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.bool.EQ_CLAUSES|split|3')).
fof(f111,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(sK1,bool),sK2),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))) & p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK2),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(sK1,bool),sK2),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f58])).
fof(f58,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.MEASURE_SPACE_SUBSET_MSPACE')).
fof(f1546,plain,(
  ( ! [X38] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(sK1,bool),sK2),s(fun(sK1,bool),X38)))) | s(bool,'F_0') = s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),X38),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))) )),
  inference(resolution,[],[f528,f166])).
fof(f528,plain,(
  ( ! [X0] : (~p(s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),X0),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(sK1,bool),sK2),s(fun(sK1,bool),X0))))) )),
  inference(resolution,[],[f110,f112])).
fof(f112,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X1)))))) & ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK4(X2,X1,X0)),s(fun(fun(X0,bool),bool),X2)))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),sK4(X2,X1,X0)),s(fun(X0,bool),X1))))) | p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X1)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))))) | p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))))))),
  inference(rectify,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))))) | p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))))))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),X2)))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X3),s(fun(X0,bool),X1))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X17,X18] : (p(s(bool,'const.measure.subset_class_2'(s(fun(X6,bool),X17),s(fun(fun(X6,bool),bool),X18)))) <=> ! [X10] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X10),s(fun(fun(X6,bool),bool),X18)))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X10),s(fun(X6,bool),X17))))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.subset_class_def')).
fof(f110,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK2),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),
  inference(cnf_transformation,[],[f75])).
fof(f2287,plain,(
  p(s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),
  inference(forward_demodulation,[],[f2286,f180])).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X10,X11] : s(fun(X6,bool),X10) = s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X10),s(fun(fun(X6,bool),bool),X11)))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.space_def')).
fof(f2286,plain,(
  p(s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),
  inference(forward_demodulation,[],[f2282,f179])).
fof(f179,plain,(
  ( ! [X2,X0,X1] : (s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1,X2] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X10,X11] : s(fun(fun(X6,bool),bool),X11) = s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X10),s(fun(fun(X6,bool),bool),X11)))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.subsets_def')).
fof(f2282,plain,(
  p(s(bool,'const.measure.subset_class_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))))))),
  inference(resolution,[],[f2251,f124])).
fof(f124,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK6(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),sK6(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK7(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK8(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK7(X1,X0)),s(fun(X0,bool),sK8(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8])],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(rectify,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f2251,plain,(
  sP0(sK1,'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3)))))),
  inference(resolution,[],[f1643,f134])).
fof(f134,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | sP0(X0,X1)) & (~sP0(X0,X1) | p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> sP0(X0,X1))),
  inference(definition_folding,[],[f63,f73])).
fof(f63,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X19] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))) & ! [X20] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X20),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19))),s(fun(X6,bool),X20))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19))))))) & ! [X20,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X20),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X20),s(fun(X6,bool),X9))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.algebra_def')).
fof(f1643,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))))),
  inference(resolution,[],[f182,f115])).
fof(f115,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),sK5(X1,X0))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),sK5(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),sK5(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f81])).
fof(f81,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(rectify,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X19] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))) & ! [X21] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X21)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X21),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X21))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X19)))))))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.sigma_algebra_def')).
fof(f182,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))))))),
  inference(resolution,[],[f109,f120])).
fof(f120,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))) <=> (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))))))) & p(s(bool,'const.measure.positive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8)))) & p(s(bool,'const.measure.countably_additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X8))))))),
  file('thm.measure.MEASURE_SPACE_SUBSET_MSPACE','thm.measure.measure_space_def')).
fof(f109,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK3))))),
  inference(cnf_transformation,[],[f75])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 97
% Passive clauses: 174
% Generated clauses: 2093
% Final active clauses: 82
% Final passive clauses: 71
% Input formulas: 24
% Initial clauses: 72
% 
% Selected by SInE selection: 23
% SInE iterations: 1
% 
% Duplicate literals: 39
% Trivial inequalities: 46
% Fw subsumption resolutions: 456
% Fw demodulations: 167
% Bw demodulations: 10
% 
% Simple tautologies: 79
% Forward subsumptions: 1037
% 
% Binary resolution: 435
% Forward superposition: 394
% Backward superposition: 512
% Equality resolution: 8
% 
% Split clauses: 129
% Split components: 283
% SAT solver clauses: 146
% SAT solver unit clauses: 14
% SAT solver binary clauses: 90
% 
% Sat splits: 129
% Sat splitting refutations: 14
% 
% Memory used [KB]: 1918
% Time elapsed: 0.044 s
% ------------------------------
% ------------------------------
% Success in time 11.767 s
