Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (76189)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 1697
% Generated clauses: 18861
% Final active clauses: 131
% Final passive clauses: 1397
% Input formulas: 19
% Initial clauses: 59
% 
% Duplicate literals: 986
% Trivial inequalities: 305
% Fw subsumption resolutions: 3358
% Fw demodulations: 1892
% Bw demodulations: 15
% 
% Simple tautologies: 467
% Equational tautologies: 58
% Forward subsumptions: 8201
% 
% Binary resolution: 481
% Forward superposition: 4543
% Backward superposition: 6838
% Self superposition: 224
% Equality factoring: 173
% Equality resolution: 30
% 
% Split clauses: 1281
% Split components: 2652
% SAT solver clauses: 2047
% SAT solver unit clauses: 29
% SAT solver binary clauses: 222
% 
% Sat splits: 1281
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2046
% TWLsolver calls for satisfiability: 172
% 
% Memory used [KB]: 9210
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f794,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f793,f89,f168,f126,f191,f195,f198,f86,f166,f94,f172,f785,f782,f91,f170,f118,f187,f196,f200,f87,f164,f253,f258,f88,f162,f98,f174])).
fof(f174,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f98,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.measure.ALGEBRA_COMPL','thm.bool.EQ_CLAUSES|split|2')).
fof(f162,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f88,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))) & p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f45])).
fof(f45,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  file('thm.measure.ALGEBRA_COMPL','thm.measure.ALGEBRA_COMPL')).
fof(f258,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) | $spl60),
  inference(cnf_transformation,[],[f258_D])).
fof(f258_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f253,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),'const.pred_set.DIFF_2'(s(fun(sK1,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))),s(fun(sK1,bool),sK3))),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) | ($spl1 | $spl16)),
  inference(resolution,[],[f162,f174])).
fof(f164,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) | $spl2),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f87,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))))),
  inference(cnf_transformation,[],[f60])).
fof(f200,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) | $spl50),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f196,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))) | ($spl2 | $spl12)),
  inference(resolution,[],[f172,f164])).
fof(f187,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | $spl34),
  inference(cnf_transformation,[],[f187_D])).
fof(f187_D,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f118,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK4(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),sK4(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK5(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK6(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK5(X1,X0)),s(fun(X0,bool),sK6(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6])],[f77])).
fof(f77,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(rectify,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f170,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f91,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.measure.ALGEBRA_COMPL',aHL_FALSITY)).
fof(f782,plain,(
  ~sP0(sK1,sK2) | $spl117),
  inference(cnf_transformation,[],[f782_D])).
fof(f782_D,plain,(
  ~sP0(sK1,sK2) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f785,plain,(
  ~sP0(sK1,sK2) | ($spl6 | $spl9 | $spl34 | $spl50 | $spl60)),
  inference(subsumption_resolution,[],[f784,f168])).
fof(f784,plain,(
  ~p(s(bool,'T_0')) | ~sP0(sK1,sK2) | ($spl9 | $spl34 | $spl50 | $spl60)),
  inference(forward_demodulation,[],[f783,f200])).
fof(f783,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) | ~sP0(sK1,sK2) | ($spl9 | $spl34 | $spl60)),
  inference(subsumption_resolution,[],[f768,f170])).
fof(f768,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,bool),sK3),s(fun(fun(sK1,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))))) | ~sP0(sK1,sK2) | ($spl34 | $spl60)),
  inference(superposition,[],[f187,f258])).
fof(f172,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f94,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.measure.ALGEBRA_COMPL','thm.bool.EQ_CLAUSES|split|1')).
fof(f166,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))) | $spl4),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f86,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))))),
  inference(cnf_transformation,[],[f60])).
fof(f198,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))) | $spl48),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f195,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2))) | ($spl4 | $spl12)),
  inference(resolution,[],[f172,f166])).
fof(f191,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) | $spl42),
  inference(cnf_transformation,[],[f191_D])).
fof(f191_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f126,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | sP0(X0,X1)) & (~sP0(X0,X1) | p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> sP0(X0,X1))),
  inference(definition_folding,[],[f52,f58])).
fof(f52,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & ! [X8] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) & ! [X8,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))))),
  file('thm.measure.ALGEBRA_COMPL','thm.measure.algebra_def')).
fof(f168,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f89,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.ALGEBRA_COMPL',aHL_TRUTH)).
fof(f793,plain,(
  $false | ($spl6 | $spl42 | $spl48 | $spl117)),
  inference(subsumption_resolution,[],[f792,f168])).
fof(f792,plain,(
  ~p(s(bool,'T_0')) | ($spl42 | $spl48 | $spl117)),
  inference(forward_demodulation,[],[f791,f198])).
fof(f791,plain,(
  ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK2)))) | ($spl42 | $spl117)),
  inference(resolution,[],[f782,f191])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 55
% Generated clauses: 681
% Final active clauses: 27
% Final passive clauses: 25
% Input formulas: 19
% Initial clauses: 59
% 
% Duplicate literals: 67
% Trivial inequalities: 11
% Fw subsumption resolutions: 53
% Fw demodulations: 21
% Bw demodulations: 3
% Condensations: 77
% Global subsumptions: 4
% 
% Simple tautologies: 51
% Equational tautologies: 16
% Forward subsumptions: 221
% 
% Binary resolution: 29
% Forward superposition: 87
% Backward superposition: 159
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 3
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 168
% SAT solver unit clauses: 64
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 9
% 
% Sat splits: 7
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 151
% TWLsolver calls for satisfiability: 480
% 
% Memory used [KB]: 1279
% Time elapsed: 0.020 s
% ------------------------------
% ------------------------------
% Success in time 0.634 s
