Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% (63274)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 211
% Passive clauses: 3523
% Generated clauses: 19467
% Final active clauses: 199
% Final passive clauses: 3077
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 926
% Trivial inequalities: 500
% Fw subsumption resolutions: 2467
% Fw demodulations: 2482
% Bw demodulations: 5
% 
% Simple tautologies: 408
% Equational tautologies: 24
% Forward subsumptions: 7860
% Fw demodulations to eq. taut.: 43
% 
% Binary resolution: 309
% Forward superposition: 6796
% Backward superposition: 5455
% Self superposition: 112
% Equality factoring: 50
% Equality resolution: 59
% 
% Split clauses: 746
% Split components: 1515
% SAT solver clauses: 1412
% SAT solver unit clauses: 8
% SAT solver binary clauses: 78
% 
% Sat splits: 746
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1407
% TWLsolver calls for satisfiability: 228
% 
% Memory used [KB]: 13944
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f6615,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6613,f115,f161,f170,f172,f81,f142,f79,f145,f78,f147,f3259,f3260,f306,f314,f101,f157,f106,f159,f5122,f5124,f6060,f6367,f5392,f5454,f4143,f4167,f3337,f3378,f3307,f3309,f3257,f3258,f4126,f4134,f3343,f3384,f6256,f1412,f1389,f1392,f1390,f6216,f3335,f3376,f116,f162,f801,f803,f305,f313,f167,f168,f80,f143,f301,f312,f118,f164,f117,f163,f807,f878])).
fof(f878,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP2_3'(s(fun(X14,fun(X17,X16)),X18),s('type.option.option'(X14),X15),s('type.option.option'(X17),'const.option.SOME_1'(s(X17,X19))))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X17,X16),happ(s(fun(X14,fun(X17,X16)),X18),s(X14,sK9(X15,X14)))),s(X17,X19))))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) | $spl164),
  inference(cnf_transformation,[],[f878_D])).
fof(f878_D,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP2_3'(s(fun(X14,fun(X17,X16)),X18),s('type.option.option'(X14),X15),s('type.option.option'(X17),'const.option.SOME_1'(s(X17,X19))))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X17,X16),happ(s(fun(X14,fun(X17,X16)),X18),s(X14,sK9(X15,X14)))),s(X17,X19))))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f807,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (s('type.option.option'(X16),'const.option.OPTION_MAP2_3'(s(fun(X14,fun(X17,X16)),X18),s('type.option.option'(X14),X15),s('type.option.option'(X17),'const.option.SOME_1'(s(X17,X19))))) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,happ(s(fun(X17,X16),happ(s(fun(X14,fun(X17,X16)),X18),s(X14,sK9(X15,X14)))),s(X17,X19))))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f164,f157])).
fof(f163,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) ) | $spl26),
  inference(cnf_transformation,[],[f163_D])).
fof(f163_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f117,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8,X6,X7] : ! [X16,X24] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X24),s('type.option.option'(X8),'const.option.NONE_0'),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X16)))))),
  file('thm.option.OPTION_MAP2_cong','thm.option.OPTION_MAP2_THM|split|2')).
fof(f164,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))) ) | $spl28),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f118,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X5),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X4))),s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X3))))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7,X8,X6] : ! [X16,X15,X24] : s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X24),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X15))),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X16))))) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X6,X7),happ(s(fun(X8,fun(X6,X7)),X24),s(X8,X15))),s(X6,X16)))))),
  file('thm.option.OPTION_MAP2_cong','thm.option.OPTION_MAP2_THM|split|0')).
fof(f312,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),X1) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X2) = s(X0,sK9(X1,X0)) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) | $spl84),
  inference(cnf_transformation,[],[f312_D])).
fof(f312_D,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),X1) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X2) = s(X0,sK9(X1,X0)) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f301,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),X1) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X2) = s(X0,sK9(X1,X0)) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) | ($spl14 | $spl18)),
  inference(superposition,[],[f159,f157])).
fof(f143,plain,(
  ( ! [X10,X9] : (s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10))) | s('type.option.option'(sK2),sK6) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s('type.option.option'(sK1),sK4) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9)))) ) | $spl2),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  ( ! [X10,X9] : (s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10))) | s('type.option.option'(sK2),sK6) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s('type.option.option'(sK1),sK4) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f80,plain,(
  ( ! [X10,X9] : (s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10))) | s('type.option.option'(sK2),sK6) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s('type.option.option'(sK1),sK4) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),sK4) & s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),sK6) & ! [X9,X10] : (s('type.option.option'(sK1),sK4) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9))) | s('type.option.option'(sK2),sK6) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10)))) & s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (s('type.option.option'(X1),X3) = s('type.option.option'(X1),X4) & s('type.option.option'(X2),X5) = s('type.option.option'(X2),X6) & ! [X9,X10] : (s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X9))) | s('type.option.option'(X2),X6) != s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X10))) | s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X9))),s(X2,X10))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X8),s(X1,X9))),s(X2,X10)))) & s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.option.option'(X1),X3),s('type.option.option'(X2),X5))) != s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X8),s('type.option.option'(X1),X4),s('type.option.option'(X2),X6))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.option.option'(X1),X3) = s('type.option.option'(X1),X4) & s('type.option.option'(X2),X5) = s('type.option.option'(X2),X6) & ! [X9,X10] : ((s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X9))) | s('type.option.option'(X2),X6) != s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X10)))) | s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X9))),s(X2,X10))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X8),s(X1,X9))),s(X2,X10))))) & s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.option.option'(X1),X3),s('type.option.option'(X2),X5))) != s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X8),s('type.option.option'(X1),X4),s('type.option.option'(X2),X6))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.option.option'(X1),X3) = s('type.option.option'(X1),X4) & s('type.option.option'(X2),X5) = s('type.option.option'(X2),X6) & ! [X9,X10] : ((s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X9))) & s('type.option.option'(X2),X6) = s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X10)))) => s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X9))),s(X2,X10))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X8),s(X1,X9))),s(X2,X10))))) => s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.option.option'(X1),X3),s('type.option.option'(X2),X5))) = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X8),s('type.option.option'(X1),X4),s('type.option.option'(X2),X6))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8] : ((s('type.option.option'(X1),X3) = s('type.option.option'(X1),X4) & s('type.option.option'(X2),X5) = s('type.option.option'(X2),X6) & ! [X9,X10] : ((s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X9))) & s('type.option.option'(X2),X6) = s('type.option.option'(X2),'const.option.SOME_1'(s(X2,X10)))) => s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X7),s(X1,X9))),s(X2,X10))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X8),s(X1,X9))),s(X2,X10))))) => s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X7),s('type.option.option'(X1),X3),s('type.option.option'(X2),X5))) = s('type.option.option'(X0),'const.option.OPTION_MAP2_3'(s(fun(X1,fun(X2,X0)),X8),s('type.option.option'(X1),X4),s('type.option.option'(X2),X6))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14] : ((s('type.option.option'(X7),X9) = s('type.option.option'(X7),X10) & s('type.option.option'(X8),X11) = s('type.option.option'(X8),X12) & ! [X15,X16] : ((s('type.option.option'(X7),X10) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15))) & s('type.option.option'(X8),X12) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X16)))) => s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X13),s(X7,X15))),s(X8,X16))) = s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X14),s(X7,X15))),s(X8,X16))))) => s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X13),s('type.option.option'(X7),X9),s('type.option.option'(X8),X11))) = s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X14),s('type.option.option'(X7),X10),s('type.option.option'(X8),X12))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14] : ((s('type.option.option'(X7),X9) = s('type.option.option'(X7),X10) & s('type.option.option'(X8),X11) = s('type.option.option'(X8),X12) & ! [X15,X16] : ((s('type.option.option'(X7),X10) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15))) & s('type.option.option'(X8),X12) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X16)))) => s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X13),s(X7,X15))),s(X8,X16))) = s(X6,happ(s(fun(X8,X6),happ(s(fun(X7,fun(X8,X6)),X14),s(X7,X15))),s(X8,X16))))) => s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X13),s('type.option.option'(X7),X9),s('type.option.option'(X8),X11))) = s('type.option.option'(X6),'const.option.OPTION_MAP2_3'(s(fun(X7,fun(X8,X6)),X14),s('type.option.option'(X7),X10),s('type.option.option'(X8),X12))))),
  file('thm.option.OPTION_MAP2_cong','thm.option.OPTION_MAP2_cong')).
fof(f168,plain,(
  ( ! [X10,X9] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10)))) ) | $spl32),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  ( ! [X10,X9] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f167,plain,(
  ( ! [X10,X9] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9))) | s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10)))) ) | ($spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f166,f147])).
fof(f166,plain,(
  ( ! [X10,X9] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X10))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X9))),s(sK2,X10))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X9))),s(sK2,X10))) | s('type.option.option'(sK1),sK4) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X9)))) ) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f143,f145])).
fof(f313,plain,(
  ( ! [X12,X13] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X13))) | s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X12) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X12)) ) | $spl86),
  inference(cnf_transformation,[],[f313_D])).
fof(f313_D,plain,(
  ( ! [X12,X13] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X13))) | s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X12) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X12)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f305,plain,(
  ( ! [X12,X13] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X12) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,X13))) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,X13))),s(sK2,sK9(X12,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X12)) ) | ($spl14 | $spl32)),
  inference(superposition,[],[f168,f157])).
fof(f803,plain,(
  ( ! [X6,X7] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X7) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X6) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X7) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X6)) ) | $spl160),
  inference(cnf_transformation,[],[f803_D])).
fof(f803_D,plain,(
  ( ! [X6,X7] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X7) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X6) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X7) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X6)) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f801,plain,(
  ( ! [X6,X7] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X6) | s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),X7) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X6,sK1)))),s(sK2,sK9(X7,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),X7) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X6)) ) | ($spl14 | $spl86)),
  inference(superposition,[],[f313,f157])).
fof(f162,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))) ) | $spl24),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f116,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X4),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X6,X7] : ! [X15,X24] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X24),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X15))),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.OPTION_MAP2_cong','thm.option.OPTION_MAP2_THM|split|1')).
fof(f3376,plain,(
  ( ! [X6,X7,X5] : (s('type.option.option'(X5),'const.option.NONE_0') = s('type.option.option'(X5),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X6,X5)),X7),s('type.option.option'(sK1),sK3),s('type.option.option'(X6),'const.option.NONE_0')))) ) | $spl1082),
  inference(cnf_transformation,[],[f3376_D])).
fof(f3376_D,plain,(
  ( ! [X6,X7,X5] : (s('type.option.option'(X5),'const.option.NONE_0') = s('type.option.option'(X5),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X6,X5)),X7),s('type.option.option'(sK1),sK3),s('type.option.option'(X6),'const.option.NONE_0')))) ) <=> ~$spl1082),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1082])])).
fof(f3335,plain,(
  ( ! [X6,X7,X5] : (s('type.option.option'(X5),'const.option.NONE_0') = s('type.option.option'(X5),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X6,X5)),X7),s('type.option.option'(sK1),sK3),s('type.option.option'(X6),'const.option.NONE_0')))) ) | ($spl24 | $spl1062)),
  inference(superposition,[],[f162,f3309])).
fof(f6216,plain,(
  $false | ($spl35 | $spl346 | $spl1082)),
  inference(subsumption_resolution,[],[f6215,f3376])).
fof(f6215,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl35 | $spl346 | $spl1082)),
  inference(forward_demodulation,[],[f6154,f3376])).
fof(f6154,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.NONE_0'))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl35 | $spl346)),
  inference(backward_demodulation,[],[f1392,f172])).
fof(f1390,plain,(
  ( ! [X33] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X33) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X33) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2))))) ) | $spl344),
  inference(cnf_transformation,[],[f1390_D])).
fof(f1390_D,plain,(
  ( ! [X33] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X33) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X33) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f1392,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK5) | $spl346),
  inference(cnf_transformation,[],[f1392_D])).
fof(f1392_D,plain,(
  s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK5) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f1389,plain,(
  ( ! [X33] : (s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK5) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X33) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X33)) ) | ($spl4 | $spl160)),
  inference(forward_demodulation,[],[f1384,f145])).
fof(f1384,plain,(
  ( ! [X33] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X33) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK6) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X33)) ) | ($spl4 | $spl160)),
  inference(trivial_inequality_removal,[],[f1382])).
fof(f1382,plain,(
  ( ! [X33] : (s('type.option.option'(sK2),sK5) != s('type.option.option'(sK2),sK5) | s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X33) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(X33,sK1)))),s(sK2,sK9(sK6,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK6) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X33)) ) | ($spl4 | $spl160)),
  inference(superposition,[],[f803,f145])).
fof(f1412,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | $spl358),
  inference(cnf_transformation,[],[f1412_D])).
fof(f1412_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f6256,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl6 | $spl344 | $spl361 | $spl1278)),
  inference(subsumption_resolution,[],[f6255,f1413])).
fof(f1413,plain,(
  s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) != s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) | $spl361),
  inference(cnf_transformation,[],[f1413_D])).
fof(f1413_D,plain,(
  s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) != s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) <=> ~$spl361),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl361])])).
fof(f6255,plain,(
  s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl6 | $spl344 | $spl1278)),
  inference(forward_demodulation,[],[f6254,f4134])).
fof(f6254,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) | ($spl6 | $spl344)),
  inference(forward_demodulation,[],[f6241,f147])).
fof(f6241,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) | ($spl6 | $spl344)),
  inference(trivial_inequality_removal,[],[f1401])).
fof(f1401,plain,(
  s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),sK3) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK4,sK1)))),s(sK2,sK9(sK6,sK2)))) | ($spl6 | $spl344)),
  inference(superposition,[],[f1390,f147])).
fof(f3384,plain,(
  ( ! [X27] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X27) | s(sK1,sK9(sK4,sK1)) = s(sK1,sK9(X27,sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X27)) ) | $spl1098),
  inference(cnf_transformation,[],[f3384_D])).
fof(f3384_D,plain,(
  ( ! [X27] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X27) | s(sK1,sK9(sK4,sK1)) = s(sK1,sK9(X27,sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X27)) ) <=> ~$spl1098),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1098])])).
fof(f3343,plain,(
  ( ! [X27] : (s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),X27) | s(sK1,sK9(sK4,sK1)) = s(sK1,sK9(X27,sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),X27)) ) | ($spl84 | $spl1062)),
  inference(superposition,[],[f312,f3309])).
fof(f4134,plain,(
  s(sK1,sK9(sK3,sK1)) = s(sK1,sK9(sK4,sK1)) | $spl1278),
  inference(cnf_transformation,[],[f4134_D])).
fof(f4134_D,plain,(
  s(sK1,sK9(sK3,sK1)) = s(sK1,sK9(sK4,sK1)) <=> ~$spl1278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1278])])).
fof(f4126,plain,(
  s(sK1,sK9(sK3,sK1)) = s(sK1,sK9(sK4,sK1)) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | $spl1098),
  inference(equality_resolution,[],[f3384])).
fof(f3258,plain,(
  ( ! [X62] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X62))) | s('type.option.option'(sK1),X62) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1))))) ) | $spl1020),
  inference(cnf_transformation,[],[f3258_D])).
fof(f3258_D,plain,(
  ( ! [X62] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X62))) | s('type.option.option'(sK1),X62) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1))))) ) <=> ~$spl1020),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1020])])).
fof(f3257,plain,(
  ( ! [X62] : (s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X62))) | s('type.option.option'(sK1),X62) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1))))) ) | ($spl6 | $spl88)),
  inference(forward_demodulation,[],[f3217,f147])).
fof(f3217,plain,(
  ( ! [X62] : (s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),X62))) | s('type.option.option'(sK1),X62) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4)) ) | ($spl6 | $spl88)),
  inference(superposition,[],[f314,f147])).
fof(f3309,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) | $spl1062),
  inference(cnf_transformation,[],[f3309_D])).
fof(f3309_D,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) <=> ~$spl1062),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1062])])).
fof(f3307,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) | ($spl6 | $spl1020)),
  inference(forward_demodulation,[],[f3295,f147])).
fof(f3295,plain,(
  s('type.option.option'(sK1),sK4) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) | ($spl6 | $spl1020)),
  inference(trivial_inequality_removal,[],[f3288])).
fof(f3288,plain,(
  s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) != s('type.option.option'('type.option.option'(sK1)),'const.option.SOME_1'(s('type.option.option'(sK1),sK3))) | s('type.option.option'(sK1),sK4) = s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK9(sK4,sK1)))) | ($spl6 | $spl1020)),
  inference(superposition,[],[f3258,f147])).
fof(f3378,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK4,sK1)))),s(X12,X14)))))) ) | $spl1086),
  inference(cnf_transformation,[],[f3378_D])).
fof(f3378_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK4,sK1)))),s(X12,X14)))))) ) <=> ~$spl1086),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1086])])).
fof(f3337,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK4,sK1)))),s(X12,X14)))))) ) | ($spl28 | $spl1062)),
  inference(superposition,[],[f164,f3309])).
fof(f4167,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK3,sK1)))),s(X12,X14)))))) ) | $spl1288),
  inference(cnf_transformation,[],[f4167_D])).
fof(f4167_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK3,sK1)))),s(X12,X14)))))) ) <=> ~$spl1288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1288])])).
fof(f4143,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.option.option'(X11),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(X12,X11)),X13),s('type.option.option'(sK1),sK3),s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,happ(s(fun(X12,X11),happ(s(fun(sK1,fun(X12,X11)),X13),s(sK1,sK9(sK3,sK1)))),s(X12,X14)))))) ) | ($spl1086 | $spl1278)),
  inference(backward_demodulation,[],[f4134,f3378])).
fof(f5454,plain,(
  ( ! [X10,X11,X9] : (s('type.option.option'(X9),'const.option.NONE_0') = s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X10,fun(sK2,X9)),X11),s('type.option.option'(X10),'const.option.NONE_0'),s('type.option.option'(sK2),sK5)))) ) | $spl1656),
  inference(cnf_transformation,[],[f5454_D])).
fof(f5454_D,plain,(
  ( ! [X10,X11,X9] : (s('type.option.option'(X9),'const.option.NONE_0') = s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X10,fun(sK2,X9)),X11),s('type.option.option'(X10),'const.option.NONE_0'),s('type.option.option'(sK2),sK5)))) ) <=> ~$spl1656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1656])])).
fof(f5392,plain,(
  ( ! [X10,X11,X9] : (s('type.option.option'(X9),'const.option.NONE_0') = s('type.option.option'(X9),'const.option.OPTION_MAP2_3'(s(fun(X10,fun(sK2,X9)),X11),s('type.option.option'(X10),'const.option.NONE_0'),s('type.option.option'(sK2),sK5)))) ) | ($spl26 | $spl1510)),
  inference(superposition,[],[f163,f5124])).
fof(f6367,plain,(
  $false | ($spl35 | $spl358 | $spl1656)),
  inference(subsumption_resolution,[],[f6366,f5454])).
fof(f6366,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK5))) | ($spl35 | $spl358 | $spl1656)),
  inference(forward_demodulation,[],[f6268,f5454])).
fof(f6268,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),sK5))) | ($spl35 | $spl358)),
  inference(backward_demodulation,[],[f1412,f172])).
fof(f6060,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl35 | $spl164 | $spl360 | $spl1288 | $spl1510)),
  inference(subsumption_resolution,[],[f6059,f172])).
fof(f6059,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl164 | $spl360 | $spl1288 | $spl1510)),
  inference(forward_demodulation,[],[f6058,f5124])).
fof(f6058,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))))) = s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl164 | $spl360 | $spl1288)),
  inference(forward_demodulation,[],[f5938,f4167])).
fof(f5938,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))))) = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK3) | ($spl164 | $spl360)),
  inference(superposition,[],[f878,f1414])).
fof(f1414,plain,(
  s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) | $spl360),
  inference(cnf_transformation,[],[f1414_D])).
fof(f1414_D,plain,(
  s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK7),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) = s(sK0,happ(s(fun(sK2,sK0),happ(s(fun(sK1,fun(sK2,sK0)),sK8),s(sK1,sK9(sK3,sK1)))),s(sK2,sK9(sK6,sK2)))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f5124,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) | $spl1510),
  inference(cnf_transformation,[],[f5124_D])).
fof(f5124_D,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) <=> ~$spl1510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1510])])).
fof(f5122,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) | ($spl4 | $spl1022)),
  inference(forward_demodulation,[],[f5106,f145])).
fof(f5106,plain,(
  s('type.option.option'(sK2),sK6) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) | ($spl4 | $spl1022)),
  inference(trivial_inequality_removal,[],[f5099])).
fof(f5099,plain,(
  s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) | s('type.option.option'(sK2),sK6) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) | ($spl4 | $spl1022)),
  inference(superposition,[],[f3260,f145])).
fof(f159,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) ) | $spl18),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7] : ! [X15,X16] : (s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15))) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X16))) <=> s(X7,X15) = s(X7,X16))),
  file('thm.option.OPTION_MAP2_cong','thm.option.SOME_|49||49|')).
fof(f157,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) | $spl14),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f101,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9])],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7] : ! [X23] : (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X23) | ? [X15] : s('type.option.option'(X7),X23) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X15))))),
  file('thm.option.OPTION_MAP2_cong','thm.option.option_nchotomy')).
fof(f314,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X15))) != s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X16))) | s('type.option.option'(X14),X16) = s('type.option.option'(X14),'const.option.SOME_1'(s(X14,sK9(X15,X14)))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) | $spl88),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X15))) != s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X16))) | s('type.option.option'(X14),X16) = s('type.option.option'(X14),'const.option.SOME_1'(s(X14,sK9(X15,X14)))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f306,plain,(
  ( ! [X14,X15,X16] : (s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X15))) != s('type.option.option'('type.option.option'(X14)),'const.option.SOME_1'(s('type.option.option'(X14),X16))) | s('type.option.option'(X14),X16) = s('type.option.option'(X14),'const.option.SOME_1'(s(X14,sK9(X15,X14)))) | s('type.option.option'(X14),'const.option.NONE_0') = s('type.option.option'(X14),X15)) ) | ($spl14 | $spl18)),
  inference(superposition,[],[f159,f157])).
fof(f3260,plain,(
  ( ! [X63] : (s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),X63))) | s('type.option.option'(sK2),X63) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2))))) ) | $spl1022),
  inference(cnf_transformation,[],[f3260_D])).
fof(f3260_D,plain,(
  ( ! [X63] : (s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),X63))) | s('type.option.option'(sK2),X63) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2))))) ) <=> ~$spl1022),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1022])])).
fof(f3259,plain,(
  ( ! [X63] : (s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK5) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),X63))) | s('type.option.option'(sK2),X63) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2))))) ) | ($spl4 | $spl88)),
  inference(forward_demodulation,[],[f3218,f145])).
fof(f3218,plain,(
  ( ! [X63] : (s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK5))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),X63))) | s('type.option.option'(sK2),X63) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK9(sK6,sK2)))) | s('type.option.option'(sK2),'const.option.NONE_0') = s('type.option.option'(sK2),sK6)) ) | ($spl4 | $spl88)),
  inference(superposition,[],[f314,f145])).
fof(f147,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),sK4) | $spl6),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),sK4) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f78,plain,(
  s('type.option.option'(sK1),sK3) = s('type.option.option'(sK1),sK4)),
  inference(cnf_transformation,[],[f58])).
fof(f145,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),sK6) | $spl4),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),sK6) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f79,plain,(
  s('type.option.option'(sK2),sK5) = s('type.option.option'(sK2),sK6)),
  inference(cnf_transformation,[],[f58])).
fof(f142,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK6))) | $spl1),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK6))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f81,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK6)))),
  inference(cnf_transformation,[],[f58])).
fof(f172,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) | $spl35),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f170,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) | ($spl1 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f169,f147])).
fof(f169,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),sK3),s('type.option.option'(sK2),sK5))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),sK4),s('type.option.option'(sK2),sK5))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f142,f145])).
fof(f161,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f115,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : ! [X3] : s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),'const.option.OPTION_MAP2_3'(s(fun(X0,fun(X1,X2)),X3),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),'const.option.NONE_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8,X6,X7] : ! [X24] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_MAP2_3'(s(fun(X8,fun(X6,X7)),X24),s('type.option.option'(X8),'const.option.NONE_0'),s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.OPTION_MAP2_cong','thm.option.OPTION_MAP2_THM|split|3')).
fof(f6613,plain,(
  $false | ($spl22 | $spl35 | $spl346 | $spl358)),
  inference(subsumption_resolution,[],[f6612,f161])).
fof(f6612,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl22 | $spl35 | $spl346 | $spl358)),
  inference(forward_demodulation,[],[f6611,f161])).
fof(f6611,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK7),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) != s('type.option.option'(sK0),'const.option.OPTION_MAP2_3'(s(fun(sK1,fun(sK2,sK0)),sK8),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK2),'const.option.NONE_0'))) | ($spl35 | $spl346 | $spl358)),
  inference(forward_demodulation,[],[f6154,f1412])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 119
% Passive clauses: 1025
% Generated clauses: 6669
% Final active clauses: 76
% Final passive clauses: 702
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 134
% Trivial inequalities: 122
% Fw subsumption resolutions: 222
% Fw demodulations: 935
% Bw demodulations: 235
% Condensations: 211
% Global subsumptions: 4
% 
% Simple tautologies: 127
% Equational tautologies: 19
% Forward subsumptions: 2204
% Fw demodulations to eq. taut.: 29
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 22
% Forward superposition: 2094
% Backward superposition: 1221
% Self superposition: 54
% Equality factoring: 30
% Equality resolution: 48
% 
% Split clauses: 85
% Split components: 178
% SAT solver clauses: 1528
% SAT solver unit clauses: 51
% SAT solver binary clauses: 36
% SAT solver learnt clauses: 10
% SAT solver learnt literals: 1
% 
% Sat splits: 85
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1510
% TWLsolver calls for satisfiability: 250
% 
% Memory used [KB]: 10618
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% Success in time 1.127 s
