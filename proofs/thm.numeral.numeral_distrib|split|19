Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f1254,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1253,f369,f658,f656,f1251,f370,f659,f657])).
fof(f657,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) | $spl1),
  inference(cnf_transformation,[],[f657_D])).
fof(f657_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f659,plain,(
  s('type.num.num',sK13) != s('type.num.num',sK14) | $spl3),
  inference(cnf_transformation,[],[f659_D])).
fof(f659_D,plain,(
  s('type.num.num',sK13) != s('type.num.num',sK14) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f370,plain,(
  s('type.num.num',sK13) != s('type.num.num',sK14) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14)))),
  inference(cnf_transformation,[],[f248])).
fof(f248,plain,(
  (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) | s('type.num.num',sK13) = s('type.num.num',sK14)) & (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) | s('type.num.num',sK13) != s('type.num.num',sK14))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f247])).
fof(f247,plain,(
  ? [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f196])).
fof(f196,plain,(
  ? [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <~> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f89])).
fof(f89,plain,(
  ~! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.numeral.numeral_distrib|split|19','thm.numeral.numeral_distrib|split|19')).
fof(f1251,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f1250,f658])).
fof(f1250,plain,(
  s('type.num.num',sK13) != s('type.num.num',sK14) | $spl1),
  inference(forward_demodulation,[],[f1249,f383])).
fof(f383,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))),
  file('thm.numeral.numeral_distrib|split|19','thm.arithmetic.NUMERAL_DEF')).
fof(f1249,plain,(
  s('type.num.num',sK14) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) | $spl1),
  inference(forward_demodulation,[],[f657,f383])).
fof(f656,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) | $spl0),
  inference(cnf_transformation,[],[f656_D])).
fof(f656_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f658,plain,(
  s('type.num.num',sK13) = s('type.num.num',sK14) | $spl2),
  inference(cnf_transformation,[],[f658_D])).
fof(f658_D,plain,(
  s('type.num.num',sK13) = s('type.num.num',sK14) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f369,plain,(
  s('type.num.num',sK13) = s('type.num.num',sK14) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14)))),
  inference(cnf_transformation,[],[f248])).
fof(f1253,plain,(
  s('type.num.num',sK13) = s('type.num.num',sK14) | $spl0),
  inference(forward_demodulation,[],[f1252,f383])).
fof(f1252,plain,(
  s('type.num.num',sK14) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))) | $spl0),
  inference(forward_demodulation,[],[f656,f383])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 140
% Passive clauses: 316
% Generated clauses: 878
% Final active clauses: 139
% Final passive clauses: 138
% Input formulas: 87
% Initial clauses: 278
% 
% Duplicate literals: 22
% Trivial inequalities: 2
% Fw subsumption resolutions: 56
% Fw demodulations: 31
% 
% Simple tautologies: 116
% Equational tautologies: 3
% Forward subsumptions: 328
% 
% Binary resolution: 369
% Factoring: 32
% Forward superposition: 69
% Backward superposition: 7
% Self superposition: 2
% Equality resolution: 1
% 
% Split clauses: 35
% Split components: 72
% SAT solver clauses: 44
% SAT solver unit clauses: 6
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 35
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 42
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 1023
% Time elapsed: 0.023 s
% ------------------------------
% ------------------------------
% Success in time 0.026 s
