Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.transc
% (61255)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 314
% Passive clauses: 4299
% Generated clauses: 33687
% Final active clauses: 235
% Final passive clauses: 3359
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 388
% Trivial inequalities: 392
% Fw subsumption resolutions: 1921
% Fw demodulations: 10386
% Bw demodulations: 54
% 
% Simple tautologies: 121
% Equational tautologies: 29
% Forward subsumptions: 16459
% Fw demodulations to eq. taut.: 76
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 39
% Forward superposition: 10897
% Backward superposition: 9312
% Self superposition: 140
% Equality factoring: 48
% Equality resolution: 18
% 
% Split clauses: 95
% Split components: 191
% SAT solver clauses: 215
% SAT solver unit clauses: 2
% SAT solver binary clauses: 26
% 
% Sat splits: 95
% Sat splitting refutations: 18
% 
% TWLsolver clauses: 215
% TWLsolver calls for satisfiability: 71
% 
% Memory used [KB]: 21492
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% (61274)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 280
% Passive clauses: 1277
% Generated clauses: 28658
% Final active clauses: 210
% Final passive clauses: 557
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 426
% Trivial inequalities: 149
% Fw subsumption resolutions: 1144
% Fw demodulations: 8061
% Bw demodulations: 417
% Condensations: 288
% Global subsumptions: 4
% 
% Simple tautologies: 103
% Equational tautologies: 30
% Forward subsumptions: 14555
% Fw demodulations to eq. taut.: 21
% Bw demodulations to eq. taut.: 83
% 
% Binary resolution: 26
% Forward superposition: 9022
% Backward superposition: 7567
% Self superposition: 122
% Equality factoring: 50
% Equality resolution: 11
% 
% Split clauses: 51
% Split components: 102
% SAT solver clauses: 2647
% SAT solver unit clauses: 121
% SAT solver binary clauses: 25
% SAT solver learnt clauses: 8
% 
% Sat splits: 51
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 2631
% TWLsolver calls for satisfiability: 321
% 
% Memory used [KB]: 19317
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f32891,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f303,f308,f306,f410,f420,f411,f423,f415,f424,f416,f427,f425,f417,f429,f418,f433,f431,f709,f711,f715,f713,f718,f1497,f1499,f1503,f1501,f1560,f1042,f1567,f638,f1575,f595,f422,f1577,f2657,f2659,f2663,f2661,f4426,f4491,f4492,f4488,f4490,f5877,f5958,f5959,f5955,f5882,f5961,f5883,f5982,f5984,f5987,f5963,f5957,f6046,f6050,f6048,f6053,f6057,f6055,f6017,f6108,f6106,f6018,f6112,f6110,f6116,f6118,f6200,f6204,f6202,f6207,f6211,f6209,f6171,f6246,f6244,f6172,f6250,f6248,f6254,f6256,f8332,f8404,f8402,f11396,f11400,f11398,f11403,f11407,f11405,f11506,f11510,f11508,f11513,f11517,f11515,f14800,f14905,f14903,f14801,f14909,f14907,f29520,f29527,f29619,f29522,f29524,f29620,f29529,f29531,f32787,f32866,f32867,f32868,f32869])).
fof(f32869,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f32862])).
fof(f32862,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))))) | $spl16),
  inference(backward_demodulation,[],[f32861,f15799])).
fof(f15799,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(unit_resulting_resolution,[],[f4276,f203])).
fof(f203,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|19')).
fof(f4276,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(unit_resulting_resolution,[],[f1454,f203])).
fof(f1454,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(unit_resulting_resolution,[],[f921,f203])).
fof(f921,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(unit_resulting_resolution,[],[f214,f203])).
fof(f214,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(backward_demodulation,[],[f190,f138])).
fof(f138,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f113])).
fof(f113,plain,(
  ? [X0] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(ennf_transformation,[],[f58])).
fof(f58,plain,(
  ~! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.transc.transc_|48|_prove_ltb')).
fof(f190,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.transc.transc_|48|_prove_ltb','thm.arithmetic.MULT_SYM')).
fof(f32861,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(subsumption_resolution,[],[f32754,f139])).
fof(f139,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.transc_|48|_prove_ltb',aHL_TRUTH)).
fof(f32754,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f5773,f156])).
fof(f156,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_lt|split|1')).
fof(f5773,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5704,f1588])).
fof(f1588,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f152])).
fof(f152,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|1')).
fof(f1580,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl16),
  inference(backward_demodulation,[],[f429,f141])).
fof(f141,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f30])).
fof(f30,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.prim_rec.PRE|split|0')).
fof(f5704,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(superposition,[],[f202,f1595])).
fof(f1595,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f166])).
fof(f166,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|21')).
fof(f202,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ! [X2] : s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) => ! [X2] : s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6)))) => ! [X9] : s('type.num.num',X9) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8))),s('type.num.num',X6))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.arithmetic.DIV_MULT')).
fof(f32868,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f32863])).
fof(f32863,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))))) | $spl16),
  inference(backward_demodulation,[],[f32861,f4276])).
fof(f32867,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f32864])).
fof(f32864,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))))) | $spl16),
  inference(backward_demodulation,[],[f32861,f1454])).
fof(f32866,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f32865])).
fof(f32865,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) | $spl16),
  inference(backward_demodulation,[],[f32861,f921])).
fof(f32787,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f32786,f139])).
fof(f32786,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(forward_demodulation,[],[f32703,f156])).
fof(f32703,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl16),
  inference(unit_resulting_resolution,[],[f214,f5773])).
fof(f29531,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl120),
  inference(cnf_transformation,[],[f29531_D])).
fof(f29531_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f29529,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl119),
  inference(cnf_transformation,[],[f29529_D])).
fof(f29529_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f29620,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f29510,f6293])).
fof(f6293,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(unit_resulting_resolution,[],[f1621,f1637])).
fof(f1637,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f946])).
fof(f946,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f203,f142])).
fof(f142,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|13')).
fof(f1621,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f1580,f736])).
fof(f736,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f164,f447])).
fof(f447,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f436,f152])).
fof(f436,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f152,f170])).
fof(f170,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X6))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|17')).
fof(f164,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|14')).
fof(f29510,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f6307,f6330])).
fof(f6330,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f1617])).
fof(f1617,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f1580,f677])).
fof(f677,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f163,f142])).
fof(f163,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|16')).
fof(f6307,plain,(
  ( ! [X12] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))) ) | $spl16),
  inference(superposition,[],[f1637,f5029])).
fof(f5029,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f4964,f203])).
fof(f4964,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f4963,f1587])).
fof(f1587,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f151])).
fof(f151,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.transc.transc_|48|_prove_ltb','thm.arithmetic.ADD|split|0')).
fof(f4963,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f4869,f1587])).
fof(f4869,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f201,f1610])).
fof(f1610,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f1580,f447])).
fof(f201,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|2')).
fof(f29524,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl116),
  inference(cnf_transformation,[],[f29524_D])).
fof(f29524_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f29522,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl115),
  inference(cnf_transformation,[],[f29522_D])).
fof(f29522_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f29619,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f29509,f6293])).
fof(f29509,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f6307,f6331])).
fof(f6331,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f1620])).
fof(f1620,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f1580,f735])).
fof(f735,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f164,f142])).
fof(f29527,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f29526,f6330])).
fof(f29526,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f29525,f6293])).
fof(f29525,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f29462,f6330])).
fof(f29462,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f6307,f6330])).
fof(f29520,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f29519,f6331])).
fof(f29519,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f29518,f6293])).
fof(f29518,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f29461,f6331])).
fof(f29461,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f6307,f6331])).
fof(f14907,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl110),
  inference(cnf_transformation,[],[f14907_D])).
fof(f14907_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f14909,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl112),
  inference(cnf_transformation,[],[f14909_D])).
fof(f14909_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f14801,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f1649,f6330])).
fof(f1649,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f1306])).
fof(f1306,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f167,f168])).
fof(f168,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.transc.transc_|48|_prove_ltb',aHL_BOOL_CASES)).
fof(f167,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|24')).
fof(f14903,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl106),
  inference(cnf_transformation,[],[f14903_D])).
fof(f14903_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f14905,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl108),
  inference(cnf_transformation,[],[f14905_D])).
fof(f14905_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f14800,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f1649,f6331])).
fof(f11515,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl103),
  inference(cnf_transformation,[],[f11515_D])).
fof(f11515_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f11517,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl104),
  inference(cnf_transformation,[],[f11517_D])).
fof(f11517_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f11513,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11512,f1594])).
fof(f1594,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f165])).
fof(f165,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|27')).
fof(f11512,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11511,f163])).
fof(f11511,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f11461,f6354])).
fof(f6354,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f4409])).
fof(f4409,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f163,f1617])).
fof(f11461,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f2491,f6330])).
fof(f2491,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f2490,f163])).
fof(f2490,plain,(
  ( ! [X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl16),
  inference(forward_demodulation,[],[f2447,f1658])).
fof(f1658,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f1530])).
fof(f1530,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f194,f447])).
fof(f194,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|31')).
fof(f2447,plain,(
  ( ! [X12] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl16),
  inference(superposition,[],[f1662,f163])).
fof(f1662,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f1600,f1580])).
fof(f1600,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f174])).
fof(f174,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X6))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|30')).
fof(f11508,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl99),
  inference(cnf_transformation,[],[f11508_D])).
fof(f11508_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f11510,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl100),
  inference(cnf_transformation,[],[f11510_D])).
fof(f11510_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f11506,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11505,f1594])).
fof(f11505,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11504,f163])).
fof(f11504,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f11460,f6389])).
fof(f6389,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f5856])).
fof(f5856,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f163,f1620])).
fof(f11460,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f2491,f6331])).
fof(f11405,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl95),
  inference(cnf_transformation,[],[f11405_D])).
fof(f11405_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f11407,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl96),
  inference(cnf_transformation,[],[f11407_D])).
fof(f11407_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f11403,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11402,f1594])).
fof(f11402,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11401,f164])).
fof(f11401,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f11356,f6355])).
fof(f6355,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f4410])).
fof(f4410,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f164,f1617])).
fof(f11356,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f2487,f6330])).
fof(f2487,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f2486,f164])).
fof(f2486,plain,(
  ( ! [X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl16),
  inference(forward_demodulation,[],[f2445,f1658])).
fof(f2445,plain,(
  ( ! [X11] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl16),
  inference(superposition,[],[f1662,f164])).
fof(f11398,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl91),
  inference(cnf_transformation,[],[f11398_D])).
fof(f11398_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f11400,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl92),
  inference(cnf_transformation,[],[f11400_D])).
fof(f11400_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f11396,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11395,f1594])).
fof(f11395,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f11394,f164])).
fof(f11394,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f11355,f6390])).
fof(f6390,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f6293,f5857])).
fof(f5857,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f164,f1620])).
fof(f11355,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f2487,f6331])).
fof(f8402,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl86),
  inference(cnf_transformation,[],[f8402_D])).
fof(f8402_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8404,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl89),
  inference(cnf_transformation,[],[f8404_D])).
fof(f8404_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f8332,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl15 | $spl16)),
  inference(equality_factoring,[],[f3361])).
fof(f3361,plain,(
  ( ! [X34] : (s(bool,X34) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X34)) ) | ($spl15 | $spl16)),
  inference(subsumption_resolution,[],[f3129,f139])).
fof(f3129,plain,(
  ( ! [X34] : (~p(s(bool,'T_0')) | s(bool,X34) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X34)) ) | ($spl15 | $spl16)),
  inference(superposition,[],[f1692,f292])).
fof(f292,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f168,f168])).
fof(f1692,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl15 | $spl16)),
  inference(forward_demodulation,[],[f1660,f1234])).
fof(f1234,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1229,f1227])).
fof(f1227,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f165,f142])).
fof(f1229,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f165,f736])).
fof(f1660,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl15 | $spl16)),
  inference(backward_demodulation,[],[f1580,f1558])).
fof(f1558,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl15),
  inference(backward_demodulation,[],[f1530,f565])).
fof(f565,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f427,f173])).
fof(f173,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f124])).
fof(f6256,plain,(
  $false | ($spl3 | $spl70 | $spl78)),
  inference(subsumption_resolution,[],[f6255,f308])).
fof(f6255,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl70 | $spl78)),
  inference(backward_demodulation,[],[f6202,f6244])).
fof(f6254,plain,(
  $false | ($spl3 | $spl74 | $spl82)),
  inference(subsumption_resolution,[],[f6253,f308])).
fof(f6253,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl74 | $spl82)),
  inference(backward_demodulation,[],[f6209,f6248])).
fof(f6248,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl82),
  inference(cnf_transformation,[],[f6248_D])).
fof(f6248_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f6250,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl84),
  inference(cnf_transformation,[],[f6250_D])).
fof(f6250_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f6172,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f370,f1617])).
fof(f370,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f158,f168])).
fof(f158,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X6] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|33')).
fof(f6244,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl78),
  inference(cnf_transformation,[],[f6244_D])).
fof(f6244_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f6246,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl80),
  inference(cnf_transformation,[],[f6246_D])).
fof(f6246_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f6171,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f370,f1620])).
fof(f6209,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl74),
  inference(cnf_transformation,[],[f6209_D])).
fof(f6209_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6211,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl76),
  inference(cnf_transformation,[],[f6211_D])).
fof(f6211_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f6207,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f6206,f1617])).
fof(f6206,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6205,f4408])).
fof(f4408,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f158,f1617])).
fof(f6205,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6146,f1641])).
fof(f1641,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f1580,f1165])).
fof(f1165,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f163,f736])).
fof(f6146,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f370,f1617])).
fof(f6202,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl70),
  inference(cnf_transformation,[],[f6202_D])).
fof(f6202_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f6204,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl72),
  inference(cnf_transformation,[],[f6204_D])).
fof(f6204_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f6200,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f6199,f1620])).
fof(f6199,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6198,f5855])).
fof(f5855,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f158,f1620])).
fof(f6198,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6145,f1642])).
fof(f1642,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f1580,f1166])).
fof(f1166,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f164,f736])).
fof(f6145,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f370,f1620])).
fof(f6118,plain,(
  $false | ($spl3 | $spl54 | $spl62)),
  inference(subsumption_resolution,[],[f6117,f308])).
fof(f6117,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl54 | $spl62)),
  inference(backward_demodulation,[],[f6048,f6106])).
fof(f6116,plain,(
  $false | ($spl3 | $spl58 | $spl66)),
  inference(subsumption_resolution,[],[f6115,f308])).
fof(f6115,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl58 | $spl66)),
  inference(backward_demodulation,[],[f6055,f6110])).
fof(f6110,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl66),
  inference(cnf_transformation,[],[f6110_D])).
fof(f6110_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f6112,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl68),
  inference(cnf_transformation,[],[f6112_D])).
fof(f6112_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f6018,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f357,f1617])).
fof(f357,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f157,f168])).
fof(f157,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|32')).
fof(f6106,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl62),
  inference(cnf_transformation,[],[f6106_D])).
fof(f6106_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f6108,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl64),
  inference(cnf_transformation,[],[f6108_D])).
fof(f6108_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f6017,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f357,f1620])).
fof(f6055,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl58),
  inference(cnf_transformation,[],[f6055_D])).
fof(f6055_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f6057,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl60),
  inference(cnf_transformation,[],[f6057_D])).
fof(f6057_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6053,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f6052,f1617])).
fof(f6052,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6051,f4407])).
fof(f4407,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f157,f1617])).
fof(f6051,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f5992,f1641])).
fof(f5992,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f357,f1617])).
fof(f6048,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl54),
  inference(cnf_transformation,[],[f6048_D])).
fof(f6048_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f6050,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl56),
  inference(cnf_transformation,[],[f6050_D])).
fof(f6050_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6046,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f6045,f1620])).
fof(f6045,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f6044,f5854])).
fof(f5854,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f157,f1620])).
fof(f6044,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f5991,f1642])).
fof(f5991,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f357,f1620])).
fof(f5957,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl47),
  inference(cnf_transformation,[],[f5957_D])).
fof(f5957_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f5963,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl50),
  inference(cnf_transformation,[],[f5963_D])).
fof(f5963_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f5987,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f5986,f1594])).
fof(f5986,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f5953,f1642])).
fof(f5953,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f5181,f1620])).
fof(f5181,plain,(
  ( ! [X128] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X128))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f5180,f5029])).
fof(f5180,plain,(
  ( ! [X128] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X128)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5137,f1658])).
fof(f5137,plain,(
  ( ! [X128] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X128)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X128)))))) ) | $spl16),
  inference(superposition,[],[f1662,f4964])).
fof(f5984,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl52),
  inference(cnf_transformation,[],[f5984_D])).
fof(f5984_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5982,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f5981,f1620])).
fof(f5981,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f5951,f1642])).
fof(f5951,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f5078,f1620])).
fof(f5078,plain,(
  ( ! [X39] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X39)))) ) | $spl16),
  inference(superposition,[],[f1597,f4964])).
fof(f1597,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f169])).
fof(f169,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f122])).
fof(f5883,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f5181,f1620])).
fof(f5961,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl48),
  inference(cnf_transformation,[],[f5961_D])).
fof(f5961_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5882,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f5078,f1620])).
fof(f5955,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl44),
  inference(cnf_transformation,[],[f5955_D])).
fof(f5955_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5959,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f5879,f1610])).
fof(f5879,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1770,f1620])).
fof(f1770,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f1759,f1610])).
fof(f1759,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f203,f1610])).
fof(f5958,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f5878,f862])).
fof(f862,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f702,f169])).
fof(f702,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f678,f141])).
fof(f678,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f163,f447])).
fof(f5878,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1684,f1620])).
fof(f1684,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))) | s('type.num.num',X28) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f1683,f1580])).
fof(f1683,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))) | s('type.num.num',X28) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f1636,f1610])).
fof(f1636,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))) | s('type.num.num',X28) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f1580,f944])).
fof(f944,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))) | s('type.num.num',X28) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f203,f141])).
fof(f5877,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1597,f1620])).
fof(f4490,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl43),
  inference(cnf_transformation,[],[f4490_D])).
fof(f4490_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f4488,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl40),
  inference(cnf_transformation,[],[f4488_D])).
fof(f4488_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f4492,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f4428,f1610])).
fof(f4428,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1770,f1617])).
fof(f4491,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f4427,f862])).
fof(f4427,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1684,f1617])).
fof(f4426,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f1597,f1617])).
fof(f2661,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl36),
  inference(cnf_transformation,[],[f2661_D])).
fof(f2661_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2663,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl38),
  inference(cnf_transformation,[],[f2663_D])).
fof(f2663_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2659,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f168,f1202])).
fof(f1202,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1164,f369])).
fof(f369,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f158,f142])).
fof(f1164,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f158,f736])).
fof(f2657,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1202,f168])).
fof(f1577,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))))) ) | $spl34),
  inference(cnf_transformation,[],[f1577_D])).
fof(f1577_D,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f422,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f595,plain,(
  ( ! [X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))))) )),
  inference(superposition,[],[f169,f160])).
fof(f160,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|9')).
fof(f1575,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) ) | $spl32),
  inference(cnf_transformation,[],[f1575_D])).
fof(f1575_D,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f638,plain,(
  ( ! [X16] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f169,f161])).
fof(f161,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|10')).
fof(f1567,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl30),
  inference(cnf_transformation,[],[f1567_D])).
fof(f1567_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1042,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f169,f579])).
fof(f579,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f160,f142])).
fof(f1560,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f1559,f139])).
fof(f1559,plain,(
  ~p(s(bool,'T_0')) | $spl7),
  inference(forward_demodulation,[],[f1557,f148])).
fof(f148,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|26')).
fof(f1557,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl7),
  inference(backward_demodulation,[],[f1530,f461])).
fof(f461,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(unit_resulting_resolution,[],[f422,f173])).
fof(f1501,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl26),
  inference(cnf_transformation,[],[f1501_D])).
fof(f1501_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1503,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl28),
  inference(cnf_transformation,[],[f1503_D])).
fof(f1503_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1499,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f168,f356])).
fof(f356,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f157,f142])).
fof(f1497,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f356,f168])).
fof(f718,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f717,f139])).
fof(f717,plain,(
  ~p(s(bool,'T_0')) | $spl22),
  inference(backward_demodulation,[],[f716,f504])).
fof(f504,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),
  inference(backward_demodulation,[],[f483,f144])).
fof(f144,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f49])).
fof(f49,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|34')).
fof(f483,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f157,f447])).
fof(f716,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl22),
  inference(backward_demodulation,[],[f713,f483])).
fof(f713,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(cnf_transformation,[],[f713_D])).
fof(f713_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f715,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl24),
  inference(cnf_transformation,[],[f715_D])).
fof(f715_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f711,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f168,f483])).
fof(f709,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f483,f168])).
fof(f431,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl18),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f433,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl21),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f418,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f169,f142])).
fof(f429,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl16),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f417,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f169,f141])).
fof(f425,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f427,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl15),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f416,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f169,f213])).
fof(f213,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f162,f142])).
fof(f162,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|11')).
fof(f424,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) ) | $spl10),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f415,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f169,f149])).
fof(f149,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|6')).
fof(f423,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) | $spl8),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f411,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f169,f155])).
fof(f155,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.transc_|48|_prove_ltb','thm.numeral.numeral_distrib|split|4')).
fof(f420,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl4),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f410,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f169,f154])).
fof(f154,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.transc.transc_|48|_prove_ltb','thm.arithmetic.MULT|split|0')).
fof(f306,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f306_D])).
fof(f306_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f308,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f308_D])).
fof(f308_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f303,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f168])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 353
% Passive clauses: 1120
% Generated clauses: 32671
% Final active clauses: 261
% Final passive clauses: 607
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 626
% Trivial inequalities: 135
% Fw subsumption resolutions: 1010
% Fw demodulations: 10235
% Bw demodulations: 225
% Condensations: 329
% 
% Simple tautologies: 144
% Equational tautologies: 176
% Forward subsumptions: 18640
% Fw demodulations to eq. taut.: 200
% Bw demodulations to eq. taut.: 16
% 
% Unit resulting resolution: 1512
% Forward superposition: 10169
% Backward superposition: 8096
% Self superposition: 134
% Equality factoring: 60
% Equality resolution: 11
% 
% Split clauses: 45
% Split components: 90
% SAT solver clauses: 1223
% SAT solver unit clauses: 114
% SAT solver binary clauses: 464
% 
% Sat splits: 45
% Sat splitting refutations: 11
% 
% Memory used [KB]: 17526
% Time elapsed: 0.731 s
% ------------------------------
% ------------------------------
% Success in time 2.051 s
