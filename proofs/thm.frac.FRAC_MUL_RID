Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.frac
% (54715)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 362
% Passive clauses: 3209
% Generated clauses: 31869
% Final active clauses: 91
% Final passive clauses: 321
% Input formulas: 60
% Initial clauses: 68
% 
% Duplicate literals: 476
% Trivial inequalities: 392
% Fw subsumption resolutions: 1835
% Fw demodulations: 9320
% Bw demodulations: 69
% 
% Simple tautologies: 115
% Equational tautologies: 32
% Forward subsumptions: 16722
% Fw demodulations to eq. taut.: 56
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 52
% Forward superposition: 10813
% Backward superposition: 8455
% Self superposition: 140
% Equality factoring: 48
% Equality resolution: 18
% 
% Split clauses: 129
% Split components: 258
% SAT solver clauses: 311
% SAT solver unit clauses: 8
% SAT solver binary clauses: 27
% 
% Sat splits: 129
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 311
% TWLsolver calls for satisfiability: 94
% 
% Memory used [KB]: 16375
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (54731)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 321
% Passive clauses: 1166
% Generated clauses: 30566
% Final active clauses: 234
% Final passive clauses: 435
% Input formulas: 60
% Initial clauses: 68
% 
% Duplicate literals: 554
% Trivial inequalities: 205
% Fw subsumption resolutions: 1405
% Fw demodulations: 8856
% Bw demodulations: 412
% Condensations: 370
% 
% Simple tautologies: 110
% Equational tautologies: 35
% Forward subsumptions: 14955
% Fw demodulations to eq. taut.: 38
% Bw demodulations to eq. taut.: 68
% 
% Binary resolution: 40
% Forward superposition: 9710
% Backward superposition: 7123
% Self superposition: 128
% Equality factoring: 54
% Equality resolution: 16
% 
% Split clauses: 132
% Split components: 266
% SAT solver clauses: 2718
% SAT solver unit clauses: 117
% SAT solver binary clauses: 29
% 
% Sat splits: 132
% Sat splitting refutations: 19
% 
% TWLsolver clauses: 2718
% TWLsolver calls for satisfiability: 332
% 
% Memory used [KB]: 19701
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (54745)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1641
% Passive clauses: 14284
% Generated clauses: 243411
% Final active clauses: 89
% Final passive clauses: 272
% Input formulas: 60
% Initial clauses: 68
% 
% Duplicate literals: 4720
% Trivial inequalities: 1330
% Fw subsumption resolutions: 12488
% Fw demodulations: 63482
% Bw demodulations: 10429
% Condensations: 3262
% Global subsumptions: 2240
% 
% Simple tautologies: 1094
% Equational tautologies: 945
% Forward subsumptions: 134486
% Fw demodulations to eq. taut.: 613
% Bw demodulations to eq. taut.: 1706
% 
% Unit resulting resolution: 13785
% Forward superposition: 63502
% Backward superposition: 43102
% Self superposition: 769
% Equality factoring: 217
% Equality resolution: 59
% 
% Split clauses: 440
% Split components: 881
% SAT solver clauses: 20997
% SAT solver unit clauses: 398
% SAT solver binary clauses: 2103
% 
% Sat splits: 440
% Sat splitting refutations: 3590
% 
% Memory used [KB]: 114625
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% Refutation not found, incomplete strategy
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation not found, incomplete strategy

% Active clauses: 12
% Passive clauses: 1
% Generated clauses: 1
% Final active clauses: 12
% Input formulas: 60
% Initial clauses: 12
% 
% Pure predicates: 1
% Selected by SInE selection: 11
% SInE iterations: 1
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 767
% Time elapsed: 0.002 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f7043,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f293,f351,f349,f529,f1508,f1506,f2254,f2414,f3468,f3466,f3541,f7042,f7033])).
fof(f7033,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f133,f7029])).
fof(f7029,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl6),
  inference(forward_demodulation,[],[f7028,f166])).
fof(f166,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X11] : s('type.frac.frac',X11) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11)))))))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.FRAC')).
fof(f7028,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | $spl6),
  inference(forward_demodulation,[],[f7027,f6826])).
fof(f6826,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) | $spl6),
  inference(backward_demodulation,[],[f6823,f2321])).
fof(f2321,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f204])).
fof(f204,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f163,f138])).
fof(f138,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f32])).
fof(f32,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|13')).
fof(f163,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.frac.FRAC_MUL_RID','thm.integer.INT_MUL_RID')).
fof(f2293,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl6),
  inference(backward_demodulation,[],[f2292,f145])).
fof(f145,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|4')).
fof(f2292,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl6),
  inference(trivial_inequality_removal,[],[f2265])).
fof(f2265,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl6),
  inference(backward_demodulation,[],[f1507,f524])).
fof(f524,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f168,f145])).
fof(f168,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X13))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|17')).
fof(f1507,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl6),
  inference(cnf_transformation,[],[f1507_D])).
fof(f1507_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f6823,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl6),
  inference(subsumption_resolution,[],[f6822,f134])).
fof(f134,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_MUL_RID','thm.bool.TRUTH')).
fof(f6822,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl6),
  inference(forward_demodulation,[],[f6821,f154])).
fof(f154,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X13] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_lt|split|0')).
fof(f6821,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl6),
  inference(forward_demodulation,[],[f6820,f1712])).
fof(f1712,plain,(
  ( ! [X10] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1700,f1699])).
fof(f1699,plain,(
  ( ! [X9] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f178,f138])).
fof(f178,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X13,X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|22')).
fof(f1700,plain,(
  ( ! [X10] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f178,f984])).
fof(f984,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f161,f567])).
fof(f567,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f534,f152])).
fof(f152,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X13] : s('type.num.num',X13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|7')).
fof(f534,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f152,f169])).
fof(f169,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f124])).
fof(f161,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|14')).
fof(f6820,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl6),
  inference(forward_demodulation,[],[f6816,f181])).
fof(f181,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X13,X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_MUL_RID','thm.integer.INT_LT_CALCULATE|split|0')).
fof(f6816,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl6),
  inference(superposition,[],[f2314,f2319])).
fof(f2319,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl6),
  inference(backward_demodulation,[],[f2293,f202])).
fof(f202,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f139,f138])).
fof(f139,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.frac_|49|_def')).
fof(f2314,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X1))))) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f191])).
fof(f191,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X6) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.NMR')).
fof(f7027,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f7013,f6941])).
fof(f6941,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl6),
  inference(subsumption_resolution,[],[f6940,f134])).
fof(f6940,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl6),
  inference(forward_demodulation,[],[f6939,f154])).
fof(f6939,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl6),
  inference(forward_demodulation,[],[f6929,f6850])).
fof(f6850,plain,(
  ( ! [X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) | $spl6),
  inference(forward_demodulation,[],[f6837,f1712])).
fof(f6837,plain,(
  ( ! [X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) | $spl6),
  inference(superposition,[],[f181,f6823])).
fof(f6929,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) | $spl6),
  inference(superposition,[],[f2315,f6827])).
fof(f6827,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | $spl6),
  inference(backward_demodulation,[],[f6823,f2319])).
fof(f2315,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int',X1))))) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f192])).
fof(f192,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.DNM')).
fof(f7013,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))))))) ) | $spl6),
  inference(superposition,[],[f190,f6826])).
fof(f190,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9,X10] : s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X9),s('type.frac.frac',X10))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X9))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X10))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10)))))))))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.frac_mul_def')).
fof(f133,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.frac.frac_|49|_0')))),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.frac.frac_|49|_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f119])).
fof(f119,plain,(
  ? [X0] : s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0')))),
  inference(ennf_transformation,[],[f62])).
fof(f62,plain,(
  ~! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|49|_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X6),s('type.frac.frac','const.frac.frac_|49|_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_mul_2'(s('type.frac.frac',X6),s('type.frac.frac','const.frac.frac_|49|_0')))),
  file('thm.frac.FRAC_MUL_RID','thm.frac.FRAC_MUL_RID')).
fof(f7042,plain,(
  $false | $spl6),
  inference(trivial_inequality_removal,[],[f7038])).
fof(f7038,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac',sK0) | $spl6),
  inference(superposition,[],[f133,f7029])).
fof(f3541,plain,(
  $false | ($spl6 | $spl8)),
  inference(subsumption_resolution,[],[f3470,f3466])).
fof(f3470,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f2306,f2311])).
fof(f2311,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f169])).
fof(f2306,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f159])).
fof(f159,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13)))))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|10')).
fof(f3466,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl8),
  inference(cnf_transformation,[],[f3466_D])).
fof(f3466_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f3468,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl10),
  inference(cnf_transformation,[],[f3468_D])).
fof(f3468_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2414,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl6),
  inference(subsumption_resolution,[],[f2330,f2311])).
fof(f2330,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl6),
  inference(backward_demodulation,[],[f2293,f536])).
fof(f536,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f169,f169])).
fof(f2254,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f2253,f134])).
fof(f2253,plain,(
  ~p(s(bool,'T_0')) | $spl7),
  inference(forward_demodulation,[],[f2252,f151])).
fof(f151,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X13] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|26')).
fof(f2252,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl7),
  inference(backward_demodulation,[],[f2212,f1564])).
fof(f1564,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(unit_resulting_resolution,[],[f1508,f172])).
fof(f172,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X13] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X13))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|30')).
fof(f2212,plain,(
  ( ! [X8] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f183,f567])).
fof(f183,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X13,X14] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X13))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_MUL_RID','thm.numeral.numeral_distrib|split|31')).
fof(f1506,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(cnf_transformation,[],[f1506_D])).
fof(f1506_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1508,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f1508_D])).
fof(f1508_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f529,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f168,f137])).
fof(f137,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f34])).
fof(f34,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_MUL_RID','thm.prim_rec.PRE|split|0')).
fof(f349,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f351,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f351_D])).
fof(f351_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f293,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f167])).
fof(f167,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.frac.FRAC_MUL_RID',aHL_BOOL_CASES)).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 155
% Passive clauses: 616
% Generated clauses: 6907
% Final active clauses: 103
% Final passive clauses: 289
% Input formulas: 60
% Initial clauses: 68
% 
% Duplicate literals: 50
% Trivial inequalities: 35
% Fw subsumption resolutions: 68
% Fw demodulations: 1501
% Bw demodulations: 159
% 
% Simple tautologies: 31
% Equational tautologies: 11
% Forward subsumptions: 4477
% Fw demodulations to eq. taut.: 114
% Bw demodulations to eq. taut.: 23
% 
% Unit resulting resolution: 529
% Forward superposition: 2635
% Backward superposition: 1786
% Self superposition: 61
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 625
% SAT solver unit clauses: 88
% SAT solver binary clauses: 253
% 
% Sat splits: 3
% Sat splitting refutations: 4
% 
% Memory used [KB]: 6012
% Time elapsed: 0.139 s
% ------------------------------
% ------------------------------
% Success in time 11.884 s
