Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f5870,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5849,f267,f427,f425,f941,f268,f428,f426])).
fof(f426,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) | $spl1),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f428,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') != s('type.list.list'(sK2),sK3) | $spl3),
  inference(cnf_transformation,[],[f428_D])).
fof(f428_D,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') != s('type.list.list'(sK2),sK3) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f268,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') != s('type.list.list'(sK2),sK3) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3))))),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) | s('type.list.list'(sK2),'const.list.NIL_0') = s('type.list.list'(sK2),sK3)) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) | s('type.list.list'(sK2),'const.list.NIL_0') != s('type.list.list'(sK2),sK3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4])],[f198])).
fof(f198,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2)))),
  inference(nnf_transformation,[],[f173])).
fof(f173,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <~> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X9),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X8)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X9),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X8)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X8))),
  file('thm.list.LIST_REL_NIL|split|1','thm.list.LIST_REL_NIL|split|1')).
fof(f941,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f369,f719])).
fof(f719,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f426,f427])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : ! [X2] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ! [X9] : p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X9),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))))),
  file('thm.list.LIST_REL_NIL|split|1','thm.list.LIST_REL_rules|split|0')).
fof(f425,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) | $spl0),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f427,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') = s('type.list.list'(sK2),sK3) | $spl2),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') = s('type.list.list'(sK2),sK3) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f267,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') = s('type.list.list'(sK2),sK3) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),sK4),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),sK3))))),
  inference(cnf_transformation,[],[f199])).
fof(f5849,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5815,f428])).
fof(f5815,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') = s('type.list.list'(sK2),sK3) | $spl0),
  inference(resolution,[],[f382,f425])).
fof(f382,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) )),
  inference(cnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2))))))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f157])).
fof(f157,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X10,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X9),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X10)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X10))),
  file('thm.list.LIST_REL_NIL|split|1','thm.list.LIST_REL_NIL|split|0')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 86
% Passive clauses: 988
% Generated clauses: 5493
% Final active clauses: 79
% Final passive clauses: 833
% Input formulas: 69
% Initial clauses: 155
% 
% Duplicate literals: 238
% Trivial inequalities: 151
% Fw subsumption resolutions: 576
% Fw demodulations: 808
% Bw demodulations: 4
% 
% Simple tautologies: 216
% Equational tautologies: 38
% Forward subsumptions: 2394
% 
% Binary resolution: 131
% Factoring: 1
% Forward superposition: 1501
% Backward superposition: 1735
% Self superposition: 89
% Equality factoring: 59
% Equality resolution: 18
% 
% Split clauses: 70
% Split components: 141
% SAT solver clauses: 139
% SAT solver unit clauses: 17
% SAT solver binary clauses: 79
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 70
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 132
% TWLsolver calls for satisfiability: 31
% 
% Memory used [KB]: 3070
% Time elapsed: 0.113 s
% ------------------------------
% ------------------------------
% Success in time 0.114 s
