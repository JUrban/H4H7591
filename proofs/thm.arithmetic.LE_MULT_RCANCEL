Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f4187,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4157,f34,f52,f271,f276,f318,f61,f64,f62,f74,f32,f51,f53,f49,f377,f379,f33,f54,f50,f1416,f1406,f4038,f4022,f417,f274,f418])).
fof(f418,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))))) ) | $spl20),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f274,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f417,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))))) )),
  inference(subsumption_resolution,[],[f412,f57])).
fof(f57,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f37,f38])).
fof(f38,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LE_MULT_RCANCEL',aHL_BOOL_CASES)).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LE_MULT_RCANCEL',aHL_FALSITY)).
fof(f412,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X7)) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))))) )),
  inference(superposition,[],[f400,f55])).
fof(f55,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f38,f38])).
fof(f400,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))))) )),
  inference(equality_resolution,[],[f46])).
fof(f46,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))))))),
  file('thm.arithmetic.LE_MULT_RCANCEL','thm.arithmetic.LE_MULT_LCANCEL')).
fof(f4022,plain,(
  $false | ($spl4 | $spl19 | $spl20)),
  inference(trivial_inequality_removal,[],[f3984])).
fof(f3984,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl4 | $spl19 | $spl20)),
  inference(superposition,[],[f3924,f418])).
fof(f3924,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))))) | ($spl4 | $spl19)),
  inference(forward_demodulation,[],[f3923,f43])).
fof(f43,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.LE_MULT_RCANCEL','thm.arithmetic.MULT_SYM')).
fof(f3923,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))))) | ($spl4 | $spl19)),
  inference(forward_demodulation,[],[f378,f53])).
fof(f378,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl19),
  inference(cnf_transformation,[],[f378_D])).
fof(f378_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f4038,plain,(
  $false | ($spl2 | $spl12)),
  inference(subsumption_resolution,[],[f4037,f37])).
fof(f4037,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl12)),
  inference(forward_demodulation,[],[f51,f276])).
fof(f1406,plain,(
  $false | ($spl5 | $spl12 | $spl18)),
  inference(subsumption_resolution,[],[f1405,f37])).
fof(f1405,plain,(
  p(s(bool,'F_0')) | ($spl5 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f1404,f276])).
fof(f1404,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ($spl5 | $spl18)),
  inference(subsumption_resolution,[],[f1403,f54])).
fof(f1403,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl18),
  inference(subsumption_resolution,[],[f1380,f35])).
fof(f35,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LE_MULT_RCANCEL','thm.bool.TRUTH')).
fof(f1380,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl18),
  inference(superposition,[],[f581,f379])).
fof(f581,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(superposition,[],[f45,f43])).
fof(f45,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f1416,plain,(
  $false | ($spl1 | $spl18)),
  inference(subsumption_resolution,[],[f1415,f35])).
fof(f1415,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl18)),
  inference(forward_demodulation,[],[f1414,f379])).
fof(f1414,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl1),
  inference(forward_demodulation,[],[f50,f43])).
fof(f50,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f54,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | $spl5),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f33,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <~> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  file('thm.arithmetic.LE_MULT_RCANCEL','thm.arithmetic.LE_MULT_RCANCEL')).
fof(f379,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl18),
  inference(cnf_transformation,[],[f379_D])).
fof(f379_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f377,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) ) | $spl0),
  inference(subsumption_resolution,[],[f372,f57])).
fof(f372,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) ) | $spl0),
  inference(superposition,[],[f280,f55])).
fof(f280,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl0),
  inference(forward_demodulation,[],[f49,f43])).
fof(f49,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f53,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) | $spl4),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f51,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f32,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f74,plain,(
  $false | $spl6),
  inference(resolution,[],[f71,f35])).
fof(f71,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl6),
  inference(superposition,[],[f37,f62])).
fof(f62,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f64,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f61,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f38])).
fof(f318,plain,(
  $false | ($spl9 | $spl10)),
  inference(trivial_inequality_removal,[],[f313])).
fof(f313,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl9 | $spl10)),
  inference(superposition,[],[f64,f274])).
fof(f276,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl12),
  inference(cnf_transformation,[],[f276_D])).
fof(f276_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f271,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f237])).
fof(f237,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f218,f38])).
fof(f218,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(subsumption_resolution,[],[f148,f35])).
fof(f148,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f52,f55])).
fof(f52,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl3),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f34,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f4157,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f4040,f1414])).
fof(f4040,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK2))))))) ) | $spl2),
  inference(resolution,[],[f51,f502])).
fof(f502,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))) )),
  inference(superposition,[],[f47,f43])).
fof(f47,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f31])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 96
% Passive clauses: 485
% Generated clauses: 4093
% Final active clauses: 52
% Final passive clauses: 249
% Input formulas: 10
% Initial clauses: 16
% 
% Duplicate literals: 358
% Trivial inequalities: 22
% Fw subsumption resolutions: 391
% Fw demodulations: 523
% Bw demodulations: 26
% 
% Simple tautologies: 63
% Equational tautologies: 21
% Forward subsumptions: 2044
% 
% Binary resolution: 129
% Forward superposition: 1695
% Backward superposition: 740
% Self superposition: 56
% Equality factoring: 32
% Equality resolution: 1
% 
% Split clauses: 135
% Split components: 272
% SAT solver clauses: 256
% SAT solver unit clauses: 12
% SAT solver binary clauses: 59
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 135
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 249
% TWLsolver calls for satisfiability: 71
% 
% Memory used [KB]: 2686
% Time elapsed: 0.117 s
% ------------------------------
% ------------------------------
% Success in time 0.12 s
