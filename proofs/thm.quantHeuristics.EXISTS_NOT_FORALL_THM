Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f729,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f728,f218,f384,f217,f388,f386,f727])).
fof(f727,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f388,f384])).
fof(f386,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK14)))) | $spl2),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK14)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f388,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK15)))) | $spl4),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK15)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f217,plain,(
  p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK15)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK14))))),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  (p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK14)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK15))))) & (! [X3] : ~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f136])).
fof(f136,plain,(
  ? [X0,X1] : ((? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f135])).
fof(f135,plain,(
  ? [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ? [X0,X1] : (? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <~> ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : (? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ~! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1] : (? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ~! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (? [X8] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) <=> ~! [X8] : ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (? [X8] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) <=> ~! [X8] : ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))))),
  file('thm.quantHeuristics.EXISTS_NOT_FORALL_THM','thm.quantHeuristics.EXISTS_NOT_FORALL_THM')).
fof(f384,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X3))))) ) | $spl0),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X3))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f218,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X2)))) | ~p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X3))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f728,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f386,f384])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 89
% Passive clauses: 232
% Generated clauses: 506
% Final active clauses: 89
% Final passive clauses: 126
% Input formulas: 36
% Initial clauses: 163
% 
% Duplicate literals: 10
% Fw subsumption resolutions: 20
% 
% Simple tautologies: 38
% Equational tautologies: 2
% Forward subsumptions: 195
% 
% Binary resolution: 270
% Factoring: 32
% Equality resolution: 3
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 28
% SAT solver unit clauses: 5
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 1
% 
% Sat splits: 20
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 26
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 895
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.033 s
