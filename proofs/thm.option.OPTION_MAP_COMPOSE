Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% (63825)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 172
% Passive clauses: 3746
% Generated clauses: 24090
% Final active clauses: 128
% Final passive clauses: 3242
% Input formulas: 13
% Initial clauses: 15
% 
% Duplicate literals: 1351
% Trivial inequalities: 301
% Fw subsumption resolutions: 2572
% Fw demodulations: 3408
% Bw demodulations: 33
% 
% Simple tautologies: 334
% Equational tautologies: 51
% Forward subsumptions: 10752
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 18
% Forward superposition: 7699
% Backward superposition: 7987
% Self superposition: 282
% Equality factoring: 143
% Equality resolution: 33
% 
% Split clauses: 706
% Split components: 1428
% SAT solver clauses: 1529
% SAT solver unit clauses: 4
% SAT solver binary clauses: 94
% 
% Sat splits: 706
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1508
% TWLsolver calls for satisfiability: 131
% 
% Memory used [KB]: 13688
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.option
% (63853)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 1319
% Generated clauses: 7417
% Final active clauses: 87
% Final passive clauses: 1182
% Input formulas: 13
% Initial clauses: 15
% 
% Duplicate literals: 286
% Trivial inequalities: 76
% Fw subsumption resolutions: 348
% Fw demodulations: 520
% Bw demodulations: 44
% Condensations: 303
% 
% Simple tautologies: 116
% Equational tautologies: 19
% Forward subsumptions: 2594
% Fw demodulations to eq. taut.: 11
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 8
% Forward superposition: 2306
% Backward superposition: 2018
% Self superposition: 78
% Equality factoring: 32
% Equality resolution: 22
% 
% Split clauses: 49
% Split components: 103
% SAT solver clauses: 1809
% SAT solver unit clauses: 23
% SAT solver binary clauses: 33
% 
% Sat splits: 49
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1809
% TWLsolver calls for satisfiability: 121
% 
% Memory used [KB]: 11129
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.option
% (63877)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 498
% Passive clauses: 13714
% Generated clauses: 145585
% Final active clauses: 170
% Final passive clauses: 1028
% Input formulas: 13
% Initial clauses: 15
% Discarded non-redundant clauses: 8547
% 
% Duplicate literals: 6479
% Trivial inequalities: 1534
% Fw subsumption resolutions: 4974
% Fw demodulations: 23792
% Bw demodulations: 7503
% Condensations: 10210
% Global subsumptions: 127
% 
% Simple tautologies: 1358
% Equational tautologies: 2488
% Forward subsumptions: 77853
% Fw demodulations to eq. taut.: 2135
% Bw demodulations to eq. taut.: 1280
% 
% Unit resulting resolution: 15580
% Forward superposition: 26048
% Backward superposition: 26689
% Self superposition: 425
% Equality factoring: 219
% Equality resolution: 110
% 
% Split clauses: 329
% Split components: 674
% SAT solver clauses: 14917
% SAT solver unit clauses: 51
% SAT solver binary clauses: 910
% 
% Sat splits: 329
% Sat splitting refutations: 416
% 
% Memory used [KB]: 74455
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f8304,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f8286])).
fof(f8286,plain,(
  s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3)))),
  inference(superposition,[],[f8263,f64])).
fof(f64,plain,(
  s('type.option.option'(sK2),sK3) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK6(sK3,sK2))))),
  inference(subsumption_resolution,[],[f63,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X2),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8,X6] : ! [X11] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),X11),s('type.option.option'(X8),'const.option.NONE_0')))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.option.OPTION_MAP_DEF|split|1')).
fof(f63,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.NONE_0'))) | s('type.option.option'(sK2),sK3) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK6(sK3,sK2))))),
  inference(forward_demodulation,[],[f62,f40])).
fof(f62,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))))) | s('type.option.option'(sK2),sK3) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK6(sK3,sK2))))),
  inference(forward_demodulation,[],[f56,f40])).
fof(f56,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),'const.option.NONE_0'))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.option.option'(sK2),'const.option.NONE_0'))) | s('type.option.option'(sK2),sK3) = s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,sK6(sK3,sK2))))),
  inference(superposition,[],[f36,f45])).
fof(f45,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X8] : ! [X12] : (s('type.option.option'(X8),'const.option.NONE_0') = s('type.option.option'(X8),X12) | ? [X9] : s('type.option.option'(X8),X12) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9))))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.option.option_nchotomy')).
fof(f36,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),sK3))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.option.option'(sK2),sK3)))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),sK3))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.option.option'(sK2),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X5),s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X2,X1),X4),s('type.option.option'(X2),X3))))) != s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.option.option'(X2),X3)))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X5),s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X2,X1),X4),s('type.option.option'(X2),X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.option.option'(X2),X3)))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X5),s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X2,X1),X4),s('type.option.option'(X2),X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.option.option'(X2),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X11),s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X8,X7),X10),s('type.option.option'(X8),X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X8,X7),X10))),s('type.option.option'(X8),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X11),s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X8,X7),X10),s('type.option.option'(X8),X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X8,X7),X10))),s('type.option.option'(X8),X9)))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.option.OPTION_MAP_COMPOSE')).
fof(f8263,plain,(
  ( ! [X0] : (s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(trivial_inequality_removal,[],[f8262])).
fof(f8262,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,X0))))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,X0))))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(forward_demodulation,[],[f8219,f38])).
fof(f38,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X8,X7] : ! [X11,X10,X9] : s(X6,'const.combin.o_3'(s(fun(X8,X6),X11),s(fun(X7,X8),X10),s(X7,X9))) = s(X6,happ(s(fun(X8,X6),X11),s(X8,happ(s(fun(X7,X8),X10),s(X7,X9)))))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.combin.o_THM')).
fof(f8219,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,X0))))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,happ(s(fun(sK2,sK1),sK4),s(sK2,X0))))))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(superposition,[],[f356,f39])).
fof(f39,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X8] : ! [X11,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X8,X6),X11),s(X8,X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X8,X6),X11),s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9)))))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.option.OPTION_MAP_DEF|split|0')).
fof(f356,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,X0))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK2,sK1),sK4),s(sK2,X0))))))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(forward_demodulation,[],[f355,f39])).
fof(f355,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,X0))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0))))))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(forward_demodulation,[],[f326,f37])).
fof(f37,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7,X8] : ! [X14,X15,X16] : s(X6,'const.combin.o_3'(s(fun(X7,X6),X14),s(fun(X8,X7),X15),s(X8,X16))) = s(X6,happ(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X14),s(fun(X8,X7),X15))),s(X8,X16)))),
  file('thm.option.OPTION_MAP_COMPOSE','ARITY_2_3_const.combin.o')).
fof(f326,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0))))))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s(sK2,X0))))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),'const.option.SOME_1'(s(sK2,X0)))))) )),
  inference(superposition,[],[f57,f39])).
fof(f57,plain,(
  ( ! [X0] : (s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK5),s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK2,sK1),sK4),s('type.option.option'(sK2),X0))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.option.option'(sK2),X0))) | s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),sK3))) != s('type.option.option'('type.option.option'(sK2)),'const.option.SOME_1'(s('type.option.option'(sK2),X0)))) )),
  inference(superposition,[],[f36,f41])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : ! [X9,X13] : (s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9))) = s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X13))) <=> s(X8,X9) = s(X8,X13))),
  file('thm.option.OPTION_MAP_COMPOSE','thm.option.SOME_|49||49|')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 186
% Passive clauses: 2356
% Generated clauses: 8082
% Final active clauses: 137
% Final passive clauses: 1600
% Input formulas: 13
% Initial clauses: 13
% 
% Selected by SInE selection: 11
% SInE iterations: 1
% 
% Duplicate literals: 275
% Trivial inequalities: 208
% Fw subsumption resolutions: 268
% Fw demodulations: 1549
% Bw demodulations: 18
% 
% Simple tautologies: 101
% Equational tautologies: 20
% Forward subsumptions: 3364
% Fw demodulations to eq. taut.: 18
% Bw demodulations to eq. taut.: 3
% 
% Forward superposition: 3034
% Backward superposition: 2526
% Self superposition: 48
% Equality factoring: 37
% Equality resolution: 32
% 
% Split clauses: 69
% Split components: 139
% SAT solver clauses: 77
% SAT solver unit clauses: 1
% SAT solver binary clauses: 19
% 
% Sat splits: 69
% Sat splitting refutations: 7
% 
% Memory used [KB]: 5245
% Time elapsed: 0.216 s
% ------------------------------
% ------------------------------
% Success in time 11.932 s
