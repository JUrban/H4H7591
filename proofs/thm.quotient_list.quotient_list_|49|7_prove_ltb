Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f1994,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1990,f59,f93,f91,f89,f57,f90,f1606,f60,f96,f295,f99,f297,f101,f61,f98])).
fof(f98,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f61,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb',aHL_FALSITY)).
fof(f101,plain,(
  $false | ($spl11 | $spl12)),
  inference(resolution,[],[f99,f98])).
fof(f297,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2))) | $spl14),
  inference(cnf_transformation,[],[f297_D])).
fof(f297_D,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl12),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f295,plain,(
  ( ! [X21] : (p(s(bool,X21)) | s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2)))) )),
  inference(subsumption_resolution,[],[f185,f63])).
fof(f63,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X18] : (s(bool,'T_0') = s(bool,X18) <=> p(s(bool,X18)))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f185,plain,(
  ( ! [X21] : (p(s(bool,X21)) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2)))) )),
  inference(superposition,[],[f55,f108])).
fof(f108,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f62,f62])).
fof(f62,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb',aHL_BOOL_CASES)).
fof(f55,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),sK7),s(fun(sK0,sK1),sK2)))) & p(s(bool,happ(s(fun('type.list.list'('type.list.list'(sK1)),bool),happ(s(fun('type.list.list'('type.list.list'(sK1)),fun('type.list.list'('type.list.list'(sK1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))))),s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'('type.list.list'(sK1)),sK3)))) & p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) & ! [X11] : (~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(sK1)),bool),happ(s(fun('type.list.list'('type.list.list'(sK1)),fun('type.list.list'('type.list.list'(sK1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))))),s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'('type.list.list'(sK1)),X11)))) | p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),X11))))))) & ! [X9,X10] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),X9),s(fun(sK0,sK1),X10)))) | ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) | ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f38])).
fof(f38,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X7),s(fun(X0,X1),X2)))) & p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X3)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) & ! [X11] : (~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X11)))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X11))))))) & ! [X9,X10] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X9),s(fun(X0,X1),X10)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X3))))))))),
  inference(rectify,[],[f36])).
fof(f36,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X7),s(fun(X0,X1),X2)))) & p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X3)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) & ! [X9] : (~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X9)))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X9))))))) & ! [X10,X11] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X10),s(fun(X0,X1),X11)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X3))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X7),s(fun(X0,X1),X2)))) & (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X3)))) & (p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) & (! [X9] : (~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X9)))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X9))))))) & ! [X10,X11] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X10),s(fun(X0,X1),X11)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X3)))))))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X7),s(fun(X0,X1),X2)))) => (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X3)))) => (p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) => (! [X9] : (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X9)))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X9))))))) => ? [X10,X11] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X10),s(fun(X0,X1),X11)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X3)))))))))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X7),s(fun(X0,X1),X2)))) => (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X3)))) => (p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) => (! [X9] : (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X1)),bool),happ(s(fun('type.list.list'('type.list.list'(X1)),fun('type.list.list'('type.list.list'(X1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))))),s('type.list.list'('type.list.list'(X1)),X4))),s('type.list.list'('type.list.list'(X1)),X9)))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X9))))))) => ? [X10,X11] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X8),s(fun(X1,X0),X10),s(fun(X0,X1),X11)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),X6))),s('type.list.list'(X1),X5)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X1,fun(X1,bool)),X8))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X4))))),s('type.list.list'(X1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X1)),X3)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X14),s(fun(X7,X6),X13),s(fun(X6,X7),X8)))) => (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X7)),bool),happ(s(fun('type.list.list'('type.list.list'(X7)),fun('type.list.list'('type.list.list'(X7)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))))),s('type.list.list'('type.list.list'(X7)),X10))),s('type.list.list'('type.list.list'(X7)),X9)))) => (p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),X12))),s('type.list.list'(X7),X11)))) => (! [X15] : (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X7)),bool),happ(s(fun('type.list.list'('type.list.list'(X7)),fun('type.list.list'('type.list.list'(X7)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))))),s('type.list.list'('type.list.list'(X7)),X10))),s('type.list.list'('type.list.list'(X7)),X15)))) => p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X10))))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X15))))))) => ? [X16,X17] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X14),s(fun(X7,X6),X16),s(fun(X6,X7),X17)))) & p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),X12))),s('type.list.list'(X7),X11)))) & p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X10))))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X9)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X14),s(fun(X7,X6),X13),s(fun(X6,X7),X8)))) => (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X7)),bool),happ(s(fun('type.list.list'('type.list.list'(X7)),fun('type.list.list'('type.list.list'(X7)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))))),s('type.list.list'('type.list.list'(X7)),X10))),s('type.list.list'('type.list.list'(X7)),X9)))) => (p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),X12))),s('type.list.list'(X7),X11)))) => (! [X15] : (p(s(bool,happ(s(fun('type.list.list'('type.list.list'(X7)),bool),happ(s(fun('type.list.list'('type.list.list'(X7)),fun('type.list.list'('type.list.list'(X7)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))))),s('type.list.list'('type.list.list'(X7)),X10))),s('type.list.list'('type.list.list'(X7)),X15)))) => p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X10))))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X15))))))) => ? [X16,X17] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X14),s(fun(X7,X6),X16),s(fun(X6,X7),X17)))) & p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),X12))),s('type.list.list'(X7),X11)))) & p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X7),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X7,bool)),X14))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X10))))),s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),X9)))))))))))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb','thm.quotient_list.quotient_list_|49|7_prove_ltb')).
fof(f96,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f60,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb',aHL_TRUTH)).
fof(f1606,plain,(
  $false | $spl5),
  inference(subsumption_resolution,[],[f1591,f981])).
fof(f981,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK8),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3)))))) | $spl5),
  inference(backward_demodulation,[],[f87,f93])).
fof(f87,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))) = s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X0,fun(X1,bool)),X2))),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))) = s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X0,fun(X1,bool)),X2))),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))) = s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),'const.list.LIST_REL_1'(s(fun(X0,fun(X1,bool)),X2))),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7,X6] : ! [X19,X20,X21] : s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X19),s('type.list.list'(X7),X20),s('type.list.list'(X6),X21))) = s(bool,happ(s(fun('type.list.list'(X6),bool),happ(s(fun('type.list.list'(X7),fun('type.list.list'(X6),bool)),'const.list.LIST_REL_1'(s(fun(X7,fun(X6,bool)),X19))),s('type.list.list'(X7),X20))),s('type.list.list'(X6),X21)))),
  file('thm.quotient_list.quotient_list_|49|7_prove_ltb','ARITY_1_3_const.list.LIST_REL')).
fof(f1591,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK8),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3))))))),
  inference(resolution,[],[f1492,f982])).
fof(f982,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'('type.list.list'(sK1)),sK4),s('type.list.list'('type.list.list'(sK1)),sK3))))),
  inference(backward_demodulation,[],[f87,f56])).
fof(f56,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.list.list'(sK1)),bool),happ(s(fun('type.list.list'('type.list.list'(sK1)),fun('type.list.list'('type.list.list'(sK1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))))),s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'('type.list.list'(sK1)),sK3))))),
  inference(cnf_transformation,[],[f39])).
fof(f1492,plain,(
  ( ! [X11] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'('type.list.list'(sK1)),sK4),s('type.list.list'('type.list.list'(sK1)),X11)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK8),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),X11))))))) )),
  inference(forward_demodulation,[],[f1491,f87])).
fof(f1491,plain,(
  ( ! [X11] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK8),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),X11)))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(sK1)),bool),happ(s(fun('type.list.list'('type.list.list'(sK1)),fun('type.list.list'('type.list.list'(sK1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))))),s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'('type.list.list'(sK1)),X11))))) )),
  inference(forward_demodulation,[],[f58,f87])).
fof(f58,plain,(
  ( ! [X11] : (p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),X11)))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.list.list'(sK1)),bool),happ(s(fun('type.list.list'('type.list.list'(sK1)),fun('type.list.list'('type.list.list'(sK1)),bool)),'const.list.LIST_REL_1'(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))))),s('type.list.list'('type.list.list'(sK1)),sK4))),s('type.list.list'('type.list.list'(sK1)),X11))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f90,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) | $spl2),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f57,plain,(
  p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5))))),
  inference(cnf_transformation,[],[f39])).
fof(f89,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),X9),s(fun(sK0,sK1),X10))))) ) | $spl0),
  inference(cnf_transformation,[],[f89_D])).
fof(f89_D,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),X9),s(fun(sK0,sK1),X10))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f91,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) | $spl3),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f93,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3)))))) | $spl5),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3)))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f59,plain,(
  ( ! [X10,X9] : (~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK4))))),s('type.list.list'(sK1),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(sK1)),sK3)))))) | ~p(s(bool,happ(s(fun('type.list.list'(sK1),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK1),bool)),'const.list.LIST_REL_1'(s(fun(sK1,fun(sK1,bool)),sK8))),s('type.list.list'(sK1),sK6))),s('type.list.list'(sK1),sK5)))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK8),s(fun(sK1,sK0),X9),s(fun(sK0,sK1),X10))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f1990,plain,(
  $false | ($spl0 | $spl8 | $spl14)),
  inference(subsumption_resolution,[],[f1983,f96])).
fof(f1983,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl14)),
  inference(superposition,[],[f89,f297])).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 60
% Passive clauses: 302
% Generated clauses: 1872
% Final active clauses: 46
% Final passive clauses: 172
% Input formulas: 15
% Initial clauses: 33
% 
% Duplicate literals: 160
% Trivial inequalities: 36
% Fw subsumption resolutions: 239
% Fw demodulations: 131
% Bw demodulations: 10
% 
% Simple tautologies: 98
% Equational tautologies: 17
% Forward subsumptions: 818
% 
% Binary resolution: 98
% Forward superposition: 681
% Backward superposition: 377
% Self superposition: 32
% Equality factoring: 28
% Equality resolution: 9
% 
% Split clauses: 60
% Split components: 127
% SAT solver clauses: 125
% SAT solver unit clauses: 5
% SAT solver binary clauses: 26
% SAT solver learnt clauses: 1
% 
% Sat splits: 60
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 123
% TWLsolver calls for satisfiability: 49
% 
% Memory used [KB]: 1663
% Time elapsed: 0.047 s
% ------------------------------
% ------------------------------
% Success in time 0.049 s
