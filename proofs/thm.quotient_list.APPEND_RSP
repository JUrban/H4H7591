Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quotient_list
% (76166)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 720
% Passive clauses: 8147
% Generated clauses: 19418
% Final active clauses: 711
% Final passive clauses: 7049
% Input formulas: 69
% Initial clauses: 231
% 
% Duplicate literals: 443
% Trivial inequalities: 79
% Fw subsumption resolutions: 1325
% Fw demodulations: 558
% Bw demodulations: 9
% 
% Simple tautologies: 214
% Equational tautologies: 61
% Forward subsumptions: 8335
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 10929
% Factoring: 2516
% Forward superposition: 1338
% Backward superposition: 1755
% Self superposition: 47
% Equality factoring: 26
% Equality resolution: 31
% 
% Split clauses: 295
% Split components: 592
% SAT solver clauses: 591
% SAT solver unit clauses: 22
% SAT solver binary clauses: 89
% 
% Sat splits: 295
% 
% TWLsolver clauses: 591
% TWLsolver calls for satisfiability: 421
% 
% Memory used [KB]: 9338
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f5949,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5910,f318,f577,f582,f584,f440,f650,f740,f744,f316,f571,f348,f601,f741,f746,f315,f573,f881,f887,f317,f569,f352,f603])).
fof(f603,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl44),
  inference(cnf_transformation,[],[f603_D])).
fof(f603_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f352,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X19] : (s(bool,'F_0') = s(bool,X19) <=> ~p(s(bool,X19)))),
  file('thm.quotient_list.APPEND_RSP','thm.bool.EQ_CLAUSES|split|3')).
fof(f569,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21)))))) | $spl1),
  inference(cnf_transformation,[],[f569_D])).
fof(f569_D,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f317,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21))))))),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK14,fun(sK14,bool)),sK15),s(fun(sK14,sK13),sK16),s(fun(sK13,sK14),sK17)))) & (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21])],[f164])).
fof(f164,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6,X7,X8] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X7),s('type.list.list'(X1),X8)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X7))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X6),s('type.list.list'(X1),X8))))))))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6,X7,X8] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X7),s('type.list.list'(X1),X8))))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X7))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X6),s('type.list.list'(X1),X8))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X7),s('type.list.list'(X1),X8))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X7))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X6),s('type.list.list'(X1),X8))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X7),s('type.list.list'(X1),X8))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X7))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X6),s('type.list.list'(X1),X8))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12,X13,X14] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X13),s('type.list.list'(X7),X14))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X13))),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X12),s('type.list.list'(X7),X14))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12,X13,X14] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X13),s('type.list.list'(X7),X14))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X13))),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X12),s('type.list.list'(X7),X14))))))))),
  file('thm.quotient_list.APPEND_RSP','thm.quotient_list.APPEND_RSP')).
fof(f887,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21))))) | $spl356),
  inference(cnf_transformation,[],[f887_D])).
fof(f887_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21))))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f881,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK20))),s('type.list.list'(sK14),'const.list.APPEND_2'(s('type.list.list'(sK14),sK19),s('type.list.list'(sK14),sK21))))) | ($spl1 | $spl44)),
  inference(resolution,[],[f569,f603])).
fof(f573,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) | $spl4),
  inference(cnf_transformation,[],[f573_D])).
fof(f573_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f315,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19))))),
  inference(cnf_transformation,[],[f222])).
fof(f746,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19))) | $spl282),
  inference(cnf_transformation,[],[f746_D])).
fof(f746_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f741,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19))) | ($spl4 | $spl40)),
  inference(resolution,[],[f601,f573])).
fof(f601,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(cnf_transformation,[],[f601_D])).
fof(f601_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f348,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X19] : (s(bool,'T_0') = s(bool,X19) <=> p(s(bool,X19)))),
  file('thm.quotient_list.APPEND_RSP','thm.bool.EQ_CLAUSES|split|0')).
fof(f571,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21)))) | $spl2),
  inference(cnf_transformation,[],[f571_D])).
fof(f571_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f316,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21))))),
  inference(cnf_transformation,[],[f222])).
fof(f744,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21))) | $spl280),
  inference(cnf_transformation,[],[f744_D])).
fof(f744_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f740,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21))) | ($spl2 | $spl40)),
  inference(resolution,[],[f601,f571])).
fof(f650,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4))))) ) | $spl118),
  inference(cnf_transformation,[],[f650_D])).
fof(f650_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f440,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))))))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) & ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))) | (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2)))))))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X5),s('type.list.list'(X1),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X3),s('type.list.list'(X1),X2))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X4),s('type.list.list'(X1),X2)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : ! [X15,X16,X12,X11,X8] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X6),X12)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),X16),s('type.list.list'(X6),X15))))) <=> (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X16))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X12),s('type.list.list'(X6),X15)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X12))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X16)))))),
  file('thm.quotient_list.APPEND_RSP','thm.rich_list.EVERY2_APPEND')).
fof(f584,plain,(
  ~p(s(bool,'F_0')) | $spl15),
  inference(cnf_transformation,[],[f584_D])).
fof(f584_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f582,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f323,f318])).
fof(f323,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f25])).
fof(f25,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.quotient_list.APPEND_RSP','thm.bool.NOT_CLAUSES|split|2')).
fof(f577,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f577_D])).
fof(f577_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f318,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quotient_list.APPEND_RSP',aHL_TRUTH)).
fof(f5910,plain,(
  $false | ($spl8 | $spl15 | $spl118 | $spl280 | $spl282 | $spl356)),
  inference(subsumption_resolution,[],[f5909,f577])).
fof(f5909,plain,(
  ~p(s(bool,'T_0')) | ($spl8 | $spl15 | $spl118 | $spl280 | $spl282 | $spl356)),
  inference(forward_demodulation,[],[f5908,f746])).
fof(f5908,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) | ($spl8 | $spl15 | $spl118 | $spl280 | $spl356)),
  inference(subsumption_resolution,[],[f5907,f577])).
fof(f5907,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) | ($spl15 | $spl118 | $spl280 | $spl356)),
  inference(forward_demodulation,[],[f5906,f744])).
fof(f5906,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) | ($spl15 | $spl118 | $spl356)),
  inference(subsumption_resolution,[],[f5850,f584])).
fof(f5850,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK20),s('type.list.list'(sK14),sK21)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK14,fun(sK14,bool)),sK15),s('type.list.list'(sK14),sK18),s('type.list.list'(sK14),sK19)))) | ($spl118 | $spl356)),
  inference(superposition,[],[f650,f887])).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 326
% Passive clauses: 902
% Generated clauses: 5618
% Final active clauses: 315
% Final passive clauses: 554
% Input formulas: 69
% Initial clauses: 231
% 
% Duplicate literals: 94
% Trivial inequalities: 6
% Fw subsumption resolutions: 373
% Fw demodulations: 617
% Bw demodulations: 31
% Condensations: 86
% Global subsumptions: 15
% 
% Simple tautologies: 184
% Equational tautologies: 9
% Forward subsumptions: 2251
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 1481
% Factoring: 187
% Forward superposition: 947
% Backward superposition: 602
% Self superposition: 26
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 1325
% SAT solver unit clauses: 260
% SAT solver binary clauses: 82
% SAT solver learnt clauses: 31
% SAT solver learnt literals: 10
% 
% Sat splits: 5
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1264
% TWLsolver calls for satisfiability: 2061
% 
% Memory used [KB]: 6908
% Time elapsed: 0.200 s
% ------------------------------
% ------------------------------
% Success in time 0.832 s
