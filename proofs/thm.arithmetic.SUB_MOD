Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (80998)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 668
% Passive clauses: 8994
% Generated clauses: 18747
% Final active clauses: 662
% Final passive clauses: 7858
% Input formulas: 45
% Initial clauses: 174
% 
% Duplicate literals: 347
% Trivial inequalities: 20
% Fw subsumption resolutions: 1736
% Fw demodulations: 324
% Bw demodulations: 5
% 
% Simple tautologies: 219
% Equational tautologies: 56
% Forward subsumptions: 6327
% 
% Binary resolution: 10261
% Factoring: 1154
% Forward superposition: 2413
% Backward superposition: 2086
% Self superposition: 43
% Equality factoring: 34
% Equality resolution: 9
% 
% Split clauses: 548
% Split components: 1103
% SAT solver clauses: 851
% SAT solver unit clauses: 20
% SAT solver binary clauses: 127
% 
% Sat splits: 548
% 
% TWLsolver clauses: 850
% TWLsolver calls for satisfiability: 394
% 
% Memory used [KB]: 9466
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f5126,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5125,f246,f427,f2674,f2694,f2168,f2170,f247,f433,f316,f466,f560,f564,f245,f429,f262,f441,f2598,f2599,f306,f461,f561,f566,f244,f431,f2172,f2184,f304,f459,f5076,f5110,f1889,f1895,f305,f460])).
fof(f460,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl42),
  inference(cnf_transformation,[],[f460_D])).
fof(f460_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f305,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.SUB_MOD','thm.arithmetic.ADD_SYM')).
fof(f1895,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1)))) ) | $spl692),
  inference(cnf_transformation,[],[f1895_D])).
fof(f1895_D,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1)))) ) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f1889,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X1)))) ) | ($spl40 | $spl42)),
  inference(superposition,[],[f459,f460])).
fof(f5110,plain,(
  s('type.num.num',sK21(sK12,sK13)) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | $spl2584),
  inference(cnf_transformation,[],[f5110_D])).
fof(f5110_D,plain,(
  s('type.num.num',sK21(sK12,sK13)) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))) <=> ~$spl2584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2584])])).
fof(f5076,plain,(
  s('type.num.num',sK21(sK12,sK13)) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | ($spl692 | $spl858)),
  inference(superposition,[],[f1895,f2170])).
fof(f459,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) ) | $spl40),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f304,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))),s('type.num.num',X9)))),
  file('thm.arithmetic.SUB_MOD','thm.arithmetic.ADD_SUB')).
fof(f2184,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))) | $spl862),
  inference(cnf_transformation,[],[f2184_D])).
fof(f2184_D,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))) <=> ~$spl862),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl862])])).
fof(f2172,plain,(
  s('type.num.num',sK13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))) | ($spl40 | $spl858)),
  inference(superposition,[],[f459,f2170])).
fof(f431,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13)))) | $spl4),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f244,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13))))),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))),s('type.num.num',sK13)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f115])).
fof(f115,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ? [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7))))),
  file('thm.arithmetic.SUB_MOD','thm.arithmetic.SUB_MOD')).
fof(f566,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13))) | $spl218),
  inference(cnf_transformation,[],[f566_D])).
fof(f566_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f561,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13))) | ($spl4 | $spl12)),
  inference(resolution,[],[f441,f431])).
fof(f461,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) ) | $spl44),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f306,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X11))),s('type.num.num',X7))))),
  file('thm.arithmetic.SUB_MOD','thm.arithmetic.ADD_MODULUS|split|1')).
fof(f2599,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',X3))),s('type.num.num',sK13)))) ) | $spl1120),
  inference(cnf_transformation,[],[f2599_D])).
fof(f2599_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',X3))),s('type.num.num',sK13)))) ) <=> ~$spl1120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1120])])).
fof(f2598,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',X3))),s('type.num.num',sK13)))) ) | ($spl6 | $spl44 | $spl218 | $spl862)),
  inference(forward_demodulation,[],[f2597,f2184])).
fof(f2597,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13))))))) ) | ($spl6 | $spl44 | $spl218 | $spl862)),
  inference(subsumption_resolution,[],[f2596,f433])).
fof(f2596,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13))))))) ) | ($spl44 | $spl218 | $spl862)),
  inference(forward_demodulation,[],[f2569,f566])).
fof(f2569,plain,(
  ( ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK13)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13)))),s('type.num.num',X3))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK21(sK12,sK13))))))) ) | ($spl44 | $spl862)),
  inference(superposition,[],[f461,f2184])).
fof(f441,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f262,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.arithmetic.SUB_MOD','thm.bool.EQ_CLAUSES|split|0')).
fof(f429,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12)))) | $spl2),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f245,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12))))),
  inference(cnf_transformation,[],[f163])).
fof(f564,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12))) | $spl216),
  inference(cnf_transformation,[],[f564_D])).
fof(f564_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12))) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f560,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK13),s('type.num.num',sK12))) | ($spl2 | $spl12)),
  inference(resolution,[],[f441,f429])).
fof(f466,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK21(X1,X0))))) ) | $spl54),
  inference(cnf_transformation,[],[f466_D])).
fof(f466_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK21(X1,X0))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f316,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK21(X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK21(X1,X0))))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21])],[f196])).
fof(f196,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X3)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f195])).
fof(f195,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))) & (! [X2] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> ? [X10] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X10))))),
  file('thm.arithmetic.SUB_MOD','thm.arithmetic.LESS_EQ_EXISTS')).
fof(f433,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f247,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.SUB_MOD','thm.bool.TRUTH')).
fof(f2170,plain,(
  s('type.num.num',sK12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK21(sK12,sK13)))) | $spl858),
  inference(cnf_transformation,[],[f2170_D])).
fof(f2170_D,plain,(
  s('type.num.num',sK12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK21(sK12,sK13)))) <=> ~$spl858),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl858])])).
fof(f2168,plain,(
  s('type.num.num',sK12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK21(sK12,sK13)))) | ($spl6 | $spl54 | $spl216)),
  inference(subsumption_resolution,[],[f2142,f433])).
fof(f2142,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK21(sK12,sK13)))) | ($spl54 | $spl216)),
  inference(superposition,[],[f466,f564])).
fof(f2694,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK21(sK12,sK13)),s('type.num.num',sK13))) | $spl1168),
  inference(cnf_transformation,[],[f2694_D])).
fof(f2694_D,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK21(sK12,sK13)),s('type.num.num',sK13))) <=> ~$spl1168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1168])])).
fof(f2674,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK21(sK12,sK13)),s('type.num.num',sK13))) | ($spl858 | $spl1120)),
  inference(superposition,[],[f2599,f2170])).
fof(f427,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))),s('type.num.num',sK13))) | $spl1),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))),s('type.num.num',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f246,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK12),s('type.num.num',sK13))),s('type.num.num',sK13)))),
  inference(cnf_transformation,[],[f163])).
fof(f5125,plain,(
  $false | ($spl1 | $spl1168 | $spl2584)),
  inference(subsumption_resolution,[],[f5124,f2694])).
fof(f5124,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK21(sK12,sK13)),s('type.num.num',sK13))) | ($spl1 | $spl2584)),
  inference(backward_demodulation,[],[f5110,f427])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 305
% Passive clauses: 1284
% Generated clauses: 4841
% Final active clauses: 298
% Final passive clauses: 975
% Input formulas: 45
% Initial clauses: 174
% 
% Duplicate literals: 90
% Trivial inequalities: 11
% Fw subsumption resolutions: 300
% Fw demodulations: 176
% Bw demodulations: 10
% Condensations: 39
% Global subsumptions: 13
% 
% Simple tautologies: 192
% Equational tautologies: 4
% Forward subsumptions: 1305
% 
% Binary resolution: 1913
% Factoring: 75
% Forward superposition: 494
% Backward superposition: 237
% Self superposition: 12
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 1615
% SAT solver unit clauses: 187
% SAT solver binary clauses: 62
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 5
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1562
% TWLsolver calls for satisfiability: 1697
% 
% Memory used [KB]: 5884
% Time elapsed: 0.200 s
% ------------------------------
% ------------------------------
% Success in time 0.806 s
