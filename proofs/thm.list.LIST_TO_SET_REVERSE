Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% (112242)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 194
% Passive clauses: 2143
% Generated clauses: 24407
% Final active clauses: 144
% Final passive clauses: 1594
% Input formulas: 21
% Initial clauses: 34
% 
% Duplicate literals: 1481
% Trivial inequalities: 153
% Fw subsumption resolutions: 3487
% Fw demodulations: 4079
% Bw demodulations: 34
% 
% Simple tautologies: 370
% Equational tautologies: 28
% Forward subsumptions: 10793
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 462
% Forward superposition: 8970
% Backward superposition: 5322
% Self superposition: 112
% Equality factoring: 36
% Equality resolution: 36
% 
% Split clauses: 866
% Split components: 1748
% SAT solver clauses: 1800
% SAT solver unit clauses: 18
% SAT solver binary clauses: 108
% 
% Sat splits: 866
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 1789
% TWLsolver calls for satisfiability: 261
% 
% Memory used [KB]: 12025
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f5965,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5933,f76,f113,f5400,f5428,f1242,f1269,f102,f130,f104,f131])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl24),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f104,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK4(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(rectify,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X14,X9] : (s(fun(X6,bool),X9) = s(fun(X6,bool),X14) <=> ! [X10] : s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),X9))) = s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),X14))))),
  file('thm.list.LIST_TO_SET_REVERSE','thm.pred_set.EXTENSION')).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))))) ) | $spl22),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f102,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X13,X10] : s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X13))))) = s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X13)))))))),
  file('thm.list.LIST_TO_SET_REVERSE','thm.list.MEM_REVERSE')).
fof(f1269,plain,(
  ( ! [X6,X8,X7] : (s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),X7))) != s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8))))) | s(fun(X6,bool),X7) = s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))) ) | $spl198),
  inference(cnf_transformation,[],[f1269_D])).
fof(f1269_D,plain,(
  ( ! [X6,X8,X7] : (s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),X7))) != s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8))))) | s(fun(X6,bool),X7) = s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f1242,plain,(
  ( ! [X6,X8,X7] : (s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),X7))) != s(bool,'const.bool.IN_2'(s(X6,sK4(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))),X6)),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8))))) | s(fun(X6,bool),X7) = s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X8)))))) ) | ($spl22 | $spl24)),
  inference(superposition,[],[f131,f130])).
fof(f5428,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) ) | $spl958),
  inference(cnf_transformation,[],[f5428_D])).
fof(f5428_D,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) ) <=> ~$spl958),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl958])])).
fof(f5400,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) ) | $spl198),
  inference(equality_resolution,[],[f1269])).
fof(f113,plain,(
  s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) != s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK1))))) | $spl1),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) != s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK1))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f76,plain,(
  s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) != s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) != s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.REVERSE_1'(s('type.list.list'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f53])).
fof(f53,plain,(
  ? [X0,X1] : s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) != s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1] : s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7))) = s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7))) = s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X7)))))),
  file('thm.list.LIST_TO_SET_REVERSE','thm.list.LIST_TO_SET_REVERSE')).
fof(f5933,plain,(
  $false | ($spl1 | $spl958)),
  inference(trivial_inequality_removal,[],[f5894])).
fof(f5894,plain,(
  s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) != s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))) | ($spl1 | $spl958)),
  inference(superposition,[],[f113,f5428])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 90
% Passive clauses: 514
% Generated clauses: 5810
% Final active clauses: 79
% Final passive clauses: 348
% Input formulas: 21
% Initial clauses: 34
% 
% Duplicate literals: 368
% Trivial inequalities: 66
% Fw subsumption resolutions: 378
% Fw demodulations: 642
% Bw demodulations: 79
% Condensations: 471
% Global subsumptions: 4
% 
% Simple tautologies: 117
% Equational tautologies: 24
% Forward subsumptions: 2420
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 91
% Forward superposition: 1931
% Backward superposition: 1095
% Self superposition: 53
% Equality factoring: 32
% Equality resolution: 21
% 
% Split clauses: 37
% Split components: 81
% SAT solver clauses: 850
% SAT solver unit clauses: 48
% SAT solver binary clauses: 37
% SAT solver learnt clauses: 9
% 
% Sat splits: 37
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 833
% TWLsolver calls for satisfiability: 205
% 
% Memory used [KB]: 5756
% Time elapsed: 0.251 s
% ------------------------------
% ------------------------------
% Success in time 0.874 s
