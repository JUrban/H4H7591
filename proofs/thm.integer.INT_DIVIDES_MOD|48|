Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f6033,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5376,f5372,f332,f568,f393,f565,f567,f5321,f320,f563,f6030,f325,f562,f5748,f324,f559,f564,f558,f5423,f5371,f323,f561,f560,f557])).
fof(f557,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) | $spl0),
  inference(cnf_transformation,[],[f557_D])).
fof(f557_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f560,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f560_D])).
fof(f560_D,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f561,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(cnf_transformation,[],[f561_D])).
fof(f561_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f323,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))))),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) & s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) | ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f196])).
fof(f196,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) & (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <~> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & ~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) & ~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) & ~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.integer.INT_DIVIDES_MOD|48|')).
fof(f5371,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | $spl115),
  inference(cnf_transformation,[],[f5371_D])).
fof(f5371_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f5423,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | ($spl1 | $spl2 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f5421,f565])).
fof(f5421,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl4 | $spl8)),
  inference(resolution,[],[f5382,f456])).
fof(f456,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f274])).
fof(f274,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f5382,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12))) | ($spl1 | $spl2 | $spl4 | $spl8)),
  inference(backward_demodulation,[],[f5380,f593])).
fof(f593,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | ($spl1 | $spl8)),
  inference(resolution,[],[f585,f558])).
fof(f585,plain,(
  ( ! [X0] : (p(s(bool,X0)) | sP1('T_0',X0)) ) | $spl8),
  inference(resolution,[],[f457,f565])).
fof(f457,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f275])).
fof(f5380,plain,(
  s('type.integer.int',sK12) = s('type.integer.int',sK13) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f561,f559])).
fof(f558,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) | $spl1),
  inference(cnf_transformation,[],[f558_D])).
fof(f558_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f564,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | $spl7),
  inference(cnf_transformation,[],[f564_D])).
fof(f564_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f559,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f559_D])).
fof(f559_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f324,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))))),
  inference(cnf_transformation,[],[f197])).
fof(f5748,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl8)),
  inference(subsumption_resolution,[],[f5747,f5424])).
fof(f5424,plain,(
  s('type.integer.int',sK12) != s('type.integer.int',sK13) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f562,f559])).
fof(f5747,plain,(
  s('type.integer.int',sK12) = s('type.integer.int',sK13) | ($spl0 | $spl2 | $spl8)),
  inference(forward_demodulation,[],[f5746,f5336])).
fof(f5336,plain,(
  ( ! [X0] : (s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))) ) | $spl2),
  inference(backward_demodulation,[],[f559,f333])).
fof(f333,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X12] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.integer.INT_MUL_RZERO')).
fof(f5746,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK25(sK13,sK12)),s('type.integer.int',sK12))) | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f5660,f565])).
fof(f5660,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK25(sK13,sK12)),s('type.integer.int',sK12))) | $spl0),
  inference(superposition,[],[f434,f5426])).
fof(f5426,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl0),
  inference(resolution,[],[f557,f350])).
fof(f350,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.bool.EQ_CLAUSES|split|1')).
fof(f434,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK25(X1,X0)),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK25(X1,X0)),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK25])],[f263])).
fof(f263,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X3] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ? [X19] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',X6))))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.integer.INT_DIVIDES')).
fof(f562,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl5),
  inference(cnf_transformation,[],[f562_D])).
fof(f562_D,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f325,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))))),
  inference(cnf_transformation,[],[f197])).
fof(f6030,plain,(
  $false | ($spl0 | $spl3 | $spl7)),
  inference(subsumption_resolution,[],[f6029,f560])).
fof(f6029,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f6005,f564])).
fof(f6005,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(superposition,[],[f346,f5425])).
fof(f5425,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK25(sK13,sK12)),s('type.integer.int',sK12))) | $spl0),
  inference(resolution,[],[f557,f434])).
fof(f346,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X7] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X6))),s('type.integer.int',X6))))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.integer.INT_MOD_COMMON_FACTOR')).
fof(f563,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | $spl6),
  inference(cnf_transformation,[],[f563_D])).
fof(f563_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f320,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))))),
  inference(cnf_transformation,[],[f197])).
fof(f5321,plain,(
  $false | ($spl1 | $spl3 | $spl6 | $spl11)),
  inference(subsumption_resolution,[],[f5320,f568])).
fof(f5320,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl3 | $spl6)),
  inference(forward_demodulation,[],[f5287,f584])).
fof(f584,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl1),
  inference(resolution,[],[f354,f558])).
fof(f354,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.bool.EQ_CLAUSES|split|3')).
fof(f5287,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))) | ($spl3 | $spl6)),
  inference(superposition,[],[f4365,f5283])).
fof(f5283,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(sK13,sK12)),s('type.integer.int',sK12))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f5280,f560])).
fof(f5280,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(sK13,sK12)),s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl6),
  inference(trivial_inequality_removal,[],[f5276])).
fof(f5276,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(sK13,sK12)),s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl6),
  inference(superposition,[],[f347,f563])).
fof(f347,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(X1,X0)),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14(X1,X0)),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f201])).
fof(f201,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ? [X3] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))),
  inference(rectify,[],[f200])).
fof(f200,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X7] : (~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7))) <=> ? [X18] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',X7)))))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.integer.INT_MOD_EQ|48|')).
fof(f4365,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) )),
  inference(equality_resolution,[],[f435])).
fof(f435,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f264])).
fof(f567,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(cnf_transformation,[],[f567_D])).
fof(f567_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f565,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f565_D])).
fof(f565_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f393,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f232])).
fof(f232,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f231])).
fof(f231,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X8] : ((p(s(bool,'F_0')) => p(s(bool,X8))) <=> p(s(bool,'T_0')))),
  file('thm.integer.INT_DIVIDES_MOD|48|','thm.bool.IMP_CLAUSES|split|2')).
fof(f568,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f568_D])).
fof(f568_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f332,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_DIVIDES_MOD|48|',aHL_FALSITY)).
fof(f5372,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | $spl114),
  inference(cnf_transformation,[],[f5372_D])).
fof(f5372_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f5376,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | ($spl2 | $spl8 | $spl11)),
  inference(subsumption_resolution,[],[f5375,f568])).
fof(f5375,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)))) | p(s(bool,'F_0')) | ($spl2 | $spl8 | $spl11)),
  inference(resolution,[],[f5344,f455])).
fof(f455,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f275])).
fof(f5344,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int',sK12),s('type.integer.int',sK12)),'F_0') | ($spl2 | $spl8 | $spl11)),
  inference(backward_demodulation,[],[f559,f4605])).
fof(f4605,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),'F_0') | ($spl8 | $spl11)),
  inference(superposition,[],[f4517,f333])).
fof(f4517,plain,(
  ( ! [X21,X22] : (sP1('const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',X21)))),'F_0')) ) | ($spl8 | $spl11)),
  inference(resolution,[],[f4365,f619])).
fof(f619,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | sP1(X0,'F_0')) ) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f615,f565])).
fof(f615,plain,(
  ( ! [X0] : (sP1(X0,'F_0') | ~p(s(bool,X0)) | ~p(s(bool,'T_0'))) ) | ($spl8 | $spl11)),
  inference(resolution,[],[f604,f456])).
fof(f604,plain,(
  ( ! [X0] : (sP1('T_0',X0) | sP1(X0,'F_0')) ) | ($spl8 | $spl11)),
  inference(resolution,[],[f588,f568])).
fof(f588,plain,(
  ( ! [X0,X1] : (sP1('T_0',X0) | p(s(bool,X1)) | sP1(X0,X1)) ) | $spl8),
  inference(resolution,[],[f585,f457])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 448
% Passive clauses: 1901
% Generated clauses: 5719
% Final active clauses: 402
% Final passive clauses: 1215
% Input formulas: 60
% Initial clauses: 230
% 
% Duplicate literals: 164
% Trivial inequalities: 30
% Fw subsumption resolutions: 407
% Fw demodulations: 101
% Bw demodulations: 32
% 
% Simple tautologies: 191
% Equational tautologies: 31
% Forward subsumptions: 2853
% 
% Binary resolution: 3107
% Factoring: 787
% Forward superposition: 278
% Backward superposition: 485
% Self superposition: 11
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 129
% Split components: 264
% SAT solver clauses: 233
% SAT solver unit clauses: 10
% SAT solver binary clauses: 50
% SAT solver learnt clauses: 5
% SAT solver learnt literals: 7
% 
% Sat splits: 129
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 228
% TWLsolver calls for satisfiability: 182
% 
% Memory used [KB]: 3070
% Time elapsed: 0.129 s
% ------------------------------
% ------------------------------
% Success in time 0.132 s
