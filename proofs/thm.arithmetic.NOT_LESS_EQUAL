Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f127,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f126,f45,f69,f67,f111,f44,f68,f66,f65,f70,f52,f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f73_D])).
fof(f73_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f52,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.NOT_LESS_EQUAL',aHL_FALSITY)).
fof(f70,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f65,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f56])).
fof(f56,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8] : ! [X10] : (s(X8,X10) = s(X8,X10) <=> p(s(bool,'T_0')))),
  file('thm.arithmetic.NOT_LESS_EQUAL','thm.bool.REFL_CLAUSE')).
fof(f66,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f68,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl2),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f44,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f33])).
fof(f33,plain,(
  ? [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ? [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <~> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.arithmetic.NOT_LESS_EQUAL','thm.arithmetic.NOT_LESS_EQUAL')).
fof(f111,plain,(
  $false | ($spl1 | $spl3)),
  inference(subsumption_resolution,[],[f108,f66])).
fof(f108,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl3),
  inference(resolution,[],[f62,f69])).
fof(f62,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.arithmetic.NOT_LESS_EQUAL','thm.arithmetic.NOT_LESS')).
fof(f67,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl0),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f69,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl3),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f45,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f34])).
fof(f126,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f125,f68])).
fof(f125,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | ($spl0 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f123,f70])).
fof(f123,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | ($spl0 | $spl7)),
  inference(superposition,[],[f63,f115])).
fof(f115,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f114,f73])).
fof(f114,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl0),
  inference(superposition,[],[f67,f53])).
fof(f53,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.NOT_LESS_EQUAL',aHL_BOOL_CASES)).
fof(f63,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f42])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 16
% Passive clauses: 28
% Generated clauses: 82
% Final active clauses: 9
% Final passive clauses: 7
% Input formulas: 13
% Initial clauses: 21
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% Fw subsumption resolutions: 6
% Bw demodulations: 3
% 
% Simple tautologies: 8
% Equational tautologies: 3
% Forward subsumptions: 23
% 
% Binary resolution: 6
% Forward superposition: 18
% Backward superposition: 10
% Self superposition: 4
% Equality factoring: 2
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 16
% SAT solver unit clauses: 5
% SAT solver binary clauses: 8
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 7
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 14
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.015 s
