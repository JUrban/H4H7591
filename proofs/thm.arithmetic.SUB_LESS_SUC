Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f254,plain,(
  $false),
  inference(resolution,[],[f251,f23])).
fof(f23,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f17])).
fof(f17,plain,(
  ? [X0,X1] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))),
  file('thm.arithmetic.SUB_LESS_SUC','thm.arithmetic.SUB_LESS_SUC')).
fof(f251,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(subsumption_resolution,[],[f245,f24])).
fof(f24,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.SUB_LESS_SUC',aHL_TRUTH)).
fof(f245,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(superposition,[],[f241,f38])).
fof(f38,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(subsumption_resolution,[],[f35,f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.SUB_LESS_SUC',aHL_FALSITY)).
fof(f35,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f26,f27])).
fof(f27,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.SUB_LESS_SUC',aHL_BOOL_CASES)).
fof(f26,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))),
  file('thm.arithmetic.SUB_LESS_SUC','thm.prim_rec.LESS_SUC_REFL')).
fof(f241,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(subsumption_resolution,[],[f235,f24])).
fof(f235,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f30,f63])).
fof(f63,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f62,f25])).
fof(f62,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f28,f27])).
fof(f28,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X7] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num',X8))))),
  file('thm.arithmetic.SUB_LESS_SUC','thm.arithmetic.SUB_LESS_EQ')).
fof(f30,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X8,X6] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.arithmetic.SUB_LESS_SUC','thm.arithmetic.LESS_EQ_LESS_TRANS')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 39
% Generated clauses: 227
% Final active clauses: 13
% Final passive clauses: 14
% Input formulas: 8
% Initial clauses: 8
% 
% Duplicate literals: 45
% Trivial inequalities: 2
% Fw subsumption resolutions: 12
% Bw demodulations: 3
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 93
% 
% Binary resolution: 11
% Forward superposition: 50
% Backward superposition: 43
% Self superposition: 24
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
