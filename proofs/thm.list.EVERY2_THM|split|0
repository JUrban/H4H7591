Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f1745,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1739,f1195,f190,f302,f300,f231,f305,f303,f197,f304,f1210,f1223,f189,f301,f299])).
fof(f299,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) | $spl0),
  inference(cnf_transformation,[],[f299_D])).
fof(f299_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f301,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3) | $spl2),
  inference(cnf_transformation,[],[f301_D])).
fof(f301_D,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f189,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3))))),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3)) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) | s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f142])).
fof(f142,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X3)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X3)) & (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X3)))) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X3)))),
  inference(nnf_transformation,[],[f124])).
fof(f124,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X3)))) <~> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X3))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X3)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X3))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X3)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X3))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X9)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X9))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X9)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X9))),
  file('thm.list.EVERY2_THM|split|0','thm.list.EVERY2_THM|split|0')).
fof(f1223,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3))) | $spl22),
  inference(cnf_transformation,[],[f1223_D])).
fof(f1223_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1210,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3))) | $spl0),
  inference(resolution,[],[f299,f203])).
fof(f203,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.list.EVERY2_THM|split|0','thm.bool.EQ_CLAUSES|split|1')).
fof(f304,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f304_D])).
fof(f304_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f197,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.EVERY2_THM|split|0',aHL_FALSITY)).
fof(f303,plain,(
  p(s(bool,'F_0')) | $spl4),
  inference(cnf_transformation,[],[f303_D])).
fof(f303_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f305,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f305_D])).
fof(f305_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f231,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10] : ((p(s(bool,'F_0')) => p(s(bool,X10))) <=> p(s(bool,'T_0')))),
  file('thm.list.EVERY2_THM|split|0','thm.bool.IMP_CLAUSES|split|2')).
fof(f300,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) | $spl1),
  inference(cnf_transformation,[],[f300_D])).
fof(f300_D,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f302,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK3) | $spl3),
  inference(cnf_transformation,[],[f302_D])).
fof(f302_D,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK3) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f190,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK3) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),sK3))))),
  inference(cnf_transformation,[],[f143])).
fof(f1195,plain,(
  $false | ($spl1 | $spl2 | $spl6)),
  inference(subsumption_resolution,[],[f1155,f305])).
fof(f1155,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f263,f405])).
fof(f405,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK1,bool)),sK2),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f300,f301])).
fof(f263,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ! [X2] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6,X7] : ! [X25] : s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X25),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0')))),
  file('thm.list.EVERY2_THM|split|0','thm.list.LIST_REL_def|split|0')).
fof(f1739,plain,(
  $false | ($spl3 | $spl6 | $spl22)),
  inference(subsumption_resolution,[],[f1738,f302])).
fof(f1738,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3) | ($spl6 | $spl22)),
  inference(subsumption_resolution,[],[f1727,f305])).
fof(f1727,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK3) | $spl22),
  inference(superposition,[],[f268,f1223])).
fof(f268,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2))))))),
  inference(nnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X3),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),X2)))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6,X7] : ! [X15,X25] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X7,bool)),X25),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),X15)))) <=> s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X15))),
  file('thm.list.EVERY2_THM|split|0','thm.list.LIST_REL_NIL|split|0')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 38
% Passive clauses: 420
% Generated clauses: 1500
% Final active clauses: 35
% Final passive clauses: 346
% Input formulas: 49
% Initial clauses: 108
% 
% Duplicate literals: 109
% Trivial inequalities: 35
% Fw subsumption resolutions: 190
% Fw demodulations: 39
% Bw demodulations: 2
% 
% Simple tautologies: 103
% Equational tautologies: 31
% Forward subsumptions: 533
% 
% Binary resolution: 96
% Factoring: 1
% Forward superposition: 377
% Backward superposition: 424
% Self superposition: 46
% Equality factoring: 50
% Equality resolution: 5
% 
% Split clauses: 48
% Split components: 97
% SAT solver clauses: 70
% SAT solver unit clauses: 10
% SAT solver binary clauses: 49
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 48
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 66
% TWLsolver calls for satisfiability: 25
% 
% Memory used [KB]: 1407
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.045 s
