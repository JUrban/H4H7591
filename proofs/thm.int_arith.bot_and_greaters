Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% (85064)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 153
% Passive clauses: 2133
% Generated clauses: 19201
% Final active clauses: 142
% Final passive clauses: 1806
% Input formulas: 28
% Initial clauses: 70
% 
% Duplicate literals: 951
% Trivial inequalities: 415
% Fw subsumption resolutions: 3231
% Fw demodulations: 1998
% Bw demodulations: 7
% 
% Simple tautologies: 503
% Equational tautologies: 55
% Forward subsumptions: 7959
% 
% Binary resolution: 642
% Forward superposition: 4860
% Backward superposition: 6422
% Self superposition: 191
% Equality factoring: 157
% Equality resolution: 37
% 
% Split clauses: 1317
% Split components: 2746
% SAT solver clauses: 2028
% SAT solver unit clauses: 38
% SAT solver binary clauses: 195
% 
% Sat splits: 1317
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2024
% TWLsolver calls for satisfiability: 217
% 
% Memory used [KB]: 9083
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f3228,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3215,f114,f205,f119,f211,f231,f236,f112,f200,f120,f210,f341,f116,f207,f994,f995,f249,f254,f113,f198,f124,f212,f294,f321,f118,f209,f323,f326,f324,f2020,f2021,f162,f223,f164,f226,f228,f233,f111,f202,f433,f436,f117,f208,f161,f222,f2003,f2005,f110,f203,f1927,f1937,f1907,f1909,f1180,f1181,f165,f225])).
fof(f225,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X2,X1,X0)),s('type.integer.int',X1))))))) ) | $spl30),
  inference(cnf_transformation,[],[f225_D])).
fof(f225_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X2,X1,X0)),s('type.integer.int',X1))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f165,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X2,X1,X0)),s('type.integer.int',X1))))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : ((p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',sK5(X2,X1,X0))))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X2,X1,X0)),s('type.integer.int',X1))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ! [X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : (? [X4] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X4)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ! [X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))))))),
  inference(rectify,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | ! [X4] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2] : ((? [X3] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2))))) | ! [X4] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : ((! [X3] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2))))) => ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7,X8] : ((! [X9] : (p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X9)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X8))))) => ! [X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X7))))))))))),
  file('thm.int_arith.bot_and_greaters','thm.int_arith.top_and_lessers')).
fof(f1181,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(X3,'const.integer.int_neg_1'(s('type.integer.int',X1)),X2)),s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int',X3))))) ) | $spl146),
  inference(cnf_transformation,[],[f1181_D])).
fof(f1181_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(X3,'const.integer.int_neg_1'(s('type.integer.int',X1)),X2)),s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int',X3))))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f1180,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(X3,'const.integer.int_neg_1'(s('type.integer.int',X1)),X2)),s('type.integer.int',X1)))))) | p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int',X3))))) ) | ($spl26 | $spl30 | $spl76)),
  inference(forward_demodulation,[],[f1179,f436])).
fof(f1179,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X3,'const.integer.int_neg_1'(s('type.integer.int',X1)),X2)),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))))) ) | ($spl26 | $spl30 | $spl76)),
  inference(forward_demodulation,[],[f1151,f436])).
fof(f1151,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK5(X3,'const.integer.int_neg_1'(s('type.integer.int',X1)),X2)),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))))) ) | ($spl26 | $spl30)),
  inference(superposition,[],[f225,f223])).
fof(f1909,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | $spl295),
  inference(cnf_transformation,[],[f1909_D])).
fof(f1909_D,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) <=> ~$spl295),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl295])])).
fof(f1907,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ($spl8 | $spl11 | $spl36 | $spl40 | $spl42 | $spl146)),
  inference(subsumption_resolution,[],[f1906,f205])).
fof(f1906,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ($spl8 | $spl11 | $spl36 | $spl40 | $spl42 | $spl146)),
  inference(forward_demodulation,[],[f1905,f233])).
fof(f1905,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | ($spl8 | $spl11 | $spl40 | $spl42 | $spl146)),
  inference(subsumption_resolution,[],[f1904,f205])).
fof(f1904,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | ($spl11 | $spl40 | $spl42 | $spl146)),
  inference(forward_demodulation,[],[f1895,f236])).
fof(f1895,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | ($spl11 | $spl42 | $spl146)),
  inference(subsumption_resolution,[],[f1856,f207])).
fof(f1856,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | ($spl42 | $spl146)),
  inference(superposition,[],[f1181,f254])).
fof(f1937,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1))))) | $spl302),
  inference(cnf_transformation,[],[f1937_D])).
fof(f1937_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1))))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f1927,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0)),s('type.integer.int',sK1))))) | ($spl20 | $spl295)),
  inference(resolution,[],[f1909,f212])).
fof(f203,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int',sK1)))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',X4))))) ) | $spl6),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int',sK1)))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',X4))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f110,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int',sK1)))))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',X4))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X4] : (~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',X4)))) | p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int',sK1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) & (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f74])).
fof(f74,plain,(
  ? [X0,X1,X2] : (! [X4] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X4)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) & ? [X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))))))),
  inference(rectify,[],[f61])).
fof(f61,plain,(
  ? [X0,X1,X2] : (! [X3] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) & ? [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ? [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2))))) & ? [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) & ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1,X2] : ((! [X3] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X3)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2))))) => ! [X4] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X1))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((! [X9] : (p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X9)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X8))))) => ! [X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X7))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((! [X9] : (p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X9)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))) & p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int',X8))))) => ! [X10] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) => p(s(bool,happ(s(fun('type.integer.int',bool),X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X7))))))))))),
  file('thm.int_arith.bot_and_greaters','thm.int_arith.bot_and_greaters')).
fof(f2005,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0))))) | $spl311),
  inference(cnf_transformation,[],[f2005_D])).
fof(f2005_D,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0))))) <=> ~$spl311),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl311])])).
fof(f2003,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0))))) | ($spl6 | $spl11 | $spl302)),
  inference(subsumption_resolution,[],[f1990,f207])).
fof(f1990,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK5(sK2,'const.integer.int_neg_1'(s('type.integer.int',sK1)),sK0))))) | ($spl6 | $spl302)),
  inference(superposition,[],[f203,f1937])).
fof(f222,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | $spl24),
  inference(cnf_transformation,[],[f222_D])).
fof(f222_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f161,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X9,X13] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X9),s('type.integer.int',X13))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))))),
  file('thm.int_arith.bot_and_greaters','thm.integer.int_sub')).
fof(f208,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl12),
  inference(cnf_transformation,[],[f208_D])).
fof(f208_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f117,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X9] : s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.int_arith.bot_and_greaters','thm.integer.INT_NEGNEG')).
fof(f436,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl76),
  inference(cnf_transformation,[],[f436_D])).
fof(f436_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f433,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | ($spl12 | $spl24)),
  inference(superposition,[],[f222,f208])).
fof(f202,plain,(
  p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f111,plain,(
  p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f75])).
fof(f233,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2))) | $spl36),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f228,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2))) | ($spl4 | $spl16)),
  inference(resolution,[],[f210,f202])).
fof(f226,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',sK5(X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))))) ) | $spl32),
  inference(cnf_transformation,[],[f226_D])).
fof(f226_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',sK5(X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f164,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',X2)))) | p(s(bool,happ(s(fun('type.integer.int',bool),X0),s('type.integer.int',sK5(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f223,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) | $spl26),
  inference(cnf_transformation,[],[f223_D])).
fof(f223_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f162,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9,X13] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X13)))))),
  file('thm.int_arith.bot_and_greaters','thm.integer.INT_NEG_RMUL')).
fof(f2021,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl312),
  inference(cnf_transformation,[],[f2021_D])).
fof(f2021_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f2020,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | ($spl8 | $spl26 | $spl32 | $spl36 | $spl76 | $spl311)),
  inference(forward_demodulation,[],[f2019,f436])).
fof(f2019,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | ($spl8 | $spl26 | $spl32 | $spl36 | $spl311)),
  inference(forward_demodulation,[],[f2018,f223])).
fof(f2018,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))))))))) ) | ($spl8 | $spl32 | $spl36 | $spl311)),
  inference(subsumption_resolution,[],[f2017,f205])).
fof(f2017,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))))))))) ) | ($spl32 | $spl36 | $spl311)),
  inference(forward_demodulation,[],[f2008,f233])).
fof(f2008,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int',sK2)))) | p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK1))))))))))) ) | ($spl32 | $spl311)),
  inference(resolution,[],[f2005,f226])).
fof(f324,plain,(
  ( ! [X2] : (p(s(bool,X2))) ) | $spl56),
  inference(cnf_transformation,[],[f324_D])).
fof(f324_D,plain,(
  ( ! [X2] : (p(s(bool,X2))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f326,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl59),
  inference(cnf_transformation,[],[f326_D])).
fof(f326_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f323,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X2))) ) | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f307,f211])).
fof(f307,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | ($spl14 | $spl18)),
  inference(superposition,[],[f211,f209])).
fof(f209,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f209_D])).
fof(f209_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f118,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.int_arith.bot_and_greaters',aHL_BOOL_CASES)).
fof(f321,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl52),
  inference(cnf_transformation,[],[f321_D])).
fof(f321_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f294,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(superposition,[],[f209,f209])).
fof(f212,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl20),
  inference(cnf_transformation,[],[f212_D])).
fof(f212_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.int_arith.bot_and_greaters','thm.bool.EQ_CLAUSES|split|3')).
fof(f198,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))))) | $spl1),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f113,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))))),
  inference(cnf_transformation,[],[f75])).
fof(f254,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | $spl42),
  inference(cnf_transformation,[],[f254_D])).
fof(f254_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f249,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | ($spl1 | $spl20)),
  inference(resolution,[],[f212,f198])).
fof(f995,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X14)) ) | $spl112),
  inference(cnf_transformation,[],[f995_D])).
fof(f995_D,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X14)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f994,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl42 | $spl52 | $spl59)),
  inference(subsumption_resolution,[],[f693,f326])).
fof(f693,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X14) = s(bool,happ(s(fun('type.integer.int',bool),sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl42 | $spl52)),
  inference(superposition,[],[f321,f254])).
fof(f207,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f207_D])).
fof(f207_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f116,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.int_arith.bot_and_greaters',aHL_FALSITY)).
fof(f341,plain,(
  $false | ($spl11 | $spl56)),
  inference(resolution,[],[f324,f207])).
fof(f210,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f120,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.int_arith.bot_and_greaters','thm.bool.EQ_CLAUSES|split|0')).
fof(f200,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | $spl2),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f112,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))))),
  inference(cnf_transformation,[],[f75])).
fof(f236,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | $spl40),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f231,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | ($spl2 | $spl16)),
  inference(resolution,[],[f210,f200])).
fof(f211,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) | $spl18),
  inference(cnf_transformation,[],[f211_D])).
fof(f211_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f119,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f76])).
fof(f205,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f205_D])).
fof(f205_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f114,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.int_arith.bot_and_greaters',aHL_TRUTH)).
fof(f3215,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl8 | $spl18 | $spl40 | $spl112 | $spl312)),
  inference(subsumption_resolution,[],[f3214,f205])).
fof(f3214,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | ($spl18 | $spl40 | $spl112 | $spl312)),
  inference(forward_demodulation,[],[f3213,f236])).
fof(f3213,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))))) ) | ($spl18 | $spl112 | $spl312)),
  inference(subsumption_resolution,[],[f3195,f211])).
fof(f3195,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl112 | $spl312)),
  inference(superposition,[],[f2021,f995])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 87
% Passive clauses: 223
% Generated clauses: 3126
% Final active clauses: 66
% Final passive clauses: 119
% Input formulas: 28
% Initial clauses: 70
% 
% Duplicate literals: 185
% Trivial inequalities: 52
% Fw subsumption resolutions: 259
% Fw demodulations: 441
% Bw demodulations: 25
% Condensations: 191
% Global subsumptions: 8
% 
% Simple tautologies: 120
% Equational tautologies: 19
% Forward subsumptions: 1271
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 106
% Forward superposition: 925
% Backward superposition: 506
% Self superposition: 35
% Equality factoring: 32
% Equality resolution: 17
% 
% Split clauses: 45
% Split components: 95
% SAT solver clauses: 428
% SAT solver unit clauses: 77
% SAT solver binary clauses: 28
% SAT solver learnt clauses: 17
% 
% Sat splits: 45
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 394
% TWLsolver calls for satisfiability: 297
% 
% Memory used [KB]: 3198
% Time elapsed: 0.115 s
% ------------------------------
% ------------------------------
% Success in time 0.746 s
