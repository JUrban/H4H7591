Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f13110,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f13093,f395,f400,f1425,f402,f1427,f409,f251,f399])).
fof(f399,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f251,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quotient_list.REVERSE_RSP',aHL_FALSITY)).
fof(f409,plain,(
  $false | ($spl1 | $spl4)),
  inference(resolution,[],[f402,f399])).
fof(f1427,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) | $spl22),
  inference(cnf_transformation,[],[f1427_D])).
fof(f1427_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f402,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl4),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1425,plain,(
  ( ! [X67] : (p(s(bool,X67)) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) )),
  inference(subsumption_resolution,[],[f1178,f265])).
fof(f265,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X18] : (s(bool,'T_0') = s(bool,X18) <=> p(s(bool,X18)))),
  file('thm.quotient_list.REVERSE_RSP','thm.bool.EQ_CLAUSES|split|0')).
fof(f1178,plain,(
  ( ! [X67] : (p(s(bool,X67)) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) )),
  inference(superposition,[],[f242,f454])).
fof(f454,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f264,f264])).
fof(f264,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quotient_list.REVERSE_RSP',aHL_BOOL_CASES)).
fof(f242,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))))),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4)))) & (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),sK6)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f158])).
fof(f158,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X6))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X6))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X6))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.REVERSE_1'(s('type.list.list'(X7),X11))),s('type.list.list'(X7),'const.list.REVERSE_1'(s('type.list.list'(X7),X12))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.REVERSE_1'(s('type.list.list'(X7),X11))),s('type.list.list'(X7),'const.list.REVERSE_1'(s('type.list.list'(X7),X12))))))))),
  file('thm.quotient_list.REVERSE_RSP','thm.quotient_list.REVERSE_RSP')).
fof(f400,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f395,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f296])).
fof(f296,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X7] : ! [X32] : (s(X7,X32) = s(X7,X32) <=> p(s(bool,'T_0')))),
  file('thm.quotient_list.REVERSE_RSP','thm.bool.REFL_CLAUSE')).
fof(f13093,plain,(
  $false | ($spl2 | $spl22)),
  inference(subsumption_resolution,[],[f13092,f400])).
fof(f13092,plain,(
  ~p(s(bool,'T_0')) | $spl22),
  inference(forward_demodulation,[],[f13062,f1427])).
fof(f13062,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))))),
  inference(resolution,[],[f346,f243])).
fof(f243,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.REVERSE_1'(s('type.list.list'(sK1),sK6))))))),
  inference(cnf_transformation,[],[f178])).
fof(f346,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X4)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X4)))))))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X4)))))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X3))),s('type.list.list'(X1),'const.list.REVERSE_1'(s('type.list.list'(X1),X4)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6] : ! [X8,X11,X12] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X6),X12)))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),'const.list.REVERSE_1'(s('type.list.list'(X7),X11))),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X12)))))))),
  file('thm.quotient_list.REVERSE_RSP','thm.list.EVERY2_REVERSE')).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 153
% Passive clauses: 1820
% Generated clauses: 12771
% Final active clauses: 140
% Final passive clauses: 1522
% Input formulas: 69
% Initial clauses: 153
% 
% Duplicate literals: 323
% Trivial inequalities: 192
% Fw subsumption resolutions: 1112
% Fw demodulations: 2041
% Bw demodulations: 10
% 
% Simple tautologies: 274
% Equational tautologies: 34
% Forward subsumptions: 6723
% Fw demodulations to eq. taut.: 24
% 
% Binary resolution: 388
% Factoring: 2
% Forward superposition: 4967
% Backward superposition: 3328
% Self superposition: 106
% Equality factoring: 60
% Equality resolution: 23
% 
% Split clauses: 151
% Split components: 309
% SAT solver clauses: 374
% SAT solver unit clauses: 13
% SAT solver binary clauses: 150
% SAT solver learnt clauses: 1
% 
% Sat splits: 151
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 369
% TWLsolver calls for satisfiability: 120
% 
% Memory used [KB]: 8571
% Time elapsed: 0.301 s
% ------------------------------
% ------------------------------
% Success in time 0.32 s
