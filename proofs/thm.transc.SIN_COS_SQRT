Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% (56695)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 1944
% Generated clauses: 28987
% Final active clauses: 132
% Final passive clauses: 1613
% Input formulas: 16
% Initial clauses: 23
% 
% Duplicate literals: 1213
% Trivial inequalities: 401
% Fw subsumption resolutions: 4641
% Fw demodulations: 3967
% Bw demodulations: 14
% 
% Simple tautologies: 552
% Equational tautologies: 68
% Forward subsumptions: 13699
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 169
% Forward superposition: 9144
% Backward superposition: 8657
% Self superposition: 307
% Equality factoring: 202
% Equality resolution: 46
% 
% Split clauses: 1442
% Split components: 2973
% SAT solver clauses: 2604
% SAT solver unit clauses: 41
% SAT solver binary clauses: 273
% 
% Sat splits: 1441
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2603
% TWLsolver calls for satisfiability: 186
% 
% Memory used [KB]: 12409
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f745,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f744,f46,f69,f669,f686,f51,f78,f641,f657,f49,f75,f636,f637,f47,f73,f64,f85,f90,f92,f45,f71,f55,f81,f716,f732,f52,f79,f452,f456,f67,f87])).
fof(f87,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) ) | $spl28),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f67,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : ((s('type.realax.real',X0) != s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) | s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) & (s('type.realax.real',X1) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))) | s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X1),s('type.realax.real',X2))) <=> s('type.realax.real',X1) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X2))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X8,X10] : (s('type.realax.real',X6) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real',X8),s('type.realax.real',X10))) <=> s('type.realax.real',X8) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X10))))),
  file('thm.transc.SIN_COS_SQRT','thm.real.REAL_EQ_SUB_LADD')).
fof(f456,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) | $spl64),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f452,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1)))) ) | $spl28),
  inference(equality_resolution,[],[f87])).
fof(f79,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl12),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f52,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.transc.SIN_COS_SQRT','thm.transc.SIN_CIRCLE')).
fof(f732,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl122),
  inference(cnf_transformation,[],[f732_D])).
fof(f732_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f716,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | ($spl12 | $spl64)),
  inference(superposition,[],[f456,f79])).
fof(f81,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.transc.SIN_COS_SQRT','thm.bool.EQ_CLAUSES|split|0')).
fof(f71,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) | $spl2),
  inference(cnf_transformation,[],[f71_D])).
fof(f71_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f45,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0)))))) & s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f34])).
fof(f34,plain,(
  ? [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))) & s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6)))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6)))))) => s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.transc.SIN_COS_SQRT','thm.transc.SIN_COS_SQRT')).
fof(f92,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) | $spl32),
  inference(cnf_transformation,[],[f92_D])).
fof(f92_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f90,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))))) | ($spl2 | $spl16)),
  inference(resolution,[],[f81,f71])).
fof(f85,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl24),
  inference(cnf_transformation,[],[f85_D])).
fof(f85_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f64,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) | s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X1)))) => s('type.realax.real',X1) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11,X6] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X6)))) => s('type.realax.real',X6) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.realax.real','const.real.pow_2'(s('type.realax.real',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))))),
  file('thm.transc.SIN_COS_SQRT','thm.transc.POW_ROOT_POS')).
fof(f73,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f73_D])).
fof(f73_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f47,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.SIN_COS_SQRT',aHL_TRUTH)).
fof(f637,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl104),
  inference(cnf_transformation,[],[f637_D])).
fof(f637_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f636,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl4 | $spl24 | $spl32)),
  inference(subsumption_resolution,[],[f624,f73])).
fof(f624,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl24 | $spl32)),
  inference(superposition,[],[f85,f92])).
fof(f75,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl6),
  inference(cnf_transformation,[],[f75_D])).
fof(f75_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f49,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.transc.SIN_COS_SQRT','thm.arithmetic.TWO')).
fof(f657,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl106),
  inference(cnf_transformation,[],[f657_D])).
fof(f657_D,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f641,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl104)),
  inference(superposition,[],[f637,f75])).
fof(f78,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f78_D])).
fof(f78_D,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f51,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.root_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X6)))),
  file('thm.transc.SIN_COS_SQRT','thm.transc.sqrt')).
fof(f686,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl108),
  inference(cnf_transformation,[],[f686_D])).
fof(f686_D,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f669,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl10 | $spl106)),
  inference(superposition,[],[f657,f78])).
fof(f69,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f46,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f37])).
fof(f744,plain,(
  $false | ($spl1 | $spl108 | $spl122)),
  inference(subsumption_resolution,[],[f743,f686])).
fof(f743,plain,(
  s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.sqrt_1'(s('type.realax.real','const.real.pow_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl122)),
  inference(backward_demodulation,[],[f732,f69])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 69
% Generated clauses: 679
% Final active clauses: 28
% Final passive clauses: 24
% Input formulas: 16
% Initial clauses: 23
% 
% Duplicate literals: 54
% Trivial inequalities: 14
% Fw subsumption resolutions: 31
% Fw demodulations: 51
% Bw demodulations: 13
% Condensations: 66
% 
% Simple tautologies: 32
% Equational tautologies: 17
% Forward subsumptions: 250
% 
% Binary resolution: 19
% Forward superposition: 135
% Backward superposition: 137
% Self superposition: 28
% Equality factoring: 26
% Equality resolution: 10
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 115
% SAT solver unit clauses: 29
% SAT solver binary clauses: 23
% SAT solver learnt clauses: 1
% 
% Sat splits: 3
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 114
% TWLsolver calls for satisfiability: 93
% 
% Memory used [KB]: 1407
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.62 s
