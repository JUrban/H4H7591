Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (74021)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 110
% Passive clauses: 2699
% Generated clauses: 20179
% Final active clauses: 106
% Final passive clauses: 2465
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1383
% Trivial inequalities: 182
% Fw subsumption resolutions: 1528
% Fw demodulations: 1818
% Bw demodulations: 2
% 
% Simple tautologies: 306
% Equational tautologies: 29
% Forward subsumptions: 10689
% 
% Binary resolution: 45
% Forward superposition: 8640
% Backward superposition: 5818
% Self superposition: 264
% Equality factoring: 88
% Equality resolution: 7
% 
% Split clauses: 943
% Split components: 1903
% SAT solver clauses: 1435
% SAT solver unit clauses: 61
% SAT solver binary clauses: 434
% 
% Sat splits: 943
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1435
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 14200
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (74034)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 771
% Generated clauses: 16185
% Final active clauses: 87
% Final passive clauses: 658
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1012
% Trivial inequalities: 157
% Fw subsumption resolutions: 609
% Fw demodulations: 1115
% Bw demodulations: 19
% Condensations: 2172
% Global subsumptions: 4
% 
% Simple tautologies: 182
% Equational tautologies: 19
% Forward subsumptions: 8862
% 
% Binary resolution: 10
% Forward superposition: 6486
% Backward superposition: 3858
% Self superposition: 207
% Equality factoring: 36
% Equality resolution: 4
% 
% Split clauses: 60
% Split components: 127
% SAT solver clauses: 1370
% SAT solver unit clauses: 56
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 8
% 
% Sat splits: 60
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 1354
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 15863
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f152749,plain,(
  $false),
  inference(subsumption_resolution,[],[f78,f12185])).
fof(f12185,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f2568,f105])).
fof(f105,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8] : ! [X11,X12] : s(X8,X11) = s(X8,'const.bool.COND_3'(s(bool,'T_0'),s(X8,X11),s(X8,X12)))),
  file('thm.numeral.iSUB_THM|split|10','thm.bool.COND_CLAUSES|split|0')).
fof(f2568,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2567,f113])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X17,X18,X19] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X17),s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X17),s('type.num.num',X18))),s('type.num.num',X19)))),
  file('thm.numeral.iSUB_THM|split|10','ARITY_2_3_const.numeral.iSUB')).
fof(f2567,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2566,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|10','ARITY_0_1_const.numeral.iDUB')).
fof(f2566,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2565,f116])).
fof(f116,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X20,X21,X22] : ! [X23,X24,X25] : s(X20,happ(s(fun(X21,X20),X23),s(X21,happ(s(fun(X22,X21),X24),s(X22,X25))))) = s(X20,happ(s(fun(X22,X20),'_dst_x0x1_2'(s(fun(X21,X20),X23),s(fun(X22,X21),X24))),s(X22,X25)))),
  file('thm.numeral.iSUB_THM|split|10','_dst_x0x1_ax')).
fof(f2565,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2564,f113])).
fof(f2564,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2563,f84])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X17] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|10','ARITY_0_1_const.arithmetic.BIT|49|')).
fof(f2563,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s('type.num.num',X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))),s('type.num.num',X5)))))))) )),
  inference(forward_demodulation,[],[f2562,f116])).
fof(f2562,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s('type.num.num',X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f2480,f109])).
fof(f109,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X8] : ! [X6,X13,X14,X15] : s(X8,happ(s(fun('type.num.num',X8),X15),s('type.num.num',X6))) = s(X8,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(X8,X13),s(fun('type.num.num',X8),X14),s(fun('type.num.num',X8),X15)))),
  file('thm.numeral.iSUB_THM|split|10','thm.numeral.iBIT_cases|split|2')).
fof(f2480,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num','const.bool.COND_3'(s(bool,X7),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s('type.num.num',X5))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))) )),
  inference(superposition,[],[f120,f109])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f119,f113])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f114,f84])).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X16,X6,X10] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X16),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num',X10))) = s('type.num.num','const.bool.COND_3'(s(bool,X16),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|10','thm.numeral.iSUB_DEF|split|2')).
fof(f78,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f61])).
fof(f61,plain,(
  ? [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  file('thm.numeral.iSUB_THM|split|10','thm.numeral.iSUB_THM|split|10')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 557
% Passive clauses: 9718
% Generated clauses: 157552
% Final active clauses: 36
% Final passive clauses: 626
% Input formulas: 27
% Initial clauses: 39
% Discarded non-redundant clauses: 2542
% 
% Duplicate literals: 6395
% Trivial inequalities: 1487
% Fw subsumption resolutions: 4950
% Fw demodulations: 17535
% Bw demodulations: 4780
% Condensations: 16315
% Global subsumptions: 532
% 
% Simple tautologies: 779
% Equational tautologies: 498
% Forward subsumptions: 98315
% Fw demodulations to eq. taut.: 40
% Bw demodulations to eq. taut.: 147
% 
% Unit resulting resolution: 3138
% Forward superposition: 52862
% Backward superposition: 40501
% Self superposition: 1282
% Equality factoring: 177
% Equality resolution: 32
% 
% Split clauses: 280
% Split components: 567
% SAT solver clauses: 11401
% SAT solver unit clauses: 414
% SAT solver binary clauses: 1602
% 
% Sat splits: 280
% Sat splitting refutations: 589
% 
% Memory used [KB]: 103878
% Time elapsed: 9.638 s
% ------------------------------
% ------------------------------
% Success in time 10.953 s
