Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f362,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f193,f351,f190,f352,f349,f191,f350,f348,f192,f347])).
fof(f347,plain,(
  ~p(s(bool,sK12)) | $spl1),
  inference(cnf_transformation,[],[f347_D])).
fof(f347_D,plain,(
  ~p(s(bool,sK12)) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f192,plain,(
  ~p(s(bool,sK12))),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  (~p(s(bool,sK13)) | p(s(bool,sK14))) & (p(s(bool,sK12)) | p(s(bool,sK13))) & ~p(s(bool,sK12)) & ~p(s(bool,sK14))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f82])).
fof(f82,plain,(
  ? [X0,X1,X2] : ((~p(s(bool,X1)) | p(s(bool,X2))) & (p(s(bool,X0)) | p(s(bool,X1))) & ~p(s(bool,X0)) & ~p(s(bool,X2)))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ? [X0,X1,X2] : ((~p(s(bool,X1)) | p(s(bool,X2))) & ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X0)) & ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,X1)) => p(s(bool,X2))) => ((p(s(bool,X0)) | p(s(bool,X1))) => (p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,X7)) => p(s(bool,X8))) => ((p(s(bool,X6)) | p(s(bool,X7))) => (p(s(bool,X6)) | p(s(bool,X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,X7)) => p(s(bool,X8))) => ((p(s(bool,X6)) | p(s(bool,X7))) => (p(s(bool,X6)) | p(s(bool,X8)))))),
  file('thm.quantHeuristics.LEFT_IMP_OR_INTRO','thm.quantHeuristics.LEFT_IMP_OR_INTRO')).
fof(f348,plain,(
  p(s(bool,sK12)) | $spl0),
  inference(cnf_transformation,[],[f348_D])).
fof(f348_D,plain,(
  p(s(bool,sK12)) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f350,plain,(
  p(s(bool,sK13)) | $spl2),
  inference(cnf_transformation,[],[f350_D])).
fof(f350_D,plain,(
  p(s(bool,sK13)) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f191,plain,(
  p(s(bool,sK13)) | p(s(bool,sK12))),
  inference(cnf_transformation,[],[f122])).
fof(f349,plain,(
  ~p(s(bool,sK13)) | $spl3),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  ~p(s(bool,sK13)) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f352,plain,(
  p(s(bool,sK14)) | $spl4),
  inference(cnf_transformation,[],[f352_D])).
fof(f352_D,plain,(
  p(s(bool,sK14)) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f190,plain,(
  p(s(bool,sK14)) | ~p(s(bool,sK13))),
  inference(cnf_transformation,[],[f122])).
fof(f351,plain,(
  ~p(s(bool,sK14)) | $spl5),
  inference(cnf_transformation,[],[f351_D])).
fof(f351_D,plain,(
  ~p(s(bool,sK14)) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f193,plain,(
  ~p(s(bool,sK14))),
  inference(cnf_transformation,[],[f122])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 112
% Generated clauses: 166
% Final passive clauses: 108
% Input formulas: 32
% Initial clauses: 153
% 
% Duplicate literals: 4
% 
% Simple tautologies: 29
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 24
% SAT solver unit clauses: 3
% SAT solver binary clauses: 19
% SAT solver learnt clauses: 1
% 
% Sat splits: 20
% 
% TWLsolver clauses: 23
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.022 s
