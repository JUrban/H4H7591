Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (106942)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 202
% Passive clauses: 4294
% Generated clauses: 27750
% Final active clauses: 163
% Final passive clauses: 3718
% Input formulas: 24
% Initial clauses: 47
% 
% Duplicate literals: 835
% Trivial inequalities: 668
% Fw subsumption resolutions: 2844
% Fw demodulations: 5296
% Bw demodulations: 32
% 
% Simple tautologies: 539
% Equational tautologies: 27
% Forward subsumptions: 11982
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 441
% Forward superposition: 9035
% Backward superposition: 8181
% Self superposition: 142
% Equality factoring: 66
% Equality resolution: 32
% 
% Split clauses: 361
% Split components: 723
% SAT solver clauses: 883
% SAT solver unit clauses: 46
% SAT solver binary clauses: 156
% 
% Sat splits: 361
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 879
% TWLsolver calls for satisfiability: 149
% 
% Memory used [KB]: 17270
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (106955)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 146
% Passive clauses: 1836
% Generated clauses: 14651
% Final active clauses: 132
% Final passive clauses: 1623
% Input formulas: 24
% Initial clauses: 47
% 
% Duplicate literals: 313
% Trivial inequalities: 257
% Fw subsumption resolutions: 1068
% Fw demodulations: 1631
% Bw demodulations: 67
% Condensations: 646
% 
% Simple tautologies: 181
% Equational tautologies: 24
% Forward subsumptions: 5870
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 570
% Forward superposition: 5169
% Backward superposition: 2635
% Self superposition: 75
% Equality factoring: 39
% Equality resolution: 14
% 
% Split clauses: 117
% Split components: 234
% SAT solver clauses: 2752
% SAT solver unit clauses: 46
% SAT solver binary clauses: 44
% 
% Sat splits: 117
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2752
% TWLsolver calls for satisfiability: 329
% 
% Memory used [KB]: 17014
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f28331,plain,(
  $false),
  inference(subsumption_resolution,[],[f28330,f106])).
fof(f106,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP',aHL_TRUTH)).
fof(f28330,plain,(
  ~p(s(bool,'T_0'))),
  inference(backward_demodulation,[],[f28329,f1022])).
fof(f1022,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1))),s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0)))))),
  inference(forward_demodulation,[],[f1021,f151])).
fof(f151,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X20,X21,X22] : ! [X23,X24,X25] : s(X20,happ(s(fun(X21,X20),'_dst_x1x0_2'(s(fun(X21,fun(X22,X20)),X23),s(X22,X24))),s(X21,X25))) = s(X20,happ(s(fun(X22,X20),happ(s(fun(X21,fun(X22,X20)),X23),s(X21,X25))),s(X22,X24)))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP','_dst_x1x0_ax')).
fof(f1021,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0)))),s(sK0,sK1))))),
  inference(unit_resulting_resolution,[],[f1018,f149])).
fof(f149,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X17,X18,X19] : (p(s(bool,happ(s(fun(X17,bool),happ(s(fun(X17,fun(X17,bool)),'=_0'),s(X17,X18))),s(X17,X19)))) <=> s(X17,X18) = s(X17,X19))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP',arity_0_HL_EQ)).
fof(f1018,plain,(
  s(sK0,sK1) != s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0))),
  inference(forward_demodulation,[],[f1017,f131])).
fof(f131,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X21,X20] : ! [X23,X25] : s(X20,X23) = s(X20,happ(s(fun(X21,X20),'_dst_x0_1'(s(X20,X23))),s(X21,X25)))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP','_dst_x0_ax')).
fof(f1017,plain,(
  ( ! [X0] : (s(sK0,happ(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s('type.one.one',X0))) != s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0))) )),
  inference(subsumption_resolution,[],[f1013,f108])).
fof(f108,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP',aHL_FALSITY)).
fof(f1013,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(sK0,happ(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s('type.one.one',X0))) != s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0))) )),
  inference(superposition,[],[f137,f160])).
fof(f160,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)))))),
  inference(unit_resulting_resolution,[],[f105,f115])).
fof(f115,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP','thm.bool.EQ_CLAUSES|split|3')).
fof(f105,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1))))))),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f62])).
fof(f62,plain,(
  ? [X0,X1] : ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1] : p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ~! [X0] : ! [X1] : p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',X6),'_dst_x0_1'(s(X6,X7))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',X6),'_dst_x0_1'(s(X6,X7))),s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X7))))))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP','thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP')).
fof(f137,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | s(X0,sK6(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK5(X6,X3,X2,X1,X0)))))) & ((p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK6(X3,X2,X1,X0))))) & ! [X5] : s(X0,sK6(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X7))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10,X6] : ! [X15,X16] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X10),X15),s(fun(X10,bool),X16)))) <=> ! [X12] : (p(s(bool,happ(s(fun(X10,bool),X16),s(X10,X12)))) => ? [X14] : s(X10,X12) = s(X10,happ(s(fun(X6,X10),X15),s(X6,X14)))))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP','thm.quantHeuristics.GUESS_REWRITES|split|4')).
fof(f28329,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1))),s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0))))),
  inference(subsumption_resolution,[],[f28316,f108])).
fof(f28316,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),'_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1))),s(sK0,sK6('_dst_x1x0_2'(s(fun(sK0,fun(sK0,bool)),'=_0'),s(sK0,sK1)),'_dst_x0_1'(s(sK0,sK1)),'type.one.one',sK0))))),
  inference(superposition,[],[f516,f160])).
fof(f516,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X3,X0),X2),s(fun(X0,bool),X1)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK6(X1,X2,X3,X0))))) )),
  inference(subsumption_resolution,[],[f512,f108])).
fof(f512,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X3,X0),X2),s(fun(X0,bool),X1)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK6(X1,X2,X3,X0))))) )),
  inference(superposition,[],[f136,f109])).
fof(f109,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_EQUATION_EXISTS_GAP',aHL_BOOL_CASES)).
fof(f136,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK6(X3,X2,X1,X0))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f91])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 260
% Passive clauses: 2675
% Generated clauses: 29169
% Final active clauses: 147
% Final passive clauses: 1290
% Input formulas: 24
% Initial clauses: 47
% 
% Duplicate literals: 653
% Trivial inequalities: 399
% Fw subsumption resolutions: 1268
% Fw demodulations: 7699
% Bw demodulations: 1204
% Condensations: 580
% Global subsumptions: 52
% 
% Simple tautologies: 375
% Equational tautologies: 287
% Forward subsumptions: 15032
% Bw demodulations to eq. taut.: 30
% 
% Unit resulting resolution: 3283
% Forward superposition: 6786
% Backward superposition: 5836
% Self superposition: 75
% Equality factoring: 40
% Equality resolution: 20
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 2879
% SAT solver unit clauses: 364
% SAT solver binary clauses: 1162
% 
% Sat splits: 12
% Sat splitting refutations: 126
% 
% Memory used [KB]: 13816
% Time elapsed: 1.069 s
% ------------------------------
% ------------------------------
% Success in time 2.404 s
