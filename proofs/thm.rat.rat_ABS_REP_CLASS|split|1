Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f825,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f824,f28,f40,f38,f720,f26,f44,f27,f39,f42])).
fof(f42,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))) | $spl4),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f39,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | $spl2),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f27,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1)))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ((p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))),s('type.frac.frac',sK1)))) & s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1)))) | s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0)))))) & (! [X1] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f20])).
fof(f20,plain,(
  ? [X0] : ((? [X2] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2))),s('type.frac.frac',X2)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) & (! [X1] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))))),
  inference(rectify,[],[f19])).
fof(f19,plain,(
  ? [X0] : ((? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) & (! [X1] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ? [X0] : (? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) <~> s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0] : (? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) <=> s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (? [X7] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X7))),s('type.frac.frac',X7)))) & s(fun('type.frac.frac',bool),X6) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X7)))) <=> s(fun('type.frac.frac',bool),X6) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (? [X7] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X7))),s('type.frac.frac',X7)))) & s(fun('type.frac.frac',bool),X6) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X7)))) <=> s(fun('type.frac.frac',bool),X6) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X6))))))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1','thm.rat.rat_ABS_REP_CLASS|split|1')).
fof(f44,plain,(
  p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))),s('type.frac.frac',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))),s('type.frac.frac',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f26,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))),s('type.frac.frac',sK1))))),
  inference(cnf_transformation,[],[f21])).
fof(f720,plain,(
  $false | ($spl3 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f719,f40])).
fof(f719,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f718,f42])).
fof(f718,plain,(
  s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))))))) | ($spl4 | $spl6)),
  inference(trivial_inequality_removal,[],[f712])).
fof(f712,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),sK0) | s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1))))))) | ($spl4 | $spl6)),
  inference(superposition,[],[f704,f42])).
fof(f704,plain,(
  ( ! [X0] : (s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),X0) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) ) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f703,f42])).
fof(f703,plain,(
  ( ! [X0] : (s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1)))) ) | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f692,f29])).
fof(f29,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1',aHL_TRUTH)).
fof(f692,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK1)))) ) | ($spl4 | $spl6)),
  inference(superposition,[],[f431,f242])).
fof(f242,plain,(
  s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK1),s('type.frac.frac',sK1))) | ($spl4 | $spl6)),
  inference(superposition,[],[f227,f76])).
fof(f76,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.frac.frac',bool),sK0),s('type.frac.frac',sK1))) | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f75,f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1',aHL_FALSITY)).
fof(f75,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.frac.frac',bool),sK0),s('type.frac.frac',sK1))) | ($spl4 | $spl6)),
  inference(superposition,[],[f73,f32])).
fof(f32,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1',aHL_BOOL_CASES)).
fof(f73,plain,(
  p(s(bool,happ(s(fun('type.frac.frac',bool),sK0),s('type.frac.frac',sK1)))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f44,f42])).
fof(f227,plain,(
  ( ! [X0] : (s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK1),s('type.frac.frac',X0))) = s(bool,happ(s(fun('type.frac.frac',bool),sK0),s('type.frac.frac',X0)))) ) | $spl4),
  inference(superposition,[],[f36,f42])).
fof(f36,plain,(
  ( ! [X0,X1] : (s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X0))),s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X0))),s('type.frac.frac',X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X11] : s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X10),s('type.frac.frac',X11))) = s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X10))),s('type.frac.frac',X11)))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1','ARITY_1_2_const.rat.rat_equiv')).
fof(f431,plain,(
  ( ! [X2,X0] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2)))) )),
  inference(forward_demodulation,[],[f33,f36])).
fof(f33,plain,(
  ( ! [X2,X0] : (s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2))) | ~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2))),s('type.frac.frac',X2))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : ((! [X2] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2))),s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) & (s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(X0)))),s('type.frac.frac',sK2(X0))))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f23])).
fof(f23,plain,(
  ! [X0] : ((! [X2] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2))),s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X2)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) & (s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | ? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))))))),
  inference(rectify,[],[f22])).
fof(f22,plain,(
  ! [X0] : ((! [X1] : (~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) & (s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | ? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : (? [X1] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1)))) & s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1)))) <=> s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : (? [X9] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X9))),s('type.frac.frac',X9)))) & s(fun('type.frac.frac',bool),X7) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X9)))) <=> s(fun('type.frac.frac',bool),X7) = s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X7))))))),
  file('thm.rat.rat_ABS_REP_CLASS|split|1','thm.rat.rat_bijections|split|1')).
fof(f38,plain,(
  ( ! [X1] : (s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))) | ~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1))))) ) | $spl0),
  inference(cnf_transformation,[],[f38_D])).
fof(f38_D,plain,(
  ( ! [X1] : (s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))) | ~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f40,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | $spl3),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f28,plain,(
  ( ! [X1] : (s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),sK0))))) | s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))) | ~p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f824,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f812,f772])).
fof(f772,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK2(sK0)),s('type.frac.frac',sK2(sK0))))) | $spl2),
  inference(trivial_inequality_removal,[],[f764])).
fof(f764,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),sK0) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK2(sK0)),s('type.frac.frac',sK2(sK0))))) | $spl2),
  inference(superposition,[],[f366,f39])).
fof(f366,plain,(
  ( ! [X0] : (s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK2(X0)),s('type.frac.frac',sK2(X0)))))) )),
  inference(forward_demodulation,[],[f34,f36])).
fof(f34,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(X0)))),s('type.frac.frac',sK2(X0))))) | s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0)))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f812,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK2(sK0)),s('type.frac.frac',sK2(sK0))))) | ($spl0 | $spl2)),
  inference(trivial_inequality_removal,[],[f811])).
fof(f811,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),sK0) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK2(sK0)),s('type.frac.frac',sK2(sK0))))) | ($spl0 | $spl2)),
  inference(superposition,[],[f731,f771])).
fof(f771,plain,(
  s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(sK0)))) | $spl2),
  inference(trivial_inequality_removal,[],[f765])).
fof(f765,plain,(
  s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),sK0) | s(fun('type.frac.frac',bool),sK0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(sK0)))) | $spl2),
  inference(superposition,[],[f35,f39])).
fof(f35,plain,(
  ( ! [X0] : (s(fun('type.frac.frac',bool),X0) != s(fun('type.frac.frac',bool),'const.rat.rep_rat_CLASS_1'(s('type.rat.rat','const.rat.abs_rat_CLASS_1'(s(fun('type.frac.frac',bool),X0))))) | s(fun('type.frac.frac',bool),X0) = s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',sK2(X0))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f731,plain,(
  ( ! [X1] : (s(fun('type.frac.frac',bool),sK0) != s(fun('type.frac.frac',bool),'const.rat.rat_equiv_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X1))))) ) | $spl0),
  inference(forward_demodulation,[],[f38,f36])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 45
% Passive clauses: 168
% Generated clauses: 780
% Final active clauses: 39
% Final passive clauses: 107
% Input formulas: 8
% Initial clauses: 12
% 
% Duplicate literals: 108
% Trivial inequalities: 22
% Fw subsumption resolutions: 39
% Fw demodulations: 63
% Bw demodulations: 3
% 
% Simple tautologies: 16
% Equational tautologies: 16
% Forward subsumptions: 313
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 14
% Forward superposition: 219
% Backward superposition: 208
% Self superposition: 35
% Equality factoring: 32
% Equality resolution: 1
% 
% Split clauses: 30
% Split components: 60
% SAT solver clauses: 49
% SAT solver unit clauses: 7
% SAT solver binary clauses: 14
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 30
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 47
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 1151
% Time elapsed: 0.031 s
% ------------------------------
% ------------------------------
% Success in time 0.033 s
