Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (82566)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 131
% Passive clauses: 2007
% Generated clauses: 17585
% Final active clauses: 111
% Final passive clauses: 1579
% Input formulas: 34
% Initial clauses: 80
% 
% Duplicate literals: 725
% Trivial inequalities: 338
% Fw subsumption resolutions: 3043
% Fw demodulations: 2653
% Bw demodulations: 18
% 
% Simple tautologies: 408
% Equational tautologies: 47
% Forward subsumptions: 7601
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 571
% Factoring: 3
% Forward superposition: 4987
% Backward superposition: 4779
% Self superposition: 158
% Equality factoring: 107
% Equality resolution: 29
% 
% Split clauses: 373
% Split components: 780
% SAT solver clauses: 803
% SAT solver unit clauses: 18
% SAT solver binary clauses: 121
% 
% Sat splits: 373
% 
% TWLsolver clauses: 797
% TWLsolver calls for satisfiability: 171
% 
% Memory used [KB]: 8443
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f2540,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2532,f137,f239,f240,f242,f270,f272,f134,f237,f147,f248,f551,f557,f136,f233,f151,f250,f670,f671,f186,f260,f188,f262,f199,f267,f1989,f2003,f612,f613,f135,f235,f197,f265])).
fof(f265,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) != s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) ) | $spl30),
  inference(cnf_transformation,[],[f265_D])).
fof(f265_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) != s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f197,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))) | s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) != s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) | s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) != s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) | s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) != s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))))),
  inference(ennf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) = s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ! [X2,X3] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) & s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) = s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X3),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.pred_set.UNIV_0'),s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.pred_set.UNIV_0')))))))))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X7,X6] : ! [X8,X9] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))) & s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))) = s(fun(fun(X7,bool),bool),'const.pred_set.POW_1'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X7,X6),X9),s(fun(fun(X7,X6),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),'const.pair.,_2'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))),s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.pred_set.UNIV_0'),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),'const.pred_set.UNIV_0')))))))))))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.measure.MEASURABLE_POW_TO_POW')).
fof(f235,plain,(
  s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) = s(fun(fun(sK1,bool),bool),'const.pred_set.POW_1'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))) | $spl2),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) = s(fun(fun(sK1,bool),bool),'const.pred_set.POW_1'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f135,plain,(
  s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) = s(fun(fun(sK1,bool),bool),'const.pred_set.POW_1'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) & s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) = s(fun(fun(sK1,bool),bool),'const.pred_set.POW_1'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f81])).
fof(f81,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))) = s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))) = s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))) = s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1] : ! [X2,X3] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))) = s(fun(fun(X1,bool),bool),'const.pred_set.POW_1'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))) & s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))) = s(fun(fun(X7,bool),bool),'const.pred_set.POW_1'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X7,X6),X9),s(fun(fun(X7,X6),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),'const.pair.,_2'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))),s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))) & s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))) = s(fun(fun(X7,bool),bool),'const.pred_set.POW_1'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X7,X6),X9),s(fun(fun(X7,X6),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),'const.pair.,_2'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))),s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))))))))))))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.measure.MEASURABLE_POW_TO_POW_IMAGE')).
fof(f613,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0'))))))))))) ) | $spl118),
  inference(cnf_transformation,[],[f613_D])).
fof(f613_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0'))))))))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f612,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0'))))))))))) ) | ($spl2 | $spl6 | $spl30 | $spl38)),
  inference(subsumption_resolution,[],[f611,f239])).
fof(f611,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0'))))))))))) ) | ($spl2 | $spl30 | $spl38)),
  inference(forward_demodulation,[],[f610,f272])).
fof(f610,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))) ) | ($spl2 | $spl30)),
  inference(trivial_inequality_removal,[],[f609])).
fof(f609,plain,(
  ( ! [X0,X1] : (s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) != s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) | p(s(bool,'const.bool.IN_2'(s(fun(sK1,X0),X1),s(fun(fun(sK1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))) ) | ($spl2 | $spl30)),
  inference(superposition,[],[f265,f235])).
fof(f2003,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,X12),X13),s(fun(fun(sK1,X12),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X12,bool),fun(fun(X12,bool),bool)),'const.pair.,_2'(s(fun(X12,bool),'const.pred_set.UNIV_0'),s(fun(fun(X12,bool),bool),'const.pred_set.POW_1'(s(fun(X12,bool),'const.pred_set.UNIV_0')))))))))) ) | $spl234),
  inference(cnf_transformation,[],[f2003_D])).
fof(f2003_D,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,X12),X13),s(fun(fun(sK1,X12),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X12,bool),fun(fun(X12,bool),bool)),'const.pair.,_2'(s(fun(X12,bool),'const.pred_set.UNIV_0'),s(fun(fun(X12,bool),bool),'const.pred_set.POW_1'(s(fun(X12,bool),'const.pred_set.UNIV_0')))))))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f1989,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,X12),X13),s(fun(fun(sK1,X12),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(X12,bool),fun(fun(X12,bool),bool)),'const.pair.,_2'(s(fun(X12,bool),'const.pred_set.UNIV_0'),s(fun(fun(X12,bool),bool),'const.pred_set.POW_1'(s(fun(X12,bool),'const.pred_set.UNIV_0')))))))))) ) | ($spl12 | $spl118)),
  inference(resolution,[],[f613,f248])).
fof(f267,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))) ) | $spl34),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f199,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4) | p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4)) | p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))))),
  inference(ennf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) & s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X4)) => p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))) & p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X4)))))))))) & ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X4)) => p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X3),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2))))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),X4),s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X3),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X2)))))))))))))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6,X7] : ! [X8,X9,X18] : ((p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))) & p(s(bool,'const.bool.IN_2'(s(fun(X7,X6),X9),s(fun(fun(X7,X6),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),'const.pair.,_2'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))),s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X18),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X18)))))))))) & ~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X18)) => p(s(bool,'const.bool.IN_2'(s(fun(X7,X6),X9),s(fun(fun(X7,X6),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),'const.pair.,_2'(s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))),s(fun(fun(X7,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))),s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X18),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8))))))),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),'const.pred_set.INTER_2'(s(fun(X6,bool),X18),s(fun(X6,bool),'const.pred_set.IMAGE_2'(s(fun(X7,X6),X9),s(fun(X7,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X7,bool),'type.pair.prod'(fun(fun(X7,bool),bool),fun(fun(X7,bool),'type.realax.real'))),X8)))))))))))))))))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.measure.MEASURABLE_RANGE_REDUCE')).
fof(f262,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) ) | $spl24),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f188,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.INTER_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X7] : ! [X18] : s(fun(X7,bool),X18) = s(fun(X7,bool),'const.pred_set.INTER_2'(s(fun(X7,bool),'const.pred_set.UNIV_0'),s(fun(X7,bool),X18)))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.pred_set.INTER_UNIV|split|0')).
fof(f260,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')) ) | $spl20),
  inference(cnf_transformation,[],[f260_D])).
fof(f260_D,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f186,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.pred_set.UNIV_0')),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNIV_0')),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X7] : ~s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),'const.pred_set.UNIV_0')),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.pred_set.UNIV_NOT_EMPTY')).
fof(f671,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3)))))))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))) ) | $spl136),
  inference(cnf_transformation,[],[f671_D])).
fof(f671_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3)))))))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f670,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3)))))))))))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))) ) | ($spl20 | $spl24 | $spl34)),
  inference(subsumption_resolution,[],[f654,f260])).
fof(f654,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.IMAGE_2'(s(fun(X1,X0),X2),s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3)))))))))))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.pred_set.UNIV_0') | ~p(s(bool,'const.bool.IN_2'(s(fun(X1,X0),X2),s(fun(fun(X1,X0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),'const.pair.,_2'(s(fun(X1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))),s(fun(fun(X1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))),s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.pred_set.UNIV_0'),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X1,bool),'type.pair.prod'(fun(fun(X1,bool),bool),fun(fun(X1,bool),'type.realax.real'))),X3))))) ) | ($spl24 | $spl34)),
  inference(superposition,[],[f267,f262])).
fof(f250,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f250_D])).
fof(f250_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f151,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.bool.EQ_CLAUSES|split|3')).
fof(f233,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))))))))))) | $spl1),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f136,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))))))))))),
  inference(cnf_transformation,[],[f99])).
fof(f557,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))))))))) | $spl106),
  inference(cnf_transformation,[],[f557_D])).
fof(f557_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f551,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.IMAGE_2'(s(fun(sK1,sK0),sK3),s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))))))))))) | ($spl1 | $spl16)),
  inference(resolution,[],[f233,f250])).
fof(f248,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f147,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.bool.EQ_CLAUSES|split|0')).
fof(f237,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) | $spl4),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f134,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),
  inference(cnf_transformation,[],[f99])).
fof(f272,plain,(
  s(bool,'T_0') = s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) | $spl38),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f270,plain,(
  s(bool,'T_0') = s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))) | ($spl4 | $spl12)),
  inference(resolution,[],[f248,f237])).
fof(f242,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f240,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f140,f137])).
fof(f140,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f22])).
fof(f22,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE','thm.bool.NOT_CLAUSES|split|2')).
fof(f239,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f137,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.MEASURABLE_POW_TO_POW_IMAGE',aHL_TRUTH)).
fof(f2532,plain,(
  $false | ($spl6 | $spl9 | $spl38 | $spl106 | $spl136 | $spl234)),
  inference(subsumption_resolution,[],[f2531,f239])).
fof(f2531,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl9 | $spl38 | $spl106 | $spl136 | $spl234)),
  inference(forward_demodulation,[],[f2530,f272])).
fof(f2530,plain,(
  ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) | ($spl6 | $spl9 | $spl106 | $spl136 | $spl234)),
  inference(subsumption_resolution,[],[f2529,f239])).
fof(f2529,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) | ($spl9 | $spl106 | $spl136 | $spl234)),
  inference(forward_demodulation,[],[f2528,f2003])).
fof(f2528,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.UNIV_0'),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) | ($spl9 | $spl106 | $spl136)),
  inference(subsumption_resolution,[],[f2512,f242])).
fof(f2512,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK1,sK0),sK3),s(fun(fun(sK1,sK0),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),'const.pair.,_2'(s(fun(sK1,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))),s(fun(fun(sK1,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2))))),s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.pred_set.UNIV_0'),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),'const.pred_set.UNIV_0')))))))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK1,bool),'type.pair.prod'(fun(fun(sK1,bool),bool),fun(fun(sK1,bool),'type.realax.real'))),sK2)))) | ($spl106 | $spl136)),
  inference(superposition,[],[f671,f557])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 62
% Passive clauses: 151
% Generated clauses: 2374
% Final active clauses: 53
% Final passive clauses: 69
% Input formulas: 34
% Initial clauses: 80
% 
% Duplicate literals: 144
% Trivial inequalities: 35
% Fw subsumption resolutions: 250
% Fw demodulations: 166
% Bw demodulations: 23
% Condensations: 181
% Global subsumptions: 13
% 
% Simple tautologies: 88
% Equational tautologies: 21
% Forward subsumptions: 1069
% 
% Binary resolution: 110
% Factoring: 1
% Forward superposition: 605
% Backward superposition: 517
% Self superposition: 37
% Equality factoring: 32
% Equality resolution: 7
% 
% Split clauses: 28
% Split components: 58
% SAT solver clauses: 354
% SAT solver unit clauses: 100
% SAT solver binary clauses: 31
% SAT solver learnt clauses: 27
% 
% Sat splits: 28
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 301
% TWLsolver calls for satisfiability: 329
% 
% Memory used [KB]: 2942
% Time elapsed: 0.091 s
% ------------------------------
% ------------------------------
% Success in time 0.706 s
