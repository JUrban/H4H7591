Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f519,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f509])).
fof(f509,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1)))))),
  inference(superposition,[],[f25,f504])).
fof(f504,plain,(
  ( ! [X17,X18] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X17),s('type.frac.frac',X18))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X17))))),s('type.frac.frac',X18)))))) )),
  inference(subsumption_resolution,[],[f496,f26])).
fof(f26,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_ADD_CONG|49|',aHL_TRUTH)).
fof(f496,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X17),s('type.frac.frac',X18))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X17))))),s('type.frac.frac',X18)))))) )),
  inference(superposition,[],[f433,f65])).
fof(f65,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) )),
  inference(subsumption_resolution,[],[f64,f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.RAT_ADD_CONG|49|',aHL_FALSITY)).
fof(f64,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) )),
  inference(superposition,[],[f28,f29])).
fof(f29,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_ADD_CONG|49|',aHL_BOOL_CASES)).
fof(f28,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X8),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X8))))))))),
  file('thm.rat.RAT_ADD_CONG|49|','thm.rat.rat_44_prove_ltb')).
fof(f433,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X3),s('type.frac.frac',X4)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X3),s('type.frac.frac',X5))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X4),s('type.frac.frac',X5)))))) )),
  inference(resolution,[],[f34,f32])).
fof(f32,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) & (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))))),
  inference(nnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X10))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X11))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X10),s('type.frac.frac',X11)))))),
  file('thm.rat.RAT_ADD_CONG|49|','thm.rat.RAT_ABS_EQUIV')).
fof(f34,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X2),s('type.frac.frac',X0))),s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac',X1)))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X2),s('type.frac.frac',X0))),s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac',X1)))) => p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X2),s('type.frac.frac',X0))),s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X12,X6] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X12)))) => p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X6),s('type.frac.frac',X7))),s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X12),s('type.frac.frac',X7)))))))),
  file('thm.rat.RAT_ADD_CONG|49|','thm.rat.FRAC_ADD_EQUIV|49|')).
fof(f25,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))),s('type.frac.frac',sK1)))))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac',sK1))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))),s('type.frac.frac',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f19])).
fof(f19,plain,(
  ? [X0,X1] : s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))),s('type.frac.frac',X1)))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1] : s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X6),s('type.frac.frac',X7))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))),s('type.frac.frac',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X6),s('type.frac.frac',X7))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))),s('type.frac.frac',X7)))))),
  file('thm.rat.RAT_ADD_CONG|49|','thm.rat.RAT_ADD_CONG|49|')).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 31
% Passive clauses: 112
% Generated clauses: 476
% Final active clauses: 27
% Final passive clauses: 58
% Input formulas: 9
% Initial clauses: 10
% 
% Duplicate literals: 60
% Trivial inequalities: 3
% Fw subsumption resolutions: 38
% Fw demodulations: 5
% Bw demodulations: 2
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 214
% 
% Binary resolution: 21
% Forward superposition: 162
% Backward superposition: 113
% Self superposition: 28
% Equality factoring: 27
% Equality resolution: 3
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 24
% SAT solver unit clauses: 17
% SAT solver binary clauses: 7
% 
% Sat splits: 7
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 24
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 895
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.025 s
