Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f2481,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2467,f64,f200,f225,f223])).
fof(f223,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0))) | $spl8),
  inference(cnf_transformation,[],[f223_D])).
fof(f223_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f225,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0)))),
  inference(subsumption_resolution,[],[f220,f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.transc.ACS_COS',aHL_FALSITY)).
fof(f220,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0)))),
  inference(superposition,[],[f25,f31])).
fof(f31,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.transc.ACS_COS',aHL_BOOL_CASES)).
fof(f25,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0))))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',sK0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & s('type.realax.real',sK0) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f18])).
fof(f18,plain,(
  ? [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & s('type.realax.real',X0) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ? [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) & s('type.realax.real',X0) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => s('type.realax.real',X6) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => s('type.realax.real',X6) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))))))),
  file('thm.transc.ACS_COS','thm.transc.ACS_COS')).
fof(f200,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f64,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(subsumption_resolution,[],[f63,f30])).
fof(f63,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f26,f31])).
fof(f26,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f22])).
fof(f2467,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f2466,f28])).
fof(f28,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.ACS_COS',aHL_TRUTH)).
fof(f2466,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f2465,f200])).
fof(f2465,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl8),
  inference(subsumption_resolution,[],[f2464,f27])).
fof(f27,plain,(
  s('type.realax.real',sK0) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0)))))),
  inference(cnf_transformation,[],[f22])).
fof(f2464,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.realax.real',sK0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))))) | $spl8),
  inference(subsumption_resolution,[],[f2439,f28])).
fof(f2439,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.realax.real',sK0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',sK0))))) | $spl8),
  inference(superposition,[],[f34,f223])).
fof(f34,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X0) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X0)))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6))),s('type.realax.real','const.transc.pi_0')))) & s('type.realax.real',X6) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.acs_1'(s('type.realax.real',X6)))))))),
  file('thm.transc.ACS_COS','thm.transc.ACS')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 280
% Generated clauses: 2320
% Final active clauses: 20
% Final passive clauses: 232
% Input formulas: 8
% Initial clauses: 13
% 
% Duplicate literals: 368
% Trivial inequalities: 23
% Fw subsumption resolutions: 145
% Fw demodulations: 2
% Bw demodulations: 3
% 
% Simple tautologies: 75
% Equational tautologies: 70
% Forward subsumptions: 1096
% 
% Binary resolution: 17
% Forward superposition: 637
% Backward superposition: 706
% Self superposition: 198
% Equality factoring: 186
% 
% Split clauses: 155
% Split components: 310
% SAT solver clauses: 270
% SAT solver unit clauses: 59
% SAT solver binary clauses: 95
% SAT solver learnt clauses: 1
% 
% Sat splits: 155
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 265
% TWLsolver calls for satisfiability: 18
% 
% Memory used [KB]: 1279
% Time elapsed: 0.068 s
% ------------------------------
% ------------------------------
% Success in time 0.07 s
