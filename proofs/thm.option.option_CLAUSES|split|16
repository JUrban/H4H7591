Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f2744,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2732])).
fof(f2732,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK3))))) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK3)))))),
  inference(superposition,[],[f84,f108])).
fof(f108,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : ! [X11,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X11),s(X7,X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X11),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X9)))))),
  file('thm.option.option_CLAUSES|split|16','thm.option.OPTION_MAP_DEF|split|0')).
fof(f84,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK3))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK2),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK3)))))),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK3))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK2),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) != s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X8),s(X7,X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X8),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X8),s(X7,X9))))) = s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X8),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X9)))))),
  file('thm.option.option_CLAUSES|split|16','thm.option.option_CLAUSES|split|16')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 498
% Generated clauses: 2487
% Final active clauses: 49
% Final passive clauses: 401
% Input formulas: 26
% Initial clauses: 29
% 
% Duplicate literals: 181
% Trivial inequalities: 15
% Fw subsumption resolutions: 158
% Fw demodulations: 214
% Bw demodulations: 2
% 
% Simple tautologies: 43
% Equational tautologies: 34
% Forward subsumptions: 1320
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 33
% Forward superposition: 816
% Backward superposition: 981
% Self superposition: 78
% Equality factoring: 58
% Equality resolution: 4
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 30
% SAT solver unit clauses: 2
% SAT solver binary clauses: 12
% 
% Sat splits: 17
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 30
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 2174
% Time elapsed: 0.065 s
% ------------------------------
% ------------------------------
% Success in time 0.071 s
