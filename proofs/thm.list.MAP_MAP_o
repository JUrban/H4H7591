Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% (117420)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 71
% Passive clauses: 3085
% Generated clauses: 15408
% Final active clauses: 68
% Final passive clauses: 2906
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 920
% Trivial inequalities: 154
% Fw subsumption resolutions: 1538
% Fw demodulations: 1103
% 
% Simple tautologies: 257
% Equational tautologies: 88
% Forward subsumptions: 5829
% Fw demodulations to eq. taut.: 15
% 
% Binary resolution: 28
% Forward superposition: 6503
% Backward superposition: 4455
% Self superposition: 349
% Equality factoring: 240
% Equality resolution: 10
% 
% Split clauses: 621
% Split components: 1247
% SAT solver clauses: 1573
% SAT solver unit clauses: 275
% SAT solver binary clauses: 422
% 
% Sat splits: 621
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1569
% TWLsolver calls for satisfiability: 85
% 
% Memory used [KB]: 9338
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (117435)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 38
% Passive clauses: 332
% Generated clauses: 5741
% Final active clauses: 35
% Final passive clauses: 292
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 914
% Trivial inequalities: 31
% Fw subsumption resolutions: 162
% Fw demodulations: 119
% Bw demodulations: 1
% Condensations: 1322
% 
% Simple tautologies: 80
% Equational tautologies: 59
% Forward subsumptions: 2068
% 
% Binary resolution: 12
% Forward superposition: 1322
% Backward superposition: 1231
% Self superposition: 206
% Equality factoring: 178
% 
% Split clauses: 62
% Split components: 125
% SAT solver clauses: 731
% SAT solver unit clauses: 16
% SAT solver binary clauses: 70
% 
% Sat splits: 62
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 731
% TWLsolver calls for satisfiability: 47
% 
% Memory used [KB]: 6012
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f23947,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f23934])).
fof(f23934,plain,(
  s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK3),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),sK5))))) != s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK3),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),sK5)))))),
  inference(superposition,[],[f28,f9320])).
fof(f9320,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X8),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X9,X7),X10),s('type.list.list'(X9),X11))))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X9,X6),'const.combin.o_2'(s(fun(X7,X6),X8),s(fun(X9,X7),X10))),s('type.list.list'(X9),X11)))) )),
  inference(forward_demodulation,[],[f9302,f32])).
fof(f32,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X8] : ! [X12,X13] : s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X8,X7),X12),s('type.list.list'(X8),X13))) = s('type.list.list'(X7),happ(s(fun('type.list.list'(X8),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X8,X7),X12))),s('type.list.list'(X8),X13)))),
  file('thm.list.MAP_MAP_o','ARITY_1_2_const.list.MAP')).
fof(f9302,plain,(
  ( ! [X6,X10,X8,X7,X11,X9] : (s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X9,X6),'const.combin.o_2'(s(fun(X7,X6),X8),s(fun(X9,X7),X10))),s('type.list.list'(X9),X11))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X8),s('type.list.list'(X7),happ(s(fun('type.list.list'(X9),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X9,X7),X10))),s('type.list.list'(X9),X11)))))) )),
  inference(superposition,[],[f1719,f264])).
fof(f264,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (s('type.list.list'(X29),'const.list.MAP_2'(s(fun(X30,X29),X31),s('type.list.list'(X30),happ(s(fun(X32,'type.list.list'(X30)),X33),s(X32,X34))))) = s('type.list.list'(X29),'const.combin.o_3'(s(fun('type.list.list'(X30),'type.list.list'(X29)),'const.list.MAP_1'(s(fun(X30,X29),X31))),s(fun(X32,'type.list.list'(X30)),X33),s(X32,X34)))) )),
  inference(superposition,[],[f35,f32])).
fof(f35,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6,X8] : ! [X9,X10,X5] : s(X7,'const.combin.o_3'(s(fun(X6,X7),X9),s(fun(X8,X6),X10),s(X8,X5))) = s(X7,happ(s(fun(X6,X7),X9),s(X6,happ(s(fun(X8,X6),X10),s(X8,X5)))))),
  file('thm.list.MAP_MAP_o','thm.combin.o_DEF')).
fof(f1719,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),'const.combin.o_2'(s(fun(X2,X1),X3),s(fun(X0,X2),X4))),s('type.list.list'(X0),X5))) = s('type.list.list'(X1),'const.combin.o_3'(s(fun('type.list.list'(X2),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X2,X1),X3))),s(fun('type.list.list'(X0),'type.list.list'(X2)),'const.list.MAP_1'(s(fun(X0,X2),X4))),s('type.list.list'(X0),X5)))) )),
  inference(forward_demodulation,[],[f1711,f32])).
fof(f1711,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X1),happ(s(fun('type.list.list'(X0),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X0,X1),'const.combin.o_2'(s(fun(X2,X1),X3),s(fun(X0,X2),X4))))),s('type.list.list'(X0),X5))) = s('type.list.list'(X1),'const.combin.o_3'(s(fun('type.list.list'(X2),'type.list.list'(X1)),'const.list.MAP_1'(s(fun(X2,X1),X3))),s(fun('type.list.list'(X0),'type.list.list'(X2)),'const.list.MAP_1'(s(fun(X0,X2),X4))),s('type.list.list'(X0),X5)))) )),
  inference(superposition,[],[f36,f34])).
fof(f34,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))))) = s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.combin.o_2'(s(fun('type.list.list'(X2),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X2,X0),X3))),s(fun('type.list.list'(X1),'type.list.list'(X2)),'const.list.MAP_1'(s(fun(X1,X2),X4)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2,X3,X4] : s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))))) = s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.combin.o_2'(s(fun('type.list.list'(X2),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X2,X0),X3))),s(fun('type.list.list'(X1),'type.list.list'(X2)),'const.list.MAP_1'(s(fun(X1,X2),X4)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))))) = s(fun('type.list.list'(X1),'type.list.list'(X0)),'const.combin.o_2'(s(fun('type.list.list'(X2),'type.list.list'(X0)),'const.list.MAP_1'(s(fun(X2,X0),X3))),s(fun('type.list.list'(X1),'type.list.list'(X2)),'const.list.MAP_1'(s(fun(X1,X2),X4)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X8,X7] : ! [X9,X10] : s(fun('type.list.list'(X8),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X9),s(fun(X8,X7),X10))))) = s(fun('type.list.list'(X8),'type.list.list'(X6)),'const.combin.o_2'(s(fun('type.list.list'(X7),'type.list.list'(X6)),'const.list.MAP_1'(s(fun(X7,X6),X9))),s(fun('type.list.list'(X8),'type.list.list'(X7)),'const.list.MAP_1'(s(fun(X8,X7),X10)))))),
  file('thm.list.MAP_MAP_o','thm.list.MAP_o')).
fof(f36,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X6,X8] : ! [X12,X13,X14] : s(X7,'const.combin.o_3'(s(fun(X6,X7),X12),s(fun(X8,X6),X13),s(X8,X14))) = s(X7,happ(s(fun(X8,X7),'const.combin.o_2'(s(fun(X6,X7),X12),s(fun(X8,X6),X13))),s(X8,X14)))),
  file('thm.list.MAP_MAP_o','ARITY_2_3_const.combin.o')).
fof(f28,plain,(
  s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK3),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),sK5))))) != s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK3),s(fun(sK2,sK1),sK4))),s('type.list.list'(sK2),sK5)))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK3),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),sK5))))) != s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK3),s(fun(sK2,sK1),sK4))),s('type.list.list'(sK2),sK5)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))),
  inference(flattening,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X9),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X8,X7),X10),s('type.list.list'(X8),X11))))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X9),s(fun(X8,X7),X10))),s('type.list.list'(X8),X11)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X9),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X8,X7),X10),s('type.list.list'(X8),X11))))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X9),s(fun(X8,X7),X10))),s('type.list.list'(X8),X11)))),
  file('thm.list.MAP_MAP_o','thm.list.MAP_MAP_o')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 152
% Passive clauses: 2443
% Generated clauses: 25905
% Final active clauses: 67
% Final passive clauses: 590
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 2286
% Trivial inequalities: 244
% Fw subsumption resolutions: 1183
% Fw demodulations: 1214
% Bw demodulations: 1295
% Condensations: 4008
% Global subsumptions: 41
% 
% Simple tautologies: 388
% Equational tautologies: 1014
% Forward subsumptions: 12959
% Fw demodulations to eq. taut.: 15
% Bw demodulations to eq. taut.: 125
% 
% Unit resulting resolution: 2028
% Forward superposition: 6762
% Backward superposition: 4021
% Self superposition: 260
% Equality factoring: 164
% Equality resolution: 9
% 
% Split clauses: 174
% Split components: 372
% SAT solver clauses: 2857
% SAT solver unit clauses: 28
% SAT solver binary clauses: 283
% 
% Sat splits: 174
% Sat splitting refutations: 23
% 
% Memory used [KB]: 11641
% Time elapsed: 2.347 s
% ------------------------------
% ------------------------------
% Success in time 3.666 s
