Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1046,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1032])).
fof(f1032,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.NONE_0')),
  inference(superposition,[],[f36,f1014])).
fof(f1014,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X1),'const.option.NONE_0'),s('type.option.option'(X0),X2)))) )),
  inference(superposition,[],[f46,f43])).
fof(f43,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s(fun(X0,'type.option.option'(X1)),X2)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : ! [X11] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_BIND_2'(s('type.option.option'(X6),'const.option.NONE_0'),s(fun(X6,'type.option.option'(X7)),X11)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|0','thm.option.OPTION_BIND_def|split|0')).
fof(f46,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : ! [X12,X13] : s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X6),X12),s('type.option.option'(X7),X13))) = s('type.option.option'(X7),'const.option.OPTION_BIND_2'(s('type.option.option'(X6),X12),s(fun(X6,'type.option.option'(X7)),'const.combin.K_1'(s('type.option.option'(X7),X13)))))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|0','thm.option.OPTION_IGNORE_BIND_def')).
fof(f36,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK1),sK2)))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK1),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),X2)))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),X2)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X1),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X6),'const.option.NONE_0'),s('type.option.option'(X7),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X6),'const.option.NONE_0'),s('type.option.option'(X7),X8)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|0','thm.option.OPTION_IGNORE_BIND_thm|split|0')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 113
% Generated clauses: 966
% Final active clauses: 19
% Final passive clauses: 83
% Input formulas: 12
% Initial clauses: 13
% 
% Duplicate literals: 100
% Trivial inequalities: 9
% Fw subsumption resolutions: 30
% Fw demodulations: 42
% 
% Simple tautologies: 26
% Equational tautologies: 17
% Forward subsumptions: 599
% 
% Binary resolution: 4
% Forward superposition: 339
% Backward superposition: 311
% Self superposition: 73
% Equality factoring: 41
% Equality resolution: 1
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 22
% SAT solver unit clauses: 8
% SAT solver binary clauses: 13
% 
% Sat splits: 13
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 22
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 1407
% Time elapsed: 0.031 s
% ------------------------------
% ------------------------------
% Success in time 0.033 s
