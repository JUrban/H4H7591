Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (4160)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 157
% Passive clauses: 4603
% Generated clauses: 21123
% Final active clauses: 121
% Final passive clauses: 4088
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 951
% Trivial inequalities: 229
% Fw subsumption resolutions: 2228
% Fw demodulations: 1968
% Bw demodulations: 31
% 
% Simple tautologies: 281
% Equational tautologies: 84
% Forward subsumptions: 8453
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 347
% Factoring: 2
% Forward superposition: 8227
% Backward superposition: 6411
% Self superposition: 282
% Equality factoring: 206
% Equality resolution: 19
% 
% Split clauses: 516
% Split components: 1053
% SAT solver clauses: 1342
% SAT solver unit clauses: 30
% SAT solver binary clauses: 255
% 
% Sat splits: 516
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1337
% TWLsolver calls for satisfiability: 193
% 
% Memory used [KB]: 14456
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (4181)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 101
% Passive clauses: 742
% Generated clauses: 10338
% Final active clauses: 94
% Final passive clauses: 594
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 396
% Trivial inequalities: 95
% Fw subsumption resolutions: 541
% Fw demodulations: 1368
% Bw demodulations: 52
% Condensations: 865
% 
% Simple tautologies: 136
% Equational tautologies: 23
% Forward subsumptions: 4954
% 
% Binary resolution: 71
% Factoring: 1
% Forward superposition: 3627
% Backward superposition: 2420
% Self superposition: 112
% Equality factoring: 50
% Equality resolution: 10
% 
% Split clauses: 40
% Split components: 81
% SAT solver clauses: 1112
% SAT solver unit clauses: 41
% SAT solver binary clauses: 33
% 
% Sat splits: 40
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1112
% TWLsolver calls for satisfiability: 256
% 
% Memory used [KB]: 15863
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 137 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f5146,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f69,f104,f103,f68,f106,f67,f108,f102,f137,f142,f155,f159,f157,f172,f176,f891,f894,f892,f1005,f1008,f1006,f1321,f1370,f1368,f2653,f2654,f2671,f2768,f2785,f2783,f2816,f2819,f2824,f2799,f2821,f2822,f2827,f2828,f2952,f2953,f3130,f3072,f3132,f3477,f3506,f4025,f3957,f4027,f4065,f4145,f4842,f4824,f4815,f140,f4887,f4713,f5079,f3158,f4057,f4054,f5080,f156,f5097,f5098,f5099,f5102,f5105,f5106,f5107,f5108,f5109,f5110,f5111,f5112,f5113,f5114,f5115,f5116,f5117,f5118,f5140])).
fof(f5140,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f5139,f70])).
fof(f70,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9',aHL_TRUTH)).
fof(f5139,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f5120,f138])).
fof(f138,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f135,f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9',aHL_FALSITY)).
fof(f135,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(superposition,[],[f115,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9',aHL_BOOL_CASES)).
fof(f115,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f108,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X40,X39] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X39))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X39),s('type.num.num',X40)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.GREATER_EQ')).
fof(f5120,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f103,f113])).
fof(f113,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f111,f94])).
fof(f111,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(backward_demodulation,[],[f94,f84])).
fof(f84,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0)))))))))))))))))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54])],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X29,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X50,X51,X52,X53,X54] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X29)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X37),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X38),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X39),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X40),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X41),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X42),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X43),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X44),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X45),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X46),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X47),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X48),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X49),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X50),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X51),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X52),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X53),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X54),s('type.list.list'(X0),X29))))))))))))))))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X28),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X29),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X30),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X31),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X32),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X33),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X34),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.quantHeuristics.LIST_LENGTH_25|split|8')).
fof(f5118,plain,(
  $false | ($spl38 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f4118,f4110,f4111,f4098,f4067,f4077,f4089,f3131])).
fof(f3131,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl38),
  inference(cnf_transformation,[],[f3131_D])).
fof(f3131_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4089,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f70,f4027,f1521])).
fof(f4077,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f73,f4027,f158])).
fof(f4067,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f4027,f77])).
fof(f4098,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl43),
  inference(superposition,[],[f4027,f94])).
fof(f4111,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl43),
  inference(trivial_inequality_removal,[],[f4100])).
fof(f4100,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl43),
  inference(superposition,[],[f4027,f131])).
fof(f4110,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(trivial_inequality_removal,[],[f4103])).
fof(f4103,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(superposition,[],[f4027,f131])).
fof(f4118,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl43),
  inference(forward_demodulation,[],[f4076,f94])).
fof(f4076,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | $spl43),
  inference(unit_resulting_resolution,[],[f4027,f133])).
fof(f2909,plain,(
  ( ! [X57,X37,X33,X45,X41,X54,X50,X29,X58,X38,X34,X46,X42,X55,X51,X30,X59,X39,X35,X47,X43,X52,X48,X31,X60,X56,X36,X32,X44,X40,X53,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num',X31)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK57(X30,X31,X32,X29)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X33),X35) != s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X36),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X37),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X38),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X39),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X40),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X41),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X42),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X43),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X44),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X45),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X46),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X47),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X48),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X49),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X50),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X51),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X52),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X53),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X54),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X55),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X56),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X57),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X58),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X59),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X60),s('type.list.list'(X33),X34))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X32))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X30)))) )),
  inference(superposition,[],[f113,f89])).
fof(f2910,plain,(
  ( ! [X61,X90,X70,X66,X78,X74,X87,X83,X62,X91,X71,X67,X79,X75,X84,X63,X80,X92,X88,X68,X64,X76,X72,X85,X81,X89,X69,X65,X77,X73,X86,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))),s('type.num.num',X62)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X67))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK58(X62,X63,X64,X61)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X65),X67) != s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X68),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X69),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X70),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X71),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X72),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X73),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X74),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X75),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X76),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X77),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X78),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X79),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X80),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X81),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X82),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X83),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X84),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X85),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X86),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X87),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X88),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X89),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X90),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X91),s('type.list.list'(X65),'const.list.CONS_2'(s(X65,X92),s('type.list.list'(X65),X66))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X64))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num',X62)))) )),
  inference(superposition,[],[f113,f90])).
fof(f3221,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK30(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK31(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK32(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK33(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK34(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK35(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK36(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK37(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK38(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK39(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK40(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK41(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK42(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK43(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK44(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK45(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK46(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK47(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK48(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK50(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK51(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK52(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK53(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK54(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f72])).
fof(f2949,plain,(
  ( ! [X315,X321,X302,X298,X310,X306,X318,X314,X324,X320,X301,X297,X309,X305,X317,X313,X300,X323,X308,X304,X316,X312,X322,X303,X299,X311,X307,X319] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X299))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X298))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X297),X299) != s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X300),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X301),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X302),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X303),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X304),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X305),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X306),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X307),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X308),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X309),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X310),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X311),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X312),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X313),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X314),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X315),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X316),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X317),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X318),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X319),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X320),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X321),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X322),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X323),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X324),s('type.list.list'(X297),X298)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2948,f72])).
fof(f2948,plain,(
  ( ! [X315,X321,X302,X298,X310,X306,X318,X314,X324,X320,X301,X297,X309,X305,X317,X313,X300,X323,X308,X304,X316,X312,X322,X303,X299,X311,X307,X319] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X298))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X299))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X297),X299) != s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X300),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X301),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X302),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X303),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X304),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X305),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X306),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X307),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X308),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X309),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X310),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X311),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X312),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X313),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X314),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X315),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X316),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X317),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X318),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X319),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X320),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X321),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X322),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X323),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X324),s('type.list.list'(X297),X298)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2918,f839])).
fof(f2918,plain,(
  ( ! [X315,X321,X302,X298,X310,X306,X318,X314,X324,X320,X301,X297,X309,X305,X317,X313,X300,X323,X308,X304,X316,X312,X322,X303,X299,X311,X307,X319] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X298))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X297),X299))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X297),X299) != s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X300),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X301),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X302),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X303),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X304),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X305),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X306),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X307),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X308),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X309),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X310),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X311),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X312),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X313),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X314),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X315),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X316),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X317),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X318),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X319),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X320),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X321),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X322),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X323),s('type.list.list'(X297),'const.list.CONS_2'(s(X297,X324),s('type.list.list'(X297),X298)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f72])).
fof(f1613,plain,(
  ( ! [X37,X38] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1587,f498])).
fof(f1587,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f112,f72])).
fof(f3215,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK30(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK31(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK32(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK33(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK34(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK35(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK36(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK37(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK38(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK39(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK40(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK41(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK42(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK43(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK44(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK45(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK46(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK47(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK48(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK49(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK50(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK51(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK52(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK53(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK54(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),sK29(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f2912,plain,(
  ( ! [X127,X144,X123,X132,X128,X140,X136,X149,X145,X124,X133,X129,X141,X137,X150,X146,X125,X134,X130,X142,X138,X151,X147,X126,X122,X135,X131,X143,X139,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X123),s('type.num.num',X122)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X126))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num',X123))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X124),X126) != s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X127),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X128),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X129),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X130),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X131),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X132),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X133),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X134),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X135),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X136),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X137),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X138),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X139),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X140),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X141),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X142),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X143),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X144),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X145),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X146),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X147),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X148),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X149),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X150),s('type.list.list'(X124),'const.list.CONS_2'(s(X124,X151),s('type.list.list'(X124),X125)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f95])).
fof(f1581,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK29(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f112,f95])).
fof(f2924,plain,(
  ( ! [X94,X90,X103,X99,X107,X87,X83,X95,X91,X100,X96,X79,X104,X84,X80,X92,X88,X101,X97,X105,X85,X81,X93,X89,X102,X98,X106,X86,X82] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))),s('type.num.num',X81)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X79),X82) != s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X83),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X84),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X85),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X86),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X87),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X88),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X89),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X90),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X91),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X92),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X93),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X94),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X95),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X96),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X97),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X98),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X99),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X100),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X101),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X102),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X103),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X104),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X105),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X106),s('type.list.list'(X79),'const.list.CONS_2'(s(X79,X107),s('type.list.list'(X79),X80)))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f498])).
fof(f889,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f873,f70])).
fof(f873,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f85,f131])).
fof(f85,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK55(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK55(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK56(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK55,sK56])],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X44,X45] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X44),s(X6,X7)))) & p(s(bool,X45))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X44),s(X6,X7)))) & p(s(bool,X45))))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f964,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK55('const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6))))) )),
  inference(superposition,[],[f85,f498])).
fof(f1067,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK55('const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))))) )),
  inference(superposition,[],[f85,f839])).
fof(f883,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X45),s('type.num.num',X44)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK55('const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)),X47,X46))))) | ~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48))))) )),
  inference(superposition,[],[f85,f94])).
fof(f884,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X50),s('type.num.num',X49)))) | p(s(bool,happ(s(fun(X51,bool),X52),s(X51,sK55('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))),s('type.num.num',X50)),X52,X51))))) | ~p(s(bool,happ(s(fun(X51,bool),X52),s(X51,X53))))) )),
  inference(superposition,[],[f85,f114])).
fof(f885,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X55,bool),X56),s(X55,sK55('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X54)),X56,X55))))) | ~p(s(bool,happ(s(fun(X55,bool),X56),s(X55,X57))))) )),
  inference(superposition,[],[f85,f486])).
fof(f886,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X59),s('type.num.num',X58)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK55('const.prim_rec.<_2'(s('type.num.num',X58),s('type.num.num',X59)),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f85,f93])).
fof(f1518,plain,(
  ( ! [X6,X4,X2,X5,X3] : (p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK55('const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f1472,f70])).
fof(f1472,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK55('const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f85,f227])).
fof(f887,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,X63)) | p(s(bool,happ(s(fun(X65,bool),X66),s(X65,sK55('const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64)),X66,X65))))) | ~p(s(bool,happ(s(fun(X65,bool),X66),s(X65,X67))))) )),
  inference(superposition,[],[f85,f80])).
fof(f888,plain,(
  ( ! [X70,X68,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,happ(s(fun(X70,bool),X71),s(X70,sK55('const.bool.COND_3'(s(bool,'F_0'),s(bool,X68),s(bool,X69)),X71,X70))))) | ~p(s(bool,happ(s(fun(X70,bool),X71),s(X70,X72))))) )),
  inference(superposition,[],[f85,f81])).
fof(f87,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK56(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f996,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X44),s('type.num.num',X45)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK56('const.arithmetic.>=_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45)))),X47,X46))))) | ~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48))))) )),
  inference(superposition,[],[f87,f498])).
fof(f997,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X50),s('type.num.num',X49)))) | p(s(bool,happ(s(fun(X51,bool),X52),s(X51,sK56('const.arithmetic.<=_2'(s('type.num.num',X49),s('type.num.num',X50)),X52,X51))))) | ~p(s(bool,happ(s(fun(X51,bool),X52),s(X51,X53))))) )),
  inference(superposition,[],[f87,f94])).
fof(f998,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X55),s('type.num.num',X54)))) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK56('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num',X55)),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) )),
  inference(superposition,[],[f87,f114])).
fof(f999,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK56('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f87,f486])).
fof(f1000,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X64),s('type.num.num',X63)))) | p(s(bool,happ(s(fun(X65,bool),X66),s(X65,sK56('const.prim_rec.<_2'(s('type.num.num',X63),s('type.num.num',X64)),X66,X65))))) | ~p(s(bool,happ(s(fun(X65,bool),X66),s(X65,X67))))) )),
  inference(superposition,[],[f87,f93])).
fof(f1001,plain,(
  ( ! [X70,X68,X72,X71,X69] : (~p(s(bool,X68)) | p(s(bool,happ(s(fun(X70,bool),X71),s(X70,sK56('const.bool.COND_3'(s(bool,'T_0'),s(bool,X68),s(bool,X69)),X71,X70))))) | ~p(s(bool,happ(s(fun(X70,bool),X71),s(X70,X72))))) )),
  inference(superposition,[],[f87,f80])).
fof(f1002,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,X74)) | p(s(bool,happ(s(fun(X75,bool),X76),s(X75,sK56('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,X74)),X76,X75))))) | ~p(s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))))) )),
  inference(superposition,[],[f87,f81])).
fof(f1003,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f986,f70])).
fof(f986,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f87,f131])).
fof(f1068,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK56('const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))))) )),
  inference(superposition,[],[f87,f839])).
fof(f1519,plain,(
  ( ! [X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK56('const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11)))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1473,f70])).
fof(f1473,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK56('const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11)))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(superposition,[],[f87,f227])).
fof(f3248,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(X4,X5,X3)),s('type.list.list'(X3),sK29(X4,X5,X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,X6) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f3228,f70])).
fof(f3228,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(X4,X5,X3)),s('type.list.list'(X3),sK29(X4,X5,X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,X6) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f110,f131])).
fof(f3225,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2)))))) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(X4,X2,X3)),s('type.list.list'(X3),sK29(X4,X2,X3))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f3224,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),sK29(X1,'const.num.|48|_0',X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3223,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X45),X46) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK30(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK31(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK32(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK33(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK34(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK35(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK36(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK37(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK38(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK39(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK40(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK41(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK42(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK43(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK44(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK45(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK46(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK47(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK48(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK49(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK50(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK51(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK52(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK53(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK54(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),sK29(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3222,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK30(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK31(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK32(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK33(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK34(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK35(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK36(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK37(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK38(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK39(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK40(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK41(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK42(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK43(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK44(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK45(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK46(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK47(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK48(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK49(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK50(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK51(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK52(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK53(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK54(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),sK29(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3247,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK30(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK31(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK32(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK33(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK34(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK35(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK36(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK37(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK38(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK39(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK40(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK41(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK42(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK43(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK44(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK45(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK46(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK47(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK48(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK49(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK50(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK51(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK52(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK53(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK54(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3220,f75])).
fof(f3220,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK30(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK31(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK32(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK33(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK34(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK35(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK36(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK37(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK38(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK39(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK40(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK41(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK42(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK43(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK44(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK45(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK46(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK47(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK48(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK49(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK50(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK51(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK52(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK53(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK54(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f71])).
fof(f3246,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK30(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK31(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK32(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK33(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK34(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK35(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK36(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK37(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK38(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK39(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK40(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK41(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK42(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK43(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK44(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK45(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK46(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK47(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK48(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK49(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK50(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK51(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK52(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK53(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK54(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3219,f75])).
fof(f3219,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK30(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK31(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK32(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK33(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK34(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK35(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK36(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK37(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK38(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK39(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK40(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK41(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK42(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK43(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK44(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK45(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK46(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK47(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK48(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK49(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK50(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK51(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK52(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK53(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK54(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f74])).
fof(f3245,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK30(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK31(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK32(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK33(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK34(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK35(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK36(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK37(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK38(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK39(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK40(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK41(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK42(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK43(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK44(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK45(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK46(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK47(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK48(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK49(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK50(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK51(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK52(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK53(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK54(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3218,f75])).
fof(f3218,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK30(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK31(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK32(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK33(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK34(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK35(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK36(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK37(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK38(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK39(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK40(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK41(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK42(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK43(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK44(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK45(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK46(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK47(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK48(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK49(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK50(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK51(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK52(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK53(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK54(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f76])).
fof(f3217,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK30(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK31(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK32(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK33(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK34(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK35(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK36(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK37(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK38(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK39(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK40(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK41(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK42(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK43(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK44(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK45(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK46(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK47(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK48(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK49(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK50(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK51(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK52(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK53(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK54(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),sK29(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f362])).
fof(f3214,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK30(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK31(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK32(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK33(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK34(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK35(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK36(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK37(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK38(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK39(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK40(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK41(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK42(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK43(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK44(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK45(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK46(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK47(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK48(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK49(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK50(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK51(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK52(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK53(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK54(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),sK29(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3213,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK30(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK31(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK32(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK33(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK34(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK35(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK36(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK37(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK38(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK39(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK40(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK41(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK42(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK43(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK44(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK45(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK46(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK47(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK48(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK49(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK50(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK51(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK52(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK53(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK54(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),sK29(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3212,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X7),X8) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK30(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK31(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK32(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK33(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK34(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK35(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK36(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK37(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK38(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK39(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK40(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK41(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK42(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK43(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK44(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK45(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK46(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK47(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK48(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK50(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK51(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK52(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK53(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK54(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),sK29(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3244,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK30(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK31(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK32(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK33(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK34(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK35(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK36(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK37(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK38(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK39(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK40(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK41(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK42(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK43(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK44(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK45(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK46(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK47(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK48(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK49(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK50(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK51(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK52(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK53(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK54(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3211,f75])).
fof(f3211,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK30(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK31(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK32(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK33(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK34(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK35(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK36(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK37(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK38(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK39(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK40(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK41(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK42(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK43(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK44(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK45(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK46(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK47(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK48(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK49(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK50(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK51(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK52(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK53(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK54(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f455])).
fof(f3210,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X7),sK58(X8,X9,X10,X7)) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK30(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK31(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK32(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK33(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK34(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK35(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK36(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK37(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK38(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK39(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK40(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK41(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK42(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK43(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK44(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK45(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK46(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK47(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK48(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK50(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK51(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK52(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK53(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK54(sK58(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),sK29(sK58(X8,X9,X10,X7),X11,X7)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3209,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X2),sK57(X3,X4,X5,X2)) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK30(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK31(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK32(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK33(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK34(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK35(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK36(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK37(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK38(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK39(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK40(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK41(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK42(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK43(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK44(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK45(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK46(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK47(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK48(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK49(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK50(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK51(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK52(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK53(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK54(sK57(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),sK29(sK57(X3,X4,X5,X2),X6,X2)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3208,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),sK29('const.list.NIL_0',X1,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f455])).
fof(f3243,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.list.list'(X15),X17) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK37('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK38('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK39('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK40('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK41('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK46('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK47('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK48('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK49('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK50('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK51('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK52('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK53('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK54('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3207,f81])).
fof(f3207,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X15),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK37('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK38('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK39('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK40('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK41('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK45('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK46('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK47('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK48('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK49('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK50('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK51('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK52('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK53('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK54('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3242,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK40('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK41('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK42('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK43('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK44('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK45('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK46('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK47('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK48('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK49('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK50('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK51('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK52('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK53('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK54('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3206,f80])).
fof(f3206,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X11),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK40('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK41('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK42('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK43('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK44('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK45('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK46('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK47('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK48('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK49('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK50('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK51('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK52('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK53('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK54('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3205,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK30('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK31('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK32('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK33('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK34('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK35('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK36('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK37('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK38('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK39('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK40('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK41('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK42('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK43('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK44('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK45('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK46('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK47('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK48('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK49('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK50('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK52('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK53('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK54('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),sK29('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f110,f91])).
fof(f3241,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK29(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3240,f1187])).
fof(f3240,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X3),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK29(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3204,f455])).
fof(f3204,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X3),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK40(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK45(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK46(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK47(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK48(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK50(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK51(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK52(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK53(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK54(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK29(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f1187])).
fof(f3239,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK29(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3238,f1116])).
fof(f3238,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK29(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3203,f455])).
fof(f3203,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK29(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f1116])).
fof(f2956,plain,(
  ( ! [X177,X189,X185,X194,X165,X173,X169,X182,X178,X190,X186,X166,X174,X170,X183,X179,X191,X187,X167,X192,X175,X171,X180,X176,X188,X184,X193,X172,X168,X181] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X168))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X165),X168) != s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X169),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X170),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X171),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X172),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X173),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X174),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X175),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X176),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X177),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X178),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X179),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X180),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X181),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X182),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X183),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X184),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X185),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X186),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X187),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X188),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X189),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X190),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X191),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X192),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X193),s('type.list.list'(X165),X166))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,X194) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X166))),s('type.num.num',X167))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(subsumption_resolution,[],[f2927,f70])).
fof(f2927,plain,(
  ( ! [X177,X189,X185,X194,X165,X173,X169,X182,X178,X190,X186,X166,X174,X170,X183,X179,X191,X187,X167,X192,X175,X171,X180,X176,X188,X184,X193,X172,X168,X181] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X168))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X165),X168) != s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X169),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X170),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X171),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X172),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X173),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X174),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X175),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X176),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X177),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X178),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X179),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X180),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X181),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X182),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X183),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X184),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X185),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X186),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X187),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X188),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X189),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X190),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X191),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X192),s('type.list.list'(X165),'const.list.CONS_2'(s(X165,X193),s('type.list.list'(X165),X166))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,X194) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X166))),s('type.num.num',X167))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f113,f131])).
fof(f2907,plain,(
  ( ! [X61,X70,X66,X78,X74,X87,X83,X62,X71,X67,X79,X75,X84,X63,X80,X59,X88,X68,X64,X76,X72,X85,X81,X60,X89,X69,X65,X77,X73,X86,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num',X63)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X64))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X59),X64) != s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X65),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X66),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X67),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X68),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X69),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X70),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X71),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X72),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X73),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X74),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X75),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X76),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X77),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X78),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X79),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X80),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X81),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X82),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X83),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X84),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X85),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X86),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X87),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X88),s('type.list.list'(X59),'const.list.CONS_2'(s(X59,X89),s('type.list.list'(X59),sK58(X60,X61,X62,X59)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X62))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num',X60)))) )),
  inference(superposition,[],[f113,f90])).
fof(f2906,plain,(
  ( ! [X28,X57,X37,X33,X45,X41,X54,X50,X29,X58,X38,X34,X46,X42,X55,X51,X30,X39,X35,X47,X43,X52,X48,X31,X56,X36,X32,X44,X40,X53,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X30),s('type.num.num',X32)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X28),X33) != s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X34),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X35),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X36),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X37),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X38),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X39),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X40),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X41),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X42),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X43),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X44),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X45),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X46),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X47),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X48),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X49),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X50),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X51),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X52),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X53),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X54),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X55),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X56),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X57),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X58),s('type.list.list'(X28),sK57(X29,X30,X31,X28)))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X31))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X29)))) )),
  inference(superposition,[],[f113,f89])).
fof(f2902,plain,(
  ( ! [X61,X70,X66,X78,X74,X87,X83,X62,X58,X71,X67,X79,X75,X84,X63,X80,X59,X88,X68,X64,X76,X72,X85,X81,X60,X69,X65,X77,X73,X86,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X61))),s('type.num.num',X62)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X63))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X58),X63) != s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X64),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X65),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X66),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X67),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X68),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X69),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X70),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X71),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X72),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X73),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X74),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X75),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X76),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X77),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X78),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X79),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X80),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X81),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X82),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X83),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X84),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X85),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X86),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X87),s('type.list.list'(X58),'const.list.CONS_2'(s(X58,X88),s('type.list.list'(X58),'const.list.APPEND_2'(s('type.list.list'(X58),sK57(X59,X60,X61,X58)),s('type.list.list'(X58),sK58(X59,X60,X61,X58)))))))))))))))))))))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X59)))) )),
  inference(superposition,[],[f113,f91])).
fof(f2937,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f2936,f1116])).
fof(f2936,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2900,f455])).
fof(f2900,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f1116])).
fof(f2361,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f92])).
fof(f2360,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2357,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK57(X13,X14,X15,X12)),s('type.list.list'(X12),sK58(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2352,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK57(X13,X14,X15,X12)),s('type.list.list'(X12),sK58(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2347,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X16),s('type.list.list'(X12),X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK57(X13,X14,X15,X12)),s('type.list.list'(X12),sK58(X13,X14,X15,X12)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2444,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2443,f75])).
fof(f2443,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2320,f81])).
fof(f2320,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f455,f455,f81,f92])).
fof(f2433,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2432,f75])).
fof(f2432,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2431,f95])).
fof(f2431,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2430,f81])).
fof(f2430,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f2324,f81])).
fof(f2324,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f81,f455,f81,f92])).
fof(f2377,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f2376,f75])).
fof(f2376,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f2375,f81])).
fof(f2375,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))))) )),
  inference(forward_demodulation,[],[f2340,f81])).
fof(f2340,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f455,f81,f81,f92])).
fof(f2364,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f2363,f81])).
fof(f2363,plain,(
  ( ! [X4,X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f2362,f81])).
fof(f2362,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f2344,f81])).
fof(f2344,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f81,f81,f81,f92])).
fof(f1617,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK29(X5,X6,X4)))),s('type.num.num',X6)))) | s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1596,f70])).
fof(f1596,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK29(X5,X6,X4)))),s('type.num.num',X6)))) | s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f112,f131])).
fof(f1591,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK29(X4,X2,X3)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f95])).
fof(f1590,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X1,'const.num.|48|_0',X0)))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f112,f75])).
fof(f1615,plain,(
  ( ! [X45,X43,X46,X44] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK29(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num',X44)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1589,f81])).
fof(f1589,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK29(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44))))))) )),
  inference(superposition,[],[f112,f81])).
fof(f1614,plain,(
  ( ! [X39,X41,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK29(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num',X39)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1588,f80])).
fof(f1588,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK29(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40))))))) )),
  inference(superposition,[],[f112,f80])).
fof(f1612,plain,(
  ( ! [X35,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1611,f71])).
fof(f1611,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1586,f75])).
fof(f1586,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f71])).
fof(f1610,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1609,f74])).
fof(f1609,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(forward_demodulation,[],[f1585,f75])).
fof(f1585,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(superposition,[],[f112,f74])).
fof(f1608,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1607,f76])).
fof(f1607,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(forward_demodulation,[],[f1584,f75])).
fof(f1584,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(superposition,[],[f112,f76])).
fof(f1606,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK29(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num',X26)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1583,f362])).
fof(f1583,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK29(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f362])).
fof(f1605,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK29(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1580,f75])).
fof(f1580,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK29(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f112,f75])).
fof(f1579,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK29(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))),X13)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK58(X10,X11,X12,X9))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f112,f90])).
fof(f1578,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK29(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))),X7)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK57(X4,X5,X6,X3))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f112,f89])).
fof(f1604,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1603,f455])).
fof(f1603,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(forward_demodulation,[],[f1577,f75])).
fof(f1577,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(superposition,[],[f112,f455])).
fof(f1576,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK29(sK58(X8,X9,X10,X7),X11,X7)))),s('type.num.num',X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f112,f90])).
fof(f1575,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK29(sK57(X3,X4,X5,X2),X6,X2)))),s('type.num.num',X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f112,f89])).
fof(f1574,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29('const.list.NIL_0',X1,X0)))),s('type.num.num',X1))))) )),
  inference(superposition,[],[f112,f455])).
fof(f1573,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))),s('type.num.num',X18))))) )),
  inference(superposition,[],[f112,f81])).
fof(f1572,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))),s('type.num.num',X14))))) )),
  inference(superposition,[],[f112,f80])).
fof(f1571,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK29('const.list.APPEND_2'(s('type.list.list'(X6),sK57(X7,X8,X9,X6)),s('type.list.list'(X6),sK58(X7,X8,X9,X6))),X10,X6)))),s('type.num.num',X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f112,f91])).
fof(f1602,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK29(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f1570,f455])).
fof(f1570,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK29(sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f112,f1187])).
fof(f1601,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f1569,f455])).
fof(f1569,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f1116])).
fof(f1566,plain,(
  ( ! [X45,X46,X44] : (s(bool,X46) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X44),s(bool,X45))) | s(bool,'F_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f1545,f70])).
fof(f1545,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | s(bool,X46) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X44),s(bool,X45))) | s(bool,'F_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f1521,f227])).
fof(f1551,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) = s(bool,X3) | s(bool,'F_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f1528,f70])).
fof(f1528,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | s(bool,X2) = s(bool,X3) | s(bool,'F_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1521,f131])).
fof(f1521,plain,(
  ( ! [X20,X18] : (~p(s(bool,X20)) | s(bool,X18) = s(bool,X20) | s(bool,'F_0') = s(bool,X18)) )),
  inference(forward_demodulation,[],[f1520,f80])).
fof(f1520,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X18),s(bool,X19))) | s(bool,'F_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f1476,f70])).
fof(f1476,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X18),s(bool,X19))) | s(bool,'F_0') = s(bool,X18)) )),
  inference(superposition,[],[f100,f227])).
fof(f1444,plain,(
  ( ! [X52,X50,X51] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X51)))) )),
  inference(superposition,[],[f227,f81])).
fof(f1443,plain,(
  ( ! [X47,X48,X49] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X49))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f227,f80])).
fof(f1418,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f227,f131])).
fof(f1408,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) | s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK57(X13,X14,X15,X12)),s('type.list.list'(X12),sK58(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f78,f91])).
fof(f1407,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),X11) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK57(X9,X10,X11,X8)),s('type.list.list'(X8),sK58(X9,X10,X11,X8)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f79,f91])).
fof(f1406,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK57('const.list.LENGTH_1'(s('type.list.list'(X4),X7)),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X4),sK57(X5,X6,X7,X4)),s('type.list.list'(X4),sK58(X5,X6,X7,X4))),X4)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))) )),
  inference(superposition,[],[f1116,f91])).
fof(f1405,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X3)),'const.list.APPEND_2'(s('type.list.list'(X0),sK57(X1,X2,X3,X0)),s('type.list.list'(X0),sK58(X1,X2,X3,X0))),X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f1187,f91])).
fof(f1416,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),sK58('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(forward_demodulation,[],[f1401,f1116])).
fof(f1401,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)),s('type.list.list'(X0),sK58('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f91])).
fof(f1415,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK57('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f1402,f1187])).
fof(f1402,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK57('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f91])).
fof(f1246,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s(X16,sK59(X17,X18,bool,X16)))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X18) | s(bool,'T_0') = s(bool,g(s(X16,sK59(X17,X18,bool,X16))))) )),
  inference(superposition,[],[f101,f77])).
fof(f1244,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) != s(bool,f(s(X8,sK59(X9,X10,bool,X8)))) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK59(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f101,f131])).
fof(f1242,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s(X0,sK59(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK59(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f101,f131])).
fof(f1241,plain,(
  ( ! [X17,X18,X16] : (s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0'))) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(bool,'T_0') = s(bool,sK59(X16,X17,X18,bool))) )),
  inference(superposition,[],[f101,f77])).
fof(f1239,plain,(
  ( ! [X10,X8,X11,X9] : (s(X10,f(s(bool,X11))) != s(X10,g(s(bool,X11))) | s(fun(bool,X10),X8) = s(fun(bool,X10),X9) | s(bool,'T_0') = s(bool,sK59(X8,X9,X10,bool)) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f101,f131])).
fof(f1237,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,X3) = s(bool,sK59(X0,X1,X2,bool)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f101,f131])).
fof(f1222,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK57('const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),'const.num.|48|_0',sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f1116,f1187])).
fof(f1220,plain,(
  ( ! [X8,X7,X9] : (s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X7),X9)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X7),X8),s('type.list.list'(X7),X9)),X7))) )),
  inference(superposition,[],[f1187,f81])).
fof(f1219,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X4),X5)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))) )),
  inference(superposition,[],[f1187,f80])).
fof(f1218,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f1187,f1187])).
fof(f1217,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f1187,f1116])).
fof(f1190,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))))) )),
  inference(superposition,[],[f1163,f81])).
fof(f1189,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))))) )),
  inference(superposition,[],[f1163,f80])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))))) )),
  inference(superposition,[],[f1163,f1116])).
fof(f1187,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))) )),
  inference(unit_resulting_resolution,[],[f1163,f78])).
fof(f1164,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK58(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f78,f90])).
fof(f1162,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f90])).
fof(f1163,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f90])).
fof(f1147,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(X5),'const.list.NIL_0') = s('type.list.list'(X5),sK57('const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))) )),
  inference(superposition,[],[f1116,f81])).
fof(f1146,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK57('const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))) )),
  inference(superposition,[],[f1116,f80])).
fof(f1145,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),'const.num.|48|_0',sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f1116,f1116])).
fof(f1118,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK57('const.list.LENGTH_1'(s('type.list.list'(X3),X5)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X3))))) )),
  inference(superposition,[],[f1091,f81])).
fof(f1117,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(superposition,[],[f1091,f80])).
fof(f1116,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))) )),
  inference(unit_resulting_resolution,[],[f1091,f78])).
fof(f1093,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK57(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f78,f89])).
fof(f1091,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f89])).
fof(f1092,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f89])).
fof(f1065,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f839,f77])).
fof(f1063,plain,(
  ( ! [X6,X5] : (s(bool,X6) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f839,f131])).
fof(f1061,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X2) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f839,f131])).
fof(f962,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f498,f77])).
fof(f960,plain,(
  ( ! [X10,X8,X9] : (s(bool,X10) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f498,f131])).
fof(f958,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,X4) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f498,f131])).
fof(f844,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10)))) )),
  inference(superposition,[],[f486,f77])).
fof(f842,plain,(
  ( ! [X6,X7] : (s(bool,X7) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f486,f131])).
fof(f840,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X3) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f486,f131])).
fof(f839,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f486,f94])).
fof(f827,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f646,f70])).
fof(f646,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f100,f131])).
fof(f631,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X2),s(X1,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f80,f131])).
fof(f566,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X28) | s(bool,X29) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X28))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f131,f81])).
fof(f565,plain,(
  ( ! [X26,X24,X25] : (s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X25))) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f131,f80])).
fof(f564,plain,(
  ( ! [X23,X21,X22] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X21))) | s(bool,X23) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X22))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f131,f93])).
fof(f563,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X18))) | s(bool,X20) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num',X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f131,f114])).
fof(f562,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num',X15))) | s(bool,X17) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f131,f94])).
fof(f551,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f131,f131])).
fof(f535,plain,(
  ( ! [X35,X36,X34] : (s(bool,X35) = s(bool,X36) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,X35)))) )),
  inference(superposition,[],[f131,f81])).
fof(f534,plain,(
  ( ! [X33,X31,X32] : (s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f131,f80])).
fof(f533,plain,(
  ( ! [X30,X28,X29] : (s(bool,X30) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X29),s('type.num.num',X28))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) )),
  inference(superposition,[],[f131,f93])).
fof(f532,plain,(
  ( ! [X26,X27,X25] : (s(bool,X27) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f131,f114])).
fof(f531,plain,(
  ( ! [X24,X23,X22] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'T_0') = s(bool,X24) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)))) )),
  inference(superposition,[],[f131,f94])).
fof(f499,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5)))) )),
  inference(superposition,[],[f114,f77])).
fof(f498,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f114,f94])).
fof(f486,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f114,f72])).
fof(f455,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f451,f81])).
fof(f451,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f81,f79])).
fof(f449,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) | s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)))) )),
  inference(superposition,[],[f78,f81])).
fof(f448,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f78,f80])).
fof(f362,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f95,f75])).
fof(f344,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f94,f77])).
fof(f302,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f93,f77])).
fof(f264,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f81,f77])).
fof(f242,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f81,f77])).
fof(f227,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f80,f77])).
fof(f81,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X42,X43] : s(X6,X43) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X42),s(X6,X43)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.bool.COND_CLAUSES|split|1')).
fof(f112,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f109,f94])).
fof(f109,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0)))))))) )),
  inference(backward_demodulation,[],[f94,f82])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0))))))))))))))))))))))))))))))))))))))))))))))))))))) )),
  inference(backward_demodulation,[],[f94,f83])).
fof(f114,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f96,f93])).
fof(f96,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X39,X40] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X39),s('type.num.num',X40))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.LESS_EQ')).
fof(f93,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X39,X40] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X39),s('type.num.num',X40))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num',X39)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.GREATER_DEF')).
fof(f158,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f152,f73])).
fof(f152,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f97,f77])).
fof(f133,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f73,f77])).
fof(f131,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f77,f77])).
fof(f101,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK59(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK59(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK59(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK59(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK59])],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9',aHL_EXT)).
fof(f97,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X42,X43] : ((p(s(bool,X42)) => p(s(bool,X43))) => ((p(s(bool,X43)) => p(s(bool,X42))) => s(bool,X42) = s(bool,X43)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.bool.IMP_ANTISYM_AX')).
fof(f100,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f95,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X39,X40] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.ADD_SYM')).
fof(f89,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK57(X3,X2,X1,X0)),s('type.list.list'(X0),sK58(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK57,sK58])],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X35,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X36))) <=> ? [X37,X38] : (s('type.num.num',X35) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X37))) & s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X38))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X37),s('type.list.list'(X6),X38)))))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.list.LENGTH_EQ_SUM')).
fof(f90,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK58(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f91,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK57(X3,X2,X1,X0)),s('type.list.list'(X0),sK58(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f82,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK29(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f83,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK40(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK46(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK47(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK48(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK50(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK52(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK53(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK29(X2,X1,X0)))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f80,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X42,X43] : s(X6,X42) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X42),s(X6,X43)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.bool.COND_CLAUSES|split|0')).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.list.LENGTH_NIL')).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X41] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X41),s('type.num.num',X41)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f75,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X40] : s('type.num.num',X40) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X40)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.ADD|split|0')).
fof(f74,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X40] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X40)))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.arithmetic.MULT|split|0')).
fof(f72,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.numeral.numeral_suc|split|0')).
fof(f71,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f16])).
fof(f16,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.prim_rec.PRE|split|0')).
fof(f5117,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4093,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077,f4089])).
fof(f2820,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl30),
  inference(cnf_transformation,[],[f2820_D])).
fof(f2820_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f4093,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f73,f142,f4027,f2285])).
fof(f2285,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X12)) | s(bool,X11) = s(bool,X12) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X13)) ) | $spl6),
  inference(subsumption_resolution,[],[f2009,f73])).
fof(f2009,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,'F_0')) | p(s(bool,X12)) | s(bool,X11) = s(bool,X12) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X13)) ) | $spl6),
  inference(superposition,[],[f97,f1636])).
fof(f1636,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1558,f1558])).
fof(f1558,plain,(
  ( ! [X24] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f1536,f70])).
fof(f1536,plain,(
  ( ! [X24] : (~p(s(bool,'T_0')) | s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X24)) ) | $spl6),
  inference(superposition,[],[f1521,f138])).
fof(f5116,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4090,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077,f4089])).
fof(f4090,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4027,f1636])).
fof(f5115,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077,f4089])).
fof(f5114,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4085,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077])).
fof(f4085,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f73,f142,f4027,f2285])).
fof(f5113,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4084,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077])).
fof(f4084,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4027,f1636])).
fof(f5112,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067,f4077])).
fof(f5111,plain,(
  $false | ($spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4072,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067])).
fof(f4072,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4027,f131])).
fof(f5110,plain,(
  $false | ($spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4068,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067])).
fof(f4068,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4027,f131])).
fof(f5109,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098,f4067])).
fof(f5108,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111,f4098])).
fof(f5107,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110,f4111])).
fof(f5106,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118,f4110])).
fof(f5105,plain,(
  $false | ($spl6 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f5104,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118])).
fof(f5104,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl43)),
  inference(condensation,[],[f5103])).
fof(f5103,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,X6) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl43)),
  inference(subsumption_resolution,[],[f4105,f77])).
fof(f4105,plain,(
  ( ! [X6] : (s(bool,'T_0') != s(bool,X6) | s(bool,'F_0') = s(bool,X6) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl43)),
  inference(superposition,[],[f4027,f1636])).
fof(f5102,plain,(
  $false | ($spl6 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f5101,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118])).
fof(f5101,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl43)),
  inference(condensation,[],[f5100])).
fof(f5100,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl6 | $spl43)),
  inference(subsumption_resolution,[],[f4106,f77])).
fof(f4106,plain,(
  ( ! [X7] : (s(bool,'T_0') != s(bool,X7) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl6 | $spl43)),
  inference(superposition,[],[f4027,f1636])).
fof(f5099,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f2820,f4118])).
fof(f5098,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3217,f3245,f3246,f3247,f3222,f3223,f3224,f3225,f3248,f4027,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2924,f1581,f2912,f3215,f1613,f2949,f3221,f2910,f2909,f4118,f2820])).
fof(f5097,plain,(
  $false | ($spl6 | $spl30 | $spl39)),
  inference(subsumption_resolution,[],[f5096,f73])).
fof(f5096,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl30 | $spl39)),
  inference(forward_demodulation,[],[f2820,f3383])).
fof(f3383,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | ($spl6 | $spl39)),
  inference(superposition,[],[f94,f3256])).
fof(f3256,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl39)),
  inference(unit_resulting_resolution,[],[f3132,f1717])).
fof(f1717,plain,(
  ( ! [X19,X20] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19)))) ) | $spl6),
  inference(forward_demodulation,[],[f1629,f138])).
fof(f1629,plain,(
  ( ! [X19,X20] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20)))) ) | $spl6),
  inference(superposition,[],[f1558,f94])).
fof(f156,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5080,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7))) ) | $spl50),
  inference(cnf_transformation,[],[f5080_D])).
fof(f5080_D,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f4054,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(forward_demodulation,[],[f4053,f94])).
fof(f4053,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X5) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3932,f133])).
fof(f3932,plain,(
  ( ! [X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f97,f3418])).
fof(f3418,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3376,f142])).
fof(f3376,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl39)),
  inference(superposition,[],[f3256,f131])).
fof(f4057,plain,(
  ( ! [X6,X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(forward_demodulation,[],[f4056,f94])).
fof(f4056,plain,(
  ( ! [X6,X7] : (p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3933,f133])).
fof(f3933,plain,(
  ( ! [X6,X7] : (p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f97,f3418])).
fof(f3158,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl40),
  inference(cnf_transformation,[],[f3158_D])).
fof(f3158_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f5079,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) | $spl48),
  inference(cnf_transformation,[],[f5079_D])).
fof(f5079_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4713,plain,(
  ( ! [X0,X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) | ($spl6 | $spl31)),
  inference(equality_factoring,[],[f2899])).
fof(f2899,plain,(
  ( ! [X21,X20] : (s(bool,X20) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X20) = s(bool,X21) | s(bool,'F_0') = s(bool,X21)) ) | ($spl6 | $spl31)),
  inference(subsumption_resolution,[],[f2880,f73])).
fof(f2880,plain,(
  ( ! [X21,X20] : (p(s(bool,'F_0')) | s(bool,X20) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X20) = s(bool,X21) | s(bool,'F_0') = s(bool,X21)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2285,f2839])).
fof(f2839,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl31),
  inference(unit_resulting_resolution,[],[f73,f2821,f97])).
fof(f4887,plain,(
  ( ! [X35,X33] : (s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl46),
  inference(cnf_transformation,[],[f4887_D])).
fof(f4887_D,plain,(
  ( ! [X35,X33] : (s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f140,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f4815,plain,(
  ( ! [X30,X31,X29] : (s(bool,'F_0') = s(bool,X30) | s(bool,X31) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X29) = s(bool,X31) | s(bool,X29) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4416])).
fof(f4416,plain,(
  ( ! [X30,X31,X29] : (s(bool,'F_0') = s(bool,X30) | s(bool,X31) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X29) = s(bool,X31) | s(bool,X29) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X30)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2899,f2899])).
fof(f4824,plain,(
  ( ! [X39,X41,X40] : (s(bool,X40) = s(bool,X41) | s(bool,X41) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39) | s(bool,X40) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4365])).
fof(f4365,plain,(
  ( ! [X39,X41,X40] : (s(bool,X40) = s(bool,X41) | s(bool,X41) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39) | s(bool,X40) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2899,f2899])).
fof(f4842,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35)) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4323])).
fof(f4323,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X34) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2899,f2899])).
fof(f4145,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl20)),
  inference(subsumption_resolution,[],[f4144,f70])).
fof(f4144,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6 | $spl20)),
  inference(forward_demodulation,[],[f4120,f138])).
fof(f4120,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4 | $spl20)),
  inference(unit_resulting_resolution,[],[f106,f3501,f113])).
fof(f3501,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ($spl1 | $spl20)),
  inference(global_subsumption,[],[f3488,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f85,f87,f93,f114,f103,f110,f113,f112,f94,f73,f81,f227,f242,f264,f284,f302,f344,f362,f447,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f889,f891,f894,f883,f884,f885,f886,f887,f888,f958,f960,f962,f964,f1003,f1005,f1008,f996,f997,f998,f999,f1000,f1001,f1002,f1061,f1063,f1065,f1067,f1068,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1259,f1260,f1321,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1518,f1519,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1581,f1606,f1608,f1610,f1612,f1613,f1614,f1615,f1590,f1591,f1617,f2364,f2377,f2433,f2444,f2347,f2352,f2357,f2360,f2361,f2937,f2902,f2906,f2907,f2909,f2910,f2912,f2949,f2924,f2956,f3239,f3241,f3205,f3242,f3243,f3208,f3209,f3210,f3244,f3212,f3213,f3214,f3215,f3217,f3245,f3246,f3247,f3221,f3222,f3223,f3224,f3225,f3248])).
fof(f1260,plain,(
  ( ! [X26,X27] : (s(bool,X27) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X27)))) ) | $spl1),
  inference(superposition,[],[f447,f81])).
fof(f1259,plain,(
  ( ! [X24,X25] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X25)))) ) | $spl1),
  inference(superposition,[],[f447,f80])).
fof(f447,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl1),
  inference(subsumption_resolution,[],[f438,f73])).
fof(f438,plain,(
  ( ! [X3] : (p(s(bool,'F_0')) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl1),
  inference(superposition,[],[f158,f284])).
fof(f284,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f73,f103,f97])).
fof(f3488,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK30(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK31(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK32(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK33(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK34(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK35(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK36(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK37(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK38(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK39(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK40(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK41(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK42(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK43(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK44(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK45(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK46(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK47(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK48(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK50(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK51(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK52(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK53(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK54(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl20),
  inference(backward_demodulation,[],[f1368,f3221])).
fof(f4065,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f4065_D])).
fof(f4065_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4027,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(cnf_transformation,[],[f4027_D])).
fof(f4027_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f3957,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl11 | $spl39)),
  inference(equality_factoring,[],[f3418])).
fof(f4025,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl11 | $spl39)),
  inference(condensation,[],[f4024])).
fof(f4024,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X34) = s(bool,X35) | s(bool,'F_0') = s(bool,X35)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3901,f1984])).
fof(f1984,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') != s(bool,X7) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X8)) ) | ($spl6 | $spl11)),
  inference(superposition,[],[f142,f1636])).
fof(f3901,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X34) = s(bool,X35) | s(bool,'F_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X34)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f1984,f3418])).
fof(f3506,plain,(
  $false | ($spl4 | $spl34)),
  inference(subsumption_resolution,[],[f106,f2828])).
fof(f3477,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f3476,f2830])).
fof(f2830,plain,(
  ( ! [X61,X57,X70,X66,X54,X74,X62,X58,X71,X67,X55,X75,X51,X63,X59,X68,X64,X52,X72,X60,X56,X69,X65,X53,X73] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),sK29(sK2,sK1,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f2804,f70])).
fof(f2804,plain,(
  ( ! [X61,X57,X70,X66,X54,X74,X62,X58,X71,X67,X55,X75,X51,X63,X59,X68,X64,X52,X72,X60,X56,X69,X65,X53,X73] : (~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),sK29(sK2,sK1,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2669,f2700])).
fof(f2700,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK29(sK2,sK1,sK0)))),s('type.num.num',sK1))) | $spl0),
  inference(unit_resulting_resolution,[],[f70,f2672,f100])).
fof(f2672,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK29(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(unit_resulting_resolution,[],[f102,f112])).
fof(f2669,plain,(
  ( ! [X28,X24,X4,X12,X8,X21,X17,X25,X5,X13,X9,X22,X18,X26,X6,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f104,f94])).
fof(f3476,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK35(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK40(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK45(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK46(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK47(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK48(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK49(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK50(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK51(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK52(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK53(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54(sK2,sK1,sK0)),s('type.list.list'(sK0),sK29(sK2,sK1,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))) | $spl0),
  inference(subsumption_resolution,[],[f3436,f70])).
fof(f3436,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK35(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK40(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK45(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK46(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK47(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK48(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK49(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK50(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK51(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK52(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK53(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54(sK2,sK1,sK0)),s('type.list.list'(sK0),sK29(sK2,sK1,sK0)))))))))))))))))))))))))))))))))))))))))))))))))))) | $spl0),
  inference(superposition,[],[f110,f2677])).
fof(f2677,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f70,f102,f100])).
fof(f3132,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl39),
  inference(cnf_transformation,[],[f3132_D])).
fof(f3132_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f3072,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl31),
  inference(equality_factoring,[],[f2851])).
fof(f2851,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl31),
  inference(subsumption_resolution,[],[f2842,f70])).
fof(f2842,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl31),
  inference(superposition,[],[f2821,f131])).
fof(f3130,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl11 | $spl31)),
  inference(condensation,[],[f3129])).
fof(f3129,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X42) = s(bool,X43) | s(bool,'F_0') = s(bool,X43)) ) | ($spl6 | $spl11 | $spl31)),
  inference(subsumption_resolution,[],[f3015,f1984])).
fof(f3015,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X42) = s(bool,X43) | s(bool,'F_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X42)) ) | ($spl6 | $spl11 | $spl31)),
  inference(superposition,[],[f1984,f2851])).
fof(f2953,plain,(
  ( ! [X24,X4,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl36),
  inference(cnf_transformation,[],[f2953_D])).
fof(f2953_D,plain,(
  ( ! [X24,X4,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))))))))))))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2952,plain,(
  ( ! [X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl6 | $spl14)),
  inference(subsumption_resolution,[],[f2921,f157])).
fof(f2921,plain,(
  ( ! [X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (~p(s(bool,X0)) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f113,f1558])).
fof(f2828,plain,(
  ( ! [X24,X4,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl34),
  inference(cnf_transformation,[],[f2828_D])).
fof(f2828_D,plain,(
  ( ! [X24,X4,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))))))))))))))))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2827,plain,(
  ( ! [X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl2 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f2802,f157])).
fof(f2802,plain,(
  ( ! [X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (~p(s(bool,X0)) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl2 | $spl6)),
  inference(superposition,[],[f2669,f1558])).
fof(f2822,plain,(
  ( ! [X28,X37,X33,X45,X41,X50,X29,X38,X34,X46,X42,X30,X26,X39,X35,X47,X43,X48,X31,X27,X36,X32,X44,X40,X49] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl32),
  inference(cnf_transformation,[],[f2822_D])).
fof(f2822_D,plain,(
  ( ! [X28,X37,X33,X45,X41,X50,X29,X38,X34,X46,X42,X30,X26,X39,X35,X47,X43,X48,X31,X27,X36,X32,X44,X40,X49] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))))))))))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2821,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl31),
  inference(cnf_transformation,[],[f2821_D])).
fof(f2821_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f2799,plain,(
  ( ! [X24,X4,X0,X12,X8,X21,X17,X5,X1,X13,X9,X22,X18,X6,X2,X14,X10,X23,X19,X7,X3,X15,X11,X20,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2669,f455])).
fof(f2824,plain,(
  ( ! [X61,X57,X70,X66,X54,X74,X62,X58,X71,X67,X55,X75,X63,X59,X68,X64,X76,X52,X72,X60,X56,X69,X65,X53,X73] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f2823,f1187])).
fof(f2823,plain,(
  ( ! [X61,X57,X70,X66,X54,X74,X62,X58,X71,X67,X55,X75,X51,X63,X59,X68,X64,X76,X52,X72,X60,X56,X69,X65,X53,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)),X51,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2795,f455])).
fof(f2795,plain,(
  ( ! [X61,X57,X70,X66,X54,X74,X62,X58,X71,X67,X55,X75,X51,X63,X59,X68,X64,X76,X52,X72,X60,X56,X69,X65,X53,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X63),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X64),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X66),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X70),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X76),s('type.list.list'(sK0),sK58('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(sK0),X51)),X51,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2669,f1187])).
fof(f2819,plain,(
  ( ! [X28,X37,X33,X45,X41,X50,X29,X38,X34,X46,X42,X30,X26,X39,X35,X47,X43,X48,X31,X27,X36,X32,X44,X40,X49] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f2818,f1116])).
fof(f2818,plain,(
  ( ! [X28,X37,X33,X45,X41,X50,X29,X25,X38,X34,X46,X42,X30,X26,X39,X35,X47,X43,X48,X31,X27,X36,X32,X44,X40,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),sK57('const.list.LENGTH_1'(s('type.list.list'(sK0),X25)),'const.num.|48|_0',X25,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2794,f455])).
fof(f2794,plain,(
  ( ! [X28,X37,X33,X45,X41,X50,X29,X25,X38,X34,X46,X42,X30,X26,X39,X35,X47,X43,X48,X31,X27,X36,X32,X44,X40,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),sK57('const.list.LENGTH_1'(s('type.list.list'(sK0),X25)),'const.num.|48|_0',X25,sK0))))))))))))))))))))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2669,f1116])).
fof(f2816,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f2815,f70])).
fof(f2815,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f2792,f138])).
fof(f2792,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f2669])).
fof(f2783,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | $spl26),
  inference(cnf_transformation,[],[f2783_D])).
fof(f2783_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2785,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl29),
  inference(cnf_transformation,[],[f2785_D])).
fof(f2785_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f2768,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f78,f106])).
fof(f2671,plain,(
  $false | ($spl0 | $spl6 | $spl11 | $spl23)),
  inference(subsumption_resolution,[],[f2670,f73])).
fof(f2670,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl6 | $spl11 | $spl23)),
  inference(forward_demodulation,[],[f102,f2606])).
fof(f2606,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | ($spl6 | $spl11 | $spl23)),
  inference(unit_resulting_resolution,[],[f73,f1370,f142,f2285])).
fof(f2654,plain,(
  ( ! [X66,X67] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'F_0') = s(bool,X67) | s(bool,X66) = s(bool,X67)) ) | $spl24),
  inference(cnf_transformation,[],[f2654_D])).
fof(f2654_D,plain,(
  ( ! [X66,X67] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'F_0') = s(bool,X67) | s(bool,X66) = s(bool,X67)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2653,plain,(
  ( ! [X66,X67,X65] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X66) = s(bool,X67) | s(bool,'F_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X65)) ) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f2630,f133])).
fof(f2630,plain,(
  ( ! [X66,X67,X65] : (p(s(bool,X65)) | s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X66) = s(bool,X67) | s(bool,'F_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X65)) ) | ($spl1 | $spl6)),
  inference(superposition,[],[f2285,f447])).
fof(f1368,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) | $spl20),
  inference(cnf_transformation,[],[f1368_D])).
fof(f1368_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1370,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl23),
  inference(cnf_transformation,[],[f1370_D])).
fof(f1370_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1321,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) | $spl1),
  inference(equality_factoring,[],[f447])).
fof(f1006,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl18),
  inference(cnf_transformation,[],[f1006_D])).
fof(f1006_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1008,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1007])).
fof(f1007,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK56('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f992,f158])).
fof(f992,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK56('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f87,f131])).
fof(f1005,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK56('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1004])).
fof(f1004,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK56('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f991,f158])).
fof(f991,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK56('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f87,f131])).
fof(f892,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl16),
  inference(cnf_transformation,[],[f892_D])).
fof(f892_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f894,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f893])).
fof(f893,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK55('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f879,f158])).
fof(f879,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK55('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f85,f131])).
fof(f891,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK55('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f890])).
fof(f890,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK55('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f878,f158])).
fof(f878,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK55('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f85,f131])).
fof(f176,plain,(
  $false | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f166,f70])).
fof(f166,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f156,f103])).
fof(f172,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f161,f70])).
fof(f161,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f156,f73])).
fof(f157,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f159,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f153,f133])).
fof(f153,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f155,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f151,f133])).
fof(f151,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f142,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f137,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f77])).
fof(f102,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl0),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f108,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl6),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f67,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ? [X29,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X50,X51,X52,X53,X54] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X29)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X37),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X38),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X39),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X40),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X41),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X42),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X43),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X44),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X45),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X46),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X47),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X48),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X49),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X50),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X51),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X52),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X53),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X54),s('type.list.list'(X0),X29))))))))))))))))))))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <~> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X28),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X29),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X30),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X31),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X32),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X33),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X34),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X26),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X27),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X28),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X29),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X30),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X31),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X32),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X33),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X34),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_25|split|9','thm.quantHeuristics.LIST_LENGTH_25|split|9')).
fof(f106,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f68,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f103,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl1),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  ( ! [X28,X24,X4,X12,X8,X21,X17,X25,X5,X13,X9,X22,X18,X26,X6,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl2),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X28,X24,X4,X12,X8,X21,X17,X25,X5,X13,X9,X22,X18,X26,X6,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  ( ! [X28,X24,X4,X12,X8,X21,X17,X25,X5,X13,X9,X22,X18,X26,X6,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(cnf_transformation,[],[f54])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 80
% Passive clauses: 427
% Generated clauses: 5148
% Final active clauses: 50
% Final passive clauses: 224
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 291
% Trivial inequalities: 24
% Fw subsumption resolutions: 210
% Fw demodulations: 779
% Bw demodulations: 84
% Condensations: 412
% Global subsumptions: 20
% 
% Simple tautologies: 54
% Equational tautologies: 96
% Forward subsumptions: 2788
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 256
% Factoring: 1
% Forward superposition: 1285
% Backward superposition: 1414
% Self superposition: 91
% Equality factoring: 78
% Equality resolution: 3
% 
% Split clauses: 28
% Split components: 56
% SAT solver clauses: 531
% SAT solver unit clauses: 49
% SAT solver binary clauses: 132
% 
% Sat splits: 28
% Sat splitting refutations: 26
% 
% Memory used [KB]: 13816
% Time elapsed: 0.261 s
% ------------------------------
% ------------------------------
% Success in time 1.558 s
