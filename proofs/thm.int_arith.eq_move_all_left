Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f5019,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5014,f268,f484,f482,f4980,f267,f483,f481])).
fof(f481,plain,(
  s('type.integer.int',sK12) = s('type.integer.int',sK13) | $spl0),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  s('type.integer.int',sK12) = s('type.integer.int',sK13) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f483,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) | $spl2),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f267,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) | s('type.integer.int',sK12) = s('type.integer.int',sK13)),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  (s('type.integer.int',sK12) = s('type.integer.int',sK13) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13)))))) & (s('type.integer.int',sK12) != s('type.integer.int',sK13) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f168])).
fof(f168,plain,(
  ? [X0,X1] : ((s('type.integer.int',X0) = s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ? [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) <~> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int',X7) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int',X7) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))),
  file('thm.int_arith.eq_move_all_left','thm.int_arith.eq_move_all_left')).
fof(f4980,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f4972])).
fof(f4972,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3)),
  inference(superposition,[],[f3694,f4186])).
fof(f4186,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(equality_resolution,[],[f354])).
fof(f354,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1] : ((s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int',X7) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))))),
  file('thm.int_arith.eq_move_all_left','thm.int_arith.eq_move_all_right')).
fof(f3694,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f484,f481])).
fof(f482,plain,(
  s('type.integer.int',sK12) != s('type.integer.int',sK13) | $spl1),
  inference(cnf_transformation,[],[f482_D])).
fof(f482_D,plain,(
  s('type.integer.int',sK12) != s('type.integer.int',sK13) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f484,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) | $spl3),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f268,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK13))))) | s('type.integer.int',sK12) != s('type.integer.int',sK13)),
  inference(cnf_transformation,[],[f169])).
fof(f5014,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f5013,f482])).
fof(f5013,plain,(
  s('type.integer.int',sK12) = s('type.integer.int',sK13) | $spl2),
  inference(trivial_inequality_removal,[],[f5005])).
fof(f5005,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK12) = s('type.integer.int',sK13) | $spl2),
  inference(superposition,[],[f355,f483])).
fof(f355,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f212])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 386
% Passive clauses: 1573
% Generated clauses: 4745
% Final active clauses: 384
% Final passive clauses: 987
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 158
% Trivial inequalities: 34
% Fw subsumption resolutions: 316
% Fw demodulations: 11
% 
% Simple tautologies: 180
% Equational tautologies: 33
% Forward subsumptions: 2418
% 
% Binary resolution: 2903
% Factoring: 790
% Forward superposition: 179
% Backward superposition: 74
% Self superposition: 7
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 121
% Split components: 243
% SAT solver clauses: 233
% SAT solver unit clauses: 12
% SAT solver binary clauses: 62
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 121
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 231
% TWLsolver calls for satisfiability: 178
% 
% Memory used [KB]: 2302
% Time elapsed: 0.109 s
% ------------------------------
% ------------------------------
% Success in time 0.114 s
