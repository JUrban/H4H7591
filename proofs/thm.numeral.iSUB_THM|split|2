Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f9049,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f9010])).
fof(f9010,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0)))),
  inference(superposition,[],[f78,f8923])).
fof(f8923,plain,(
  ( ! [X3] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X3))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f8296,f106])).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : ! [X10,X11] : s(X7,X11) = s(X7,'const.bool.COND_3'(s(bool,'F_0'),s(X7,X10),s(X7,X11)))),
  file('thm.numeral.iSUB_THM|split|2','thm.bool.COND_CLAUSES|split|1')).
fof(f8296,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f8196,f107])).
fof(f107,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.ZERO_0'),s(X0,X1),s(fun('type.num.num',X0),X2),s(fun('type.num.num',X0),X3)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : s(X0,X1) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.ZERO_0'),s(X0,X1),s(fun('type.num.num',X0),X2),s(fun('type.num.num',X0),X3)))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,X1) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.ZERO_0'),s(X0,X1),s(fun('type.num.num',X0),X2),s(fun('type.num.num',X0),X3)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7] : ! [X12,X13,X14] : s(X7,X12) = s(X7,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.ZERO_0'),s(X7,X12),s(fun('type.num.num',X7),X13),s(fun('type.num.num',X7),X14)))),
  file('thm.numeral.iSUB_THM|split|2','thm.numeral.iBIT_cases|split|0')).
fof(f8196,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X0))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X0)))))))))) )),
  inference(superposition,[],[f6697,f107])).
fof(f6697,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f6696,f113])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X16,X17,X18] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X16),s('type.num.num',X17),s('type.num.num',X18))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X16),s('type.num.num',X17))),s('type.num.num',X18)))),
  file('thm.numeral.iSUB_THM|split|2','ARITY_2_3_const.numeral.iSUB')).
fof(f6696,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f6695,f84])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X16] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X16)))),
  file('thm.numeral.iSUB_THM|split|2','ARITY_0_1_const.arithmetic.BIT|49|')).
fof(f6695,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f115,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X16] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X16))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X16)))),
  file('thm.numeral.iSUB_THM|split|2','ARITY_0_1_const.numeral.iDUB')).
fof(f115,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X15,X6,X9] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X15),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))))),s('type.num.num',X9))) = s('type.num.num','const.bool.COND_3'(s(bool,X15),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X9),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X9),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|2','thm.numeral.iSUB_DEF|split|1')).
fof(f78,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',sK0))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f61])).
fof(f61,plain,(
  ? [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X6))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X6))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.numeral.iSUB_THM|split|2','thm.numeral.iSUB_THM|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 65
% Passive clauses: 1271
% Generated clauses: 8544
% Final active clauses: 63
% Final passive clauses: 1153
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 612
% Trivial inequalities: 122
% Fw subsumption resolutions: 417
% Fw demodulations: 395
% 
% Simple tautologies: 184
% Equational tautologies: 27
% Forward subsumptions: 4953
% 
% Binary resolution: 24
% Forward superposition: 3609
% Backward superposition: 2938
% Self superposition: 217
% Equality factoring: 84
% Equality resolution: 5
% 
% Split clauses: 363
% Split components: 726
% SAT solver clauses: 576
% SAT solver unit clauses: 53
% SAT solver binary clauses: 297
% 
% Sat splits: 363
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 576
% TWLsolver calls for satisfiability: 49
% 
% Memory used [KB]: 7291
% Time elapsed: 0.249 s
% ------------------------------
% ------------------------------
% Success in time 0.25 s
