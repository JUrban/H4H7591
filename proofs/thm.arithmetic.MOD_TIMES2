Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (55884)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 134
% Passive clauses: 1768
% Generated clauses: 22097
% Final active clauses: 128
% Final passive clauses: 1429
% Input formulas: 17
% Initial clauses: 21
% 
% Duplicate literals: 1283
% Trivial inequalities: 275
% Fw subsumption resolutions: 3119
% Fw demodulations: 3011
% Bw demodulations: 5
% 
% Simple tautologies: 427
% Equational tautologies: 27
% Forward subsumptions: 10666
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 13
% Forward superposition: 7905
% Backward superposition: 5948
% Self superposition: 254
% Equality factoring: 88
% Equality resolution: 36
% 
% Split clauses: 845
% Split components: 1723
% SAT solver clauses: 1371
% SAT solver unit clauses: 31
% SAT solver binary clauses: 168
% 
% Sat splits: 845
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1355
% TWLsolver calls for satisfiability: 129
% 
% Memory used [KB]: 11001
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% (55924)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 691
% Generated clauses: 13977
% Final active clauses: 84
% Final passive clauses: 576
% Input formulas: 17
% Initial clauses: 21
% 
% Duplicate literals: 222
% Trivial inequalities: 43
% Fw subsumption resolutions: 115
% Fw demodulations: 1414
% Bw demodulations: 28
% Condensations: 291
% 
% Simple tautologies: 48
% Equational tautologies: 19
% Forward subsumptions: 10021
% Fw demodulations to eq. taut.: 39
% 
% Binary resolution: 11
% Forward superposition: 5877
% Backward superposition: 4971
% Self superposition: 225
% Equality factoring: 44
% Equality resolution: 4
% 
% Split clauses: 24
% Split components: 48
% SAT solver clauses: 1018
% SAT solver unit clauses: 31
% SAT solver binary clauses: 25
% 
% Sat splits: 24
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1018
% TWLsolver calls for satisfiability: 114
% 
% Memory used [KB]: 32110
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f18950,plain,(
  $false),
  inference(subsumption_resolution,[],[f18949,f18913])).
fof(f18913,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',sK0))))),s('type.num.num',sK0)))) )),
  inference(forward_demodulation,[],[f18683,f17119])).
fof(f17119,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X9))),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num',X10))),s('type.num.num',X11))))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f3271,f1694])).
fof(f1694,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f64,f59])).
fof(f59,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6)))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.MULT_SYM')).
fof(f64,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9,X6,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X9))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X6)))))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.LEFT_ADD_DISTRIB')).
fof(f3271,plain,(
  ( ! [X14,X15,X16] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X15),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num',X14))))),s('type.num.num',X15))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f2218,f1697])).
fof(f1697,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f64,f63])).
fof(f63,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9,X6,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X10)))))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.RIGHT_ADD_DISTRIB')).
fof(f2218,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',X0))))),s('type.num.num',X1))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f1922,f59])).
fof(f1922,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',sK0))))),s('type.num.num',X6))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f1907,f62])).
fof(f62,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9,X6,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X10)))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.MULT_ASSOC')).
fof(f1907,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK0))),s('type.num.num',X0))),s('type.num.num',sK0)))) )),
  inference(subsumption_resolution,[],[f1892,f46])).
fof(f46,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.MOD_TIMES2','thm.bool.TRUTH')).
fof(f1892,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',sK0))),s('type.num.num',X0))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f54,f80])).
fof(f80,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))),
  inference(subsumption_resolution,[],[f76,f48])).
fof(f48,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.MOD_TIMES2',aHL_FALSITY)).
fof(f76,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))),
  inference(superposition,[],[f44,f51])).
fof(f51,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.MOD_TIMES2',aHL_BOOL_CASES)).
fof(f44,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK2),s('type.num.num',sK0))))),s('type.num.num',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f36])).
fof(f36,plain,(
  ? [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & ? [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7,X8] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))))),s('type.num.num',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7,X8] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))))),s('type.num.num',X6))))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.MOD_TIMES2')).
fof(f54,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X11,X12] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X12),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X6))),s('type.num.num',X12))),s('type.num.num',X6))))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.MOD_TIMES')).
fof(f18683,plain,(
  ( ! [X10,X11,X9] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',sK0))))),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num',X9))),s('type.num.num',X10))))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f17531,f2770])).
fof(f2770,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X38),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num',X37))),s('type.num.num',X38))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f1920,f1697])).
fof(f1920,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',X0))),s('type.num.num',X1))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f1907,f59])).
fof(f17531,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num',X30))),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X30),s('type.num.num',sK0))))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f3304,f2022])).
fof(f2022,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK0)))))) )),
  inference(subsumption_resolution,[],[f2003,f46])).
fof(f2003,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK0)))))) )),
  inference(superposition,[],[f67,f80])).
fof(f67,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f59,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X8] : (s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))),s('type.num.num',X6))))))),
  file('thm.arithmetic.MOD_TIMES2','thm.arithmetic.DIVISION')).
fof(f3304,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X5))),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',X4))),s('type.num.num',X5))))),s('type.num.num',sK0)))) )),
  inference(superposition,[],[f2218,f64])).
fof(f18949,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),s('type.num.num',sK0)))),
  inference(forward_demodulation,[],[f18736,f59])).
fof(f18736,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK2))),s('type.num.num',sK0)))),
  inference(superposition,[],[f45,f17531])).
fof(f45,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK2),s('type.num.num',sK0))))),s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f40])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 105
% Passive clauses: 842
% Generated clauses: 18768
% Final active clauses: 102
% Final passive clauses: 734
% Input formulas: 17
% Initial clauses: 21
% 
% Duplicate literals: 411
% Trivial inequalities: 66
% Fw subsumption resolutions: 204
% Fw demodulations: 2070
% Bw demodulations: 6
% Condensations: 508
% 
% Simple tautologies: 75
% Equational tautologies: 53
% Forward subsumptions: 14313
% Fw demodulations to eq. taut.: 39
% 
% Unit resulting resolution: 126
% Forward superposition: 7802
% Backward superposition: 7189
% Self superposition: 296
% Equality factoring: 63
% Equality resolution: 4
% 
% Split clauses: 17
% Split components: 42
% SAT solver clauses: 878
% SAT solver unit clauses: 585
% SAT solver binary clauses: 170
% 
% Sat splits: 17
% 
% Memory used [KB]: 32366
% Time elapsed: 0.847 s
% ------------------------------
% ------------------------------
% Success in time 2.157 s
