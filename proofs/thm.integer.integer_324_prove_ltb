Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (98489)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 735
% Passive clauses: 7901
% Generated clauses: 22082
% Final active clauses: 722
% Final passive clauses: 6695
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 924
% Trivial inequalities: 208
% Fw subsumption resolutions: 2185
% Fw demodulations: 539
% Bw demodulations: 7
% 
% Simple tautologies: 324
% Equational tautologies: 70
% Forward subsumptions: 7722
% 
% Binary resolution: 9431
% Factoring: 1401
% Forward superposition: 3091
% Backward superposition: 3726
% Self superposition: 53
% Equality factoring: 52
% Equality resolution: 42
% 
% Split clauses: 686
% Split components: 1379
% SAT solver clauses: 1173
% SAT solver unit clauses: 27
% SAT solver binary clauses: 238
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 686
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1172
% TWLsolver calls for satisfiability: 445
% 
% Memory used [KB]: 9083
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f3966,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3230,f3095,f393,f534,f3783,f267,f486,f3832,f3759,f3232,f488,f268,f489,f487,f3745,f3776,f392,f535,f349,f518,f3665])).
fof(f3665,plain,(
  $false | ($spl1 | $spl2 | $spl1212)),
  inference(subsumption_resolution,[],[f3664,f487])).
fof(f3664,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) | ($spl2 | $spl1212)),
  inference(forward_demodulation,[],[f3658,f488])).
fof(f3658,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))))) | ($spl2 | $spl1212)),
  inference(trivial_inequality_removal,[],[f3647])).
fof(f3647,plain,(
  s('type.integer.int',sK13) != s('type.integer.int',sK13) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))))) | ($spl2 | $spl1212)),
  inference(superposition,[],[f3095,f488])).
fof(f518,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl22),
  inference(cnf_transformation,[],[f518_D])).
fof(f518_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f349,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X7,X6] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  file('thm.integer.integer_324_prove_ltb','thm.integer.INT_ADD_SYM')).
fof(f535,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl46),
  inference(cnf_transformation,[],[f535_D])).
fof(f535_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2))) <=> s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6,X7,X8] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X8))) <=> s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),
  file('thm.integer.integer_324_prove_ltb','thm.integer.integer_323_prove_ltb')).
fof(f3776,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))) ) | $spl1432),
  inference(cnf_transformation,[],[f3776_D])).
fof(f3776_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))) ) <=> ~$spl1432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1432])])).
fof(f3745,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK12)))) ) | ($spl0 | $spl46)),
  inference(superposition,[],[f535,f486])).
fof(f487,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) | $spl1),
  inference(cnf_transformation,[],[f487_D])).
fof(f487_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f489,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | $spl3),
  inference(cnf_transformation,[],[f489_D])).
fof(f489_D,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f268,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  (s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14)))) & (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) | s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2] : ((s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ? [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) <~> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) <=> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))))),
  file('thm.integer.integer_324_prove_ltb','thm.integer.integer_324_prove_ltb')).
fof(f488,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | $spl2),
  inference(cnf_transformation,[],[f488_D])).
fof(f488_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f3232,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | ($spl22 | $spl1210)),
  inference(superposition,[],[f518,f3094])).
fof(f3094,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))) | $spl1210),
  inference(cnf_transformation,[],[f3094_D])).
fof(f3094_D,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))) <=> ~$spl1210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1210])])).
fof(f3759,plain,(
  $false | ($spl0 | $spl22 | $spl707)),
  inference(subsumption_resolution,[],[f3743,f2031])).
fof(f2031,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | $spl707),
  inference(cnf_transformation,[],[f2031_D])).
fof(f2031_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) <=> ~$spl707),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl707])])).
fof(f3743,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | ($spl0 | $spl22)),
  inference(superposition,[],[f486,f518])).
fof(f3832,plain,(
  $false | ($spl706 | $spl1211 | $spl1432)),
  inference(subsumption_resolution,[],[f3831,f3093])).
fof(f3093,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))) | $spl1211),
  inference(cnf_transformation,[],[f3093_D])).
fof(f3093_D,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))) <=> ~$spl1211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1211])])).
fof(f3831,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))) | ($spl706 | $spl1432)),
  inference(forward_demodulation,[],[f3828,f2030])).
fof(f2030,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) | $spl706),
  inference(cnf_transformation,[],[f2030_D])).
fof(f2030_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))) <=> ~$spl706),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl706])])).
fof(f3828,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))),s('type.integer.int',sK12))) | ($spl706 | $spl1432)),
  inference(trivial_inequality_removal,[],[f3825])).
fof(f3825,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK14) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))))),s('type.integer.int',sK12))) | ($spl706 | $spl1432)),
  inference(superposition,[],[f3776,f2030])).
fof(f486,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) | $spl0),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f267,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f169])).
fof(f3783,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK12),s('type.integer.int',sK14))) | ($spl22 | $spl1211)),
  inference(superposition,[],[f3093,f518])).
fof(f534,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))) ) | $spl44),
  inference(cnf_transformation,[],[f534_D])).
fof(f534_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X2))) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f229])).
fof(f3095,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',X0)))) ) | $spl1212),
  inference(cnf_transformation,[],[f3095_D])).
fof(f3095_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',X0)))) ) <=> ~$spl1212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1212])])).
fof(f3230,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK12))),s('type.integer.int',X0)))) ) | ($spl44 | $spl1210)),
  inference(superposition,[],[f534,f3094])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 248
% Passive clauses: 794
% Generated clauses: 4008
% Final active clauses: 201
% Final passive clauses: 465
% Input formulas: 52
% Initial clauses: 207
% 
% Duplicate literals: 81
% Trivial inequalities: 87
% Fw subsumption resolutions: 173
% Fw demodulations: 385
% Bw demodulations: 99
% Condensations: 29
% Global subsumptions: 22
% 
% Simple tautologies: 192
% Equational tautologies: 6
% Forward subsumptions: 1256
% 
% Binary resolution: 1101
% Factoring: 58
% Forward superposition: 314
% Backward superposition: 331
% Self superposition: 6
% Equality factoring: 2
% Equality resolution: 24
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 1222
% SAT solver unit clauses: 211
% SAT solver binary clauses: 95
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 14
% 
% Sat splits: 11
% Sat splitting refutations: 21
% 
% TWLsolver clauses: 1130
% TWLsolver calls for satisfiability: 1659
% 
% Memory used [KB]: 3709
% Time elapsed: 0.139 s
% ------------------------------
% ------------------------------
% Success in time 0.739 s
