Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (96447)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1194
% Passive clauses: 8357
% Generated clauses: 41545
% Final active clauses: 1122
% Final passive clauses: 6661
% Input formulas: 516
% Initial clauses: 875
% 
% Duplicate literals: 187
% Trivial inequalities: 78
% Fw subsumption resolutions: 1956
% Fw demodulations: 5061
% Bw demodulations: 59
% 
% Simple tautologies: 362
% Equational tautologies: 22
% Forward subsumptions: 25337
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 7293
% Factoring: 539
% Forward superposition: 12457
% Backward superposition: 12814
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 364
% Split components: 730
% SAT solver clauses: 574
% SAT solver unit clauses: 30
% SAT solver binary clauses: 93
% 
% Sat splits: 364
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 574
% TWLsolver calls for satisfiability: 352
% 
% Memory used [KB]: 22387
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (96466)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 637
% Passive clauses: 4158
% Generated clauses: 29491
% Final active clauses: 624
% Final passive clauses: 3395
% Input formulas: 516
% Initial clauses: 875
% 
% Duplicate literals: 109
% Trivial inequalities: 11
% Fw subsumption resolutions: 921
% Fw demodulations: 3938
% Bw demodulations: 137
% Condensations: 82
% Global subsumptions: 37
% 
% Simple tautologies: 323
% Equational tautologies: 17
% Forward subsumptions: 15086
% Fw demodulations to eq. taut.: 11
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 2970
% Factoring: 127
% Forward superposition: 9042
% Backward superposition: 6950
% Self superposition: 91
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 33
% Split components: 66
% SAT solver clauses: 5738
% SAT solver unit clauses: 1183
% SAT solver binary clauses: 262
% SAT solver learnt clauses: 74
% SAT solver learnt literals: 14
% 
% Sat splits: 33
% 
% TWLsolver clauses: 5590
% TWLsolver calls for satisfiability: 4606
% 
% Memory used [KB]: 26865
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (96581)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1808
% Passive clauses: 18937
% Generated clauses: 154610
% Final active clauses: 1549
% Final passive clauses: 4784
% Input formulas: 516
% Initial clauses: 875
% Discarded non-redundant clauses: 38274
% 
% Duplicate literals: 17
% Trivial inequalities: 121
% Fw subsumption resolutions: 2832
% Fw demodulations: 35288
% Bw demodulations: 7971
% Condensations: 87
% Global subsumptions: 769
% 
% Simple tautologies: 381
% Equational tautologies: 107
% Forward subsumptions: 87594
% Fw demodulations to eq. taut.: 1967
% Bw demodulations to eq. taut.: 78
% 
% Unit resulting resolution: 28556
% Factoring: 3
% Forward superposition: 38966
% Backward superposition: 29166
% Self superposition: 213
% Equality factoring: 2
% Equality resolution: 51
% 
% Split clauses: 41
% Split components: 82
% SAT solver clauses: 22515
% SAT solver unit clauses: 9277
% SAT solver binary clauses: 11191
% 
% Sat splits: 41
% Sat splitting refutations: 2725
% 
% Memory used [KB]: 240251
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f14819,plain,(
  $false),
  inference(subsumption_resolution,[],[f14818,f976])).
fof(f976,plain,(
  s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))) != s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK14))))),s('type.list.list'(sK13),sK14)))),
  inference(cnf_transformation,[],[f855])).
fof(f855,plain,(
  s('type.list.list'(sK13),'const.list.NIL_0') != s('type.list.list'(sK13),sK14) & s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))) != s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK14))))),s('type.list.list'(sK13),sK14)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f759])).
fof(f759,plain,(
  ? [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) & s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f519])).
fof(f519,plain,(
  ~! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) => s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f518])).
fof(f518,plain,(
  ~! [X0] : ! [X1] : (~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) => s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) => s('type.list.list'(X6),'const.list.FRONT_1'(s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) => s('type.list.list'(X6),'const.list.FRONT_1'(s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),s('type.list.list'(X6),X7))))),
  file('thm.rich_list.TAKE_PRE_LENGTH','thm.rich_list.TAKE_PRE_LENGTH')).
fof(f14818,plain,(
  s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))) = s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK14))))),s('type.list.list'(sK13),sK14)))),
  inference(forward_demodulation,[],[f14486,f1350])).
fof(f1350,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK14))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14)))))),
  inference(trivial_inequality_removal,[],[f1321])).
fof(f1321,plain,(
  s('type.list.list'(sK13),'const.list.NIL_0') != s('type.list.list'(sK13),'const.list.NIL_0') | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK14))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14)))))),
  inference(superposition,[],[f975,f1023])).
fof(f1023,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f782])).
fof(f782,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))))))),
  inference(ennf_transformation,[],[f591])).
fof(f591,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) => s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))))))),
  inference(flattening,[],[f590])).
fof(f590,plain,(
  ! [X0] : ! [X1] : (~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) => s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X13] : (~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X13) => s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X13))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.FRONT_1'(s('type.list.list'(X6),X13))))))),
  file('thm.rich_list.TAKE_PRE_LENGTH','thm.rich_list.LENGTH_FRONT')).
fof(f975,plain,(
  s('type.list.list'(sK13),'const.list.NIL_0') != s('type.list.list'(sK13),sK14)),
  inference(cnf_transformation,[],[f855])).
fof(f14486,plain,(
  s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))) = s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))))),s('type.list.list'(sK13),sK14)))),
  inference(superposition,[],[f998,f1353])).
fof(f1353,plain,(
  s('type.list.list'(sK13),sK14) = s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.SNOC_2'(s(sK13,'const.list.LAST_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.NIL_0')))))),
  inference(forward_demodulation,[],[f1346,f1303])).
fof(f1303,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f749])).
fof(f749,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f748])).
fof(f748,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f238])).
fof(f238,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.TAKE_PRE_LENGTH','thm.list.SNOC|split|0')).
fof(f1346,plain,(
  s('type.list.list'(sK13),sK14) = s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,'const.list.LAST_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.NIL_0')))))),
  inference(trivial_inequality_removal,[],[f1329])).
fof(f1329,plain,(
  s('type.list.list'(sK13),'const.list.NIL_0') != s('type.list.list'(sK13),'const.list.NIL_0') | s('type.list.list'(sK13),sK14) = s('type.list.list'(sK13),'const.list.APPEND_2'(s('type.list.list'(sK13),'const.list.FRONT_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,'const.list.LAST_1'(s('type.list.list'(sK13),sK14))),s('type.list.list'(sK13),'const.list.NIL_0')))))),
  inference(superposition,[],[f975,f1074])).
fof(f1074,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.LAST_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f800])).
fof(f800,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.LAST_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(ennf_transformation,[],[f661])).
fof(f661,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.LAST_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(flattening,[],[f660])).
fof(f660,plain,(
  ! [X0] : ! [X1] : (~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.FRONT_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.LAST_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X6] : ! [X13] : (~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X13) => s('type.list.list'(X6),X13) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.FRONT_1'(s('type.list.list'(X6),X13))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,'const.list.LAST_1'(s('type.list.list'(X6),X13))),s('type.list.list'(X6),'const.list.NIL_0'))))))),
  file('thm.rich_list.TAKE_PRE_LENGTH','thm.list.APPEND_FRONT_LAST')).
fof(f998,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f559])).
fof(f559,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f558])).
fof(f558,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X6] : ! [X36,X37] : s('type.list.list'(X6),X36) = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X36))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X36),s('type.list.list'(X6),X37)))))),
  file('thm.rich_list.TAKE_PRE_LENGTH','thm.rich_list.TAKE_LENGTH_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 410
% Passive clauses: 5318
% Generated clauses: 13550
% Final active clauses: 381
% Final passive clauses: 2944
% Input formulas: 516
% Initial clauses: 336
% 
% Selected by SInE selection: 138
% SInE iterations: 1
% 
% Duplicate literals: 240
% Trivial inequalities: 249
% Fw subsumption resolutions: 551
% Fw demodulations: 1728
% 
% Simple tautologies: 383
% Equational tautologies: 4
% Forward subsumptions: 4002
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 3952
% Forward superposition: 4877
% Backward superposition: 1615
% Equality resolution: 4
% 
% Split clauses: 645
% Split components: 1316
% SAT solver clauses: 665
% SAT solver unit clauses: 12
% SAT solver binary clauses: 201
% 
% Sat splits: 645
% Sat splitting refutations: 19
% 
% Memory used [KB]: 8315
% Time elapsed: 0.282 s
% ------------------------------
% ------------------------------
% Success in time 12.04 s
