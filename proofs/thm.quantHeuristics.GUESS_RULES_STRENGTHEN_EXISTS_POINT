Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f1639,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1633,f121,f185,f123,f189,f538,f186,f539,f194])).
fof(f194,plain,(
  $false | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f189,f186])).
fof(f539,plain,(
  ( ! [X35] : (~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X35)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X35)))) ) | $spl20),
  inference(cnf_transformation,[],[f539_D])).
fof(f539_D,plain,(
  ( ! [X35] : (~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X35)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X35)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f186,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f538,plain,(
  ( ! [X35,X36] : (p(s(bool,X36)) | ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X35)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X35)))) )),
  inference(subsumption_resolution,[],[f365,f125])).
fof(f125,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT','thm.bool.EQ_CLAUSES|split|1')).
fof(f365,plain,(
  ( ! [X35,X36] : (p(s(bool,X36)) | ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X35)))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X35)))) )),
  inference(superposition,[],[f118,f206])).
fof(f206,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f124,f124])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT',aHL_BOOL_CASES)).
fof(f118,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X5)))) | ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X5))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X5] : (~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X5)))) | p(s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5))))) & (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1,X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT','thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT')).
fof(f189,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f123,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT',aHL_FALSITY)).
fof(f185,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f185_D])).
fof(f185_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f121,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT',aHL_TRUTH)).
fof(f1633,plain,(
  $false | ($spl0 | $spl7 | $spl20)),
  inference(subsumption_resolution,[],[f1632,f189])).
fof(f1632,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl20)),
  inference(forward_demodulation,[],[f1631,f204])).
fof(f204,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))),
  inference(resolution,[],[f120,f130])).
fof(f130,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT','thm.bool.EQ_CLAUSES|split|2')).
fof(f120,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))))),
  inference(cnf_transformation,[],[f77])).
fof(f1631,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))) | ($spl0 | $spl20)),
  inference(subsumption_resolution,[],[f1621,f185])).
fof(f1621,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))) | ($spl0 | $spl20)),
  inference(superposition,[],[f154,f1135])).
fof(f1135,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X0)))))) ) | ($spl0 | $spl20)),
  inference(resolution,[],[f1131,f539])).
fof(f1131,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X0))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f1122,f185])).
fof(f1122,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X0))))))) )),
  inference(superposition,[],[f153,f203])).
fof(f203,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))),
  inference(resolution,[],[f119,f126])).
fof(f126,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f78])).
fof(f119,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3))))),
  inference(cnf_transformation,[],[f77])).
fof(f153,plain,(
  ( ! [X2,X0,X5,X3,X1] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK6(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6,X7] : ! [X21,X22] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X7,X6),X21),s(fun(X6,bool),X22)))) <=> ! [X20] : p(s(bool,happ(s(fun(X6,bool),X22),s(X6,happ(s(fun(X7,X6),X21),s(X7,X20)))))))),
  file('thm.quantHeuristics.GUESS_RULES_STRENGTHEN_EXISTS_POINT','thm.quantHeuristics.GUESS_REWRITES|split|2')).
fof(f154,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK6(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f98])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 64
% Passive clauses: 357
% Generated clauses: 1497
% Final active clauses: 56
% Final passive clauses: 234
% Input formulas: 25
% Initial clauses: 65
% 
% Duplicate literals: 93
% Trivial inequalities: 44
% Fw subsumption resolutions: 198
% Fw demodulations: 66
% Bw demodulations: 5
% 
% Simple tautologies: 86
% Equational tautologies: 16
% Forward subsumptions: 558
% 
% Binary resolution: 147
% Forward superposition: 476
% Backward superposition: 302
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 15
% 
% Split clauses: 68
% Split components: 138
% SAT solver clauses: 138
% SAT solver unit clauses: 10
% SAT solver binary clauses: 56
% SAT solver learnt clauses: 1
% 
% Sat splits: 68
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 137
% TWLsolver calls for satisfiability: 62
% 
% Memory used [KB]: 1535
% Time elapsed: 0.045 s
% ------------------------------
% ------------------------------
% Success in time 0.05 s
