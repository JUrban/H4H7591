Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f15571,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f15570,f2960,f69,f100,f627,f629,f628,f108,f112,f122,f650,f110,f2910,f2945,f2943])).
fof(f2943,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | $spl104),
  inference(cnf_transformation,[],[f2943_D])).
fof(f2943_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f2945,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK5(sK4,sK1)))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,'const.option.THE_1'(s('type.option.option'(sK1),sK4))))) | $spl107),
  inference(cnf_transformation,[],[f2945_D])).
fof(f2945_D,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK5(sK4,sK1)))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,'const.option.THE_1'(s('type.option.option'(sK1),sK4))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f2910,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK5(sK4,sK1)))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,'const.option.THE_1'(s('type.option.option'(sK1),sK4))))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4)),
  inference(superposition,[],[f66,f492])).
fof(f492,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X2,happ(s(fun(X0,X2),X3),s(X0,sK5(X1,X0)))) = s(X2,'const.option.option_CASE_3'(s('type.option.option'(X0),X1),s(X2,X4),s(fun(X0,X2),X3))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f94,f89])).
fof(f89,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : ! [X12] : (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X12) | ? [X10] : s('type.option.option'(X7),X12) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X10))))),
  file('thm.option.option_3|48|_prove_ltb','thm.option.option_nchotomy')).
fof(f94,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7] : ! [X10,X13,X8] : s(X6,happ(s(fun(X7,X6),X8),s(X7,X10))) = s(X6,'const.option.option_CASE_3'(s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X10))),s(X6,X13),s(fun(X7,X6),X8)))),
  file('thm.option.option_3|48|_prove_ltb','thm.option.option_case_def|split|1')).
fof(f66,plain,(
  s(sK0,'const.option.option_CASE_3'(s('type.option.option'(sK1),sK4),s(sK0,sK3),s(fun(sK1,sK0),sK2))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,'const.option.THE_1'(s('type.option.option'(sK1),sK4)))))),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK1),sK4)))) & s(sK0,'const.option.option_CASE_3'(s('type.option.option'(sK1),sK4),s(sK0,sK3),s(fun(sK1,sK0),sK2))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,'const.option.THE_1'(s('type.option.option'(sK1),sK4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f44])).
fof(f44,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X1),X4)))) & s(X0,happ(s(fun(X1,X0),X2),s(X1,'const.option.THE_1'(s('type.option.option'(X1),X4))))) != s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X3),s(fun(X1,X0),X2))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X1),X4)))) => s(X0,happ(s(fun(X1,X0),X2),s(X1,'const.option.THE_1'(s('type.option.option'(X1),X4))))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X3),s(fun(X1,X0),X2))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X1),X4)))) => s(X0,happ(s(fun(X1,X0),X2),s(X1,'const.option.THE_1'(s('type.option.option'(X1),X4))))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X3),s(fun(X1,X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),X10)))) => s(X6,happ(s(fun(X7,X6),X8),s(X7,'const.option.THE_1'(s('type.option.option'(X7),X10))))) = s(X6,'const.option.option_CASE_3'(s('type.option.option'(X7),X10),s(X6,X9),s(fun(X7,X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),X10)))) => s(X6,happ(s(fun(X7,X6),X8),s(X7,'const.option.THE_1'(s('type.option.option'(X7),X10))))) = s(X6,'const.option.option_CASE_3'(s('type.option.option'(X7),X10),s(X6,X9),s(fun(X7,X6),X8))))),
  file('thm.option.option_3|48|_prove_ltb','thm.option.option_3|48|_prove_ltb')).
fof(f110,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f650,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,X7)) ) | $spl12),
  inference(superposition,[],[f628,f70])).
fof(f70,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7] : s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0')))),
  file('thm.option.option_3|48|_prove_ltb','thm.option.IS_SOME_DEF|split|1')).
fof(f122,plain,(
  $false | ($spl5 | $spl8)),
  inference(subsumption_resolution,[],[f113,f100])).
fof(f113,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f110,f65])).
fof(f65,plain,(
  p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK1),sK4))))),
  inference(cnf_transformation,[],[f51])).
fof(f112,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f108,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f71])).
fof(f71,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.option_3|48|_prove_ltb',aHL_BOOL_CASES)).
fof(f628,plain,(
  ( ! [X7,X9] : (s(bool,X9) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f628_D])).
fof(f628_D,plain,(
  ( ! [X7,X9] : (s(bool,X9) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f629,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X8),'const.option.NONE_0')))) ) | $spl14),
  inference(cnf_transformation,[],[f629_D])).
fof(f629_D,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X8),'const.option.NONE_0')))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f627,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X8),'const.option.NONE_0'))) | s(bool,X9) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0')))) ) | $spl11),
  inference(subsumption_resolution,[],[f619,f457])).
fof(f457,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X1),'const.option.NONE_0'))) | s(bool,X0) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X1),'const.option.NONE_0')))) ) | $spl11),
  inference(equality_factoring,[],[f381])).
fof(f381,plain,(
  ( ! [X14,X15] : (s(bool,X15) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X14),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X15)) ) | $spl11),
  inference(subsumption_resolution,[],[f225,f112])).
fof(f225,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X15) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X14),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f102,f70])).
fof(f102,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f71,f71])).
fof(f619,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X8),'const.option.NONE_0'))) | s(bool,X9) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X7),'const.option.NONE_0')))) ) | $spl11),
  inference(superposition,[],[f457,f381])).
fof(f100,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f69,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.option.option_3|48|_prove_ltb',aHL_FALSITY)).
fof(f2960,plain,(
  $false | ($spl5 | $spl14 | $spl104)),
  inference(subsumption_resolution,[],[f2947,f629])).
fof(f2947,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | ($spl5 | $spl104)),
  inference(backward_demodulation,[],[f2943,f109])).
fof(f109,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK1),sK4))) | $spl5),
  inference(subsumption_resolution,[],[f106,f100])).
fof(f106,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK1),sK4)))),
  inference(superposition,[],[f65,f71])).
fof(f15570,plain,(
  $false | ($spl105 | $spl107)),
  inference(subsumption_resolution,[],[f15569,f2942])).
fof(f2942,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) | $spl105),
  inference(cnf_transformation,[],[f2942_D])).
fof(f2942_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK4) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f15569,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | $spl107),
  inference(trivial_inequality_removal,[],[f15568])).
fof(f15568,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK5(sK4,sK1)))) != s(sK0,happ(s(fun(sK1,sK0),sK2),s(sK1,sK5(sK4,sK1)))) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK4) | $spl107),
  inference(superposition,[],[f2945,f171])).
fof(f171,plain,(
  ( ! [X0,X1] : (s(X0,sK5(X1,X0)) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),X1))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f88,f89])).
fof(f88,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7] : ! [X10] : s(X7,X10) = s(X7,'const.option.THE_1'(s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X10)))))),
  file('thm.option.option_3|48|_prove_ltb','thm.option.THE_DEF')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 119
% Passive clauses: 1601
% Generated clauses: 15033
% Final active clauses: 105
% Final passive clauses: 1355
% Input formulas: 18
% Initial clauses: 30
% 
% Duplicate literals: 1239
% Trivial inequalities: 124
% Fw subsumption resolutions: 1481
% Fw demodulations: 2232
% Bw demodulations: 8
% 
% Simple tautologies: 240
% Equational tautologies: 28
% Forward subsumptions: 7470
% Fw demodulations to eq. taut.: 5
% 
% Binary resolution: 21
% Forward superposition: 5550
% Backward superposition: 3926
% Self superposition: 145
% Equality factoring: 70
% Equality resolution: 6
% 
% Split clauses: 428
% Split components: 862
% SAT solver clauses: 713
% SAT solver unit clauses: 15
% SAT solver binary clauses: 121
% SAT solver learnt clauses: 1
% 
% Sat splits: 428
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 712
% TWLsolver calls for satisfiability: 72
% 
% Memory used [KB]: 7547
% Time elapsed: 0.316 s
% ------------------------------
% ------------------------------
% Success in time 0.318 s
