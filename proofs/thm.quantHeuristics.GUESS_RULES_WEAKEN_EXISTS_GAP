Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (64570)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 257
% Passive clauses: 2264
% Generated clauses: 19265
% Final active clauses: 206
% Final passive clauses: 1711
% Input formulas: 25
% Initial clauses: 65
% 
% Duplicate literals: 920
% Trivial inequalities: 221
% Fw subsumption resolutions: 3010
% Fw demodulations: 3359
% Bw demodulations: 31
% 
% Simple tautologies: 348
% Equational tautologies: 21
% Forward subsumptions: 7903
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 1123
% Forward superposition: 6571
% Backward superposition: 3722
% Self superposition: 65
% Equality factoring: 36
% Equality resolution: 46
% 
% Split clauses: 622
% Split components: 1252
% SAT solver clauses: 1497
% SAT solver unit clauses: 32
% SAT solver binary clauses: 186
% 
% Sat splits: 622
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1496
% TWLsolver calls for satisfiability: 359
% 
% Memory used [KB]: 11001
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (64599)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 189
% Passive clauses: 1393
% Generated clauses: 16372
% Final active clauses: 162
% Final passive clauses: 1106
% Input formulas: 25
% Initial clauses: 65
% 
% Duplicate literals: 830
% Trivial inequalities: 110
% Fw subsumption resolutions: 1499
% Fw demodulations: 2704
% Bw demodulations: 112
% Condensations: 827
% Global subsumptions: 4
% 
% Simple tautologies: 230
% Equational tautologies: 22
% Forward subsumptions: 6800
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 938
% Forward superposition: 4914
% Backward superposition: 2812
% Self superposition: 59
% Equality factoring: 38
% Equality resolution: 33
% 
% Split clauses: 148
% Split components: 301
% SAT solver clauses: 1947
% SAT solver unit clauses: 68
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 8
% 
% Sat splits: 148
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 1931
% TWLsolver calls for satisfiability: 421
% 
% Memory used [KB]: 13560
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f3118,plain,(
  $false),
  inference(subsumption_resolution,[],[f3117,f3106])).
fof(f3106,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,sK2,sK0,sK1))))),
  inference(unit_resulting_resolution,[],[f3060,f125])).
fof(f125,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP','thm.bool.EQ_CLAUSES|split|1')).
fof(f3060,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,sK2,sK0,sK1)))))),
  inference(unit_resulting_resolution,[],[f828,f2171])).
fof(f2171,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0)))) | s(sK1,X0) = s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,sK7(X0,sK3,sK2,sK0,sK1))))) )),
  inference(subsumption_resolution,[],[f2158,f121])).
fof(f121,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP',aHL_TRUTH)).
fof(f2158,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0)))) | s(sK1,X0) = s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,sK7(X0,sK3,sK2,sK0,sK1))))) )),
  inference(superposition,[],[f155,f203])).
fof(f203,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))),
  inference(unit_resulting_resolution,[],[f119,f126])).
fof(f126,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f78])).
fof(f119,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3))))),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X5] : (~p(s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X5)))) | p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) & p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) | p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) & (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) & ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1,X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (! [X5] : (p(s(bool,happ(s(fun(X1,bool),X4),s(X1,X5)))) => p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (! [X11] : (p(s(bool,happ(s(fun(X7,bool),X10),s(X7,X11)))) => p(s(bool,happ(s(fun(X7,bool),X9),s(X7,X11))))) => (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X9)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X7),X8),s(fun(X7,bool),X10))))))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP','thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP')).
fof(f155,plain,(
  ( ! [X6,X2,X0,X3,X1] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK7(X6,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK7(X6,X3,X2,X1,X0)))))) & ((p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK8(X3,X2,X1,X0))))) & ! [X5] : s(X0,sK8(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8])],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X7))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X7] : ! [X21,X22] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X7,X6),X21),s(fun(X6,bool),X22)))) <=> ! [X19] : (p(s(bool,happ(s(fun(X6,bool),X22),s(X6,X19)))) => ? [X20] : s(X6,X19) = s(X6,happ(s(fun(X7,X6),X21),s(X7,X20)))))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP','thm.quantHeuristics.GUESS_REWRITES|split|4')).
fof(f828,plain,(
  ( ! [X3] : (s(sK1,sK8(sK4,sK2,sK0,sK1)) != s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X3)))) )),
  inference(subsumption_resolution,[],[f818,f123])).
fof(f123,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP',aHL_FALSITY)).
fof(f818,plain,(
  ( ! [X3] : (p(s(bool,'F_0')) | s(sK1,sK8(sK4,sK2,sK0,sK1)) != s(sK1,happ(s(fun(sK0,sK1),sK2),s(sK0,X3)))) )),
  inference(superposition,[],[f157,f218])).
fof(f218,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))),
  inference(unit_resulting_resolution,[],[f120,f130])).
fof(f130,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP','thm.bool.EQ_CLAUSES|split|2')).
fof(f120,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))))),
  inference(cnf_transformation,[],[f77])).
fof(f157,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | s(X0,sK8(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f3117,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,sK2,sK0,sK1))))),
  inference(subsumption_resolution,[],[f3112,f1967])).
fof(f1967,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X0,sK1),X1),s(fun(sK1,bool),sK4)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,X1,X0,sK1))))) )),
  inference(condensation,[],[f1966])).
fof(f1966,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X11,sK1),X10),s(fun(sK1,bool),sK4)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,X10,X11,sK1))))) )),
  inference(subsumption_resolution,[],[f1877,f125])).
fof(f1877,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X11,sK1),X10),s(fun(sK1,bool),sK4)))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,X10,X11,sK1))))) )),
  inference(superposition,[],[f156,f589])).
fof(f589,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0)))) )),
  inference(subsumption_resolution,[],[f588,f123])).
fof(f588,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,X1) = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0)))) )),
  inference(forward_demodulation,[],[f582,f218])).
fof(f582,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))) | s(bool,X1) = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X0)))) )),
  inference(superposition,[],[f496,f492])).
fof(f492,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f304,f199])).
fof(f199,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f123,f125])).
fof(f304,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X14) = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f232,f218])).
fof(f232,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f124,f124])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_WEAKEN_EXISTS_GAP',aHL_BOOL_CASES)).
fof(f496,plain,(
  ( ! [X21,X20] : (p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X20)))) | s(bool,X21) = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X20))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f364,f121])).
fof(f364,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X20)))) | s(bool,X21) = s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X20))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f118,f232])).
fof(f118,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK1,bool),sK4),s(sK1,X5)))) | p(s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,X5))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f156,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK8(X3,X2,X1,X0))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f3112,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(sK0,sK1),sK2),s(fun(sK1,bool),sK4)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),sK3),s(sK1,sK8(sK4,sK2,sK0,sK1))))),
  inference(superposition,[],[f3060,f492])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 120
% Passive clauses: 376
% Generated clauses: 3082
% Final active clauses: 74
% Final passive clauses: 138
% Input formulas: 25
% Initial clauses: 65
% 
% Duplicate literals: 195
% Trivial inequalities: 46
% Fw subsumption resolutions: 264
% Fw demodulations: 160
% Bw demodulations: 84
% Condensations: 248
% 
% Simple tautologies: 53
% Equational tautologies: 37
% Forward subsumptions: 1680
% Bw demodulations to eq. taut.: 41
% 
% Unit resulting resolution: 134
% Forward superposition: 1072
% Backward superposition: 629
% Self superposition: 34
% Equality factoring: 34
% Equality resolution: 1
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 416
% SAT solver unit clauses: 27
% SAT solver binary clauses: 104
% 
% Sat splits: 14
% Sat splitting refutations: 10
% 
% Memory used [KB]: 2814
% Time elapsed: 0.124 s
% ------------------------------
% ------------------------------
% Success in time 1.444 s
