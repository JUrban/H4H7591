Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f12995,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f12994,f87,f138,f137,f135,f3048,f82,f527,f555,f553,f595,f151,f90,f149,f84,f142,f136,f81,f144,f7968,f3180,f3177,f7918,f8064,f3089,f554,f198,f200,f150,f132,f147,f85,f140,f134,f8264,f7997])).
fof(f7997,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl138),
  inference(cnf_transformation,[],[f7997_D])).
fof(f7997_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f8264,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl0),
  inference(resolution,[],[f7967,f94])).
fof(f94,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.int_arith.in_subtractive_range','thm.bool.EQ_CLAUSES|split|1')).
fof(f7967,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))) | $spl0),
  inference(forward_demodulation,[],[f7966,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X14,X8] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X14))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int',X8)))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_ADD_SYM')).
fof(f7966,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1)))))) | $spl0),
  inference(forward_demodulation,[],[f134,f131])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X8,X14,X15] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X15),s('type.integer.int',X14))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X14))),s('type.integer.int',X15)))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_LE_SUB_RADD')).
fof(f134,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) | $spl0),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f140,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f85,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))))) | (s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f63])).
fof(f63,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) | ? [X4] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X4))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int',X1)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(rectify,[],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) | ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) | ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) <~> ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X0))))) <=> ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X6))))) <=> ? [X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X9))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X6))))) <=> ? [X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X9))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))),
  file('thm.int_arith.in_subtractive_range','thm.int_arith.in_subtractive_range')).
fof(f147,plain,(
  p(s(bool,'T_0')) | $spl14),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f132,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f116])).
fof(f116,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X13] : ! [X8] : (s(X13,X8) = s(X13,X8) <=> p(s(bool,'T_0')))),
  file('thm.int_arith.in_subtractive_range','thm.bool.REFL_CLAUSE')).
fof(f150,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl18),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f200,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl21),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f198,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X3))) )),
  inference(subsumption_resolution,[],[f188,f93])).
fof(f93,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f65])).
fof(f188,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f93,f92])).
fof(f92,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.int_arith.in_subtractive_range',aHL_BOOL_CASES)).
fof(f554,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | $spl26),
  inference(cnf_transformation,[],[f554_D])).
fof(f554_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3089,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | $spl2),
  inference(resolution,[],[f136,f94])).
fof(f8064,plain,(
  $false | ($spl4 | $spl6 | $spl10 | $spl14 | $spl26)),
  inference(subsumption_resolution,[],[f8063,f147])).
fof(f8063,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6 | $spl10 | $spl14 | $spl26)),
  inference(forward_demodulation,[],[f8062,f554])).
fof(f8062,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | ($spl4 | $spl6 | $spl10 | $spl14)),
  inference(forward_demodulation,[],[f8061,f1977])).
fof(f1977,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) )),
  inference(superposition,[],[f130,f91])).
fof(f91,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_ADD_LID')).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int',X1)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X8,X14,X15] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X14),s('type.integer.int',X15))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X15))),s('type.integer.int',X14)))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_LT_SUB_LADD')).
fof(f8061,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl6 | $spl10 | $spl14)),
  inference(subsumption_resolution,[],[f8060,f147])).
fof(f8060,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f8059,f154])).
fof(f154,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | $spl6),
  inference(resolution,[],[f94,f140])).
fof(f8059,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl10)),
  inference(forward_demodulation,[],[f8058,f2488])).
fof(f2488,plain,(
  ( ! [X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',X1))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',sK2)))))) ) | $spl10),
  inference(superposition,[],[f131,f325])).
fof(f325,plain,(
  s('type.integer.int',sK3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | $spl10),
  inference(superposition,[],[f119,f144])).
fof(f119,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X8,X14] : s('type.integer.int',X14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X14)))))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_SUB_SUB2')).
fof(f8058,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl10)),
  inference(forward_demodulation,[],[f8057,f131])).
fof(f8057,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl10)),
  inference(subsumption_resolution,[],[f8018,f144])).
fof(f8018,plain,(
  s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))))) | ($spl4 | $spl10)),
  inference(superposition,[],[f138,f325])).
fof(f7918,plain,(
  $false | ($spl6 | $spl10 | $spl21 | $spl42)),
  inference(subsumption_resolution,[],[f7917,f200])).
fof(f7917,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl10 | $spl42)),
  inference(forward_demodulation,[],[f7849,f154])).
fof(f7849,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | ($spl10 | $spl42)),
  inference(superposition,[],[f2488,f3177])).
fof(f3177,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl42),
  inference(cnf_transformation,[],[f3177_D])).
fof(f3177_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f3180,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | ($spl1 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f3179,f147])).
fof(f3179,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | ($spl1 | $spl6 | $spl14)),
  inference(forward_demodulation,[],[f3171,f154])).
fof(f3171,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | ($spl1 | $spl6 | $spl14)),
  inference(superposition,[],[f3084,f311])).
fof(f311,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl6 | $spl14)),
  inference(subsumption_resolution,[],[f307,f147])).
fof(f307,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | s(bool,'F_0') = s(bool,X4)) ) | $spl6),
  inference(superposition,[],[f226,f154])).
fof(f226,plain,(
  ( ! [X6,X7] : (~p(s(bool,X6)) | s(bool,X6) = s(bool,X7) | s(bool,'F_0') = s(bool,X7)) )),
  inference(resolution,[],[f126,f98])).
fof(f98,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.int_arith.in_subtractive_range','thm.bool.EQ_CLAUSES|split|3')).
fof(f126,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.int_arith.in_subtractive_range','thm.bool.IMP_ANTISYM_AX')).
fof(f3084,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))) | $spl1),
  inference(forward_demodulation,[],[f3083,f118])).
fof(f3083,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1)))))) | $spl1),
  inference(forward_demodulation,[],[f135,f131])).
fof(f7968,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f7967,f2488])).
fof(f144,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | $spl10),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f81,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f64])).
fof(f136,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | $spl2),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f142,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | $spl8),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f84,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))))),
  inference(cnf_transformation,[],[f64])).
fof(f149,plain,(
  ~p(s(bool,'F_0')) | $spl17),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f90,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.int_arith.in_subtractive_range',aHL_FALSITY)).
fof(f151,plain,(
  $false | ($spl17 | $spl18)),
  inference(resolution,[],[f150,f149])).
fof(f595,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl24),
  inference(subsumption_resolution,[],[f566,f553])).
fof(f566,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | p(s(bool,X1))) ) | $spl24),
  inference(superposition,[],[f93,f553])).
fof(f553,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) ) | $spl24),
  inference(cnf_transformation,[],[f553_D])).
fof(f553_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f555,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | $spl27),
  inference(cnf_transformation,[],[f555_D])).
fof(f555_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f527,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) ) | ($spl3 | $spl17)),
  inference(equality_factoring,[],[f273])).
fof(f273,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl3 | $spl17)),
  inference(subsumption_resolution,[],[f269,f149])).
fof(f269,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | s(bool,'T_0') = s(bool,X5)) ) | $spl3),
  inference(superposition,[],[f206,f157])).
fof(f157,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | $spl3),
  inference(resolution,[],[f98,f137])).
fof(f206,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(resolution,[],[f123,f94])).
fof(f123,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f59])).
fof(f82,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))))),
  inference(cnf_transformation,[],[f64])).
fof(f3048,plain,(
  $false | ($spl8 | $spl10 | $spl27)),
  inference(subsumption_resolution,[],[f3047,f555])).
fof(f3047,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) | ($spl8 | $spl10)),
  inference(forward_demodulation,[],[f3003,f159])).
fof(f159,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | $spl8),
  inference(resolution,[],[f142,f94])).
fof(f3003,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | $spl10),
  inference(superposition,[],[f1768,f122])).
fof(f122,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X8,X14] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X14)))))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_LT_ADDR')).
fof(f1768,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',sK3)))))) ) | $spl10),
  inference(superposition,[],[f129,f144])).
fof(f129,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X8,X14,X15] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X15),s('type.integer.int',X14))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X14))),s('type.integer.int',X15)))),
  file('thm.int_arith.in_subtractive_range','thm.integer.INT_LT_SUB_RADD')).
fof(f135,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f137,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | $spl3),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f138,plain,(
  ( ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl4),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  ( ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f87,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int',sK2))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f12994,plain,(
  $false | ($spl4 | $spl14 | $spl26 | $spl138)),
  inference(subsumption_resolution,[],[f12993,f147])).
fof(f12993,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl14 | $spl26 | $spl138)),
  inference(forward_demodulation,[],[f12992,f554])).
fof(f12992,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | ($spl4 | $spl14 | $spl138)),
  inference(subsumption_resolution,[],[f12991,f147])).
fof(f12991,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f12928,f7997])).
fof(f12928,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK2),s('type.integer.int',sK0)))) | $spl4),
  inference(equality_resolution,[],[f8141])).
fof(f8141,plain,(
  ( ! [X0] : (s('type.integer.int',sK2) != s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK0))))) ) | $spl4),
  inference(forward_demodulation,[],[f8140,f1977])).
fof(f8140,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',X0)))))) | s('type.integer.int',sK2) != s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X0))))))) ) | $spl4),
  inference(forward_demodulation,[],[f8040,f131])).
fof(f8040,plain,(
  ( ! [X0] : (s('type.integer.int',sK2) != s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X0))),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',X0))))))) ) | $spl4),
  inference(superposition,[],[f138,f119])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 152
% Passive clauses: 2038
% Generated clauses: 12822
% Final active clauses: 113
% Final passive clauses: 1447
% Input formulas: 27
% Initial clauses: 51
% 
% Duplicate literals: 581
% Trivial inequalities: 118
% Fw subsumption resolutions: 970
% Fw demodulations: 2312
% Bw demodulations: 23
% 
% Simple tautologies: 215
% Equational tautologies: 44
% Forward subsumptions: 6013
% Fw demodulations to eq. taut.: 11
% 
% Binary resolution: 134
% Factoring: 1
% Forward superposition: 4575
% Backward superposition: 3743
% Self superposition: 108
% Equality factoring: 80
% Equality resolution: 20
% 
% Split clauses: 388
% Split components: 784
% SAT solver clauses: 648
% SAT solver unit clauses: 9
% SAT solver binary clauses: 124
% SAT solver learnt clauses: 4
% SAT solver learnt literals: 4
% 
% Sat splits: 388
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 642
% TWLsolver calls for satisfiability: 100
% 
% Memory used [KB]: 6268
% Time elapsed: 0.282 s
% ------------------------------
% ------------------------------
% Success in time 0.284 s
