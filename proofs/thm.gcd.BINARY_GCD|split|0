Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.gcd
% (58537)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 306
% Passive clauses: 2978
% Generated clauses: 29879
% Final active clauses: 285
% Final passive clauses: 2260
% Input formulas: 22
% Initial clauses: 43
% 
% Duplicate literals: 1114
% Trivial inequalities: 569
% Fw subsumption resolutions: 4295
% Fw demodulations: 5843
% Bw demodulations: 16
% 
% Simple tautologies: 590
% Equational tautologies: 28
% Forward subsumptions: 13420
% 
% Binary resolution: 836
% Forward superposition: 11829
% Backward superposition: 4947
% Self superposition: 97
% Equality factoring: 50
% Equality resolution: 111
% 
% Split clauses: 375
% Split components: 757
% SAT solver clauses: 1449
% SAT solver unit clauses: 25
% SAT solver binary clauses: 149
% 
% Sat splits: 375
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1448
% TWLsolver calls for satisfiability: 324
% 
% Memory used [KB]: 13176
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.gcd
% (58570)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 215
% Passive clauses: 1360
% Generated clauses: 17622
% Final active clauses: 196
% Final passive clauses: 1134
% Input formulas: 22
% Initial clauses: 43
% 
% Duplicate literals: 869
% Trivial inequalities: 241
% Fw subsumption resolutions: 1073
% Fw demodulations: 2295
% Bw demodulations: 28
% Condensations: 800
% 
% Simple tautologies: 304
% Equational tautologies: 51
% Forward subsumptions: 7984
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 208
% Forward superposition: 6072
% Backward superposition: 5709
% Self superposition: 186
% Equality factoring: 138
% Equality resolution: 48
% 
% Split clauses: 110
% Split components: 225
% SAT solver clauses: 1971
% SAT solver unit clauses: 43
% SAT solver binary clauses: 28
% 
% Sat splits: 110
% 
% TWLsolver clauses: 1971
% TWLsolver calls for satisfiability: 298
% 
% Memory used [KB]: 15351
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.gcd
% (58592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 552
% Passive clauses: 8990
% Generated clauses: 187078
% Final active clauses: 119
% Final passive clauses: 756
% Input formulas: 22
% Initial clauses: 43
% Discarded non-redundant clauses: 882
% 
% Duplicate literals: 5991
% Trivial inequalities: 1150
% Fw subsumption resolutions: 12201
% Fw demodulations: 43481
% Bw demodulations: 6064
% Condensations: 9236
% Global subsumptions: 1360
% 
% Simple tautologies: 986
% Equational tautologies: 4019
% Forward subsumptions: 96675
% Fw demodulations to eq. taut.: 332
% Bw demodulations to eq. taut.: 635
% 
% Unit resulting resolution: 24675
% Forward superposition: 42157
% Backward superposition: 20146
% Self superposition: 399
% Equality factoring: 240
% Equality resolution: 93
% 
% Split clauses: 478
% Split components: 973
% SAT solver clauses: 13255
% SAT solver unit clauses: 913
% SAT solver binary clauses: 5197
% 
% Sat splits: 478
% Sat splitting refutations: 1946
% 
% Memory used [KB]: 99145
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f5667,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f113,f114,f115,f116,f117,f119,f134,f120,f125,f132,f141,f142,f143,f144,f145,f147,f161,f148,f153,f160,f176,f290,f292,f296,f308,f309,f313,f344,f345,f434,f435,f439,f451,f452,f456,f135,f510,f511,f506,f505,f552,f548,f547,f291,f553,f558,f560,f561,f563,f565,f570,f594,f605,f632,f630,f634,f637,f635,f638,f641,f640,f645,f648,f646,f650,f653,f651,f655,f658,f657,f659,f661,f639,f662,f636,f664,f665,f667,f668,f670,f672,f677,f689,f691,f692,f693,f696,f701,f709,f711,f713,f714,f716,f718,f723,f685,f733,f735,f736,f738,f740,f745,f757,f759,f760,f761,f764,f769,f777,f783,f810,f808,f812,f815,f813,f816,f819,f818,f823,f824,f828,f831,f829,f833,f836,f835,f837,f839,f817,f840,f814,f842,f843,f845,f846,f848,f850,f855,f753,f865,f867,f868,f870,f872,f877,f889,f891,f892,f893,f896,f901,f909,f911,f913,f914,f916,f918,f923,f885,f933,f935,f936,f938,f940,f945,f957,f959,f960,f961,f964,f969,f977,f979,f981,f982,f984,f986,f991,f953,f1002,f1004,f1005,f1007,f1009,f1014,f1026,f1028,f1029,f1030,f1033,f1038,f1046,f1049,f1051,f1052,f1054,f1056,f1061,f1022,f1072,f1074,f1075,f1077,f1079,f1084,f1096,f1098,f1099,f1100,f1103,f1108,f1116,f1119,f1121,f1122,f1124,f1126,f1131,f1092,f1255,f1257,f1258,f1260,f1262,f1267,f1392,f1394,f1395,f1396,f1399,f1404,f1414,f1416,f1417,f1419,f1421,f1426,f1551,f1553,f1554,f1555,f1558,f1563,f1412,f1686,f1688,f1689,f1691,f1693,f1698,f1706,f1710,f1712,f1713,f1714,f1717,f1722,f1732,f1734,f1735,f1737,f1739,f1744,f1752,f1756,f1758,f1759,f1760,f1763,f1768,f1730,f1908,f826,f1910,f2044,f2046,f2047,f2048,f2051,f2056,f2085,f2219,f2221,f2222,f2223,f2226,f2231,f2264,f2268,f2260,f2259,f2269,f2718,f2741,f2738,f2737,f2736,f2791,f2788,f2787,f2786,f2865,f2867,f2868,f2870,f2872,f2877,f2914,f3047,f3164,f3163,f3162,f3166,f3167,f512,f3169,f3200,f3201,f3202,f3203,f3204,f3205,f3206,f3353,f3385,f3383,f3426,f3430,f3432,f3433,f3434,f3437,f3442,f3451,f3621,f3625,f3623,f3637,f3639,f3640,f3642,f3644,f3649,f3662,f3664,f3665,f3667,f3669,f3674,f1434,f3687,f3689,f3690,f3692,f3694,f3699,f1275,f3855,f3857,f3858,f3859,f3862,f3867,f3876,f3879,f3881,f3882,f3884,f3886,f3891,f3659,f4306,f4307,f4308,f4309,f4310,f4311,f4312,f4313,f4314,f4315,f4384,f4386,f4387,f4389,f4391,f4396,f4433,f4477,f4481,f4479,f4493,f4495,f4496,f4498,f4500,f4505,f4519,f4521,f4522,f4523,f4526,f4531,f4541,f4544,f4546,f4547,f4549,f4551,f4556,f4515,f4710,f4715,f4777,f4779,f4780,f4782,f4784,f4789,f4821,f4870,f4874,f4872,f4884,f4886,f4887,f4889,f4891,f4896,f4910,f4912,f4913,f4914,f4917,f4922,f4932,f4935,f4937,f4938,f4940,f4942,f4947,f4906,f5102,f5104,f5105,f5107,f5109,f5114,f5145,f5178,f5182,f5185,f5189,f5187,f5193,f5195,f5196,f5198,f5200,f5205,f5220,f5222,f5223,f5224,f5227,f5232,f5243,f5245,f5247,f5248,f5250,f5252,f5257,f5215,f5402,f5404,f5405,f5407,f5409,f5414,f5446,f5479,f5481,f5180,f5499,f5501,f5502,f133,f5503,f137,f5506,f136,f5511,f5554,f5558,f5553,f5552,f138,f5559,f5641,f5644,f5643,f5647])).
fof(f5647,plain,(
  $false | ($spl130 | $spl132)),
  inference(trivial_inequality_removal,[],[f5646])).
fof(f5646,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | ($spl130 | $spl132)),
  inference(forward_demodulation,[],[f5645,f779])).
fof(f779,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f140,f80])).
fof(f80,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.arithmetic.MULT_SYM')).
fof(f140,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1))))),
  inference(resolution,[],[f69,f96])).
fof(f96,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(X0))))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f64])).
fof(f64,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f63])).
fof(f63,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) & (! [X1] : s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <=> ? [X1] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) <=> ? [X6] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.arithmetic.EVEN_EXISTS')).
fof(f69,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) & s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f46])).
fof(f46,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) & s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) & s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) => s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7))))) => s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7))))) => s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.gcd.BINARY_GCD|split|0')).
fof(f5645,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl130 | $spl132)),
  inference(forward_demodulation,[],[f5607,f80])).
fof(f5607,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))) | ($spl130 | $spl132)),
  inference(superposition,[],[f4840,f609])).
fof(f609,plain,(
  ( ! [X3] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f79,f112])).
fof(f112,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0))))),
  inference(resolution,[],[f68,f96])).
fof(f68,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f54])).
fof(f79,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X7,X21] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X6))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X7)))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.gcd.GCD_COMMON_FACTOR')).
fof(f4840,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',sK2(sK1)))))) | ($spl130 | $spl132)),
  inference(backward_demodulation,[],[f4061,f4450])).
fof(f4450,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl132),
  inference(backward_demodulation,[],[f3385,f70])).
fof(f70,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f4061,plain,(
  s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl130),
  inference(subsumption_resolution,[],[f4060,f111])).
fof(f111,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f84])).
fof(f84,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9] : ! [X10] : (s(X9,X10) = s(X9,X10) <=> p(s(bool,'T_0')))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.REFL_CLAUSE')).
fof(f4060,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl130),
  inference(forward_demodulation,[],[f4031,f3440])).
fof(f3440,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl130),
  inference(resolution,[],[f3382,f91])).
fof(f91,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.EQ_CLAUSES|split|0')).
fof(f3382,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl130),
  inference(cnf_transformation,[],[f3382_D])).
fof(f3382_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f4031,plain,(
  s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(superposition,[],[f95,f779])).
fof(f95,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => s('type.num.num',X1) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => s('type.num.num',X8) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num',X7))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.arithmetic.MULT_DIV')).
fof(f5643,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK0))))) | $spl187),
  inference(cnf_transformation,[],[f5643_D])).
fof(f5643_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK0))))) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f5644,plain,(
  ( ! [X2] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))))) ) | $spl188),
  inference(cnf_transformation,[],[f5644_D])).
fof(f5644_D,plain,(
  ( ! [X2] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f5641,plain,(
  ( ! [X2] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK0)))))) )),
  inference(forward_demodulation,[],[f5606,f609])).
fof(f5606,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X2))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK0)))))) )),
  inference(superposition,[],[f609,f98])).
fof(f98,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) => s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X7)))) => s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X7),s('type.num.num',X6))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.gcd.gcd_49_prove_ltb')).
fof(f5559,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X28))) | s('type.num.num',X28) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X29)))) ) | $spl184),
  inference(cnf_transformation,[],[f5559_D])).
fof(f5559_D,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X28))) | s('type.num.num',X28) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X29)))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f138,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) | $spl12),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5552,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34))) | s('type.num.num',X34) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X35)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f5534])).
fof(f5534,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X33)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34))) | s('type.num.num',X34) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X35))) | p(s(bool,X33))) ) | $spl6),
  inference(superposition,[],[f575,f87])).
fof(f87,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.EQ_CLAUSES|split|2')).
fof(f575,plain,(
  ( ! [X61,X59,X60] : (p(s(bool,X59)) | s(bool,X59) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60))) | s('type.num.num',X60) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X61)))) ) | $spl6),
  inference(resolution,[],[f135,f97])).
fof(f97,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f5553,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31))) | s('type.num.num',X31) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X32)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f5533])).
fof(f5533,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31))) | s('type.num.num',X31) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X32))) | p(s(bool,X30))) ) | $spl6),
  inference(superposition,[],[f575,f89])).
fof(f89,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.EQ_CLAUSES|split|3')).
fof(f5558,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X28))) | s('type.num.num',X28) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X29)))) ) | $spl6),
  inference(subsumption_resolution,[],[f5532,f90])).
fof(f90,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f5532,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X28))) | s('type.num.num',X28) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,X27)) ) | $spl6),
  inference(superposition,[],[f575,f94])).
fof(f94,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.gcd.BINARY_GCD|split|0',aHL_BOOL_CASES)).
fof(f5554,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,X0) != s(bool,X4) | p(s(bool,X4)) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) ) | $spl182),
  inference(cnf_transformation,[],[f5554_D])).
fof(f5554_D,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,X0) != s(bool,X4) | p(s(bool,X4)) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f5511,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,X60) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61))) | s('type.num.num',X61) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X62))) | p(s(bool,X63)) | p(s(bool,X64)) | s(bool,X60) != s(bool,X64)) ) | $spl6),
  inference(resolution,[],[f575,f110])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f75])).
fof(f75,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10,X16,X11,X17] : ((s(bool,X10) = s(bool,X16) & (p(s(bool,X16)) => s(bool,X11) = s(bool,X17))) => ((p(s(bool,X10)) => p(s(bool,X11))) <=> (p(s(bool,X16)) => p(s(bool,X17)))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.IMP_CONG')).
fof(f136,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) != s(bool,X8)) ) | $spl8),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) != s(bool,X8)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f5506,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(bool,X42) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43))) | s('type.num.num',X43) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X42) != s(bool,X45) | s(bool,X46) != s(bool,X47)) ) | $spl6),
  inference(resolution,[],[f575,f78])).
fof(f78,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f137,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) | $spl10),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f5503,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25))) | s('type.num.num',X25) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X26))) | p(s(bool,X27)) | ~p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X24) != s(bool,X29)) ) | $spl6),
  inference(resolution,[],[f575,f77])).
fof(f77,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f133,plain,(
  ( ! [X2,X0] : (p(s(bool,X0)) | s(bool,X0) != s(bool,X2)) ) | $spl2),
  inference(cnf_transformation,[],[f133_D])).
fof(f133_D,plain,(
  ( ! [X2,X0] : (p(s(bool,X0)) | s(bool,X0) != s(bool,X2)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f5502,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s(bool,X18) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20))) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X18) != s(bool,X22)) ) | $spl6),
  inference(resolution,[],[f575,f76])).
fof(f76,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f5501,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(bool,X12) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X14))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X12) != s(bool,X15) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f575,f74])).
fof(f74,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f5499,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))) | p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X0) != s(bool,X4)) ) | $spl6),
  inference(resolution,[],[f575,f72])).
fof(f72,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f5180,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl167),
  inference(cnf_transformation,[],[f5180_D])).
fof(f5180_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f5481,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl180),
  inference(cnf_transformation,[],[f5481_D])).
fof(f5481_D,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f5479,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5478,f81])).
fof(f81,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X19,X20] : s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X19),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X20),s('type.num.num',X19)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.gcd.GCD_SYM')).
fof(f5478,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5477,f810])).
fof(f5477,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5434,f81])).
fof(f5434,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK2(sK1)))) | $spl62),
  inference(superposition,[],[f781,f810])).
fof(f781,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK1))))) )),
  inference(superposition,[],[f98,f140])).
fof(f5446,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK1)))) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) ) | $spl178),
  inference(cnf_transformation,[],[f5446_D])).
fof(f5446_D,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK1)))) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f5414,plain,(
  ( ! [X37,X38,X36] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X36),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X36),s('type.num.num',sK2(sK1)))) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X38) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X36)))) )),
  inference(resolution,[],[f781,f110])).
fof(f5409,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X28),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X28),s('type.num.num',sK2(sK1)))) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X28))) | s(bool,X29) != s(bool,X31)) )),
  inference(resolution,[],[f781,f78])).
fof(f5407,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X20),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X20),s('type.num.num',sK2(sK1)))) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X20)))) )),
  inference(resolution,[],[f781,f77])).
fof(f5405,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X12),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X12),s('type.num.num',sK2(sK1)))) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X12)))) )),
  inference(resolution,[],[f781,f76])).
fof(f5404,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X8),s('type.num.num',sK2(sK1)))) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X8))) | s(bool,X9) != s(bool,X11)) )),
  inference(resolution,[],[f781,f74])).
fof(f5402,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK1))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK1)))) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(resolution,[],[f781,f72])).
fof(f5215,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl174),
  inference(cnf_transformation,[],[f5215_D])).
fof(f5215_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f5257,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f110])).
fof(f5252,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X21) != s(bool,X23)) ) | $spl171),
  inference(resolution,[],[f5187,f78])).
fof(f5250,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f77])).
fof(f5248,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f76])).
fof(f5247,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X6) != s(bool,X8)) ) | $spl171),
  inference(resolution,[],[f5187,f74])).
fof(f5245,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f72])).
fof(f5243,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl176),
  inference(cnf_transformation,[],[f5243_D])).
fof(f5243_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f5232,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl170),
  inference(resolution,[],[f5186,f110])).
fof(f5186,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | $spl170),
  inference(cnf_transformation,[],[f5186_D])).
fof(f5186_D,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f5227,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X23) != s(bool,X24)) ) | $spl170),
  inference(resolution,[],[f5186,f78])).
fof(f5224,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl170),
  inference(resolution,[],[f5186,f77])).
fof(f5223,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl170),
  inference(resolution,[],[f5186,f76])).
fof(f5222,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X8) != s(bool,X9)) ) | $spl170),
  inference(resolution,[],[f5186,f74])).
fof(f5220,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl170),
  inference(resolution,[],[f5186,f72])).
fof(f5205,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f110])).
fof(f5200,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X21) != s(bool,X23)) ) | $spl171),
  inference(resolution,[],[f5187,f78])).
fof(f5198,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f77])).
fof(f5196,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f76])).
fof(f5195,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1)))) | s(bool,X6) != s(bool,X8)) ) | $spl171),
  inference(resolution,[],[f5187,f74])).
fof(f5193,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) ) | $spl171),
  inference(resolution,[],[f5187,f72])).
fof(f5187,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | $spl171),
  inference(cnf_transformation,[],[f5187_D])).
fof(f5187_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f5189,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK1)))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',sK2(sK1)))) | $spl172),
  inference(cnf_transformation,[],[f5189_D])).
fof(f5189_D,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK1)))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',sK2(sK1)))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5185,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK1)))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',sK2(sK1)))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | $spl130),
  inference(forward_demodulation,[],[f5184,f81])).
fof(f5184,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',sK2(sK1)))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | $spl130),
  inference(forward_demodulation,[],[f5183,f4061])).
fof(f5183,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | $spl130),
  inference(forward_demodulation,[],[f5135,f81])).
fof(f5135,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK2(sK1))))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK2(sK0)))) | $spl130),
  inference(superposition,[],[f603,f4061])).
fof(f603,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK0))))) )),
  inference(superposition,[],[f98,f112])).
fof(f5182,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl168),
  inference(cnf_transformation,[],[f5182_D])).
fof(f5182_D,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5178,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5177,f81])).
fof(f5177,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5176,f810])).
fof(f5176,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl62),
  inference(forward_demodulation,[],[f5134,f81])).
fof(f5134,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))),s('type.num.num',sK2(sK0)))) | $spl62),
  inference(superposition,[],[f603,f810])).
fof(f5145,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK0)))) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) ) | $spl164),
  inference(cnf_transformation,[],[f5145_D])).
fof(f5145_D,plain,(
  ( ! [X2,X0] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK0)))) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f5114,plain,(
  ( ! [X37,X38,X36] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X36),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X36),s('type.num.num',sK2(sK0)))) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X38) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X36)))) )),
  inference(resolution,[],[f603,f110])).
fof(f5109,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X28),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X28),s('type.num.num',sK2(sK0)))) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X28))) | s(bool,X29) != s(bool,X31)) )),
  inference(resolution,[],[f603,f78])).
fof(f5107,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X20),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X20),s('type.num.num',sK2(sK0)))) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X20)))) )),
  inference(resolution,[],[f603,f77])).
fof(f5105,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X12),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X12),s('type.num.num',sK2(sK0)))) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X12)))) )),
  inference(resolution,[],[f603,f76])).
fof(f5104,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X8),s('type.num.num',sK2(sK0)))) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X8))) | s(bool,X9) != s(bool,X11)) )),
  inference(resolution,[],[f603,f74])).
fof(f5102,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK0))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',sK2(sK0)))) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(resolution,[],[f603,f72])).
fof(f4906,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl160),
  inference(cnf_transformation,[],[f4906_D])).
fof(f4906_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f4947,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f110])).
fof(f4942,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X22) != s(bool,X24)) ) | $spl157),
  inference(resolution,[],[f4872,f78])).
fof(f4940,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f77])).
fof(f4938,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f76])).
fof(f4937,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X7) != s(bool,X9)) ) | $spl157),
  inference(resolution,[],[f4872,f74])).
fof(f4935,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f72])).
fof(f4932,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl162),
  inference(cnf_transformation,[],[f4932_D])).
fof(f4932_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f4922,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl156),
  inference(resolution,[],[f4871,f110])).
fof(f4871,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) | $spl156),
  inference(cnf_transformation,[],[f4871_D])).
fof(f4871_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f4917,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X22) != s(bool,X23)) ) | $spl156),
  inference(resolution,[],[f4871,f78])).
fof(f4914,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl156),
  inference(resolution,[],[f4871,f77])).
fof(f4913,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl156),
  inference(resolution,[],[f4871,f76])).
fof(f4912,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X7) != s(bool,X8)) ) | $spl156),
  inference(resolution,[],[f4871,f74])).
fof(f4910,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl156),
  inference(resolution,[],[f4871,f72])).
fof(f4896,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f110])).
fof(f4891,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X22) != s(bool,X24)) ) | $spl157),
  inference(resolution,[],[f4872,f78])).
fof(f4889,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f77])).
fof(f4887,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f76])).
fof(f4886,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1)))) | s(bool,X7) != s(bool,X9)) ) | $spl157),
  inference(resolution,[],[f4872,f74])).
fof(f4884,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) ) | $spl157),
  inference(resolution,[],[f4872,f72])).
fof(f4872,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) | $spl157),
  inference(cnf_transformation,[],[f4872_D])).
fof(f4872_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f4874,plain,(
  s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl158),
  inference(cnf_transformation,[],[f4874_D])).
fof(f4874_D,plain,(
  s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f4870,plain,(
  s('type.num.num',sK2(sK1)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) | $spl130),
  inference(forward_demodulation,[],[f4851,f4061])).
fof(f4851,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK1))))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl130),
  inference(superposition,[],[f96,f4061])).
fof(f4821,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.divides.prime_1'(s('type.num.num',X1))) | s(bool,X0) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) ) | $spl154),
  inference(cnf_transformation,[],[f4821_D])).
fof(f4821_D,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.divides.prime_1'(s('type.num.num',X1))) | s(bool,X0) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f4789,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X48)) | s(bool,X48) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X49))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.divides.prime_1'(s('type.num.num',X49)))) ) | $spl6),
  inference(resolution,[],[f576,f110])).
fof(f576,plain,(
  ( ! [X62,X63] : (~p(s(bool,'const.divides.prime_1'(s('type.num.num',X63)))) | p(s(bool,X62)) | s(bool,X62) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X63)))) ) | $spl6),
  inference(resolution,[],[f135,f109])).
fof(f109,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.divides.prime_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (~p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X18] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X18)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.divides.PRIME_POS')).
fof(f4784,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,X35)) | s(bool,X35) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X36))) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X38) != s(bool,'const.divides.prime_1'(s('type.num.num',X36))) | s(bool,X37) != s(bool,X39)) ) | $spl6),
  inference(resolution,[],[f576,f78])).
fof(f4782,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X28) != s(bool,'const.divides.prime_1'(s('type.num.num',X26)))) ) | $spl6),
  inference(resolution,[],[f576,f77])).
fof(f4780,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X16))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.divides.prime_1'(s('type.num.num',X16)))) ) | $spl6),
  inference(resolution,[],[f576,f76])).
fof(f4779,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,X10)) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.divides.prime_1'(s('type.num.num',X11))) | s(bool,X12) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f576,f74])).
fof(f4777,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.divides.prime_1'(s('type.num.num',X1)))) ) | $spl6),
  inference(resolution,[],[f576,f72])).
fof(f4715,plain,(
  $false | ($spl66 | $spl69)),
  inference(subsumption_resolution,[],[f4714,f106])).
fof(f106,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.gcd.BINARY_GCD|split|0',aHL_FALSITY)).
fof(f4714,plain,(
  p(s(bool,'F_0')) | ($spl66 | $spl69)),
  inference(forward_demodulation,[],[f4713,f1127])).
fof(f1127,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl69),
  inference(resolution,[],[f818,f87])).
fof(f4713,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl66),
  inference(forward_demodulation,[],[f814,f779])).
fof(f4710,plain,(
  $false | ($spl30 | $spl33)),
  inference(subsumption_resolution,[],[f4709,f106])).
fof(f4709,plain,(
  p(s(bool,'F_0')) | ($spl30 | $spl33)),
  inference(forward_demodulation,[],[f4708,f1057])).
fof(f1057,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | $spl33),
  inference(resolution,[],[f640,f87])).
fof(f4708,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl30),
  inference(forward_demodulation,[],[f636,f601])).
fof(f601,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f112,f80])).
fof(f4515,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl150),
  inference(cnf_transformation,[],[f4515_D])).
fof(f4515_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f4556,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f110])).
fof(f4551,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X22) != s(bool,X24)) ) | $spl147),
  inference(resolution,[],[f4479,f78])).
fof(f4549,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f77])).
fof(f4547,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f76])).
fof(f4546,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X7) != s(bool,X9)) ) | $spl147),
  inference(resolution,[],[f4479,f74])).
fof(f4544,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f72])).
fof(f4541,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl152),
  inference(cnf_transformation,[],[f4541_D])).
fof(f4541_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f4531,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl146),
  inference(resolution,[],[f4478,f110])).
fof(f4478,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) | $spl146),
  inference(cnf_transformation,[],[f4478_D])).
fof(f4478_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f4526,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X22) != s(bool,X23)) ) | $spl146),
  inference(resolution,[],[f4478,f78])).
fof(f4523,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl146),
  inference(resolution,[],[f4478,f77])).
fof(f4522,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl146),
  inference(resolution,[],[f4478,f76])).
fof(f4521,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X7) != s(bool,X8)) ) | $spl146),
  inference(resolution,[],[f4478,f74])).
fof(f4519,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl146),
  inference(resolution,[],[f4478,f72])).
fof(f4505,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f110])).
fof(f4500,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X22) != s(bool,X24)) ) | $spl147),
  inference(resolution,[],[f4479,f78])).
fof(f4498,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f77])).
fof(f4496,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f76])).
fof(f4495,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0)))) | s(bool,X7) != s(bool,X9)) ) | $spl147),
  inference(resolution,[],[f4479,f74])).
fof(f4493,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) ) | $spl147),
  inference(resolution,[],[f4479,f72])).
fof(f4479,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) | $spl147),
  inference(cnf_transformation,[],[f4479_D])).
fof(f4479_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f4481,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl148),
  inference(cnf_transformation,[],[f4481_D])).
fof(f4481_D,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f4477,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) | $spl132),
  inference(forward_demodulation,[],[f4461,f3385])).
fof(f4461,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2(sK0))))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl132),
  inference(superposition,[],[f96,f3385])).
fof(f4433,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X4) | ~p(s(bool,X4)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X2)) ) | $spl144),
  inference(cnf_transformation,[],[f4433_D])).
fof(f4433_D,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X4) | ~p(s(bool,X4)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X2)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f4396,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,X60) != s(bool,X61) | s(bool,X60) != s(bool,X62) | p(s(bool,X62)) | p(s(bool,X63)) | ~p(s(bool,X64)) | s(bool,X61) != s(bool,X64)) ) | $spl22),
  inference(resolution,[],[f594,f110])).
fof(f4391,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(bool,X42) != s(bool,X43) | s(bool,X42) != s(bool,X44) | p(s(bool,X44)) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X43) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | $spl22),
  inference(resolution,[],[f594,f78])).
fof(f4389,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s(bool,X30) != s(bool,X31) | s(bool,X30) != s(bool,X32) | p(s(bool,X32)) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X31) != s(bool,X34)) ) | $spl22),
  inference(resolution,[],[f594,f77])).
fof(f4387,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s(bool,X18) != s(bool,X19) | s(bool,X18) != s(bool,X20) | p(s(bool,X20)) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X19) != s(bool,X22)) ) | $spl22),
  inference(resolution,[],[f594,f76])).
fof(f4386,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(bool,X12) != s(bool,X13) | s(bool,X12) != s(bool,X14) | p(s(bool,X14)) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X13) != s(bool,X16) | s(bool,X15) != s(bool,X17)) ) | $spl22),
  inference(resolution,[],[f594,f74])).
fof(f4384,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X2) | p(s(bool,X2)) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X1) != s(bool,X4)) ) | $spl22),
  inference(resolution,[],[f594,f72])).
fof(f4315,plain,(
  $false | ($spl25 | $spl106 | $spl137)),
  inference(trivial_inequality_removal,[],[f4294])).
fof(f4294,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl106 | $spl137)),
  inference(superposition,[],[f4273,f3887])).
fof(f3887,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl137),
  inference(resolution,[],[f3623,f87])).
fof(f4273,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2)) ) | ($spl25 | $spl106)),
  inference(subsumption_resolution,[],[f4272,f88])).
fof(f88,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f4272,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2) | p(s(bool,X2))) ) | ($spl25 | $spl106)),
  inference(forward_demodulation,[],[f1412,f3695])).
fof(f3695,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | $spl25),
  inference(resolution,[],[f630,f87])).
fof(f4314,plain,(
  $false | ($spl25 | $spl33 | $spl106)),
  inference(trivial_inequality_removal,[],[f4296])).
fof(f4296,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl33 | $spl106)),
  inference(superposition,[],[f4273,f1057])).
fof(f4313,plain,(
  $false | ($spl25 | $spl69 | $spl106)),
  inference(trivial_inequality_removal,[],[f4297])).
fof(f4297,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl69 | $spl106)),
  inference(superposition,[],[f4273,f1127])).
fof(f4312,plain,(
  $false | ($spl25 | $spl106)),
  inference(trivial_inequality_removal,[],[f4299])).
fof(f4299,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl106)),
  inference(superposition,[],[f4273,f3695])).
fof(f4311,plain,(
  $false | ($spl25 | $spl51 | $spl106)),
  inference(trivial_inequality_removal,[],[f4301])).
fof(f4301,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl51 | $spl106)),
  inference(superposition,[],[f4273,f851])).
fof(f851,plain,(
  s(bool,'F_0') = s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | $spl51),
  inference(resolution,[],[f664,f87])).
fof(f4310,plain,(
  $false | ($spl25 | $spl87 | $spl106)),
  inference(trivial_inequality_removal,[],[f4302])).
fof(f4302,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl87 | $spl106)),
  inference(superposition,[],[f4273,f987])).
fof(f987,plain,(
  s(bool,'F_0') = s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | $spl87),
  inference(resolution,[],[f842,f87])).
fof(f4309,plain,(
  $false | ($spl25 | $spl106)),
  inference(trivial_inequality_removal,[],[f4303])).
fof(f4303,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl106)),
  inference(superposition,[],[f4273,f1422])).
fof(f1422,plain,(
  s(bool,'F_0') = s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0)))) | $spl25),
  inference(resolution,[],[f1254,f87])).
fof(f1254,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) | $spl25),
  inference(resolution,[],[f630,f109])).
fof(f4308,plain,(
  $false | ($spl25 | $spl45 | $spl106)),
  inference(trivial_inequality_removal,[],[f4304])).
fof(f4304,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl45 | $spl106)),
  inference(superposition,[],[f4273,f719])).
fof(f719,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl45),
  inference(resolution,[],[f657,f87])).
fof(f4307,plain,(
  $false | ($spl25 | $spl81 | $spl106)),
  inference(trivial_inequality_removal,[],[f4305])).
fof(f4305,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl25 | $spl81 | $spl106)),
  inference(superposition,[],[f4273,f919])).
fof(f919,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl81),
  inference(resolution,[],[f835,f87])).
fof(f4306,plain,(
  $false | ($spl25 | $spl106)),
  inference(equality_resolution,[],[f4273])).
fof(f3659,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl140),
  inference(cnf_transformation,[],[f3659_D])).
fof(f3659_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f3891,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f110])).
fof(f3886,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X22) != s(bool,X24)) ) | $spl137),
  inference(resolution,[],[f3623,f78])).
fof(f3884,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f77])).
fof(f3882,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f76])).
fof(f3881,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X7) != s(bool,X9)) ) | $spl137),
  inference(resolution,[],[f3623,f74])).
fof(f3879,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f72])).
fof(f3876,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl142),
  inference(cnf_transformation,[],[f3876_D])).
fof(f3876_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f3867,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl136),
  inference(resolution,[],[f3622,f110])).
fof(f3622,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl136),
  inference(cnf_transformation,[],[f3622_D])).
fof(f3622_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f3862,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X22) != s(bool,X23)) ) | $spl136),
  inference(resolution,[],[f3622,f78])).
fof(f3859,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl136),
  inference(resolution,[],[f3622,f77])).
fof(f3858,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl136),
  inference(resolution,[],[f3622,f76])).
fof(f3857,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X7) != s(bool,X8)) ) | $spl136),
  inference(resolution,[],[f3622,f74])).
fof(f3855,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl136),
  inference(resolution,[],[f3622,f72])).
fof(f1275,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl104),
  inference(cnf_transformation,[],[f1275_D])).
fof(f1275_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f3699,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f110])).
fof(f3694,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f630,f78])).
fof(f3692,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f77])).
fof(f3690,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f76])).
fof(f3689,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f630,f74])).
fof(f3687,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f72])).
fof(f1434,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl108),
  inference(cnf_transformation,[],[f1434_D])).
fof(f1434_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f3674,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f110])).
fof(f3669,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0)))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f1254,f78])).
fof(f3667,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f77])).
fof(f3665,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f76])).
fof(f3664,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0)))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f1254,f74])).
fof(f3662,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f72])).
fof(f3649,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f110])).
fof(f3644,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X22) != s(bool,X24)) ) | $spl137),
  inference(resolution,[],[f3623,f78])).
fof(f3642,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f77])).
fof(f3640,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f76])).
fof(f3639,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X7) != s(bool,X9)) ) | $spl137),
  inference(resolution,[],[f3623,f74])).
fof(f3637,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl137),
  inference(resolution,[],[f3623,f72])).
fof(f3623,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl137),
  inference(cnf_transformation,[],[f3623_D])).
fof(f3623_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f3625,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0))))))) | $spl138),
  inference(cnf_transformation,[],[f3625_D])).
fof(f3625_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0))))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f3621,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl26),
  inference(forward_demodulation,[],[f3603,f632])).
fof(f3603,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0)))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0))))))) | $spl26),
  inference(superposition,[],[f96,f632])).
fof(f3451,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl134),
  inference(cnf_transformation,[],[f3451_D])).
fof(f3451_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f3442,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl130),
  inference(resolution,[],[f3382,f110])).
fof(f3437,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X23) != s(bool,X24)) ) | $spl130),
  inference(resolution,[],[f3382,f78])).
fof(f3434,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl130),
  inference(resolution,[],[f3382,f77])).
fof(f3433,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl130),
  inference(resolution,[],[f3382,f76])).
fof(f3432,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X8) != s(bool,X9)) ) | $spl130),
  inference(resolution,[],[f3382,f74])).
fof(f3430,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl130),
  inference(resolution,[],[f3382,f72])).
fof(f3426,plain,(
  $false | ($spl128 | $spl131)),
  inference(subsumption_resolution,[],[f3425,f108])).
fof(f108,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gcd.BINARY_GCD|split|0',aHL_TRUTH)).
fof(f3425,plain,(
  ~p(s(bool,'T_0')) | ($spl128 | $spl131)),
  inference(forward_demodulation,[],[f3402,f3169])).
fof(f3402,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl131),
  inference(resolution,[],[f3383,f109])).
fof(f3383,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl131),
  inference(cnf_transformation,[],[f3383_D])).
fof(f3383_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f3385,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl132),
  inference(cnf_transformation,[],[f3385_D])).
fof(f3385_D,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f3353,plain,(
  s('type.num.num',sK2(sK0)) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(superposition,[],[f95,f601])).
fof(f3206,plain,(
  $false | ($spl20 | $spl33)),
  inference(trivial_inequality_removal,[],[f3192])).
fof(f3192,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl33)),
  inference(superposition,[],[f512,f1057])).
fof(f3205,plain,(
  $false | ($spl20 | $spl69)),
  inference(trivial_inequality_removal,[],[f3193])).
fof(f3193,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl69)),
  inference(superposition,[],[f512,f1127])).
fof(f3204,plain,(
  $false | ($spl20 | $spl51)),
  inference(trivial_inequality_removal,[],[f3196])).
fof(f3196,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl51)),
  inference(superposition,[],[f512,f851])).
fof(f3203,plain,(
  $false | ($spl20 | $spl87)),
  inference(trivial_inequality_removal,[],[f3197])).
fof(f3197,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl87)),
  inference(superposition,[],[f512,f987])).
fof(f3202,plain,(
  $false | ($spl20 | $spl45)),
  inference(trivial_inequality_removal,[],[f3198])).
fof(f3198,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl45)),
  inference(superposition,[],[f512,f719])).
fof(f3201,plain,(
  $false | ($spl20 | $spl81)),
  inference(trivial_inequality_removal,[],[f3199])).
fof(f3199,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl20 | $spl81)),
  inference(superposition,[],[f512,f919])).
fof(f3200,plain,(
  $false | $spl20),
  inference(equality_resolution,[],[f512])).
fof(f3169,plain,(
  s(bool,'T_0') = s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl128),
  inference(cnf_transformation,[],[f3169_D])).
fof(f3169_D,plain,(
  s(bool,'T_0') = s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f512,plain,(
  ( ! [X19] : (s(bool,'F_0') != s(bool,X19)) ) | $spl20),
  inference(cnf_transformation,[],[f512_D])).
fof(f512_D,plain,(
  ( ! [X19] : (s(bool,'F_0') != s(bool,X19)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3167,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3156,f86])).
fof(f86,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f3156,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl6),
  inference(superposition,[],[f577,f94])).
fof(f577,plain,(
  ( ! [X64] : (s(bool,X64) != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X64))) ) | $spl6),
  inference(resolution,[],[f135,f99])).
fof(f99,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(cnf_transformation,[],[f19])).
fof(f19,axiom,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.gcd.BINARY_GCD|split|0','thm.divides.PRIME_2')).
fof(f3166,plain,(
  s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl127),
  inference(cnf_transformation,[],[f3166_D])).
fof(f3166_D,plain,(
  s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f3162,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X5))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3154])).
fof(f3154,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X5)) | p(s(bool,X5))) ) | $spl6),
  inference(superposition,[],[f577,f87])).
fof(f3163,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X4))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3153])).
fof(f3153,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X4)) | p(s(bool,X4))) ) | $spl6),
  inference(superposition,[],[f577,f89])).
fof(f3164,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X1))) ) | $spl6),
  inference(subsumption_resolution,[],[f3150,f90])).
fof(f3150,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(superposition,[],[f577,f94])).
fof(f3047,plain,(
  $false | $spl72),
  inference(trivial_inequality_removal,[],[f3044])).
fof(f3044,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK1) | $spl72),
  inference(superposition,[],[f824,f140])).
fof(f2914,plain,(
  ( ! [X0,X3,X1] : (s(bool,'F_0') != s(bool,X0) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) ) | $spl124),
  inference(cnf_transformation,[],[f2914_D])).
fof(f2914_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,'F_0') != s(bool,X0) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f2877,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') != s(bool,X48) | s(bool,X48) != s(bool,X49) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X49) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f2398,f110])).
fof(f2398,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | s(bool,'F_0') != s(bool,X3) | s(bool,X2) != s(bool,X3)) ) | $spl6),
  inference(superposition,[],[f2233,f93])).
fof(f93,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.EQ_CLAUSES|split|1')).
fof(f2233,plain,(
  ( ! [X55] : (s(bool,'T_0') != s(bool,X55) | s(bool,'F_0') != s(bool,X55)) ) | $spl6),
  inference(resolution,[],[f568,f106])).
fof(f568,plain,(
  ( ! [X45,X44] : (p(s(bool,X44)) | s(bool,X44) != s(bool,X45) | s(bool,'T_0') != s(bool,X45)) ) | $spl6),
  inference(resolution,[],[f135,f90])).
fof(f2872,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'F_0') != s(bool,X35) | s(bool,X35) != s(bool,X36) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl6),
  inference(resolution,[],[f2398,f78])).
fof(f2870,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'F_0') != s(bool,X25) | s(bool,X25) != s(bool,X26) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl6),
  inference(resolution,[],[f2398,f77])).
fof(f2868,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,'F_0') != s(bool,X15) | s(bool,X15) != s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl6),
  inference(resolution,[],[f2398,f76])).
fof(f2867,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'F_0') != s(bool,X10) | s(bool,X10) != s(bool,X11) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f2398,f74])).
fof(f2865,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl6),
  inference(resolution,[],[f2398,f72])).
fof(f2786,plain,(
  $false | ($spl60 | $spl110)),
  inference(resolution,[],[f2769,f108])).
fof(f2769,plain,(
  ( ! [X1] : (~p(s(bool,X1))) ) | ($spl60 | $spl110)),
  inference(subsumption_resolution,[],[f2768,f93])).
fof(f2768,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) | ($spl60 | $spl110)),
  inference(forward_demodulation,[],[f1706,f1766])).
fof(f1766,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | $spl60),
  inference(resolution,[],[f807,f91])).
fof(f807,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) | $spl60),
  inference(cnf_transformation,[],[f807_D])).
fof(f807_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2787,plain,(
  $false | ($spl60 | $spl110)),
  inference(resolution,[],[f2769,f107])).
fof(f107,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gcd.BINARY_GCD|split|0','thm.bool.TRUTH')).
fof(f2788,plain,(
  $false | ($spl60 | $spl110)),
  inference(resolution,[],[f2769,f111])).
fof(f2791,plain,(
  $false | ($spl60 | $spl110)),
  inference(resolution,[],[f2769,f99])).
fof(f2736,plain,(
  $false | ($spl24 | $spl104)),
  inference(resolution,[],[f2701,f108])).
fof(f2701,plain,(
  ( ! [X1] : (~p(s(bool,X1))) ) | ($spl24 | $spl104)),
  inference(subsumption_resolution,[],[f2700,f93])).
fof(f2700,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) | ($spl24 | $spl104)),
  inference(forward_demodulation,[],[f1275,f1561])).
fof(f1561,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | $spl24),
  inference(resolution,[],[f629,f91])).
fof(f629,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) | $spl24),
  inference(cnf_transformation,[],[f629_D])).
fof(f629_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2737,plain,(
  $false | ($spl24 | $spl104)),
  inference(resolution,[],[f2701,f107])).
fof(f2738,plain,(
  $false | ($spl24 | $spl104)),
  inference(resolution,[],[f2701,f111])).
fof(f2741,plain,(
  $false | ($spl24 | $spl104)),
  inference(resolution,[],[f2701,f99])).
fof(f2718,plain,(
  $false | $spl36),
  inference(trivial_inequality_removal,[],[f2714])).
fof(f2714,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK0) | $spl36),
  inference(superposition,[],[f646,f112])).
fof(f2269,plain,(
  ( ! [X19] : (s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') != s(bool,X19)) ) | $spl122),
  inference(cnf_transformation,[],[f2269_D])).
fof(f2269_D,plain,(
  ( ! [X19] : (s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') != s(bool,X19)) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f2259,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | s(bool,'F_0') != s(bool,X23) | s(bool,'T_0') != s(bool,X23)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f2249])).
fof(f2249,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | s(bool,'F_0') != s(bool,X23) | s(bool,'T_0') != s(bool,X23) | p(s(bool,X22))) ) | $spl6),
  inference(superposition,[],[f568,f87])).
fof(f2260,plain,(
  ( ! [X21,X20] : (p(s(bool,X20)) | s(bool,'F_0') != s(bool,X21) | s(bool,'T_0') != s(bool,X21)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f2248])).
fof(f2248,plain,(
  ( ! [X21,X20] : (p(s(bool,X20)) | s(bool,'F_0') != s(bool,X21) | s(bool,'T_0') != s(bool,X21) | p(s(bool,X20))) ) | $spl6),
  inference(superposition,[],[f568,f89])).
fof(f2268,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') != s(bool,X19)) ) | $spl6),
  inference(subsumption_resolution,[],[f2247,f90])).
fof(f2247,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') != s(bool,X19) | s(bool,'T_0') = s(bool,X18)) ) | $spl6),
  inference(superposition,[],[f568,f94])).
fof(f2264,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') != s(bool,X1)) ) | $spl120),
  inference(cnf_transformation,[],[f2264_D])).
fof(f2264_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') != s(bool,X1)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f2231,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X48) != s(bool,X49) | s(bool,'T_0') != s(bool,X49) | p(s(bool,X50)) | p(s(bool,X51)) | s(bool,X48) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f568,f110])).
fof(f2226,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | s(bool,'T_0') != s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl6),
  inference(resolution,[],[f568,f78])).
fof(f2223,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) != s(bool,X21) | s(bool,'T_0') != s(bool,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X20) != s(bool,X24)) ) | $spl6),
  inference(resolution,[],[f568,f77])).
fof(f2222,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | s(bool,'T_0') != s(bool,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) ) | $spl6),
  inference(resolution,[],[f568,f76])).
fof(f2221,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | s(bool,'T_0') != s(bool,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f568,f74])).
fof(f2219,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'T_0') != s(bool,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) ) | $spl6),
  inference(resolution,[],[f568,f72])).
fof(f2085,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X1)) ) | $spl118),
  inference(cnf_transformation,[],[f2085_D])).
fof(f2085_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2056,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X48) != s(bool,X49) | s(bool,'F_0') = s(bool,X49) | p(s(bool,X50)) | p(s(bool,X51)) | s(bool,X48) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f566,f110])).
fof(f566,plain,(
  ( ! [X41,X40] : (p(s(bool,X40)) | s(bool,X40) != s(bool,X41) | s(bool,'F_0') = s(bool,X41)) ) | $spl6),
  inference(resolution,[],[f135,f87])).
fof(f2051,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | s(bool,'F_0') = s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl6),
  inference(resolution,[],[f566,f78])).
fof(f2048,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) != s(bool,X21) | s(bool,'F_0') = s(bool,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X20) != s(bool,X24)) ) | $spl6),
  inference(resolution,[],[f566,f77])).
fof(f2047,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) ) | $spl6),
  inference(resolution,[],[f566,f76])).
fof(f2046,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | s(bool,'F_0') = s(bool,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f566,f74])).
fof(f2044,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'F_0') = s(bool,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) ) | $spl6),
  inference(resolution,[],[f566,f72])).
fof(f1910,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl117),
  inference(cnf_transformation,[],[f1910_D])).
fof(f1910_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f826,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl74),
  inference(cnf_transformation,[],[f826_D])).
fof(f826_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f1908,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',sK0) != s('type.num.num',sK1)),
  inference(forward_demodulation,[],[f1901,f80])).
fof(f1901,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))),
  inference(superposition,[],[f604,f140])).
fof(f604,plain,(
  ( ! [X1] : (s('type.num.num',sK0) != s('type.num.num',X1) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) )),
  inference(superposition,[],[f97,f112])).
fof(f1730,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl112),
  inference(cnf_transformation,[],[f1730_D])).
fof(f1730_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f1768,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f110])).
fof(f1763,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X23) != s(bool,X24)) ) | $spl60),
  inference(resolution,[],[f807,f78])).
fof(f1760,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f77])).
fof(f1759,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f76])).
fof(f1758,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X8) != s(bool,X9)) ) | $spl60),
  inference(resolution,[],[f807,f74])).
fof(f1756,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f72])).
fof(f1752,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) | $spl114),
  inference(cnf_transformation,[],[f1752_D])).
fof(f1752_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f1744,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f1685,f110])).
fof(f1685,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) | $spl61),
  inference(resolution,[],[f808,f109])).
fof(f1739,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1)))) | s(bool,X21) != s(bool,X23)) ) | $spl61),
  inference(resolution,[],[f1685,f78])).
fof(f1737,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f1685,f77])).
fof(f1735,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f1685,f76])).
fof(f1734,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1)))) | s(bool,X6) != s(bool,X8)) ) | $spl61),
  inference(resolution,[],[f1685,f74])).
fof(f1732,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f1685,f72])).
fof(f1722,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f110])).
fof(f1717,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X23) != s(bool,X24)) ) | $spl60),
  inference(resolution,[],[f807,f78])).
fof(f1714,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f77])).
fof(f1713,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f76])).
fof(f1712,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X8) != s(bool,X9)) ) | $spl60),
  inference(resolution,[],[f807,f74])).
fof(f1710,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl60),
  inference(resolution,[],[f807,f72])).
fof(f1706,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl110),
  inference(cnf_transformation,[],[f1706_D])).
fof(f1706_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f1698,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f808,f110])).
fof(f1693,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X21) != s(bool,X23)) ) | $spl61),
  inference(resolution,[],[f808,f78])).
fof(f1691,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f808,f77])).
fof(f1689,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f808,f76])).
fof(f1688,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))) | s(bool,X6) != s(bool,X8)) ) | $spl61),
  inference(resolution,[],[f808,f74])).
fof(f1686,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) ) | $spl61),
  inference(resolution,[],[f808,f72])).
fof(f1412,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl106),
  inference(cnf_transformation,[],[f1412_D])).
fof(f1412_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f1563,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f110])).
fof(f1558,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X23) != s(bool,X24)) ) | $spl24),
  inference(resolution,[],[f629,f78])).
fof(f1555,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f77])).
fof(f1554,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f76])).
fof(f1553,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X8) != s(bool,X9)) ) | $spl24),
  inference(resolution,[],[f629,f74])).
fof(f1551,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f72])).
fof(f1426,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f110])).
fof(f1421,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0)))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f1254,f78])).
fof(f1419,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f77])).
fof(f1417,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f76])).
fof(f1416,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0)))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f1254,f74])).
fof(f1414,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f1254,f72])).
fof(f1404,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f110])).
fof(f1399,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X23) != s(bool,X24)) ) | $spl24),
  inference(resolution,[],[f629,f78])).
fof(f1396,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f77])).
fof(f1395,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f76])).
fof(f1394,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X8) != s(bool,X9)) ) | $spl24),
  inference(resolution,[],[f629,f74])).
fof(f1392,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl24),
  inference(resolution,[],[f629,f72])).
fof(f1267,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f110])).
fof(f1262,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f630,f78])).
fof(f1260,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f77])).
fof(f1258,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f76])).
fof(f1257,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f630,f74])).
fof(f1255,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) ) | $spl25),
  inference(resolution,[],[f630,f72])).
fof(f1092,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl100),
  inference(cnf_transformation,[],[f1092_D])).
fof(f1092_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f1131,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f110])).
fof(f1126,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl69),
  inference(resolution,[],[f818,f78])).
fof(f1124,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f77])).
fof(f1122,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f76])).
fof(f1121,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl69),
  inference(resolution,[],[f818,f74])).
fof(f1119,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f72])).
fof(f1116,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl102),
  inference(cnf_transformation,[],[f1116_D])).
fof(f1116_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f1108,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl68),
  inference(resolution,[],[f817,f110])).
fof(f1103,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X23) != s(bool,X24)) ) | $spl68),
  inference(resolution,[],[f817,f78])).
fof(f1100,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl68),
  inference(resolution,[],[f817,f77])).
fof(f1099,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl68),
  inference(resolution,[],[f817,f76])).
fof(f1098,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X8) != s(bool,X9)) ) | $spl68),
  inference(resolution,[],[f817,f74])).
fof(f1096,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl68),
  inference(resolution,[],[f817,f72])).
fof(f1084,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f110])).
fof(f1079,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl69),
  inference(resolution,[],[f818,f78])).
fof(f1077,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f77])).
fof(f1075,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f76])).
fof(f1074,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl69),
  inference(resolution,[],[f818,f74])).
fof(f1072,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl69),
  inference(resolution,[],[f818,f72])).
fof(f1022,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl96),
  inference(cnf_transformation,[],[f1022_D])).
fof(f1022_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f1061,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f110])).
fof(f1056,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl33),
  inference(resolution,[],[f640,f78])).
fof(f1054,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f77])).
fof(f1052,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f76])).
fof(f1051,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl33),
  inference(resolution,[],[f640,f74])).
fof(f1049,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f72])).
fof(f1046,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl98),
  inference(cnf_transformation,[],[f1046_D])).
fof(f1046_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1038,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl32),
  inference(resolution,[],[f639,f110])).
fof(f1033,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X23) != s(bool,X24)) ) | $spl32),
  inference(resolution,[],[f639,f78])).
fof(f1030,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl32),
  inference(resolution,[],[f639,f77])).
fof(f1029,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl32),
  inference(resolution,[],[f639,f76])).
fof(f1028,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X8) != s(bool,X9)) ) | $spl32),
  inference(resolution,[],[f639,f74])).
fof(f1026,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl32),
  inference(resolution,[],[f639,f72])).
fof(f1014,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f110])).
fof(f1009,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl33),
  inference(resolution,[],[f640,f78])).
fof(f1007,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f77])).
fof(f1005,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f76])).
fof(f1004,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl33),
  inference(resolution,[],[f640,f74])).
fof(f1002,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) ) | $spl33),
  inference(resolution,[],[f640,f72])).
fof(f953,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl92),
  inference(cnf_transformation,[],[f953_D])).
fof(f953_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f991,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f110])).
fof(f986,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl87),
  inference(resolution,[],[f842,f78])).
fof(f984,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f77])).
fof(f982,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f76])).
fof(f981,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl87),
  inference(resolution,[],[f842,f74])).
fof(f979,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f72])).
fof(f977,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl94),
  inference(cnf_transformation,[],[f977_D])).
fof(f977_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f969,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl86),
  inference(resolution,[],[f841,f110])).
fof(f841,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) | $spl86),
  inference(cnf_transformation,[],[f841_D])).
fof(f841_D,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f964,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X22) != s(bool,X23)) ) | $spl86),
  inference(resolution,[],[f841,f78])).
fof(f961,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl86),
  inference(resolution,[],[f841,f77])).
fof(f960,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl86),
  inference(resolution,[],[f841,f76])).
fof(f959,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X7) != s(bool,X8)) ) | $spl86),
  inference(resolution,[],[f841,f74])).
fof(f957,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl86),
  inference(resolution,[],[f841,f72])).
fof(f945,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f110])).
fof(f940,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl87),
  inference(resolution,[],[f842,f78])).
fof(f938,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f77])).
fof(f936,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f76])).
fof(f935,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl87),
  inference(resolution,[],[f842,f74])).
fof(f933,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) ) | $spl87),
  inference(resolution,[],[f842,f72])).
fof(f885,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl88),
  inference(cnf_transformation,[],[f885_D])).
fof(f885_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f923,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f110])).
fof(f918,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl81),
  inference(resolution,[],[f835,f78])).
fof(f916,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f77])).
fof(f914,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f76])).
fof(f913,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl81),
  inference(resolution,[],[f835,f74])).
fof(f911,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f72])).
fof(f909,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl90),
  inference(cnf_transformation,[],[f909_D])).
fof(f909_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f901,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl80),
  inference(resolution,[],[f834,f110])).
fof(f834,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) | $spl80),
  inference(cnf_transformation,[],[f834_D])).
fof(f834_D,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f896,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X23) != s(bool,X24)) ) | $spl80),
  inference(resolution,[],[f834,f78])).
fof(f893,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl80),
  inference(resolution,[],[f834,f77])).
fof(f892,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl80),
  inference(resolution,[],[f834,f76])).
fof(f891,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X8) != s(bool,X9)) ) | $spl80),
  inference(resolution,[],[f834,f74])).
fof(f889,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl80),
  inference(resolution,[],[f834,f72])).
fof(f877,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f110])).
fof(f872,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X21) != s(bool,X23)) ) | $spl81),
  inference(resolution,[],[f835,f78])).
fof(f870,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f77])).
fof(f868,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f76])).
fof(f867,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | s(bool,X6) != s(bool,X8)) ) | $spl81),
  inference(resolution,[],[f835,f74])).
fof(f865,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) ) | $spl81),
  inference(resolution,[],[f835,f72])).
fof(f753,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl56),
  inference(cnf_transformation,[],[f753_D])).
fof(f753_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f855,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f110])).
fof(f850,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl51),
  inference(resolution,[],[f664,f78])).
fof(f848,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f77])).
fof(f846,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f76])).
fof(f845,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl51),
  inference(resolution,[],[f664,f74])).
fof(f843,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f72])).
fof(f842,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) | $spl87),
  inference(cnf_transformation,[],[f842_D])).
fof(f842_D,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f814,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl66),
  inference(cnf_transformation,[],[f814_D])).
fof(f814_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f840,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1))))),
  inference(forward_demodulation,[],[f806,f80])).
fof(f806,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))),
  inference(superposition,[],[f109,f140])).
fof(f817,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl68),
  inference(cnf_transformation,[],[f817_D])).
fof(f817_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f839,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl85),
  inference(cnf_transformation,[],[f839_D])).
fof(f839_D,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f837,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))),
  inference(forward_demodulation,[],[f805,f80])).
fof(f805,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))),
  inference(superposition,[],[f109,f140])).
fof(f835,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) | $spl81),
  inference(cnf_transformation,[],[f835_D])).
fof(f835_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f836,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num',X22)))))) ) | $spl82),
  inference(cnf_transformation,[],[f836_D])).
fof(f836_D,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num',X22)))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f833,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))))) )),
  inference(forward_demodulation,[],[f832,f80])).
fof(f832,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK1)),s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))))) )),
  inference(forward_demodulation,[],[f804,f79])).
fof(f804,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))),s('type.num.num',X22))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22)))))) )),
  inference(superposition,[],[f98,f140])).
fof(f829,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) ) | $spl76),
  inference(cnf_transformation,[],[f829_D])).
fof(f829_D,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f831,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl79),
  inference(cnf_transformation,[],[f831_D])).
fof(f831_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f828,plain,(
  ( ! [X20] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) )),
  inference(forward_demodulation,[],[f802,f80])).
fof(f802,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))) )),
  inference(superposition,[],[f98,f140])).
fof(f824,plain,(
  ( ! [X18] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) ) | $spl72),
  inference(cnf_transformation,[],[f824_D])).
fof(f824_D,plain,(
  ( ! [X18] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f823,plain,(
  ( ! [X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',sK1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) )),
  inference(forward_demodulation,[],[f800,f80])).
fof(f800,plain,(
  ( ! [X18] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))) )),
  inference(superposition,[],[f97,f140])).
fof(f818,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl69),
  inference(cnf_transformation,[],[f818_D])).
fof(f818_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f819,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl70),
  inference(cnf_transformation,[],[f819_D])).
fof(f819_D,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f816,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) )),
  inference(forward_demodulation,[],[f797,f80])).
fof(f797,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1))))))) )),
  inference(superposition,[],[f95,f140])).
fof(f813,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK1))),s('type.num.num',sK1)))) ) | $spl64),
  inference(cnf_transformation,[],[f813_D])).
fof(f813_D,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK1))),s('type.num.num',sK1)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f815,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl67),
  inference(cnf_transformation,[],[f815_D])).
fof(f815_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f812,plain,(
  ( ! [X15] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK1)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK1))),s('type.num.num',sK1)))) )),
  inference(forward_demodulation,[],[f796,f80])).
fof(f796,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK1))),s('type.num.num',sK1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK1)))))))) )),
  inference(superposition,[],[f95,f140])).
fof(f808,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) | $spl61),
  inference(cnf_transformation,[],[f808_D])).
fof(f808_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f810,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))) | $spl62),
  inference(cnf_transformation,[],[f810_D])).
fof(f810_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f783,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2(sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK1)))))),
  inference(superposition,[],[f95,f140])).
fof(f777,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl58),
  inference(cnf_transformation,[],[f777_D])).
fof(f777_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f769,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl50),
  inference(resolution,[],[f663,f110])).
fof(f663,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) | $spl50),
  inference(cnf_transformation,[],[f663_D])).
fof(f663_D,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f764,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X22) != s(bool,X23)) ) | $spl50),
  inference(resolution,[],[f663,f78])).
fof(f761,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl50),
  inference(resolution,[],[f663,f77])).
fof(f760,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl50),
  inference(resolution,[],[f663,f76])).
fof(f759,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X7) != s(bool,X8)) ) | $spl50),
  inference(resolution,[],[f663,f74])).
fof(f757,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl50),
  inference(resolution,[],[f663,f72])).
fof(f745,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f110])).
fof(f740,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl51),
  inference(resolution,[],[f664,f78])).
fof(f738,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f77])).
fof(f736,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f76])).
fof(f735,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl51),
  inference(resolution,[],[f664,f74])).
fof(f733,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) ) | $spl51),
  inference(resolution,[],[f664,f72])).
fof(f685,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl52),
  inference(cnf_transformation,[],[f685_D])).
fof(f685_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f723,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f110])).
fof(f718,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl45),
  inference(resolution,[],[f657,f78])).
fof(f716,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f77])).
fof(f714,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f76])).
fof(f713,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl45),
  inference(resolution,[],[f657,f74])).
fof(f711,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f72])).
fof(f709,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl54),
  inference(cnf_transformation,[],[f709_D])).
fof(f709_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f701,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X26) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl44),
  inference(resolution,[],[f656,f110])).
fof(f656,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) | $spl44),
  inference(cnf_transformation,[],[f656_D])).
fof(f656_D,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f696,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X23) != s(bool,X24)) ) | $spl44),
  inference(resolution,[],[f656,f78])).
fof(f693,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl44),
  inference(resolution,[],[f656,f77])).
fof(f692,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl44),
  inference(resolution,[],[f656,f76])).
fof(f691,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X8) != s(bool,X9)) ) | $spl44),
  inference(resolution,[],[f656,f74])).
fof(f689,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl44),
  inference(resolution,[],[f656,f72])).
fof(f677,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f110])).
fof(f672,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X21) != s(bool,X23)) ) | $spl45),
  inference(resolution,[],[f657,f78])).
fof(f670,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f77])).
fof(f668,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f76])).
fof(f667,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,X6) != s(bool,X8)) ) | $spl45),
  inference(resolution,[],[f657,f74])).
fof(f665,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) ) | $spl45),
  inference(resolution,[],[f657,f72])).
fof(f664,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) | $spl51),
  inference(cnf_transformation,[],[f664_D])).
fof(f664_D,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f636,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl30),
  inference(cnf_transformation,[],[f636_D])).
fof(f636_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f662,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0))))),
  inference(forward_demodulation,[],[f628,f80])).
fof(f628,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num',sK0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))))),
  inference(superposition,[],[f109,f112])).
fof(f639,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl32),
  inference(cnf_transformation,[],[f639_D])).
fof(f639_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f661,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl49),
  inference(cnf_transformation,[],[f661_D])).
fof(f661_D,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f659,plain,(
  ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(forward_demodulation,[],[f627,f80])).
fof(f627,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | ~p(s(bool,'const.divides.prime_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))))),
  inference(superposition,[],[f109,f112])).
fof(f657,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) | $spl45),
  inference(cnf_transformation,[],[f657_D])).
fof(f657_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f658,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X22)))))) ) | $spl46),
  inference(cnf_transformation,[],[f658_D])).
fof(f658_D,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X22)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f655,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))))) )),
  inference(forward_demodulation,[],[f654,f80])).
fof(f654,plain,(
  ( ! [X22] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))),s('type.num.num',X22))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK2(sK0)),s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))))) )),
  inference(forward_demodulation,[],[f626,f79])).
fof(f626,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))),s('type.num.num',X22))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X22)))))) )),
  inference(superposition,[],[f98,f112])).
fof(f651,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) ) | $spl40),
  inference(cnf_transformation,[],[f651_D])).
fof(f651_D,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f653,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl43),
  inference(cnf_transformation,[],[f653_D])).
fof(f653_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f650,plain,(
  ( ! [X20] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))))) )),
  inference(forward_demodulation,[],[f624,f80])).
fof(f624,plain,(
  ( ! [X20] : (s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num',X20))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))))) )),
  inference(superposition,[],[f98,f112])).
fof(f646,plain,(
  ( ! [X18] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) ) | $spl36),
  inference(cnf_transformation,[],[f646_D])).
fof(f646_D,plain,(
  ( ! [X18] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f648,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl38),
  inference(cnf_transformation,[],[f648_D])).
fof(f648_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f645,plain,(
  ( ! [X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',sK0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18)))) )),
  inference(forward_demodulation,[],[f622,f80])).
fof(f622,plain,(
  ( ! [X18] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X18))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))))) )),
  inference(superposition,[],[f97,f112])).
fof(f640,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl33),
  inference(cnf_transformation,[],[f640_D])).
fof(f640_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f641,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f638,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))) )),
  inference(forward_demodulation,[],[f619,f80])).
fof(f619,plain,(
  ( ! [X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0))))))) )),
  inference(superposition,[],[f95,f112])).
fof(f635,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK0))),s('type.num.num',sK0)))) ) | $spl28),
  inference(cnf_transformation,[],[f635_D])).
fof(f635_D,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK0))),s('type.num.num',sK0)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f637,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl31),
  inference(cnf_transformation,[],[f637_D])).
fof(f637_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f634,plain,(
  ( ! [X15] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2(sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK0))),s('type.num.num',sK0)))) )),
  inference(forward_demodulation,[],[f618,f80])).
fof(f618,plain,(
  ( ! [X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num',sK0))),s('type.num.num',sK0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(sK0)))))))) )),
  inference(superposition,[],[f95,f112])).
fof(f630,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) | $spl25),
  inference(cnf_transformation,[],[f630_D])).
fof(f630_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f632,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0)))) | $spl26),
  inference(cnf_transformation,[],[f632_D])).
fof(f632_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f605,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2(sK0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2(sK0)))))),
  inference(superposition,[],[f95,f112])).
fof(f594,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X3)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X1) | p(s(bool,X0))) ) | $spl22),
  inference(cnf_transformation,[],[f594_D])).
fof(f594_D,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X3)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X1) | p(s(bool,X0))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f570,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X48) != s(bool,X49) | p(s(bool,X48)) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X49) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f135,f110])).
fof(f565,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | p(s(bool,X35)) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl6),
  inference(resolution,[],[f135,f78])).
fof(f563,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) != s(bool,X26) | p(s(bool,X25)) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl6),
  inference(resolution,[],[f135,f77])).
fof(f561,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | p(s(bool,X15)) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl6),
  inference(resolution,[],[f135,f76])).
fof(f560,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | p(s(bool,X10)) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f135,f74])).
fof(f558,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X0)) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl6),
  inference(resolution,[],[f135,f72])).
fof(f553,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19)) ) | $spl8),
  inference(subsumption_resolution,[],[f542,f136])).
fof(f542,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') = s(bool,X18)) ) | $spl8),
  inference(superposition,[],[f136,f94])).
fof(f291,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,X22)) ) | $spl18),
  inference(cnf_transformation,[],[f291_D])).
fof(f291_D,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,X22)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f547,plain,(
  ( ! [X17,X16] : (~p(s(bool,X16)) | s(bool,'T_0') != s(bool,X17)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f541])).
fof(f541,plain,(
  ( ! [X17,X16] : (~p(s(bool,X16)) | s(bool,'T_0') != s(bool,X17) | ~p(s(bool,X16))) ) | $spl8),
  inference(superposition,[],[f136,f91])).
fof(f548,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'T_0') != s(bool,X15)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f540])).
fof(f540,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'T_0') != s(bool,X15) | ~p(s(bool,X14))) ) | $spl8),
  inference(superposition,[],[f136,f93])).
fof(f552,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13)) ) | $spl8),
  inference(subsumption_resolution,[],[f539,f136])).
fof(f539,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13) | s(bool,'F_0') = s(bool,X12)) ) | $spl8),
  inference(superposition,[],[f136,f94])).
fof(f505,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | s(bool,'F_0') != s(bool,X23)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f502])).
fof(f502,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | s(bool,'F_0') != s(bool,X23) | p(s(bool,X22))) ) | $spl2),
  inference(superposition,[],[f133,f87])).
fof(f506,plain,(
  ( ! [X21,X20] : (p(s(bool,X20)) | s(bool,'F_0') != s(bool,X21)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f501])).
fof(f501,plain,(
  ( ! [X21,X20] : (p(s(bool,X20)) | s(bool,'F_0') != s(bool,X21) | p(s(bool,X20))) ) | $spl2),
  inference(superposition,[],[f133,f89])).
fof(f511,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19)) ) | $spl2),
  inference(subsumption_resolution,[],[f500,f133])).
fof(f500,plain,(
  ( ! [X19,X18] : (p(s(bool,X18)) | s(bool,'F_0') != s(bool,X19) | s(bool,'T_0') = s(bool,X18)) ) | $spl2),
  inference(superposition,[],[f133,f94])).
fof(f510,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13)) ) | $spl2),
  inference(subsumption_resolution,[],[f497,f133])).
fof(f497,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13) | s(bool,'F_0') = s(bool,X12)) ) | $spl2),
  inference(superposition,[],[f133,f94])).
fof(f135,plain,(
  ( ! [X4,X3] : (~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | p(s(bool,X3))) ) | $spl6),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ( ! [X4,X3] : (~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | p(s(bool,X3))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f456,plain,(
  ( ! [X99,X97,X98] : (s(bool,'T_0') != s(bool,X99) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98)) )),
  inference(forward_demodulation,[],[f455,f151])).
fof(f151,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))),
  inference(resolution,[],[f69,f91])).
fof(f455,plain,(
  ( ! [X99,X97,X98] : (p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98) | s(bool,X99) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(subsumption_resolution,[],[f401,f110])).
fof(f401,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'T_0')) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98) | s(bool,X99) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(superposition,[],[f78,f151])).
fof(f452,plain,(
  ( ! [X87,X85,X86] : (s(bool,'T_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X87)) | s(bool,X86) != s(bool,X87)) )),
  inference(subsumption_resolution,[],[f397,f90])).
fof(f397,plain,(
  ( ! [X87,X85,X86] : (s(bool,'T_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X85)) | ~p(s(bool,X87)) | s(bool,X86) != s(bool,X87)) )),
  inference(superposition,[],[f78,f151])).
fof(f451,plain,(
  ( ! [X83,X84,X82] : (s(bool,'T_0') != s(bool,X82) | p(s(bool,X83)) | ~p(s(bool,X84)) | s(bool,X83) != s(bool,X84)) )),
  inference(subsumption_resolution,[],[f396,f110])).
fof(f396,plain,(
  ( ! [X83,X84,X82] : (s(bool,'T_0') != s(bool,X82) | p(s(bool,X83)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) | ~p(s(bool,X84)) | s(bool,X83) != s(bool,X84)) )),
  inference(superposition,[],[f78,f151])).
fof(f439,plain,(
  ( ! [X39,X37,X38] : (s(bool,'T_0') != s(bool,X39) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38)) )),
  inference(forward_demodulation,[],[f438,f151])).
fof(f438,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(subsumption_resolution,[],[f381,f110])).
fof(f381,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,'T_0')) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(superposition,[],[f74,f151])).
fof(f435,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X25) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X27)) )),
  inference(subsumption_resolution,[],[f377,f110])).
fof(f377,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X25) | p(s(bool,X26)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X27)) )),
  inference(superposition,[],[f74,f151])).
fof(f434,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,X22) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(subsumption_resolution,[],[f376,f90])).
fof(f376,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,X22) | p(s(bool,X23)) | ~p(s(bool,X22)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(superposition,[],[f74,f151])).
fof(f345,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f336])).
fof(f336,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl4),
  inference(superposition,[],[f134,f123])).
fof(f123,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))),
  inference(resolution,[],[f68,f91])).
fof(f344,plain,(
  $false | $spl4),
  inference(equality_resolution,[],[f134])).
fof(f313,plain,(
  ( ! [X99,X97,X98] : (s(bool,'T_0') != s(bool,X99) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98)) )),
  inference(forward_demodulation,[],[f312,f123])).
fof(f312,plain,(
  ( ! [X99,X97,X98] : (p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98) | s(bool,X99) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(subsumption_resolution,[],[f257,f110])).
fof(f257,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'T_0')) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,X98) | s(bool,X99) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(superposition,[],[f78,f123])).
fof(f309,plain,(
  ( ! [X87,X85,X86] : (s(bool,'T_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X87)) | s(bool,X86) != s(bool,X87)) )),
  inference(subsumption_resolution,[],[f253,f90])).
fof(f253,plain,(
  ( ! [X87,X85,X86] : (s(bool,'T_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X85)) | ~p(s(bool,X87)) | s(bool,X86) != s(bool,X87)) )),
  inference(superposition,[],[f78,f123])).
fof(f308,plain,(
  ( ! [X83,X84,X82] : (s(bool,'T_0') != s(bool,X82) | p(s(bool,X83)) | ~p(s(bool,X84)) | s(bool,X83) != s(bool,X84)) )),
  inference(subsumption_resolution,[],[f252,f110])).
fof(f252,plain,(
  ( ! [X83,X84,X82] : (s(bool,'T_0') != s(bool,X82) | p(s(bool,X83)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | ~p(s(bool,X84)) | s(bool,X83) != s(bool,X84)) )),
  inference(superposition,[],[f78,f123])).
fof(f296,plain,(
  ( ! [X39,X37,X38] : (s(bool,'T_0') != s(bool,X39) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38)) )),
  inference(forward_demodulation,[],[f295,f123])).
fof(f295,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(subsumption_resolution,[],[f237,f110])).
fof(f237,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,'T_0')) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,X38) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(superposition,[],[f74,f123])).
fof(f292,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X25) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X27)) )),
  inference(subsumption_resolution,[],[f233,f110])).
fof(f233,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X25) | p(s(bool,X26)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X27)) )),
  inference(superposition,[],[f74,f123])).
fof(f290,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,X22) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(subsumption_resolution,[],[f232,f90])).
fof(f232,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,X22) | p(s(bool,X23)) | ~p(s(bool,X22)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(superposition,[],[f74,f123])).
fof(f176,plain,(
  $false | $spl12),
  inference(resolution,[],[f138,f106])).
fof(f160,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) ) | $spl14),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f153,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f110])).
fof(f148,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | s(bool,X22) != s(bool,X23)) )),
  inference(resolution,[],[f69,f78])).
fof(f161,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) ) | $spl16),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f147,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f78])).
fof(f145,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f77])).
fof(f144,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f76])).
fof(f143,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | s(bool,X7) != s(bool,X8)) )),
  inference(resolution,[],[f69,f74])).
fof(f142,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f74])).
fof(f141,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1)))) )),
  inference(resolution,[],[f69,f72])).
fof(f132,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) ) | $spl0),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f125,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X25) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f110])).
fof(f120,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,X22) != s(bool,X23)) )),
  inference(resolution,[],[f68,f78])).
fof(f134,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) ) | $spl4),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f119,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f78])).
fof(f117,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f77])).
fof(f116,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f76])).
fof(f115,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | s(bool,X7) != s(bool,X8)) )),
  inference(resolution,[],[f68,f74])).
fof(f114,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f74])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) )),
  inference(resolution,[],[f68,f72])).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 164
% Passive clauses: 715
% Generated clauses: 5544
% Final active clauses: 98
% Final passive clauses: 219
% Input formulas: 22
% Initial clauses: 42
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 61
% Trivial inequalities: 155
% Fw subsumption resolutions: 679
% Fw demodulations: 779
% Bw demodulations: 27
% 
% Simple tautologies: 74
% Equational tautologies: 1
% Forward subsumptions: 2771
% 
% Binary resolution: 949
% Forward superposition: 1277
% Backward superposition: 1471
% Self superposition: 5
% Equality resolution: 21
% 
% Split clauses: 371
% Split components: 794
% SAT solver clauses: 406
% SAT solver unit clauses: 6
% SAT solver binary clauses: 76
% 
% Sat splits: 371
% Sat splitting refutations: 34
% 
% Memory used [KB]: 3070
% Time elapsed: 0.088 s
% ------------------------------
% ------------------------------
% Success in time 11.814 s
