Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (110613)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1257
% Passive clauses: 8716
% Generated clauses: 43946
% Final active clauses: 1202
% Final passive clauses: 6997
% Input formulas: 517
% Initial clauses: 894
% 
% Duplicate literals: 179
% Trivial inequalities: 94
% Fw subsumption resolutions: 2073
% Fw demodulations: 6074
% Bw demodulations: 44
% 
% Simple tautologies: 323
% Equational tautologies: 20
% Forward subsumptions: 26325
% 
% Binary resolution: 8405
% Factoring: 637
% Forward superposition: 13501
% Backward superposition: 12475
% Self superposition: 48
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 314
% Split components: 630
% SAT solver clauses: 557
% SAT solver unit clauses: 33
% SAT solver binary clauses: 85
% 
% Sat splits: 314
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 557
% TWLsolver calls for satisfiability: 412
% 
% Memory used [KB]: 23539
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (110624)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 656
% Passive clauses: 4556
% Generated clauses: 33204
% Final active clauses: 636
% Final passive clauses: 3689
% Input formulas: 517
% Initial clauses: 894
% 
% Duplicate literals: 108
% Trivial inequalities: 43
% Fw subsumption resolutions: 1060
% Fw demodulations: 4189
% Bw demodulations: 226
% Condensations: 86
% Global subsumptions: 36
% 
% Simple tautologies: 323
% Equational tautologies: 16
% Forward subsumptions: 17345
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 2875
% Factoring: 127
% Forward superposition: 10669
% Backward superposition: 8156
% Self superposition: 91
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 25
% Split components: 50
% SAT solver clauses: 6175
% SAT solver unit clauses: 1182
% SAT solver binary clauses: 265
% SAT solver learnt clauses: 72
% SAT solver learnt literals: 12
% 
% Sat splits: 25
% 
% TWLsolver clauses: 6031
% TWLsolver calls for satisfiability: 4921
% 
% Memory used [KB]: 33389
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% (110638)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1787
% Passive clauses: 21383
% Generated clauses: 243779
% Final active clauses: 1420
% Final passive clauses: 3983
% Input formulas: 517
% Initial clauses: 894
% Discarded non-redundant clauses: 181707
% 
% Duplicate literals: 12
% Trivial inequalities: 65
% Fw subsumption resolutions: 3001
% Fw demodulations: 22129
% Bw demodulations: 5283
% Condensations: 50
% 
% Simple tautologies: 219
% Equational tautologies: 96
% Forward subsumptions: 73497
% Fw demodulations to eq. taut.: 1148
% Bw demodulations to eq. taut.: 49
% 
% Unit resulting resolution: 154551
% Factoring: 2
% Forward superposition: 29327
% Backward superposition: 23076
% Self superposition: 156
% Equality factoring: 2
% Equality resolution: 35
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 24607
% SAT solver unit clauses: 11052
% SAT solver binary clauses: 11718
% 
% Sat splits: 44
% Sat splitting refutations: 3134
% 
% Memory used [KB]: 159656
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f2226,plain,(
  $false),
  inference(subsumption_resolution,[],[f2157,f1186])).
fof(f1186,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(cnf_transformation,[],[f974])).
fof(f974,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) & s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,'const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f873])).
fof(f873,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,'const.list.EL_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,'const.list.EL_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))))))),
  file('thm.rich_list.TAKE_EL_SNOC','thm.rich_list.TAKE_EL_SNOC')).
fof(f2157,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(trivial_inequality_removal,[],[f2131])).
fof(f2131,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK14))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK14))),s('type.list.list'(sK12),sK13))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(superposition,[],[f1701,f1273])).
fof(f1273,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f886])).
fof(f886,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f571])).
fof(f571,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f570])).
fof(f570,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X8,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.SNOC_2'(s(X6,'const.list.EL_2'(s('type.num.num',X8),s('type.list.list'(X6),X9))),s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X8),s('type.list.list'(X6),X9))))))),
  file('thm.rich_list.TAKE_EL_SNOC','thm.rich_list.SNOC_EL_TAKE')).
fof(f1701,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK14))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,'const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13)))))),
  inference(forward_demodulation,[],[f1187,f1383])).
fof(f1383,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f699])).
fof(f699,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rich_list.TAKE_EL_SNOC','thm.arithmetic.ADD|49|')).
fof(f1187,plain,(
  s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK12),sK13))) != s('type.list.list'(sK12),'const.list.SNOC_2'(s(sK12,'const.list.EL_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))),s('type.list.list'(sK12),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13)))))),
  inference(cnf_transformation,[],[f974])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 413
% Passive clauses: 288
% Generated clauses: 485
% Final active clauses: 413
% Final passive clauses: 286
% Input formulas: 517
% Initial clauses: 508
% 
% Selected by SInE selection: 241
% SInE iterations: 1
% 
% Duplicate literals: 13
% Trivial inequalities: 1
% Fw subsumption resolutions: 15
% Fw demodulations: 90
% 
% Simple tautologies: 98
% Equational tautologies: 3
% Forward subsumptions: 18
% 
% Binary resolution: 130
% Forward superposition: 237
% 
% Split clauses: 35
% Split components: 71
% SAT solver clauses: 36
% SAT solver binary clauses: 34
% 
% Sat splits: 35
% 
% Memory used [KB]: 3070
% Time elapsed: 0.032 s
% ------------------------------
% ------------------------------
% Success in time 11.764 s
