Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (107154)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 439
% Passive clauses: 4028
% Generated clauses: 33495
% Final active clauses: 335
% Final passive clauses: 3293
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 401
% Trivial inequalities: 180
% Fw subsumption resolutions: 1310
% Fw demodulations: 4974
% Bw demodulations: 94
% 
% Simple tautologies: 202
% Equational tautologies: 37
% Forward subsumptions: 22280
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 236
% Factoring: 1
% Forward superposition: 13914
% Backward superposition: 12259
% Self superposition: 118
% Equality factoring: 62
% Equality resolution: 14
% 
% Split clauses: 122
% Split components: 244
% SAT solver clauses: 292
% SAT solver unit clauses: 12
% SAT solver binary clauses: 45
% 
% Sat splits: 122
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 292
% TWLsolver calls for satisfiability: 83
% 
% Memory used [KB]: 23027
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (107180)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 281
% Passive clauses: 2680
% Generated clauses: 22206
% Final active clauses: 201
% Final passive clauses: 1852
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 124
% Trivial inequalities: 286
% Fw subsumption resolutions: 348
% Fw demodulations: 4148
% Bw demodulations: 582
% Condensations: 103
% 
% Simple tautologies: 31
% Equational tautologies: 21
% Forward subsumptions: 11147
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 39
% 
% Binary resolution: 118
% Factoring: 1
% Forward superposition: 5876
% Backward superposition: 7619
% Self superposition: 90
% Equality factoring: 30
% Equality resolution: 18
% 
% Split clauses: 31
% Split components: 62
% SAT solver clauses: 3333
% SAT solver unit clauses: 136
% SAT solver binary clauses: 48
% 
% Sat splits: 31
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 3333
% TWLsolver calls for satisfiability: 498
% 
% Memory used [KB]: 23283
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f17904,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f173,f263,f262,f172,f265,f171,f267,f261,f381,f386,f418,f420,f419,f466,f471,f516,f962,f980,f978,f963,f981,f965,f984,f966,f987,f985,f967,f988,f968,f989,f973,f983,f992,f975,f996,f994,f1062,f3261,f3267,f3265,f5678,f5739,f5737,f6026,f6090,f6088,f7383,f7384,f7386,f7387,f384,f7406,f7408,f7416,f7419,f7585,f7591,f8509,f8546,f8544,f14039,f14042,f14044,f14047,f14046,f14054,f14057,f14056,f14066,f14067,f14080,f14081,f14041,f15448,f15452,f15456,f15460,f15464,f15469,f15471,f15648,f15651,f15654,f15657,f15658,f15659,f15660,f15661,f15662,f15663,f15664,f15665,f15666,f15667,f15668,f15669,f15670,f15671,f15672,f15673,f15674,f15675,f15676,f15677,f15680,f15687,f15688,f15692,f15693,f15694,f15695,f15696,f15697,f15698,f15699,f15700,f15701,f15702,f15703,f15704,f15705,f15706,f15707,f15708,f15709,f15710,f15711,f15712,f15713,f15714,f15715,f15716,f15717,f15718,f15719,f15720,f15721,f15722,f15723,f15724,f15725,f15726,f15727,f15728,f15729,f15730,f15731,f15732,f15733,f15734,f15735,f15736,f15737,f15738,f15739,f15740,f15741,f15742,f15743,f15744,f15745,f15746,f15747,f15748,f15749,f15750,f15751,f15752,f15753,f15754,f15755,f15813,f15830,f15833,f15836,f15839,f15842,f15845,f15849,f15850,f15824,f15856,f15825,f15858,f15860,f15898,f15906,f16151,f16154,f16153,f17891])).
fof(f17891,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f17857,f16157])).
fof(f16157,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK8(sK2,sK1,sK0))))))))))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f15929,f263])).
fof(f15929,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK8(sK2,sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f261,f218])).
fof(f218,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),sK8(X2,X1,X0)))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10,sK11,sK12])],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X8,X9,X10,X11,X12] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.quantHeuristics.LIST_LENGTH_4|split|12')).
fof(f17857,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK2,sK1,sK0)),s('type.list.list'(sK0),sK8(sK2,sK1,sK0)))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f261,f219])).
fof(f219,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),sK8(X2,X1,X0)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f16153,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl83),
  inference(cnf_transformation,[],[f16153_D])).
fof(f16153_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f16154,plain,(
  ( ! [X71] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.list.NIL_0',X71))))) ) | $spl84),
  inference(cnf_transformation,[],[f16154_D])).
fof(f16154_D,plain,(
  ( ! [X71] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.list.NIL_0',X71))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f16151,plain,(
  ( ! [X71] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.list.NIL_0',X71)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f16150,f261])).
fof(f16150,plain,(
  ( ! [X71] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.list.NIL_0',X71))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f16079,f235])).
fof(f235,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X23,X20] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X23))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.ADD_SYM')).
fof(f16079,plain,(
  ( ! [X71] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.list.NIL_0',X71))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(superposition,[],[f13500,f261])).
fof(f13500,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13406,f3288])).
fof(f3288,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3282,f217])).
fof(f217,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6] : ! [X18,X19] : s(X6,X18) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X18),s(X6,X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.bool.COND_CLAUSES|split|0')).
fof(f3282,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f1096])).
fof(f1096,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f216])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.list.LENGTH_NIL')).
fof(f1076,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl34),
  inference(backward_demodulation,[],[f992,f176])).
fof(f176,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f65])).
fof(f65,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.prim_rec.PRE|split|0')).
fof(f13406,plain,(
  ( ! [X33,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK1))) | s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X34,X33,X32))))) ) | $spl6),
  inference(superposition,[],[f228,f267])).
fof(f228,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)),s('type.list.list'(X0),sK17(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X14,X15] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) <=> ? [X16,X17] : (s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X17))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.list.LENGTH_EQ_SUM')).
fof(f15906,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15897,f267])).
fof(f15897,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f265,f263])).
fof(f15898,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f265,f263])).
fof(f15860,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | $spl80),
  inference(cnf_transformation,[],[f15860_D])).
fof(f15860_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f15858,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl79),
  inference(cnf_transformation,[],[f15858_D])).
fof(f15858_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f15825,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13556,f265])).
fof(f13556,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13555,f1076])).
fof(f13555,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13511,f2219])).
fof(f2219,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f235,f1083])).
fof(f1083,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f187])).
fof(f187,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|1')).
fof(f13511,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13406,f1076])).
fof(f15856,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | $spl76),
  inference(cnf_transformation,[],[f15856_D])).
fof(f15856_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f15824,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13538,f265])).
fof(f13538,plain,(
  ( ! [X6,X7] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0',X7,X6))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13406,f2219])).
fof(f15850,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15805,f262])).
fof(f15805,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f265,f220])).
fof(f220,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f15849,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15848,f262])).
fof(f15848,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15847,f267])).
fof(f15847,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15846,f2219])).
fof(f15846,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15806,f235])).
fof(f15806,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1083,f265,f220])).
fof(f15845,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15844,f262])).
fof(f15844,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15843,f267])).
fof(f15843,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15807,f2219])).
fof(f15807,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f2219,f265,f220])).
fof(f15842,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15841,f262])).
fof(f15841,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15840,f267])).
fof(f15840,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15808,f1082])).
fof(f1082,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f186])).
fof(f186,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|7')).
fof(f15808,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1082,f265,f220])).
fof(f15839,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15838,f262])).
fof(f15838,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15837,f267])).
fof(f15837,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15809,f12428])).
fof(f12428,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f12342,f255])).
fof(f255,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X20,X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) <=> s('type.num.num',X20) = s('type.num.num',X23))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|19')).
fof(f12342,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12341,f2219])).
fof(f12341,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12185,f2219])).
fof(f12185,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1113])).
fof(f1113,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f1020])).
fof(f1020,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1001,f217])).
fof(f1001,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f217,f210])).
fof(f210,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X20] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X20))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|17')).
fof(f247,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X23))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|2')).
fof(f15809,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f12428,f265,f220])).
fof(f15836,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15835,f262])).
fof(f15835,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f15834,f267])).
fof(f15834,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f15810,f196])).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_22_prove_ltb|split|1')).
fof(f15810,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f196,f265,f220])).
fof(f15833,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15832,f262])).
fof(f15832,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f15831,f267])).
fof(f15831,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(forward_demodulation,[],[f15811,f217])).
fof(f15811,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f217,f265,f220])).
fof(f15830,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15812,f267])).
fof(f15812,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f262,f265,f220])).
fof(f15813,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f262,f265,f220])).
fof(f15755,plain,(
  $false | ($spl43 | $spl48)),
  inference(global_subsumption,[],[f3267,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15642,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15615])).
fof(f15615,plain,(
  ( ! [X158,X159,X157,X155] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X155)) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11992])).
fof(f15614,plain,(
  ( ! [X154,X152,X151,X153,X150] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11991])).
fof(f15613,plain,(
  ( ! [X146,X149,X147,X145,X148] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11990])).
fof(f15611,plain,(
  ( ! [X132,X130,X133,X131,X129] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11986])).
fof(f15610,plain,(
  ( ! [X121,X118,X120,X119,X117] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X117),s('type.num.num',X118)))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11983])).
fof(f15607,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11975])).
fof(f15606,plain,(
  ( ! [X80,X78,X76,X79,X77] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11972])).
fof(f15604,plain,(
  ( ! [X70,X68,X71,X69,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11970])).
fof(f15603,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11968])).
fof(f15601,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11966])).
fof(f15600,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11965])).
fof(f15599,plain,(
  ( ! [X45,X43,X41,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11964])).
fof(f15598,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11963])).
fof(f15596,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11997])).
fof(f15595,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f11996])).
fof(f15643,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15594])).
fof(f15594,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f226])).
fof(f15644,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15593])).
fof(f15593,plain,(
  ( ! [X177,X175,X173,X176] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X173)) | ~p(s(bool,happ(s(fun(X175,bool),X176),s(X175,X177))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7375])).
fof(f15592,plain,(
  ( ! [X167,X165,X163,X166,X164] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X164),s('type.num.num',X163)))) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7373])).
fof(f15591,plain,(
  ( ! [X158,X161,X159,X162,X160] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X159),s('type.num.num',X158)))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7372])).
fof(f15589,plain,(
  ( ! [X146,X144,X142,X145,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X142),s('type.num.num',X143)))) | ~p(s(bool,happ(s(fun(X144,bool),X145),s(X144,X146))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7368])).
fof(f15587,plain,(
  ( ! [X127,X125,X128,X126,X129] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X125),s('type.num.num',X126)))) | ~p(s(bool,happ(s(fun(X127,bool),X128),s(X127,X129))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7364])).
fof(f15585,plain,(
  ( ! [X97,X95,X98,X96] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X95)))) | ~p(s(bool,happ(s(fun(X96,bool),X97),s(X96,X98))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7356])).
fof(f15584,plain,(
  ( ! [X85,X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X82),s('type.num.num',X81)))) | ~p(s(bool,happ(s(fun(X83,bool),X84),s(X83,X85))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7353])).
fof(f15583,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X91),s('type.num.num',X90)))) | ~p(s(bool,happ(s(fun(X92,bool),X93),s(X92,X94))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7355])).
fof(f15581,plain,(
  ( ! [X68,X66,X69,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66)))) | ~p(s(bool,happ(s(fun(X67,bool),X68),s(X67,X69))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7349])).
fof(f15579,plain,(
  ( ! [X61,X64,X62,X65,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X61),s('type.num.num',X62)))) | ~p(s(bool,happ(s(fun(X63,bool),X64),s(X63,X65))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7348])).
fof(f15578,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7346])).
fof(f15577,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7347])).
fof(f15576,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7345])).
fof(f15574,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7381])).
fof(f15573,plain,(
  ( ! [X39,X41,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X39,bool),X40),s(X39,X41))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f7382])).
fof(f15645,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15572])).
fof(f15572,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f224])).
fof(f15571,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5336])).
fof(f15569,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f223])).
fof(f15568,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3465])).
fof(f15564,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3458])).
fof(f15563,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3453])).
fof(f15556,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3457])).
fof(f15553,plain,(
  ( ! [X298,X297,X299] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X297),s('type.num.num',X298))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X298)))),X299,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f14315])).
fof(f15552,plain,(
  ( ! [X78,X79] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3488])).
fof(f15551,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3424])).
fof(f15550,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f6789])).
fof(f15549,plain,(
  ( ! [X81,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3490])).
fof(f15548,plain,(
  ( ! [X72,X71] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3485])).
fof(f15547,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5929])).
fof(f15546,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5580])).
fof(f15545,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f6290])).
fof(f15542,plain,(
  ( ! [X68,X67] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3483])).
fof(f15541,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f14555])).
fof(f15540,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f14817])).
fof(f15537,plain,(
  ( ! [X66] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3482])).
fof(f15536,plain,(
  ( ! [X70,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f3484])).
fof(f15534,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f258])).
fof(f15533,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f257])).
fof(f15656,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15655])).
fof(f15655,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15532,f6088])).
fof(f15532,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5003])).
fof(f15653,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15652])).
fof(f15652,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15531,f6088])).
fof(f15531,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5181])).
fof(f15650,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15649])).
fof(f15649,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15530,f6088])).
fof(f15530,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f4973])).
fof(f15647,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15646])).
fof(f15646,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15529,f6088])).
fof(f15529,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6088,f5151])).
fof(f15428,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(equality_resolution,[],[f220])).
fof(f15424,plain,(
  ( ! [X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.num.num',X22) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))) | s('type.list.list'(X18),X23) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X27),s('type.list.list'(X18),'const.list.APPEND_2'(s('type.list.list'(X18),sK16(X19,X20,X21,X18)),s('type.list.list'(X18),sK17(X19,X20,X21,X18)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X23))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))) )),
  inference(superposition,[],[f220,f230])).
fof(f15390,plain,(
  ( ! [X30,X28,X26,X24,X31,X29,X27,X25,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X27))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X24))) | s('type.list.list'(X26),X28) != s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X29),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X30),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X31),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X32),s('type.list.list'(X26),X27))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f220,f235])).
fof(f15430,plain,(
  ( ! [X6,X4,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1)))))))))))) )),
  inference(forward_demodulation,[],[f15429,f217])).
fof(f15429,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1)))))))))))) )),
  inference(forward_demodulation,[],[f15386,f217])).
fof(f15386,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1))))))))),s('type.list.list'(X0),X7)))))) )),
  inference(unit_resulting_resolution,[],[f217,f217,f220])).
fof(f15117,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f231])).
fof(f15116,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f231,f230])).
fof(f15114,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK16(X13,X14,X15,X12)),s('type.list.list'(X12),sK17(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f15109,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK16(X13,X14,X15,X12)),s('type.list.list'(X12),sK17(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f15104,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X16] : (s('type.list.list'(X10),X13) != s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),X14),s('type.list.list'(X10),X15))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),sK16(X11,X12,X13,X10)),s('type.list.list'(X10),sK17(X11,X12,X13,X10)))))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X15))) | s('type.num.num',X16) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))) )),
  inference(superposition,[],[f231,f230])).
fof(f15120,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f15119,f217])).
fof(f15119,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f15118,f217])).
fof(f15118,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f15101,f217])).
fof(f15101,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f217,f217,f217,f231])).
fof(f14989,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,happ(s(fun('type.list.list'(X44),bool),X48),s('type.list.list'(X44),X47)))) | s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK16(X45,X46,X47,X44)),s('type.list.list'(X44),sK17(X45,X46,X47,X44)))) = s('type.list.list'(X44),sK13('const.list.APPEND_2'(s('type.list.list'(X44),sK16(X45,X46,X47,X44)),s('type.list.list'(X44),sK17(X45,X46,X47,X44))),X48,'type.list.list'(X44))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X47))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X45)))) )),
  inference(superposition,[],[f222,f230])).
fof(f14988,plain,(
  ( ! [X39,X43,X41,X38,X42,X40] : (~p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X41)))) | p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X43)))) | s('type.list.list'(X38),X43) != s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK16(X39,X40,X41,X38)),s('type.list.list'(X38),sK17(X39,X40,X41,X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X41))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))) )),
  inference(superposition,[],[f221,f230])).
fof(f14982,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16))) | s('type.num.num',X16) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK17(X16,X15,'const.list.APPEND_2'(s('type.list.list'(X11),sK16(X12,X13,X14,X11)),s('type.list.list'(X11),sK17(X12,X13,X14,X11))),X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) )),
  inference(superposition,[],[f229,f230])).
fof(f14981,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK16(X10,X9,'const.list.APPEND_2'(s('type.list.list'(X5),sK16(X6,X7,X8,X5)),s('type.list.list'(X5),sK17(X6,X7,X8,X5))),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))) )),
  inference(superposition,[],[f228,f230])).
fof(f14980,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8('const.list.APPEND_2'(s('type.list.list'(X0),sK16(X1,X2,X3,X0)),s('type.list.list'(X0),sK17(X1,X2,X3,X0))),X4,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f218,f230])).
fof(f14896,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK8(X2,X0,X1))))) )),
  inference(superposition,[],[f218,f235])).
fof(f14941,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num',X112) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK8(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14895,f217])).
fof(f14895,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK8(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114))))) )),
  inference(superposition,[],[f218,f217])).
fof(f14940,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK8(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14894,f198])).
fof(f14894,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK8(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110))))) )),
  inference(superposition,[],[f218,f198])).
fof(f14938,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK8(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14892,f249])).
fof(f14892,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK8(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105))))) )),
  inference(superposition,[],[f218,f249])).
fof(f14937,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK8(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14891,f207])).
fof(f14891,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK8(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101))))) )),
  inference(superposition,[],[f218,f207])).
fof(f14934,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK8(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14889,f250])).
fof(f14889,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK8(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94))))) )),
  inference(superposition,[],[f218,f250])).
fof(f14933,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK8(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14888,f248])).
fof(f14888,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK8(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90))))) )),
  inference(superposition,[],[f218,f248])).
fof(f14932,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK8(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14887,f196])).
fof(f14887,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK8(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86))))) )),
  inference(superposition,[],[f218,f196])).
fof(f14931,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK8(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14886,f199])).
fof(f14886,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK8(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83))))) )),
  inference(superposition,[],[f218,f199])).
fof(f14930,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK8(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79)))),X80)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14885,f202])).
fof(f14885,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK8(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79)))),X80))))) )),
  inference(superposition,[],[f218,f202])).
fof(f14929,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK8(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14884,f197])).
fof(f14884,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK8(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77))))) )),
  inference(superposition,[],[f218,f197])).
fof(f14928,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK8(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14883,f177])).
fof(f14883,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK8(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74))))) )),
  inference(superposition,[],[f218,f177])).
fof(f14926,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK8(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14881,f245])).
fof(f14881,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK8(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69))))) )),
  inference(superposition,[],[f218,f245])).
fof(f14923,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK8(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14878,f244])).
fof(f14878,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK8(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59))))) )),
  inference(superposition,[],[f218,f244])).
fof(f14913,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK8(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f14872,f246])).
fof(f14872,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK8(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42))))) )),
  inference(superposition,[],[f218,f246])).
fof(f14862,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK8(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)),X11))))) )),
  inference(superposition,[],[f218,f235])).
fof(f14856,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK8('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X6,X3))))) )),
  inference(superposition,[],[f218,f217])).
fof(f14817,plain,(
  ( ! [X310,X309,X311] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))))))) )),
  inference(forward_demodulation,[],[f14792,f250])).
fof(f14792,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) )),
  inference(superposition,[],[f222,f250])).
fof(f14716,plain,(
  ( ! [X142,X143,X141] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X141),s('type.num.num',X142))))))) | s('type.num.num',X143) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142)))))) )),
  inference(superposition,[],[f255,f250])).
fof(f14796,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14682,f250])).
fof(f14682,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14681,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14680,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14795,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14679,f250])).
fof(f14679,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14555,plain,(
  ( ! [X304,X303,X305] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))))))) )),
  inference(forward_demodulation,[],[f14530,f249])).
fof(f14530,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) )),
  inference(superposition,[],[f222,f249])).
fof(f14454,plain,(
  ( ! [X136,X135,X137] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X137))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X135),s('type.num.num',X136))))))) | s('type.num.num',X137) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X136)))))) )),
  inference(superposition,[],[f255,f249])).
fof(f14534,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14422,f249])).
fof(f14422,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14421,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14420,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14533,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14419,f249])).
fof(f14419,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14332,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f249,f208])).
fof(f14315,plain,(
  ( ! [X298,X297,X299] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X297),s('type.num.num',X298))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X298)))),X299,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X299),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X297),s('type.num.num',X298))))))))) )),
  inference(forward_demodulation,[],[f14290,f248])).
fof(f14290,plain,(
  ( ! [X298,X297,X299] : (~p(s(bool,happ(s(fun('type.num.num',bool),X299),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X297),s('type.num.num',X298)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X298))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X298)))),X299,'type.num.num'))) )),
  inference(superposition,[],[f222,f248])).
fof(f14214,plain,(
  ( ! [X130,X131,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X131))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X129),s('type.num.num',X130))))))) | s('type.num.num',X131) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130)))))) )),
  inference(superposition,[],[f255,f248])).
fof(f14294,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14184,f248])).
fof(f14184,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f248])).
fof(f14183,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f248])).
fof(f14182,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f248])).
fof(f14293,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14181,f248])).
fof(f14181,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f248])).
fof(f13973,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f13964,f184])).
fof(f13964,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) != s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f260,f5388])).
fof(f13969,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f13959,f184])).
fof(f13959,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) != s(X2,g(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(superposition,[],[f260,f5388])).
fof(f13686,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK17(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13749,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134)))) )),
  inference(forward_demodulation,[],[f13684,f217])).
fof(f13684,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13748,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130)))))))) )),
  inference(forward_demodulation,[],[f13683,f198])).
fof(f13683,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13745,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123)))))) )),
  inference(forward_demodulation,[],[f13681,f207])).
fof(f13681,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13742,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114)))) )),
  inference(forward_demodulation,[],[f13679,f196])).
fof(f13679,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13741,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110)))))))) )),
  inference(forward_demodulation,[],[f13678,f199])).
fof(f13678,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13740,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106)))))))) )),
  inference(forward_demodulation,[],[f13677,f202])).
fof(f13677,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13739,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))))) )),
  inference(forward_demodulation,[],[f13676,f197])).
fof(f13676,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13738,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f13675,f177])).
fof(f13675,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13736,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91)))))))) )),
  inference(forward_demodulation,[],[f13673,f245])).
fof(f13673,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13731,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78)))))))) )),
  inference(forward_demodulation,[],[f13670,f244])).
fof(f13670,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13721,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55)))))))) )),
  inference(forward_demodulation,[],[f13664,f246])).
fof(f13664,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13654,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK17('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13649,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13648,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13646,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13644,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13643,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13642,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13641,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13640,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13638,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13635,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13629,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13619,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK17(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13613,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK17(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13434,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK16(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13432,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13431,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13429,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13427,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13426,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13425,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13424,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13423,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13421,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13418,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13412,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13402,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK16('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13484,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138)))) )),
  inference(forward_demodulation,[],[f13397,f217])).
fof(f13397,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13483,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133)))) )),
  inference(forward_demodulation,[],[f13396,f198])).
fof(f13396,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13480,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126)))) )),
  inference(forward_demodulation,[],[f13394,f207])).
fof(f13394,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13477,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117)))) )),
  inference(forward_demodulation,[],[f13392,f196])).
fof(f13392,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13476,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113)))) )),
  inference(forward_demodulation,[],[f13391,f199])).
fof(f13391,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13475,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109)))) )),
  inference(forward_demodulation,[],[f13390,f202])).
fof(f13390,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13474,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105)))) )),
  inference(forward_demodulation,[],[f13389,f197])).
fof(f13389,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13473,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101)))) )),
  inference(forward_demodulation,[],[f13388,f177])).
fof(f13388,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13471,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94)))) )),
  inference(forward_demodulation,[],[f13386,f245])).
fof(f13386,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13466,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81)))) )),
  inference(forward_demodulation,[],[f13383,f244])).
fof(f13383,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13456,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f13377,f246])).
fof(f13377,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13367,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK16(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13361,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK16(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13296,plain,(
  ( ! [X47,X48,X46] : (s(bool,'F_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(forward_demodulation,[],[f13212,f184])).
fof(f13212,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f222,f5388])).
fof(f13088,plain,(
  ( ! [X87,X85,X86] : (s(bool,X85) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X85),s(bool,X86)))) )),
  inference(superposition,[],[f5388,f217])).
fof(f11992,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X155)) | p(s(bool,happ(s(fun(X157,bool),X158),s(X157,sK15('const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X158,X157))))) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) )),
  inference(superposition,[],[f226,f217])).
fof(f11991,plain,(
  ( ! [X154,X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | p(s(bool,happ(s(fun(X152,bool),X153),s(X152,sK15('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X151)))),X153,X152))))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) )),
  inference(superposition,[],[f226,f238])).
fof(f11990,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,sK15('const.arithmetic.>=_2'(s('type.num.num',X145),s('type.num.num',X146)),X148,X147))))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) )),
  inference(superposition,[],[f226,f234])).
fof(f11986,plain,(
  ( ! [X132,X130,X133,X131,X129] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | p(s(bool,happ(s(fun(X131,bool),X132),s(X131,sK15('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X129))),s('type.num.num',X130)),X132,X131))))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) )),
  inference(superposition,[],[f226,f236])).
fof(f11983,plain,(
  ( ! [X121,X118,X120,X119,X117] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X117),s('type.num.num',X118)))) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X117))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X118)))),X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121))))) )),
  inference(superposition,[],[f226,f241])).
fof(f11975,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) )),
  inference(superposition,[],[f226,f193])).
fof(f11972,plain,(
  ( ! [X80,X78,X76,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | p(s(bool,happ(s(fun(X78,bool),X79),s(X78,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77)))),X79,X78))))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) )),
  inference(superposition,[],[f226,f237])).
fof(f11970,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK15('const.arithmetic.>_2'(s('type.num.num',X67),s('type.num.num',X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f226,f233])).
fof(f11968,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f226,f195])).
fof(f11966,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f226,f243])).
fof(f11965,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f226,f240])).
fof(f11964,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) )),
  inference(superposition,[],[f226,f239])).
fof(f11963,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) )),
  inference(superposition,[],[f226,f242])).
fof(f11997,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(subsumption_resolution,[],[f11961,f174])).
fof(f11961,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(superposition,[],[f226,f194])).
fof(f11996,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(subsumption_resolution,[],[f11960,f174])).
fof(f11960,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(superposition,[],[f226,f192])).
fof(f233,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X23,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X23),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.GREATER_DEF')).
fof(f236,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X23,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.LESS_EQ')).
fof(f237,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|25')).
fof(f239,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|4')).
fof(f240,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|6')).
fof(f242,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|3')).
fof(f243,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|22')).
fof(f257,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X20,X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|5')).
fof(f258,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f2064,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f233,f208])).
fof(f3457,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f3412,f233])).
fof(f3412,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) )),
  inference(superposition,[],[f222,f233])).
fof(f3573,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f236,f208])).
fof(f3595,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f3583,f236])).
fof(f3583,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f222,f236])).
fof(f4011,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f237,f208])).
fof(f4029,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4020,f237])).
fof(f4020,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f237])).
fof(f4358,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f239,f208])).
fof(f4374,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4366,f239])).
fof(f4366,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f239])).
fof(f4455,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f240,f208])).
fof(f4471,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4463,f240])).
fof(f4463,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f240])).
fof(f4770,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f242,f208])).
fof(f4786,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4778,f242])).
fof(f4778,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f242])).
fof(f4894,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f243,f208])).
fof(f4911,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4902,f243])).
fof(f4902,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f243])).
fof(f5264,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f5207,f179])).
fof(f5207,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f258,f208])).
fof(f7345,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f224,f242])).
fof(f7346,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f224,f239])).
fof(f7347,plain,(
  ( ! [X59,X57,X60,X58,X56] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f224,f240])).
fof(f7348,plain,(
  ( ! [X61,X64,X62,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X61),s('type.num.num',X62)))) | p(s(bool,happ(s(fun(X63,bool),X64),s(X63,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X61))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62)))),X64,X63))))) | ~p(s(bool,happ(s(fun(X63,bool),X64),s(X63,X65))))) )),
  inference(superposition,[],[f224,f243])).
fof(f7353,plain,(
  ( ! [X85,X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X82),s('type.num.num',X81)))) | p(s(bool,happ(s(fun(X83,bool),X84),s(X83,sK14('const.arithmetic.>_2'(s('type.num.num',X81),s('type.num.num',X82)),X84,X83))))) | ~p(s(bool,happ(s(fun(X83,bool),X84),s(X83,X85))))) )),
  inference(superposition,[],[f224,f233])).
fof(f7355,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X91),s('type.num.num',X90)))) | p(s(bool,happ(s(fun(X92,bool),X93),s(X92,sK14('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) | ~p(s(bool,happ(s(fun(X92,bool),X93),s(X92,X94))))) )),
  inference(superposition,[],[f224,f237])).
fof(f7368,plain,(
  ( ! [X146,X144,X142,X145,X143] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X142),s('type.num.num',X143)))) | p(s(bool,happ(s(fun(X144,bool),X145),s(X144,sK14('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X142))),s('type.num.num',X143)),X145,X144))))) | ~p(s(bool,happ(s(fun(X144,bool),X145),s(X144,X146))))) )),
  inference(superposition,[],[f224,f236])).
fof(f5151,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f258,f235])).
fof(f4973,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3541,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f236,f177])).
fof(f5181,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f258,f235])).
fof(f5003,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3542,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f236,f197])).
fof(f3543,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f236,f202])).
fof(f3544,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f236,f199])).
fof(f7349,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66)))) | p(s(bool,happ(s(fun(X67,bool),X68),s(X67,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66)))),X68,X67))))) | ~p(s(bool,happ(s(fun(X67,bool),X68),s(X67,X69))))) )),
  inference(superposition,[],[f224,f195])).
fof(f3453,plain,(
  ( ! [X14,X15] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))))))) )),
  inference(forward_demodulation,[],[f3409,f195])).
fof(f3409,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) )),
  inference(superposition,[],[f222,f195])).
fof(f731,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f195,f208])).
fof(f195,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X20] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|33')).
fof(f221,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK13(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X6] : ! [X26,X27] : (? [X7] : (s(X6,X7) = s(X6,X27) & p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X27)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.bool.UNWIND_THM2')).
fof(f222,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK13(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f160])).
fof(f223,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f224,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK14(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK14(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6] : ! [X26,X28] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7)))) & p(s(bool,X28))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7)))) & p(s(bool,X28))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f226,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f3402,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X3) = s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f3449,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,sK13('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f3403,f217])).
fof(f3403,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2))) = s(X0,sK13('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f5336,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f5333,f217])).
fof(f5333,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f223,f217])).
fof(f5337,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f5335,f179])).
fof(f5335,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) )),
  inference(superposition,[],[f223,f208])).
fof(f7356,plain,(
  ( ! [X97,X95,X98,X96] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X95)))) | p(s(bool,happ(s(fun(X96,bool),X97),s(X96,sK14('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X95)))),X97,X96))))) | ~p(s(bool,happ(s(fun(X96,bool),X97),s(X96,X98))))) )),
  inference(superposition,[],[f224,f193])).
fof(f7364,plain,(
  ( ! [X127,X125,X128,X126,X129] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X125),s('type.num.num',X126)))) | p(s(bool,happ(s(fun(X127,bool),X128),s(X127,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X126)))),X128,X127))))) | ~p(s(bool,happ(s(fun(X127,bool),X128),s(X127,X129))))) )),
  inference(superposition,[],[f224,f241])).
fof(f7372,plain,(
  ( ! [X158,X161,X159,X162,X160] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X159),s('type.num.num',X158)))) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK14('const.arithmetic.>=_2'(s('type.num.num',X158),s('type.num.num',X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162))))) )),
  inference(superposition,[],[f224,f234])).
fof(f7373,plain,(
  ( ! [X167,X165,X163,X166,X164] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X164),s('type.num.num',X163)))) | p(s(bool,happ(s(fun(X165,bool),X166),s(X165,sK14('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X164)))),X166,X165))))) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) )),
  inference(superposition,[],[f224,f238])).
fof(f7375,plain,(
  ( ! [X177,X175,X173,X176,X174] : (~p(s(bool,X173)) | p(s(bool,happ(s(fun(X175,bool),X176),s(X175,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X173),s(bool,X174)),X176,X175))))) | ~p(s(bool,happ(s(fun(X175,bool),X176),s(X175,X177))))) )),
  inference(superposition,[],[f224,f217])).
fof(f7381,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37))))) )),
  inference(subsumption_resolution,[],[f7342,f174])).
fof(f7342,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37))))) )),
  inference(superposition,[],[f224,f192])).
fof(f7382,plain,(
  ( ! [X39,X41,X38,X40] : (p(s(bool,happ(s(fun(X39,bool),X40),s(X39,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40,X39))))) | ~p(s(bool,happ(s(fun(X39,bool),X40),s(X39,X41))))) )),
  inference(subsumption_resolution,[],[f7343,f174])).
fof(f7343,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X39,bool),X40),s(X39,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40,X39))))) | ~p(s(bool,happ(s(fun(X39,bool),X40),s(X39,X41))))) )),
  inference(superposition,[],[f224,f194])).
fof(f3405,plain,(
  ( ! [X6,X7] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X6)))) | s(bool,'F_0') = s(bool,sK13('F_0',X7,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f222,f208])).
fof(f5334,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK13(X0,X1,bool))) )),
  inference(superposition,[],[f223,f208])).
fof(f6751,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X16),s(bool,X17)))) | s(bool,X15) != s(bool,X17) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f221,f208])).
fof(f6752,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X18)))) | p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X20)))) | s(bool,'F_0') != s(bool,X20) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f221,f208])).
fof(f3451,plain,(
  ( ! [X10,X11] : (s(bool,'T_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3407,f192])).
fof(f3407,plain,(
  ( ! [X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool))) )),
  inference(superposition,[],[f222,f192])).
fof(f3452,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3408,f194])).
fof(f3408,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool))) )),
  inference(superposition,[],[f222,f194])).
fof(f3404,plain,(
  ( ! [X4,X5] : (~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0')))) | s(bool,X4) = s(bool,sK13(X4,X5,bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f222,f208])).
fof(f3450,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f3406,f184])).
fof(f3406,plain,(
  ( ! [X8,X9] : (~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool))) )),
  inference(superposition,[],[f222,f184])).
fof(f3458,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f3413,f193])).
fof(f3413,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) )),
  inference(superposition,[],[f222,f193])).
fof(f4667,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4655,f241])).
fof(f4655,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f241])).
fof(f4200,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4199,f241])).
fof(f4199,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4183,f234])).
fof(f4183,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f238])).
fof(f3465,plain,(
  ( ! [X33,X31,X32] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f3419,f234])).
fof(f3419,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) )),
  inference(superposition,[],[f222,f234])).
fof(f6789,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num',X132)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) )),
  inference(superposition,[],[f221,f235])).
fof(f3486,plain,(
  ( ! [X74,X73] : (s('type.num.num',X73) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73))))) )),
  inference(forward_demodulation,[],[f3442,f196])).
fof(f3442,plain,(
  ( ! [X74,X73] : (~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73)))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num'))) )),
  inference(superposition,[],[f222,f196])).
fof(f3487,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f3443,f232])).
fof(f3443,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num'))) )),
  inference(superposition,[],[f222,f232])).
fof(f3482,plain,(
  ( ! [X66] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3438,f177])).
fof(f3438,plain,(
  ( ! [X66] : (~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) )),
  inference(superposition,[],[f222,f177])).
fof(f3484,plain,(
  ( ! [X70,X69] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))))))) )),
  inference(forward_demodulation,[],[f3440,f202])).
fof(f3440,plain,(
  ( ! [X70,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num'))) )),
  inference(superposition,[],[f222,f202])).
fof(f3483,plain,(
  ( ! [X68,X67] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))))))) )),
  inference(forward_demodulation,[],[f3439,f197])).
fof(f3439,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) )),
  inference(superposition,[],[f222,f197])).
fof(f6290,plain,(
  ( ! [X206,X204,X205] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))))))) )),
  inference(forward_demodulation,[],[f6270,f246])).
fof(f6270,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) )),
  inference(superposition,[],[f222,f246])).
fof(f5580,plain,(
  ( ! [X191,X192,X193] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))))))) )),
  inference(forward_demodulation,[],[f5563,f244])).
fof(f5563,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) )),
  inference(superposition,[],[f222,f244])).
fof(f5929,plain,(
  ( ! [X198,X199,X197] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))))))) )),
  inference(forward_demodulation,[],[f5910,f245])).
fof(f5910,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) )),
  inference(superposition,[],[f222,f245])).
fof(f3485,plain,(
  ( ! [X72,X71] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))))))) )),
  inference(forward_demodulation,[],[f3441,f199])).
fof(f3441,plain,(
  ( ! [X72,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num'))) )),
  inference(superposition,[],[f222,f199])).
fof(f3490,plain,(
  ( ! [X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f3446,f198])).
fof(f3446,plain,(
  ( ! [X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f222,f198])).
fof(f3424,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X41),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) )),
  inference(superposition,[],[f222,f235])).
fof(f3488,plain,(
  ( ! [X78,X79] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))))))) )),
  inference(forward_demodulation,[],[f3444,f207])).
fof(f3444,plain,(
  ( ! [X78,X79] : (~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) )),
  inference(superposition,[],[f222,f207])).
fof(f689,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f193,f208])).
fof(f193,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X20] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X20))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|32')).
fof(f234,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.GREATER_EQ')).
fof(f238,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|31')).
fof(f241,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|28')).
fof(f2179,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f234,f208])).
fof(f4174,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f238,f208])).
fof(f4647,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f241,f208])).
fof(f6224,plain,(
  ( ! [X105,X106,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X104),s('type.num.num',X105))))))) | s('type.num.num',X106) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X105)))))) )),
  inference(superposition,[],[f255,f246])).
fof(f5864,plain,(
  ( ! [X99,X97,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',X98))))))) | s('type.num.num',X99) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98)))))) )),
  inference(superposition,[],[f255,f245])).
fof(f5517,plain,(
  ( ! [X92,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X93))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num',X92))))))) | s('type.num.num',X93) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X92)))))) )),
  inference(superposition,[],[f255,f244])).
fof(f5388,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f5359,f179])).
fof(f5359,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f417,f184])).
fof(f3341,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X24))))) | s('type.num.num',X25) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f207])).
fof(f3294,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f207,f208])).
fof(f3023,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f256,f235])).
fof(f3015,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f235,f256])).
fof(f2768,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))) | s('type.num.num',X47) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X45),s('type.num.num',X46)))) )),
  inference(superposition,[],[f255,f217])).
fof(f2764,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f196])).
fof(f2761,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))) | s('type.num.num',X32) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f255,f197])).
fof(f2747,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f255,f235])).
fof(f974,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) )),
  inference(superposition,[],[f209,f217])).
fof(f971,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f209,f196])).
fof(f970,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f209,f197])).
fof(f964,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f186])).
fof(f961,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f187])).
fof(f849,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f217,f208])).
fof(f730,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f195,f178])).
fof(f688,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f193,f178])).
fof(f179,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13',aHL_FALSITY)).
fof(f183,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|23')).
fof(f184,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|2')).
fof(f191,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|20')).
fof(f207,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X20] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X20))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.iSUB_THM|split|2')).
fof(f249,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.iSUB_THM|split|4')).
fof(f250,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.iSUB_THM|split|5')).
fof(f395,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f179,f180,f251])).
fof(f422,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,X5)) )),
  inference(forward_demodulation,[],[f421,f184])).
fof(f421,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f402,f179])).
fof(f402,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f251,f184])).
fof(f206,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|24')).
fof(f204,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|21')).
fof(f205,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X20] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|27')).
fof(f270,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f214])).
fof(f269,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f213])).
fof(f248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X20,X23] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.iSUB_THM|split|3')).
fof(f192,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|0')).
fof(f197,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_suc|split|1')).
fof(f203,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|9')).
fof(f178,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f50])).
fof(f50,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|13')).
fof(f177,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f59])).
fof(f59,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_suc|split|0')).
fof(f202,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_suc|split|2')).
fof(f194,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_lt|split|1')).
fof(f200,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|10')).
fof(f198,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X20))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|16')).
fof(f199,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|14')).
fof(f244,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|12')).
fof(f245,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|5')).
fof(f246,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|8')).
fof(f256,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f168])).
fof(f229,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f230,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)),s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f231,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f268,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f201,f178])).
fof(f201,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|11')).
fof(f417,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f400,f179])).
fof(f400,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f251,f208])).
fof(f382,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f376,f179])).
fof(f376,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f175,f208])).
fof(f374,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f179,f208])).
fof(f370,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f208,f208])).
fof(f260,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13',aHL_EXT)).
fof(f251,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X18,X19] : ((p(s(bool,X18)) => p(s(bool,X19))) => ((p(s(bool,X19)) => p(s(bool,X18))) => s(bool,X18) = s(bool,X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.bool.IMP_ANTISYM_AX')).
fof(f254,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f232,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X7,X24] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X24),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.iSUB_THM|split|0')).
fof(f215,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f154])).
fof(f213,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X20] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X20))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|30')).
fof(f214,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f209,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f151])).
fof(f208,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13',aHL_BOOL_CASES)).
fof(f190,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|29')).
fof(f189,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|26')).
fof(f188,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|6')).
fof(f185,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X25),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f182,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.arithmetic.MULT|split|0')).
fof(f181,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|4')).
fof(f180,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f20])).
fof(f20,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|34')).
fof(f175,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.numeral.numeral_distrib|split|35')).
fof(f174,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13',aHL_TRUTH)).
fof(f15754,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15631,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15631,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11926])).
fof(f11926,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11925,f245])).
fof(f11925,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11752,f1091])).
fof(f1091,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f205])).
fof(f11752,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(superposition,[],[f3772,f245])).
fof(f3772,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl34),
  inference(superposition,[],[f1116,f1091])).
fof(f1116,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1098,f1076])).
fof(f1098,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f269])).
fof(f15753,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15630,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15630,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11918])).
fof(f11918,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11917,f244])).
fof(f11917,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11749,f1091])).
fof(f11749,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(superposition,[],[f3772,f244])).
fof(f15752,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15629,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15629,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11903])).
fof(f11903,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11902,f246])).
fof(f11902,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11743,f1091])).
fof(f11743,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(superposition,[],[f3772,f246])).
fof(f15751,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15628,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15628,plain,(
  ( ! [X61,X60] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X61)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f2293])).
fof(f2293,plain,(
  ( ! [X61,X60] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X61)))) ) | $spl34),
  inference(superposition,[],[f1116,f235])).
fof(f15750,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15627,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15627,plain,(
  ( ! [X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f2294])).
fof(f2294,plain,(
  ( ! [X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | $spl34),
  inference(superposition,[],[f1117,f235])).
fof(f1117,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1099,f1076])).
fof(f1099,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f270])).
fof(f15749,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15626,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15626,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11616])).
fof(f11616,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3771,f235])).
fof(f3771,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f1117,f1091])).
fof(f15748,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15625,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15625,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11734])).
fof(f11734,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f3772,f235])).
fof(f15747,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15624,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15624,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11215])).
fof(f11215,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9971,f1116])).
fof(f9971,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4105,f197])).
fof(f4105,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2022,f199])).
fof(f2022,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f1992,f199])).
fof(f1992,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f1983,f1934])).
fof(f1934,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1910,f199])).
fof(f1910,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f1909,f179])).
fof(f1909,plain,(
  ( ! [X23] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1908,f184])).
fof(f1908,plain,(
  ( ! [X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1907,f236])).
fof(f1907,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1896,f1091])).
fof(f1896,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(superposition,[],[f1117,f199])).
fof(f1983,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) | $spl34),
  inference(superposition,[],[f1094,f202])).
fof(f1094,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f210])).
fof(f15746,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15623,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15623,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f9741])).
fof(f9741,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4069,f199])).
fof(f4069,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2022,f1116])).
fof(f15745,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15622,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15622,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11163])).
fof(f11163,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9828,f1116])).
fof(f9828,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4104,f197])).
fof(f4104,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2022,f202])).
fof(f15744,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15621,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15621,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f9740])).
fof(f9740,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4069,f202])).
fof(f15743,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15620,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15620,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11123])).
fof(f11123,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9571,f1116])).
fof(f9571,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4066,f197])).
fof(f4066,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2021,f199])).
fof(f2021,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f1992,f202])).
fof(f15742,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15619,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15619,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f9335])).
fof(f9335,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4030,f199])).
fof(f4030,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2021,f1116])).
fof(f15741,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15618,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15618,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f9334])).
fof(f9334,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4030,f202])).
fof(f15740,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15617,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15617,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f10952])).
fof(f10952,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9528,f1116])).
fof(f9528,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4065,f197])).
fof(f4065,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2021,f202])).
fof(f15739,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15616,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15616,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f10946])).
fof(f10946,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f9527,f1116])).
fof(f9527,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(superposition,[],[f4065,f177])).
fof(f15738,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614,f15642])).
fof(f15737,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613,f15614])).
fof(f15736,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611,f15613])).
fof(f15735,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15612,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611])).
fof(f15612,plain,(
  ( ! [X144,X142,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f12000])).
fof(f12000,plain,(
  ( ! [X144,X142,X143,X141] : (p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK15('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11989,f174])).
fof(f11989,plain,(
  ( ! [X144,X142,X143,X141] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK15('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(superposition,[],[f226,f1086])).
fof(f1086,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f190])).
fof(f15734,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610,f15611])).
fof(f15733,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607,f15610])).
fof(f15732,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15609,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607])).
fof(f15609,plain,(
  ( ! [X116,X114,X115,X113] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11982])).
fof(f11982,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.ZERO_0')),X115,X114))))) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116))))) ) | $spl34),
  inference(superposition,[],[f226,f1091])).
fof(f15731,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15608,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607])).
fof(f15608,plain,(
  ( ! [X94,X95,X93] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11999])).
fof(f11999,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11976,f174])).
fof(f11976,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(superposition,[],[f226,f1085])).
fof(f1085,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f189])).
fof(f15730,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606,f15607])).
fof(f15729,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604,f15606])).
fof(f15728,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15605,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604])).
fof(f15605,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11971])).
fof(f11971,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | p(s(bool,happ(s(fun(X73,bool),X74),s(X73,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.ZERO_0')),X74,X73))))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | $spl34),
  inference(superposition,[],[f226,f1092])).
fof(f1092,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f206])).
fof(f15727,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603,f15604])).
fof(f15726,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601,f15603])).
fof(f15725,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15602,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601])).
fof(f15602,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11998])).
fof(f11998,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11967,f174])).
fof(f11967,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(superposition,[],[f226,f1100])).
fof(f1100,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f382])).
fof(f15724,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600,f15601])).
fof(f15723,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599,f15600])).
fof(f15722,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598,f15599])).
fof(f15721,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596,f15598])).
fof(f15720,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15597,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596])).
fof(f15597,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f11962])).
fof(f11962,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))),X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | $spl34),
  inference(superposition,[],[f226,f1090])).
fof(f1090,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f204])).
fof(f15719,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595,f15596])).
fof(f15718,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643,f15595])).
fof(f15717,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644,f15643])).
fof(f15716,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592,f15644])).
fof(f15715,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591,f15592])).
fof(f15714,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589,f15591])).
fof(f15713,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15590,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589])).
fof(f15590,plain,(
  ( ! [X156,X157,X155] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7390])).
fof(f7390,plain,(
  ( ! [X156,X154,X157,X155] : (p(s(bool,happ(s(fun(X155,bool),X156),s(X155,sK14('const.arithmetic.>=_2'(s('type.num.num',X154),s('type.num.num','const.arithmetic.ZERO_0')),X156,X155))))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7371,f174])).
fof(f7371,plain,(
  ( ! [X156,X154,X157,X155] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X155,bool),X156),s(X155,sK14('const.arithmetic.>=_2'(s('type.num.num',X154),s('type.num.num','const.arithmetic.ZERO_0')),X156,X155))))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) ) | $spl34),
  inference(superposition,[],[f224,f1086])).
fof(f15712,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587,f15589])).
fof(f15711,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15588,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587])).
fof(f15588,plain,(
  ( ! [X123,X121,X124,X122] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X122,bool),X123),s(X122,X124))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7363])).
fof(f7363,plain,(
  ( ! [X123,X121,X124,X122] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X121),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X122,bool),X123),s(X122,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X123,X122))))) | ~p(s(bool,happ(s(fun(X122,bool),X123),s(X122,X124))))) ) | $spl34),
  inference(superposition,[],[f224,f1091])).
fof(f15710,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585,f15587])).
fof(f15709,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15586,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585])).
fof(f15586,plain,(
  ( ! [X109,X110,X108] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X108,bool),X109),s(X108,X110))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7388])).
fof(f7388,plain,(
  ( ! [X109,X107,X110,X108] : (p(s(bool,happ(s(fun(X108,bool),X109),s(X108,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X107)),X109,X108))))) | ~p(s(bool,happ(s(fun(X108,bool),X109),s(X108,X110))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7359,f174])).
fof(f7359,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X108,bool),X109),s(X108,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X107)),X109,X108))))) | ~p(s(bool,happ(s(fun(X108,bool),X109),s(X108,X110))))) ) | $spl34),
  inference(superposition,[],[f224,f1085])).
fof(f15708,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584,f15585])).
fof(f15707,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583,f15584])).
fof(f15706,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581,f15583])).
fof(f15705,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15582,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581])).
fof(f15582,plain,(
  ( ! [X88,X87,X89,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7354])).
fof(f7354,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)))) | p(s(bool,happ(s(fun(X87,bool),X88),s(X87,sK14('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.ZERO_0')),X88,X87))))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) ) | $spl34),
  inference(superposition,[],[f224,f1092])).
fof(f15704,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579,f15581])).
fof(f15703,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15580,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579])).
fof(f15580,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7385])).
fof(f7385,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,happ(s(fun(X74,bool),X75),s(X74,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75,X74))))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7351,f174])).
fof(f7351,plain,(
  ( ! [X76,X74,X75] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75,X74))))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) ) | $spl34),
  inference(superposition,[],[f224,f1100])).
fof(f15702,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578,f15579])).
fof(f15701,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577,f15578])).
fof(f15700,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576,f15577])).
fof(f15699,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574,f15576])).
fof(f15698,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15575,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574])).
fof(f15575,plain,(
  ( ! [X45,X43,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f7344])).
fof(f7344,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl34),
  inference(superposition,[],[f224,f1090])).
fof(f15697,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573,f15574])).
fof(f15696,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645,f15573])).
fof(f15695,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571,f15645])).
fof(f15694,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569,f15571])).
fof(f15693,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568,f15569])).
fof(f15692,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564,f15568])).
fof(f15688,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563,f15564])).
fof(f15687,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556,f15563])).
fof(f15680,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553,f15556])).
fof(f15677,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552,f15553])).
fof(f15676,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551,f15552])).
fof(f15675,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550,f15551])).
fof(f15674,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549,f15550])).
fof(f15673,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548,f15549])).
fof(f15672,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547,f15548])).
fof(f15671,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546,f15547])).
fof(f15670,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545,f15546])).
fof(f15669,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542,f15545])).
fof(f15668,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15544,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542])).
fof(f15544,plain,(
  ( ! [X261,X263,X262] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X261),s('type.num.num',X262))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262)))),X263,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f12424])).
fof(f12424,plain,(
  ( ! [X261,X263,X262] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X261),s('type.num.num',X262))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262)))),X263,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X263),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X261),s('type.num.num',X262))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12423,f12343])).
fof(f12343,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(backward_demodulation,[],[f12342,f247])).
fof(f12423,plain,(
  ( ! [X261,X263,X262] : (~p(s(bool,happ(s(fun('type.num.num',bool),X263),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X261),s('type.num.num',X262)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262)))),X263,'type.num.num'))) ) | $spl34),
  inference(forward_demodulation,[],[f12338,f12342])).
fof(f12338,plain,(
  ( ! [X261,X263,X262] : (~p(s(bool,happ(s(fun('type.num.num',bool),X263),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X261),s('type.num.num',X262)))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X262)))),X263,'type.num.num'))) )),
  inference(superposition,[],[f222,f247])).
fof(f15667,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15543,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542])).
fof(f15543,plain,(
  ( ! [X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f3468])).
fof(f3468,plain,(
  ( ! [X36] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3422,f1901])).
fof(f1901,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1873,f197])).
fof(f1873,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1114])).
fof(f1114,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1077,f177])).
fof(f1077,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(backward_demodulation,[],[f1076,f178])).
fof(f3422,plain,(
  ( ! [X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1901])).
fof(f15666,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541,f15542])).
fof(f15665,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540,f15541])).
fof(f15664,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537,f15540])).
fof(f15663,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15539,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537])).
fof(f15539,plain,(
  ( ! [X35] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f3467])).
fof(f3467,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3421,f1114])).
fof(f3421,plain,(
  ( ! [X35] : (~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1114])).
fof(f15662,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15538,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537])).
fof(f15538,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6088,f3476])).
fof(f3476,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3432,f1115])).
fof(f1115,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1097,f177])).
fof(f1097,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f268])).
fof(f3432,plain,(
  ( ! [X56,X55] : (~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1115])).
fof(f15661,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536,f15537])).
fof(f15660,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534,f15536])).
fof(f15659,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533,f15534])).
fof(f15658,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656,f15533])).
fof(f15657,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653,f15656])).
fof(f15654,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650,f15653])).
fof(f15651,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2747,f2761,f2764,f2768,f3015,f3023,f3294,f3341,f5388,f5517,f5864,f6224,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3484,f3482,f3487,f3486,f6789,f3465,f4200,f4667,f3458,f3450,f3404,f3452,f3451,f6752,f6751,f5334,f3405,f7382,f7381,f7375,f7373,f7372,f7364,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f3543,f3542,f5003,f5181,f3541,f4973,f5151,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11996,f11997,f11963,f11964,f11965,f11966,f11968,f11970,f11972,f11975,f11983,f11986,f11990,f11991,f11992,f13088,f13296,f13361,f13367,f13456,f13466,f13471,f13473,f13474,f13475,f13476,f13477,f13480,f13483,f13484,f13402,f13412,f13418,f13421,f13423,f13424,f13425,f13426,f13427,f13429,f13431,f13432,f13434,f13613,f13619,f13629,f13635,f13638,f13640,f13641,f13642,f13643,f13644,f13646,f13648,f13649,f13654,f13721,f13731,f13736,f13738,f13739,f13740,f13741,f13742,f13745,f13748,f13749,f13686,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14555,f14795,f14680,f14681,f14796,f14716,f14817,f14856,f14862,f14913,f14923,f14926,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14937,f14938,f14940,f14941,f14896,f14980,f14981,f14982,f14988,f14989,f15120,f15104,f15109,f15114,f15116,f15117,f15430,f15390,f15424,f15428,f6088,f15647,f15650])).
fof(f15648,plain,(
  $false | ($spl34 | $spl43 | $spl48)),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f992,f1076,f1114,f1078,f1079,f1080,f1081,f1082,f1083,f1084,f1085,f1086,f1088,f1089,f1093,f1094,f1095,f1096,f1115,f1100,f1101,f1118,f1119,f1106,f1107,f1108,f1111,f1113,f1729,f1797,f1901,f1910,f1935,f1933,f1934,f1940,f1992,f1996,f1995,f1998,f1997,f2019,f2020,f2021,f2022,f2080,f2104,f2133,f2195,f2218,f2217,f2219,f2290,f2291,f2396,f2416,f2415,f2516,f2546,f2577,f2637,f2636,f2877,f2878,f2746,f2747,f2749,f2881,f2753,f2882,f2883,f2884,f2885,f2886,f2887,f2888,f2761,f2764,f2891,f2892,f2768,f2770,f3015,f3023,f3125,f3126,f3185,f3128,f3187,f3253,f3262,f3267,f3272,f3268,f3278,f3284,f3288,f3294,f3341,f3356,f3384,f3462,f3497,f3507,f3659,f3673,f3733,f3798,f3896,f3894,f3939,f3940,f4063,f4064,f4065,f4066,f4103,f4104,f4105,f4273,f4379,f4477,f4476,f4577,f4672,f4708,f4822,f4824,f4825,f4948,f4968,f5137,f5343,f5388,f5395,f5400,f5402,f5403,f5406,f5446,f5447,f5448,f5481,f5482,f5517,f5539,f5791,f5792,f5826,f5827,f5864,f5886,f5956,f6026,f6146,f6147,f6182,f6183,f6224,f6246,f6318,f6319,f6573,f6624,f6666,f6668,f6720,f6721,f6728,f6733,f6740,f6744,f6825,f6864,f7028,f7029,f7030,f7031,f7032,f7033,f7034,f7035,f7036,f7037,f7038,f7039,f7040,f7041,f7042,f7043,f6936,f7057,f7066,f7068,f7073,f7081,f7088,f7090,f7093,f7094,f7134,f7332,f7377,f7383,f7386,f7392,f1827,f1829,f2293,f2294,f4787,f4069,f4030,f4674,f4668,f4140,f4646,f4139,f4645,f4138,f3772,f3771,f3770,f1117,f1116,f1091,f4647,f4174,f2179,f241,f238,f234,f193,f689,f3488,f3424,f3490,f3485,f5929,f5580,f6290,f3483,f3468,f3484,f3467,f3476,f3482,f4281,f3667,f3489,f3487,f3481,f3480,f3479,f3478,f3477,f3475,f3473,f3472,f3466,f3469,f3470,f3474,f3486,f6789,f3788,f3465,f4200,f4667,f3458,f5131,f3459,f3456,f3450,f3404,f3464,f3461,f3454,f3452,f3451,f6752,f6751,f5334,f3405,f7390,f7388,f7385,f7382,f7381,f7375,f7373,f7372,f7364,f7363,f7356,f5337,f5336,f3449,f3402,f226,f224,f223,f222,f221,f195,f731,f3453,f7349,f3544,f4009,f4860,f3543,f4008,f4188,f4661,f4859,f3542,f5003,f5181,f7354,f7344,f4187,f3857,f3840,f3725,f3709,f3541,f1092,f1090,f4973,f5151,f3977,f4893,f3976,f4892,f7368,f7355,f7353,f7348,f7347,f7346,f7345,f5264,f4911,f4894,f4786,f4770,f4471,f4455,f4374,f4358,f4029,f4011,f3595,f3573,f3457,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f8644,f9001,f8999,f9000,f9118,f9167,f9168,f9283,f9284,f9298,f9297,f9334,f9335,f9527,f9528,f9529,f9530,f9571,f9572,f9573,f9704,f9703,f9740,f9741,f9828,f9829,f9830,f9971,f9972,f9973,f9999,f10000,f10156,f10157,f10196,f10318,f10334,f10446,f10445,f10564,f10683,f10682,f10804,f10950,f10946,f10989,f10952,f11161,f11123,f11200,f11163,f11253,f11215,f11294,f11485,f11616,f11734,f11903,f11918,f11926,f11947,f11769,f11996,f11997,f11962,f11963,f11964,f11965,f11966,f11998,f11968,f11970,f11971,f11972,f11975,f11999,f11982,f11983,f11986,f12000,f11990,f11991,f11992,f12342,f12343,f12344,f12345,f12382,f12383,f12384,f12388,f12402,f12406,f12408,f12420,f12424,f12428,f12482,f12487,f12654,f12830,f12909,f13088,f13296,f13359,f13358,f13361,f13362,f13440,f13441,f13442,f13443,f13367,f13444,f13445,f13448,f13450,f13452,f13453,f13455,f13456,f13457,f13459,f13461,f13463,f13465,f13466,f13468,f13470,f13471,f13472,f13473,f13474,f13475,f13476,f13477,f13479,f13480,f13482,f13483,f13484,f13485,f13399,f13400,f13401,f13402,f13404,f13405,f13486,f13487,f13488,f13410,f13489,f13412,f13413,f13490,f13491,f13492,f13493,f13418,f13494,f13495,f13421,f13422,f13423,f13424,f13425,f13426,f13427,f13496,f13429,f13497,f13431,f13432,f13433,f13434,f13436,f13437,f13611,f13610,f13613,f13614,f13691,f13616,f13617,f13618,f13619,f13621,f13622,f13692,f13693,f13694,f13627,f13695,f13629,f13630,f13696,f13697,f13698,f13699,f13635,f13700,f13701,f13638,f13639,f13640,f13641,f13642,f13643,f13644,f13702,f13646,f13703,f13648,f13649,f13705,f13706,f13707,f13708,f13654,f13709,f13710,f13713,f13715,f13717,f13718,f13720,f13721,f13722,f13724,f13726,f13728,f13730,f13731,f13733,f13735,f13736,f13737,f13738,f13739,f13740,f13741,f13742,f13744,f13745,f13747,f13748,f13749,f13685,f13686,f13688,f13689,f13969,f13973,f14293,f14182,f14183,f14294,f14214,f14236,f14315,f14332,f14533,f14420,f14421,f14534,f14454,f14476,f14555,f14795,f14680,f14681,f14796,f14716,f14738,f14817,f14856,f14857,f14901,f14902,f14903,f14904,f14862,f14905,f14906,f14908,f14909,f14910,f14911,f14912,f14913,f14914,f14916,f14918,f14920,f14922,f14923,f14924,f14925,f14926,f14927,f14928,f14929,f14930,f14931,f14932,f14933,f14934,f14936,f14937,f14938,f14939,f14940,f14941,f14896,f14898,f14899,f14978,f14977,f14980,f14981,f14982,f14983,f14984,f14988,f14989,f15120,f15141,f15295,f15315,f15104,f15109,f15114,f15116,f15117,f15430,f15444,f15472,f15473,f15390,f15424,f15427,f15428,f6088,f15647])).
fof(f15427,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7) | s('type.list.list'(X6),X8) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f220,f3288])).
fof(f15473,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) | s('type.list.list'(X9),X11) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X12),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X13),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),X10)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15388,f12343])).
fof(f15388,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) | s('type.list.list'(X9),X11) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X12),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X13),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),X10))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f220,f1901])).
fof(f15472,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X4))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),X4) != s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X7),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X3)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15387,f12343])).
fof(f15387,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),X4) != s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X7),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f220,f1114])).
fof(f15444,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15443,f2219])).
fof(f15443,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15379,f217])).
fof(f15379,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0'))))))))),s('type.list.list'(X0),X5)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3288,f217,f220])).
fof(f15315,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15314,f1083])).
fof(f15314,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15038,f217])).
fof(f15038,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3288,f3288,f217,f231])).
fof(f15295,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15294,f2219])).
fof(f15294,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15293,f235])).
fof(f15293,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15292,f217])).
fof(f15292,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f15045,f217])).
fof(f15045,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f3288,f217,f231])).
fof(f15141,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f15140,f2219])).
fof(f15140,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f15139,f217])).
fof(f15139,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f15094,f217])).
fof(f15094,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3288,f217,f217,f231])).
fof(f14984,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.list.list'(X21),'const.list.NIL_0') != s('type.list.list'(X21),X24) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK16(X22,X23,X24,X21)),s('type.list.list'(X21),sK17(X22,X23,X24,X21)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) ) | $spl34),
  inference(superposition,[],[f1096,f230])).
fof(f14983,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X20))) | s('type.list.list'(X17),'const.list.NIL_0') = s('type.list.list'(X17),'const.list.APPEND_2'(s('type.list.list'(X17),sK16(X18,X19,X20,X17)),s('type.list.list'(X17),sK17(X18,X19,X20,X17)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X20))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))) ) | $spl34),
  inference(superposition,[],[f1095,f230])).
fof(f14977,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK17('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f230])).
fof(f14978,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0)),s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f230])).
fof(f14899,plain,(
  ( ! [X10,X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK8(X10,'const.arithmetic.NUMERAL_1'(s('type.num.num',X8)),X9))))) ) | $spl34),
  inference(superposition,[],[f218,f12343])).
fof(f14898,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK8(X7,'const.arithmetic.ZERO_0',X6))))) ) | $spl34),
  inference(superposition,[],[f218,f2219])).
fof(f14939,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK8(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14893,f1111])).
fof(f14893,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK8(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107))))) ) | $spl34),
  inference(superposition,[],[f218,f1111])).
fof(f14936,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14935,f232])).
fof(f14935,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) ) | $spl34),
  inference(forward_demodulation,[],[f14890,f2219])).
fof(f14890,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) )),
  inference(superposition,[],[f218,f232])).
fof(f14927,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK8(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14882,f12428])).
fof(f14882,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X71))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK8(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72))))) ) | $spl34),
  inference(superposition,[],[f218,f12428])).
fof(f14925,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK8(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14880,f1079])).
fof(f14880,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK8(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65))))) ) | $spl34),
  inference(superposition,[],[f218,f1079])).
fof(f14924,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK8(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14879,f1078])).
fof(f14879,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK8(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62))))) ) | $spl34),
  inference(superposition,[],[f218,f1078])).
fof(f14922,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14921,f3125])).
fof(f14921,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(forward_demodulation,[],[f14877,f2219])).
fof(f14877,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(superposition,[],[f218,f3125])).
fof(f14920,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14919,f2577])).
fof(f14919,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(forward_demodulation,[],[f14876,f2219])).
fof(f14876,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(superposition,[],[f218,f2577])).
fof(f14918,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14917,f1089])).
fof(f14917,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f14875,f2219])).
fof(f14875,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(superposition,[],[f218,f1089])).
fof(f14916,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14915,f1088])).
fof(f14915,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(forward_demodulation,[],[f14874,f2219])).
fof(f14874,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(superposition,[],[f218,f1088])).
fof(f14914,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK8(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14873,f1115])).
fof(f14873,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK8(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45))))) ) | $spl34),
  inference(superposition,[],[f218,f1115])).
fof(f14912,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK8(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14871,f1084])).
fof(f14871,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK8(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38))))) ) | $spl34),
  inference(superposition,[],[f218,f1084])).
fof(f14911,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK8(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14870,f1082])).
fof(f14870,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK8(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35))))) ) | $spl34),
  inference(superposition,[],[f218,f1082])).
fof(f14910,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK8(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14869,f1081])).
fof(f14869,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK8(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32))))) ) | $spl34),
  inference(superposition,[],[f218,f1081])).
fof(f14909,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK8(X30,'const.num.|48|_0',X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14868,f1076])).
fof(f14868,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK8(X30,'const.num.|48|_0',X29))))) ) | $spl34),
  inference(superposition,[],[f218,f1076])).
fof(f14908,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK8(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14867,f3288])).
fof(f14867,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK8(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27))))) ) | $spl34),
  inference(superposition,[],[f218,f3288])).
fof(f14906,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK8(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14865,f12343])).
fof(f14865,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK8(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22))))) ) | $spl34),
  inference(superposition,[],[f218,f12343])).
fof(f14905,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK8(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14864,f2219])).
fof(f14864,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK8(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18))))) ) | $spl34),
  inference(superposition,[],[f218,f2219])).
fof(f14904,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK8(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14861,f1083])).
fof(f14861,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK8(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7))))) ) | $spl34),
  inference(superposition,[],[f218,f1083])).
fof(f14903,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK8(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14860,f1901])).
fof(f14860,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK8(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4))))) ) | $spl34),
  inference(superposition,[],[f218,f1901])).
fof(f14902,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK8(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14859,f1114])).
fof(f14859,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK8(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2))))) ) | $spl34),
  inference(superposition,[],[f218,f1114])).
fof(f14901,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14858,f1113])).
fof(f14858,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0))))) ) | $spl34),
  inference(superposition,[],[f218,f1113])).
fof(f14857,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK8('const.list.NIL_0',X2,X1))))) ) | $spl34),
  inference(superposition,[],[f218,f3288])).
fof(f14738,plain,(
  ( ! [X194,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X193),s('type.num.num',X194))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X194)))))) ) | $spl34),
  inference(superposition,[],[f1093,f250])).
fof(f14476,plain,(
  ( ! [X187,X188] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X187),s('type.num.num',X188))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X188)))))) ) | $spl34),
  inference(superposition,[],[f1093,f249])).
fof(f14236,plain,(
  ( ! [X182,X181] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182)))))) ) | $spl34),
  inference(superposition,[],[f1093,f248])).
fof(f13689,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f229,f12343])).
fof(f13688,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK17(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13685,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK17('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13747,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13746,f1111])).
fof(f13746,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13682,f1083])).
fof(f13682,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1111])).
fof(f13744,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13743,f232])).
fof(f13743,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13680,f1083])).
fof(f13680,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13737,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95)))) ) | $spl34),
  inference(forward_demodulation,[],[f13674,f12428])).
fof(f13674,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12428])).
fof(f13735,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13734,f1079])).
fof(f13734,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13672,f1083])).
fof(f13672,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1079])).
fof(f13733,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13732,f1078])).
fof(f13732,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13671,f1083])).
fof(f13671,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1078])).
fof(f13730,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13729,f3125])).
fof(f13729,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13669,f1083])).
fof(f13669,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3125])).
fof(f13728,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13727,f2577])).
fof(f13727,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13668,f1083])).
fof(f13668,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2577])).
fof(f13726,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13725,f1089])).
fof(f13725,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13667,f1083])).
fof(f13667,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1089])).
fof(f13724,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13723,f1088])).
fof(f13723,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13666,f1083])).
fof(f13666,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1088])).
fof(f13722,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13665,f1115])).
fof(f13665,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1115])).
fof(f13720,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13719,f1084])).
fof(f13719,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13663,f1083])).
fof(f13663,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1084])).
fof(f13718,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46)))) ) | $spl34),
  inference(forward_demodulation,[],[f13662,f1082])).
fof(f13662,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1082])).
fof(f13717,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13716,f1081])).
fof(f13716,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13661,f1083])).
fof(f13661,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1081])).
fof(f13715,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13714,f1076])).
fof(f13714,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13660,f1083])).
fof(f13660,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1076])).
fof(f13713,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13712,f3288])).
fof(f13712,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13659,f1083])).
fof(f13659,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3288])).
fof(f13710,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f13657,f12343])).
fof(f13657,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12343])).
fof(f13709,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23)))) ) | $spl34),
  inference(forward_demodulation,[],[f13656,f2219])).
fof(f13656,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13708,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9)))) ) | $spl34),
  inference(forward_demodulation,[],[f13653,f1083])).
fof(f13653,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13707,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13652,f1901])).
fof(f13652,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1901])).
fof(f13706,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13651,f1114])).
fof(f13651,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1114])).
fof(f13705,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13704,f1113])).
fof(f13704,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13650,f1083])).
fof(f13650,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1113])).
fof(f13703,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13647,f2219])).
fof(f13647,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1111])).
fof(f13702,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13645,f2219])).
fof(f13645,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13639,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12428])).
fof(f13701,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13637,f2219])).
fof(f13637,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1079])).
fof(f13700,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13636,f2219])).
fof(f13636,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1078])).
fof(f13699,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13634,f2219])).
fof(f13634,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3125])).
fof(f13698,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13633,f2219])).
fof(f13633,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2577])).
fof(f13697,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13632,f2219])).
fof(f13632,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1089])).
fof(f13696,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13631,f2219])).
fof(f13631,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1088])).
fof(f13630,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1115])).
fof(f13695,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13628,f2219])).
fof(f13628,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1084])).
fof(f13627,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1082])).
fof(f13694,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13626,f2219])).
fof(f13626,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1081])).
fof(f13693,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13625,f2219])).
fof(f13625,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1076])).
fof(f13692,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13624,f2219])).
fof(f13624,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3288])).
fof(f13622,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12343])).
fof(f13621,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13618,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13617,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1901])).
fof(f13616,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1114])).
fof(f13691,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13615,f2219])).
fof(f13615,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1113])).
fof(f13614,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK17(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f229,f3288])).
fof(f13610,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f229])).
fof(f13611,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f229])).
fof(f13437,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f228,f12343])).
fof(f13436,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK16(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13433,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13497,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13430,f1083])).
fof(f13430,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1111])).
fof(f13496,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13428,f1083])).
fof(f13428,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13422,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12428])).
fof(f13495,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13420,f1083])).
fof(f13420,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1079])).
fof(f13494,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13419,f1083])).
fof(f13419,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1078])).
fof(f13493,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13417,f1083])).
fof(f13417,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3125])).
fof(f13492,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13416,f1083])).
fof(f13416,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2577])).
fof(f13491,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13415,f1083])).
fof(f13415,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1089])).
fof(f13490,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13414,f1083])).
fof(f13414,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1088])).
fof(f13413,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1115])).
fof(f13489,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13411,f1083])).
fof(f13411,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1084])).
fof(f13410,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1082])).
fof(f13488,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13409,f1083])).
fof(f13409,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1081])).
fof(f13487,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13408,f1083])).
fof(f13408,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1076])).
fof(f13486,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13407,f1083])).
fof(f13407,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3288])).
fof(f13405,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12343])).
fof(f13404,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13401,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13400,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1901])).
fof(f13399,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1114])).
fof(f13485,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13398,f1083])).
fof(f13398,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1113])).
fof(f13482,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13481,f1111])).
fof(f13481,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13395,f2219])).
fof(f13395,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1111])).
fof(f13479,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13478,f232])).
fof(f13478,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13393,f2219])).
fof(f13393,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13472,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98)))) ) | $spl34),
  inference(forward_demodulation,[],[f13387,f12428])).
fof(f13387,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12428])).
fof(f13470,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13469,f1079])).
fof(f13469,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13385,f2219])).
fof(f13385,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1079])).
fof(f13468,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13467,f1078])).
fof(f13467,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13384,f2219])).
fof(f13384,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1078])).
fof(f13465,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13464,f3125])).
fof(f13464,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13382,f2219])).
fof(f13382,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3125])).
fof(f13463,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13462,f2577])).
fof(f13462,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13381,f2219])).
fof(f13381,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2577])).
fof(f13461,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13460,f1089])).
fof(f13460,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13380,f2219])).
fof(f13380,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1089])).
fof(f13459,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13458,f1088])).
fof(f13458,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13379,f2219])).
fof(f13379,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1088])).
fof(f13457,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62)))) ) | $spl34),
  inference(forward_demodulation,[],[f13378,f1115])).
fof(f13378,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1115])).
fof(f13455,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13454,f1084])).
fof(f13454,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13376,f2219])).
fof(f13376,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1084])).
fof(f13453,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49)))) ) | $spl34),
  inference(forward_demodulation,[],[f13375,f1082])).
fof(f13375,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1082])).
fof(f13452,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13451,f1081])).
fof(f13451,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13374,f2219])).
fof(f13374,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1081])).
fof(f13450,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13449,f1076])).
fof(f13449,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13373,f2219])).
fof(f13373,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1076])).
fof(f13448,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13447,f3288])).
fof(f13447,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13372,f2219])).
fof(f13372,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3288])).
fof(f13445,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31)))) ) | $spl34),
  inference(forward_demodulation,[],[f13370,f12343])).
fof(f13370,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12343])).
fof(f13444,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26)))) ) | $spl34),
  inference(forward_demodulation,[],[f13369,f2219])).
fof(f13369,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13443,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12)))) ) | $spl34),
  inference(forward_demodulation,[],[f13366,f1083])).
fof(f13366,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13442,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) ) | $spl34),
  inference(forward_demodulation,[],[f13365,f1901])).
fof(f13365,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1901])).
fof(f13441,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) ) | $spl34),
  inference(forward_demodulation,[],[f13364,f1114])).
fof(f13364,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1114])).
fof(f13440,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13439,f1113])).
fof(f13439,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13363,f2219])).
fof(f13363,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1113])).
fof(f13362,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f228,f3288])).
fof(f13358,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f228])).
fof(f13359,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f228])).
fof(f12909,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f12343,f235])).
fof(f12830,plain,(
  ( ! [X149,X148] : (s('type.num.num',X148) = s('type.num.num',sK13('const.numeral.iZ_1'(s('type.num.num',X148)),X149,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X149),s('type.num.num',X148))))) ) | $spl34),
  inference(forward_demodulation,[],[f12807,f12428])).
fof(f12807,plain,(
  ( ! [X149,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X149),s('type.num.num',X148)))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X148))) = s('type.num.num',sK13('const.numeral.iZ_1'(s('type.num.num',X148)),X149,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f12428])).
fof(f12654,plain,(
  ( ! [X169] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X169),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X169)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12653,f12428])).
fof(f12653,plain,(
  ( ! [X169] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X169))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X169)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12580,f1091])).
fof(f12580,plain,(
  ( ! [X169] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X169))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X169))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3771,f12342])).
fof(f12487,plain,(
  ( ! [X39] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X39)))) ) | $spl34),
  inference(superposition,[],[f1093,f12342])).
fof(f12482,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X32)))) ) | $spl34),
  inference(superposition,[],[f255,f12342])).
fof(f12420,plain,(
  ( ! [X218,X217] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X217),s('type.num.num',X218))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X217),s('type.num.num',X218))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12419,f12343])).
fof(f12419,plain,(
  ( ! [X218,X217] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X217),s('type.num.num',X218))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X217))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X218)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12317,f1091])).
fof(f12317,plain,(
  ( ! [X218,X217] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X217),s('type.num.num',X218))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X217))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X218)))))))) ) | $spl34),
  inference(superposition,[],[f3772,f247])).
fof(f12408,plain,(
  ( ! [X173,X174] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12407,f12343])).
fof(f12407,plain,(
  ( ! [X173,X174] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12295,f1091])).
fof(f12295,plain,(
  ( ! [X173,X174] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(superposition,[],[f1117,f247])).
fof(f12406,plain,(
  ( ! [X171,X172] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12405,f12343])).
fof(f12405,plain,(
  ( ! [X171,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12294,f1091])).
fof(f12294,plain,(
  ( ! [X171,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))))) ) | $spl34),
  inference(superposition,[],[f1116,f247])).
fof(f12402,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12291,f12342])).
fof(f12291,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(superposition,[],[f1093,f247])).
fof(f12388,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12269,f12342])).
fof(f12269,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) )),
  inference(superposition,[],[f255,f247])).
fof(f12384,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12225,f12343])).
fof(f12225,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f247,f235])).
fof(f12383,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f12224,f12342])).
fof(f12224,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1901])).
fof(f12382,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f12223,f12342])).
fof(f12223,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1114])).
fof(f12345,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12187,f12342])).
fof(f12187,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1901])).
fof(f12344,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12186,f12342])).
fof(f12186,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1114])).
fof(f11769,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f3772,f1091])).
fof(f11947,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11946,f198])).
fof(f11946,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11761,f1091])).
fof(f11761,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(superposition,[],[f3772,f198])).
fof(f11485,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1729,f235])).
fof(f11294,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11259,f1113])).
fof(f11259,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4948,f255])).
fof(f11253,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11218,f1113])).
fof(f11218,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9971,f255])).
fof(f11200,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11166,f1113])).
fof(f11166,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9828,f255])).
fof(f11161,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11126,f1113])).
fof(f11126,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9571,f255])).
fof(f10989,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10955,f1113])).
fof(f10955,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9528,f255])).
fof(f10950,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f10949,f1113])).
fof(f10949,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f9527,f255])).
fof(f10804,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10769,f1113])).
fof(f10769,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4822,f255])).
fof(f10682,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4787,f251])).
fof(f10683,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4787,f4787,f251])).
fof(f10564,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10530,f1113])).
fof(f10530,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4708,f255])).
fof(f10445,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4674,f251])).
fof(f10446,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4674,f4674,f251])).
fof(f10334,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f10333,f1113])).
fof(f10333,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4672,f255])).
fof(f10318,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4668,f251])).
fof(f10196,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10162,f1113])).
fof(f10162,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4577,f255])).
fof(f10157,plain,(
  ( ! [X21,X20] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f10149,f4476])).
fof(f10149,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4476])).
fof(f10156,plain,(
  ( ! [X12,X13] : (s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(subsumption_resolution,[],[f10143,f179])).
fof(f10143,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(superposition,[],[f417,f4476])).
fof(f10000,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f9992,f4379])).
fof(f9992,plain,(
  ( ! [X6] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4379])).
fof(f9999,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(subsumption_resolution,[],[f9987,f179])).
fof(f9987,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(superposition,[],[f417,f4379])).
fof(f9973,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4105,f199])).
fof(f9972,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4105,f202])).
fof(f9830,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4104,f199])).
fof(f9829,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4104,f202])).
fof(f9703,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4069,f251])).
fof(f9704,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4069,f4069,f251])).
fof(f9573,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4066,f199])).
fof(f9572,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4066,f202])).
fof(f9530,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4065,f199])).
fof(f9529,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4065,f202])).
fof(f9297,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4030,f251])).
fof(f9298,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4030,f4030,f251])).
fof(f9284,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f3940,f199])).
fof(f9283,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f3940,f202])).
fof(f9168,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f3939,f199])).
fof(f9167,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f3939,f202])).
fof(f9118,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f9080,f1113])).
fof(f9080,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3896,f255])).
fof(f9000,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f3894,f199])).
fof(f8999,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f3894,f202])).
fof(f9001,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f8963,f1113])).
fof(f8963,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3894,f255])).
fof(f8644,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(forward_demodulation,[],[f8583,f1101])).
fof(f8583,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f222,f5400])).
fof(f4892,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1114])).
fof(f3976,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f237,f1114])).
fof(f4893,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1901])).
fof(f3977,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f237,f1901])).
fof(f3709,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f1090,f208])).
fof(f3725,plain,(
  ( ! [X12,X11] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3717,f1090])).
fof(f3717,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1090])).
fof(f3840,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1092,f208])).
fof(f3857,plain,(
  ( ! [X12,X13] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3849,f1092])).
fof(f3849,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1092])).
fof(f4187,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4171,f3541])).
fof(f4171,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1114])).
fof(f4859,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f243,f1114])).
fof(f4661,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f4613,f3542])).
fof(f4613,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f241,f1901])).
fof(f4188,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4172,f3542])).
fof(f4172,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1901])).
fof(f4008,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1114])).
fof(f4860,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f243,f1901])).
fof(f4009,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1901])).
fof(f3454,plain,(
  ( ! [X16] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3410,f1100])).
fof(f3410,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1100])).
fof(f3461,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3416,f1085])).
fof(f3416,plain,(
  ( ! [X26,X27] : (~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1085])).
fof(f3464,plain,(
  ( ! [X30,X29] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3463,f1085])).
fof(f3463,plain,(
  ( ! [X30,X29] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3418,f234])).
fof(f3418,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1086])).
fof(f3456,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3455,f184])).
fof(f3455,plain,(
  ( ! [X17,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3411,f233])).
fof(f3411,plain,(
  ( ! [X17,X18] : (~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1080])).
fof(f3459,plain,(
  ( ! [X24] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3414,f1101])).
fof(f3414,plain,(
  ( ! [X24] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1101])).
fof(f5131,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f5124,f2636])).
fof(f5124,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2636])).
fof(f3788,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3780,f1091])).
fof(f3780,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1091])).
fof(f3474,plain,(
  ( ! [X52,X51] : (s('type.num.num',X51) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f3430,f1082])).
fof(f3430,plain,(
  ( ! [X52,X51] : (~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1082])).
fof(f3470,plain,(
  ( ! [X45,X46] : (s('type.num.num',X45) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45))))) ) | $spl34),
  inference(forward_demodulation,[],[f3426,f2219])).
fof(f3426,plain,(
  ( ! [X45,X46] : (~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2219])).
fof(f3469,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37))))) ) | $spl34),
  inference(forward_demodulation,[],[f3423,f1083])).
fof(f3423,plain,(
  ( ! [X37,X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1083])).
fof(f3466,plain,(
  ( ! [X34] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3420,f1113])).
fof(f3420,plain,(
  ( ! [X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1113])).
fof(f3472,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.num.|48|_0',X48,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3428,f1076])).
fof(f3428,plain,(
  ( ! [X48] : (~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK13('const.num.|48|_0',X48,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1076])).
fof(f3473,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3429,f1081])).
fof(f3429,plain,(
  ( ! [X50,X49] : (~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1081])).
fof(f3475,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3431,f1084])).
fof(f3431,plain,(
  ( ! [X54,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1084])).
fof(f3477,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3433,f1088])).
fof(f3433,plain,(
  ( ! [X57,X58] : (~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1088])).
fof(f3478,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3434,f1089])).
fof(f3434,plain,(
  ( ! [X59,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59))))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1089])).
fof(f3479,plain,(
  ( ! [X61] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3435,f2577])).
fof(f3435,plain,(
  ( ! [X61] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2577])).
fof(f3480,plain,(
  ( ! [X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3436,f1078])).
fof(f3436,plain,(
  ( ! [X62,X63] : (~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1078])).
fof(f3481,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3437,f1079])).
fof(f3437,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1079])).
fof(f3489,plain,(
  ( ! [X80] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3445,f1111])).
fof(f3445,plain,(
  ( ! [X80] : (~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1111])).
fof(f3667,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3652,f3288])).
fof(f3652,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0'))) = s('type.num.num',sK13('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3288])).
fof(f4281,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f4266,f3125])).
fof(f4266,plain,(
  ( ! [X17] : (~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3125])).
fof(f3770,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1091,f208])).
fof(f4138,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f238,f1113])).
fof(f4645,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1114])).
fof(f4139,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f238,f1114])).
fof(f4646,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1901])).
fof(f4140,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f238,f1901])).
fof(f4668,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f4063,f1116])).
fof(f4674,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4064,f1116])).
fof(f4787,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4103,f1116])).
fof(f1829,plain,(
  ( ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1828,f198])).
fof(f1828,plain,(
  ( ! [X22] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1819,f1091])).
fof(f1819,plain,(
  ( ! [X22] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(superposition,[],[f1117,f198])).
fof(f1827,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1826,f198])).
fof(f1826,plain,(
  ( ! [X21] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1818,f1091])).
fof(f1818,plain,(
  ( ! [X21] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(superposition,[],[f1116,f198])).
fof(f7392,plain,(
  ( ! [X171,X169,X172,X170,X168] : (s(bool,'F_0') = s(bool,X168) | p(s(bool,happ(s(fun(X170,bool),X171),s(X170,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X168),s(bool,X169)),X171,X170))))) | ~p(s(bool,happ(s(fun(X170,bool),X171),s(X170,X172))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7391,f3278])).
fof(f7391,plain,(
  ( ! [X171,X169,X172,X170,X168] : (p(s(bool,happ(s(fun(X170,bool),X171),s(X170,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X168),s(bool,X169)),X171,X170))))) | ~p(s(bool,happ(s(fun(X170,bool),X171),s(X170,X172)))) | s(bool,X168) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7374,f174])).
fof(f7374,plain,(
  ( ! [X171,X169,X172,X170,X168] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X170,bool),X171),s(X170,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X168),s(bool,X169)),X171,X170))))) | ~p(s(bool,happ(s(fun(X170,bool),X171),s(X170,X172)))) | s(bool,X168) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f5956])).
fof(f7377,plain,(
  ( ! [X4,X2,X0,X3] : (p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK14(X0,X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7376,f174])).
fof(f7376,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK14(X0,X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7334,f1085])).
fof(f7334,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK14(X0,X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6733])).
fof(f7332,plain,(
  ( ! [X52,X50,X51] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X52),s(bool,X51)))) | s(bool,'F_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7261,f1085])).
fof(f7261,plain,(
  ( ! [X52,X50,X51] : (~p(s(bool,happ(s(fun(bool,bool),X52),s(bool,X51)))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,bool)) | s(bool,'F_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6733])).
fof(f7134,plain,(
  ( ! [X92,X93,X91] : (s(bool,X91) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X93))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X92)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6733,f217])).
fof(f7094,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7020,f1100])).
fof(f7020,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6728])).
fof(f7093,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X27) | ~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7019,f1100])).
fof(f7019,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,X27) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6728])).
fof(f7090,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK13(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7005,f1100])).
fof(f7005,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK13(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f223,f6728])).
fof(f7088,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'T_0')))) | s(bool,X87) = s(bool,sK13(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7001,f1100])).
fof(f7001,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,X87) = s(bool,sK13(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6728])).
fof(f7081,plain,(
  ( ! [X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7080,f174])).
fof(f7080,plain,(
  ( ! [X65] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6981,f1100])).
fof(f6981,plain,(
  ( ! [X65] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1116,f6728])).
fof(f7073,plain,(
  ( ! [X59] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7072,f174])).
fof(f7072,plain,(
  ( ! [X59] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6975,f1100])).
fof(f6975,plain,(
  ( ! [X59] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3462,f6728])).
fof(f7068,plain,(
  ( ! [X54,X52,X53] : (s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7067,f174])).
fof(f7067,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6972,f1100])).
fof(f6972,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6728])).
fof(f7066,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7065,f174])).
fof(f7065,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6971,f1100])).
fof(f6971,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6728])).
fof(f7057,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7056,f174])).
fof(f7056,plain,(
  ( ! [X33,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6961,f1100])).
fof(f6961,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f257,f6728])).
fof(f6936,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f6728])).
fof(f7043,plain,(
  ( ! [X47,X46] : (s(bool,'T_0') = s(bool,X46) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6935,f1100])).
fof(f6935,plain,(
  ( ! [X47,X46] : (s(bool,X46) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f217])).
fof(f7042,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6933,f1100])).
fof(f6933,plain,(
  ( ! [X43,X42] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f238])).
fof(f7041,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6932,f1100])).
fof(f6932,plain,(
  ( ! [X41,X40] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f234])).
fof(f7040,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6928,f1100])).
fof(f6928,plain,(
  ( ! [X37,X36] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f236])).
fof(f7039,plain,(
  ( ! [X31,X32] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6924,f1100])).
fof(f6924,plain,(
  ( ! [X31,X32] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f241])).
fof(f7038,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6923,f1100])).
fof(f6923,plain,(
  ( ! [X30] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f1091])).
fof(f7037,plain,(
  ( ! [X27] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6917,f1100])).
fof(f6917,plain,(
  ( ! [X27] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f193])).
fof(f7036,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6916,f1100])).
fof(f6916,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f237])).
fof(f7035,plain,(
  ( ! [X24] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6915,f1100])).
fof(f6915,plain,(
  ( ! [X24] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f1092])).
fof(f7034,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6914,f1100])).
fof(f6914,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f233])).
fof(f7033,plain,(
  ( ! [X19] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6912,f1100])).
fof(f6912,plain,(
  ( ! [X19] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f195])).
fof(f7032,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6911,f1100])).
fof(f6911,plain,(
  ( ! [X17,X18] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f243])).
fof(f7031,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6910,f1100])).
fof(f6910,plain,(
  ( ! [X15,X16] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f240])).
fof(f7030,plain,(
  ( ! [X14,X13] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6909,f1100])).
fof(f6909,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f239])).
fof(f7029,plain,(
  ( ! [X12,X11] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6908,f1100])).
fof(f6908,plain,(
  ( ! [X12,X11] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f242])).
fof(f7028,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6907,f1100])).
fof(f6907,plain,(
  ( ! [X10] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6728,f1090])).
fof(f6864,plain,(
  ( ! [X121,X122,X119] : (s(bool,'F_0') = s(bool,X119) | s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6863,f3278])).
fof(f6863,plain,(
  ( ! [X121,X122,X119] : (s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6784,f217])).
fof(f6784,plain,(
  ( ! [X121,X122,X120,X119] : (~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X122) != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X119),s(bool,X120))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f5956])).
fof(f6825,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,X5) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6824,f217])).
fof(f6824,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6748,f3278])).
fof(f6748,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f5956])).
fof(f6744,plain,(
  ( ! [X80,X78,X79] : (s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6712,f174])).
fof(f6712,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'T_0')) | s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f5956])).
fof(f6740,plain,(
  ( ! [X70,X71] : (s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6709,f174])).
fof(f6709,plain,(
  ( ! [X70,X71] : (~p(s(bool,'T_0')) | s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f1086])).
fof(f6733,plain,(
  ( ! [X47,X48] : (s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6697,f174])).
fof(f6697,plain,(
  ( ! [X47,X48] : (~p(s(bool,'T_0')) | s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f1085])).
fof(f6728,plain,(
  ( ! [X33] : (s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6690,f174])).
fof(f6690,plain,(
  ( ! [X33] : (~p(s(bool,'T_0')) | s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f1100])).
fof(f6721,plain,(
  ( ! [X15,X16] : (s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6683,f174])).
fof(f6683,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f194])).
fof(f6720,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6682,f174])).
fof(f6682,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6666,f192])).
fof(f6668,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') = s(bool,X30) | s(bool,X30) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0'))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6667,f3278])).
fof(f6667,plain,(
  ( ! [X30,X31,X32] : (s(bool,X30) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6486,f217])).
fof(f6486,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31))) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f5956])).
fof(f6666,plain,(
  ( ! [X13,X11] : (~p(s(bool,X13)) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X11)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6665,f3278])).
fof(f6665,plain,(
  ( ! [X13,X11] : (s(bool,X11) = s(bool,X13) | ~p(s(bool,X13)) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6664,f217])).
fof(f6664,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6478,f174])).
fof(f6478,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f254,f5956])).
fof(f6624,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6623,f179])).
fof(f6623,plain,(
  ( ! [X85,X84] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6438,f3278])).
fof(f6438,plain,(
  ( ! [X85,X84] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1117,f5956])).
fof(f6573,plain,(
  ( ! [X80,X81,X82] : (s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6362,f3278])).
fof(f6362,plain,(
  ( ! [X80,X81,X82] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5956,f217])).
fof(f6319,plain,(
  ( ! [X6,X4,X5] : (s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5956,f5406])).
fof(f6318,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5956,f5956])).
fof(f6246,plain,(
  ( ! [X156,X157] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X156),s('type.num.num',X157))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X157)))))) ) | $spl34),
  inference(superposition,[],[f1093,f246])).
fof(f6183,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1901])).
fof(f6182,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1114])).
fof(f6147,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f246,f1901])).
fof(f6146,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f246,f1114])).
fof(f5956,plain,(
  ( ! [X39,X38] : (s(bool,X38) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5406,f217])).
fof(f5886,plain,(
  ( ! [X149,X150] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num',X150))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150)))))) ) | $spl34),
  inference(superposition,[],[f1093,f245])).
fof(f5827,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1901])).
fof(f5826,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1114])).
fof(f5792,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f245,f1901])).
fof(f5791,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f245,f1114])).
fof(f5539,plain,(
  ( ! [X144,X143] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X143),s('type.num.num',X144))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X144)))))) ) | $spl34),
  inference(superposition,[],[f1093,f244])).
fof(f5482,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1901])).
fof(f5481,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1114])).
fof(f5448,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f244,f1901])).
fof(f5447,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f244,f1114])).
fof(f5446,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f244,f1113])).
fof(f5406,plain,(
  ( ! [X51] : (s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f5381,f179])).
fof(f5381,plain,(
  ( ! [X51] : (p(s(bool,'F_0')) | s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f417,f3278])).
fof(f5403,plain,(
  ( ! [X45,X44] : (s(bool,X45) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X45)) ) | $spl34),
  inference(subsumption_resolution,[],[f5378,f179])).
fof(f5378,plain,(
  ( ! [X45,X44] : (p(s(bool,'F_0')) | s(bool,X45) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X45)) ) | $spl34),
  inference(superposition,[],[f417,f2636])).
fof(f5402,plain,(
  ( ! [X43] : (s(bool,X43) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X43)) ) | $spl34),
  inference(subsumption_resolution,[],[f5377,f179])).
fof(f5377,plain,(
  ( ! [X43] : (p(s(bool,'F_0')) | s(bool,X43) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X43)) ) | $spl34),
  inference(superposition,[],[f417,f2546])).
fof(f5400,plain,(
  ( ! [X39] : (s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(subsumption_resolution,[],[f5374,f179])).
fof(f5374,plain,(
  ( ! [X39] : (p(s(bool,'F_0')) | s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(superposition,[],[f417,f1101])).
fof(f5395,plain,(
  ( ! [X28,X27] : (s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(subsumption_resolution,[],[f5369,f179])).
fof(f5369,plain,(
  ( ! [X28,X27] : (p(s(bool,'F_0')) | s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f417,f1080])).
fof(f5343,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5342,f1113])).
fof(f5342,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f5137,f255])).
fof(f5137,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5136,f1113])).
fof(f5136,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3798,f255])).
fof(f4968,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f4961,f2546])).
fof(f4961,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2546])).
fof(f4948,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4916,f1113])).
fof(f4916,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2516,f255])).
fof(f4825,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X1,bool)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3462,f208])).
fof(f4824,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),'const.bool.COND_3'(s(bool,'T_0'),s(fun(bool,bool),X0),s(fun(bool,bool),X1)),bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3462,f217])).
fof(f4822,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4790,f1113])).
fof(f4790,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4103,f255])).
fof(f4708,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4677,f1113])).
fof(f4677,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4064,f255])).
fof(f4672,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(forward_demodulation,[],[f4671,f1113])).
fof(f4671,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4063,f255])).
fof(f4577,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4546,f1113])).
fof(f4546,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2416,f255])).
fof(f4476,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2415,f251])).
fof(f4477,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2415,f2415,f251])).
fof(f4379,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2217,f251])).
fof(f4273,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4229,f1113])).
fof(f4229,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f3125])).
fof(f4103,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2022,f197])).
fof(f4064,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2021,f197])).
fof(f4063,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f2021,f177])).
fof(f3940,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f1998,f199])).
fof(f3939,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f1998,f202])).
fof(f3894,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f1935,f202])).
fof(f3896,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3862,f1113])).
fof(f3862,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1935,f255])).
fof(f3798,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3797,f1113])).
fof(f3797,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3733,f255])).
fof(f3733,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3732,f1113])).
fof(f3732,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3673,f255])).
fof(f3673,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3672,f1113])).
fof(f3672,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3507,f255])).
fof(f3659,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3622,f1113])).
fof(f3622,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(superposition,[],[f255,f3288])).
fof(f3507,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3506,f1113])).
fof(f3506,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3497,f255])).
fof(f3497,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3496,f1113])).
fof(f3496,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3384,f255])).
fof(f3462,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3417,f3278])).
fof(f3417,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f3278])).
fof(f3384,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3383,f1113])).
fof(f3383,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3272,f255])).
fof(f3356,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X43))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1093,f207])).
fof(f3284,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3267,f1096])).
fof(f3278,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f179,f3268,f251])).
fof(f3268,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3267,f1116])).
fof(f3272,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3271,f1113])).
fof(f3271,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl43),
  inference(unit_resulting_resolution,[],[f3267,f255])).
fof(f3262,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) ) | $spl34),
  inference(superposition,[],[f1095,f217])).
fof(f3253,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f3217,f1113])).
fof(f3217,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f2577])).
fof(f3187,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f3150,f1901])).
fof(f3150,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1901])).
fof(f3128,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1901])).
fof(f3185,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3184,f177])).
fof(f3184,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3127,f202])).
fof(f3127,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1901])).
fof(f3126,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1901])).
fof(f3125,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1088,f1901])).
fof(f2770,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1114])).
fof(f2892,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2766,f1113])).
fof(f2766,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1111])).
fof(f2891,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f2765,f1113])).
fof(f2765,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) )),
  inference(superposition,[],[f255,f232])).
fof(f2888,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2760,f1114])).
fof(f2760,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f177])).
fof(f2887,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(forward_demodulation,[],[f2759,f1113])).
fof(f2759,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(superposition,[],[f255,f1079])).
fof(f2886,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2758,f1113])).
fof(f2758,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1078])).
fof(f2885,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2757,f1113])).
fof(f2757,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1089])).
fof(f2884,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2756,f1113])).
fof(f2756,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1088])).
fof(f2883,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2755,f1114])).
fof(f2755,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1115])).
fof(f2882,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(forward_demodulation,[],[f2754,f1113])).
fof(f2754,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(superposition,[],[f255,f1084])).
fof(f2753,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1082])).
fof(f2881,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(forward_demodulation,[],[f2752,f1113])).
fof(f2752,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(superposition,[],[f255,f1081])).
fof(f2749,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl34),
  inference(superposition,[],[f255,f2219])).
fof(f2746,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1083])).
fof(f2878,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f2745,f1114])).
fof(f2745,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1114])).
fof(f2877,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2744,f1113])).
fof(f2744,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1113])).
fof(f2636,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2195,f251])).
fof(f2637,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2195,f2195,f251])).
fof(f2577,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1089,f1114])).
fof(f2546,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f1995,f251])).
fof(f2516,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2104,f1093])).
fof(f2415,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2020,f1116])).
fof(f2416,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2020,f1093])).
fof(f2396,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)))) ) | $spl34),
  inference(superposition,[],[f1093,f2219])).
fof(f2291,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X56))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57)))))) ) | $spl34),
  inference(superposition,[],[f1094,f235])).
fof(f2290,plain,(
  ( ! [X54,X55] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num',X54))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))) ) | $spl34),
  inference(superposition,[],[f1093,f235])).
fof(f2217,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f2019,f1116])).
fof(f2218,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f2019,f1093])).
fof(f2195,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2133,f1116])).
fof(f2133,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f2080,f197])).
fof(f2104,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1934,f197])).
fof(f2080,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1934,f1094])).
fof(f2020,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1992,f197])).
fof(f2019,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1992,f177])).
fof(f1997,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1992,f1116])).
fof(f1998,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1992,f1093])).
fof(f1995,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f1940,f1116])).
fof(f1996,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(unit_resulting_resolution,[],[f1940,f1093])).
fof(f1940,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(superposition,[],[f1933,f197])).
fof(f1933,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1910,f1114])).
fof(f1935,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f1912,f199])).
fof(f1912,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1910,f1093])).
fof(f1797,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1114])).
fof(f1729,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(subsumption_resolution,[],[f1679,f179])).
fof(f1679,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1117,f208])).
fof(f1111,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f992])).
fof(f1108,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f974])).
fof(f1107,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f971])).
fof(f1106,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f970])).
fof(f1119,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1105,f1076])).
fof(f1105,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f964])).
fof(f1118,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1104,f1076])).
fof(f1104,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f961])).
fof(f1101,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f395])).
fof(f1095,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f215])).
fof(f1093,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f209])).
fof(f1089,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f203])).
fof(f1088,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f200])).
fof(f1084,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f188])).
fof(f1081,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f185])).
fof(f1080,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f183])).
fof(f1079,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f182])).
fof(f1078,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f181])).
fof(f15471,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15470,f7428])).
fof(f7428,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f7427,f3288])).
fof(f7427,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl4 | $spl40)),
  inference(forward_demodulation,[],[f262,f7409])).
fof(f7409,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK2) | ($spl4 | $spl40)),
  inference(backward_demodulation,[],[f3265,f265])).
fof(f15470,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15372,f3288])).
fof(f15372,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl40)),
  inference(unit_resulting_resolution,[],[f267,f3265,f220])).
fof(f15469,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15468,f7428])).
fof(f15468,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15467,f3288])).
fof(f15467,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15466,f267])).
fof(f15466,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15465,f2219])).
fof(f15465,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15373,f235])).
fof(f15373,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1083,f3265,f220])).
fof(f15464,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15463,f7428])).
fof(f15463,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15462,f3288])).
fof(f15462,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15461,f267])).
fof(f15461,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15374,f2219])).
fof(f15374,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f2219,f3265,f220])).
fof(f15460,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15459,f7428])).
fof(f15459,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15458,f3288])).
fof(f15458,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15457,f267])).
fof(f15457,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15375,f1082])).
fof(f15375,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1082,f3265,f220])).
fof(f15456,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15455,f7428])).
fof(f15455,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15454,f3288])).
fof(f15454,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15453,f267])).
fof(f15453,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15376,f12428])).
fof(f15376,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f12428,f3265,f220])).
fof(f15452,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15451,f7428])).
fof(f15451,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15450,f3288])).
fof(f15450,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl40)),
  inference(forward_demodulation,[],[f15449,f267])).
fof(f15449,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl40),
  inference(forward_demodulation,[],[f15377,f196])).
fof(f15377,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl40),
  inference(unit_resulting_resolution,[],[f196,f3265,f220])).
fof(f15448,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15447,f7428])).
fof(f15447,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15446,f3288])).
fof(f15446,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl40)),
  inference(forward_demodulation,[],[f15445,f267])).
fof(f15445,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl40),
  inference(forward_demodulation,[],[f15378,f217])).
fof(f15378,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl40),
  inference(unit_resulting_resolution,[],[f217,f3265,f220])).
fof(f14041,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl61),
  inference(cnf_transformation,[],[f14041_D])).
fof(f14041_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f14081,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | $spl74),
  inference(cnf_transformation,[],[f14081_D])).
fof(f14081_D,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f14080,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14079,f177])).
fof(f14079,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14024,f235])).
fof(f14024,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13500,f177])).
fof(f14067,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | $spl72),
  inference(cnf_transformation,[],[f14067_D])).
fof(f14067_D,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f14066,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14065,f1115])).
fof(f14065,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14014,f235])).
fof(f14014,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13500,f1115])).
fof(f14056,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl69),
  inference(cnf_transformation,[],[f14056_D])).
fof(f14056_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f14057,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | $spl70),
  inference(cnf_transformation,[],[f14057_D])).
fof(f14057_D,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f14054,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14007,f267])).
fof(f14007,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13500,f267])).
fof(f14046,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl65),
  inference(cnf_transformation,[],[f14046_D])).
fof(f14046_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f14047,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | $spl66),
  inference(cnf_transformation,[],[f14047_D])).
fof(f14047_D,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f14044,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14043,f1901])).
fof(f14043,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14001,f235])).
fof(f14001,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13500,f1901])).
fof(f14042,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | $spl62),
  inference(cnf_transformation,[],[f14042_D])).
fof(f14042_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f14039,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14038,f1114])).
fof(f14038,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14000,f235])).
fof(f14000,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13500,f1114])).
fof(f8544,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl56),
  inference(cnf_transformation,[],[f8544_D])).
fof(f8544_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f8546,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl59),
  inference(cnf_transformation,[],[f8546_D])).
fof(f8546_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f8509,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(equality_factoring,[],[f7983])).
fof(f7983,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f7974,f179])).
fof(f7974,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(superposition,[],[f417,f7960])).
fof(f7960,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f179,f7775,f251])).
fof(f7775,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f7428,f1116])).
fof(f7591,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7590,f179])).
fof(f7590,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7589,f384])).
fof(f7589,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7467,f179])).
fof(f7467,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f5181])).
fof(f7585,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7584,f179])).
fof(f7584,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7583,f384])).
fof(f7583,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7437,f179])).
fof(f7437,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f258])).
fof(f7419,plain,(
  $false | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7418,f1085])).
fof(f7418,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7417,f3288])).
fof(f7417,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f6090,f7409])).
fof(f7416,plain,(
  $false | ($spl4 | $spl11 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7415,f386])).
fof(f7415,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7414,f1085])).
fof(f7414,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7413,f3288])).
fof(f7413,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7393,f7409])).
fof(f7393,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(forward_demodulation,[],[f6093,f1128])).
fof(f1128,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(unit_resulting_resolution,[],[f179,f1063,f251])).
fof(f1063,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl19),
  inference(forward_demodulation,[],[f1041,f205])).
fof(f1041,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))),s('type.num.num','const.num.|48|_0')))) | $spl19),
  inference(unit_resulting_resolution,[],[f980,f269])).
fof(f6093,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(unit_resulting_resolution,[],[f6090,f5408])).
fof(f5408,plain,(
  ( ! [X55] : (s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(subsumption_resolution,[],[f5383,f179])).
fof(f5383,plain,(
  ( ! [X55] : (p(s(bool,'F_0')) | s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(superposition,[],[f417,f1128])).
fof(f7408,plain,(
  $false | ($spl11 | $spl19 | $spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7407,f386])).
fof(f7407,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl19 | $spl34 | $spl42 | $spl51)),
  inference(forward_demodulation,[],[f7402,f1085])).
fof(f7402,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl42 | $spl51)),
  inference(backward_demodulation,[],[f3266,f7393])).
fof(f3266,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl42),
  inference(cnf_transformation,[],[f3266_D])).
fof(f3266_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f7406,plain,(
  $false | ($spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7401,f1085])).
fof(f7401,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl42 | $spl51)),
  inference(backward_demodulation,[],[f3266,f6090])).
fof(f384,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f7387,plain,(
  ( ! [X105,X102,X106,X104] : (p(s(bool,happ(s(fun(X104,bool),X105),s(X104,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X102)),X105,X104))))) | ~p(s(bool,happ(s(fun(X104,bool),X105),s(X104,X106))))) ) | $spl54),
  inference(cnf_transformation,[],[f7387_D])).
fof(f7387_D,plain,(
  ( ! [X105,X102,X106,X104] : (p(s(bool,happ(s(fun(X104,bool),X105),s(X104,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X102)),X105,X104))))) | ~p(s(bool,happ(s(fun(X104,bool),X105),s(X104,X106))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f7386,plain,(
  ( ! [X103,X105,X102,X106,X104] : (p(s(bool,happ(s(fun(X104,bool),X105),s(X104,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X102)),X105,X104))))) | ~p(s(bool,happ(s(fun(X104,bool),X105),s(X104,X106)))) | s(bool,'F_0') = s(bool,X103)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7358,f422])).
fof(f7358,plain,(
  ( ! [X103,X105,X102,X106,X104] : (~p(s(bool,X103)) | p(s(bool,happ(s(fun(X104,bool),X105),s(X104,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X102)),X105,X104))))) | ~p(s(bool,happ(s(fun(X104,bool),X105),s(X104,X106)))) | s(bool,'F_0') = s(bool,X103)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6733])).
fof(f7384,plain,(
  ( ! [X72,X71,X73] : (p(s(bool,happ(s(fun(X71,bool),X72),s(X71,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X72,X71))))) | ~p(s(bool,happ(s(fun(X71,bool),X72),s(X71,X73))))) ) | $spl52),
  inference(cnf_transformation,[],[f7384_D])).
fof(f7384_D,plain,(
  ( ! [X72,X71,X73] : (p(s(bool,happ(s(fun(X71,bool),X72),s(X71,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X72,X71))))) | ~p(s(bool,happ(s(fun(X71,bool),X72),s(X71,X73))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f7383,plain,(
  ( ! [X70,X72,X71,X73] : (p(s(bool,happ(s(fun(X71,bool),X72),s(X71,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X72,X71))))) | ~p(s(bool,happ(s(fun(X71,bool),X72),s(X71,X73)))) | s(bool,'F_0') = s(bool,X70)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7350,f422])).
fof(f7350,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X70)) | p(s(bool,happ(s(fun(X71,bool),X72),s(X71,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X72,X71))))) | ~p(s(bool,happ(s(fun(X71,bool),X72),s(X71,X73)))) | s(bool,'F_0') = s(bool,X70)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6728])).
fof(f6088,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(cnf_transformation,[],[f6088_D])).
fof(f6088_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6090,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl51),
  inference(cnf_transformation,[],[f6090_D])).
fof(f6090_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f6026,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(equality_factoring,[],[f5406])).
fof(f5737,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f5737_D])).
fof(f5737_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5739,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl47),
  inference(cnf_transformation,[],[f5739_D])).
fof(f5739_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f5678,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(equality_factoring,[],[f5408])).
fof(f3265,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl40),
  inference(cnf_transformation,[],[f3265_D])).
fof(f3265_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3267,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl43),
  inference(cnf_transformation,[],[f3267_D])).
fof(f3267_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f3261,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | ($spl4 | $spl34)),
  inference(superposition,[],[f1095,f265])).
fof(f1062,plain,(
  $false | $spl23),
  inference(subsumption_resolution,[],[f1061,f174])).
fof(f1061,plain,(
  ~p(s(bool,'T_0')) | $spl23),
  inference(forward_demodulation,[],[f1060,f189])).
fof(f1060,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl23),
  inference(forward_demodulation,[],[f1042,f205])).
fof(f1042,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | $spl23),
  inference(unit_resulting_resolution,[],[f983,f269])).
fof(f994,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl36),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f996,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl39),
  inference(cnf_transformation,[],[f996_D])).
fof(f996_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f975,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f209,f178])).
fof(f992,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl34),
  inference(cnf_transformation,[],[f992_D])).
fof(f992_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f983,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(cnf_transformation,[],[f983_D])).
fof(f983_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f973,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f209,f176])).
fof(f989,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl32),
  inference(cnf_transformation,[],[f989_D])).
fof(f989_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f968,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f209,f182])).
fof(f988,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl30),
  inference(cnf_transformation,[],[f988_D])).
fof(f988_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f967,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f181])).
fof(f985,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f985_D])).
fof(f985_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f987,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl29),
  inference(cnf_transformation,[],[f987_D])).
fof(f987_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f966,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f268])).
fof(f984,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) | $spl24),
  inference(cnf_transformation,[],[f984_D])).
fof(f984_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f965,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f209,f188])).
fof(f981,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) | $spl20),
  inference(cnf_transformation,[],[f981_D])).
fof(f981_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f963,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(superposition,[],[f209,f185])).
fof(f978,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl16),
  inference(cnf_transformation,[],[f978_D])).
fof(f978_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f980,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | $spl19),
  inference(cnf_transformation,[],[f980_D])).
fof(f980_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f962,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(superposition,[],[f209,f267])).
fof(f516,plain,(
  $false | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f515,f481])).
fof(f481,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(subsumption_resolution,[],[f465,f174])).
fof(f465,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(backward_demodulation,[],[f419,f269])).
fof(f515,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f488,f481])).
fof(f488,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f481,f262])).
fof(f471,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f470,f174])).
fof(f470,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f469,f419])).
fof(f469,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f449,f174])).
fof(f449,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(backward_demodulation,[],[f419,f257])).
fof(f466,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f433,f174])).
fof(f433,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f419,f179])).
fof(f419,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f420,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) | $spl14),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f418,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f401,f374])).
fof(f401,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f251,f208])).
fof(f386,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f381,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f208])).
fof(f261,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f261_D])).
fof(f261_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f267,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f171,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7])],[f149])).
fof(f149,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X8,X9,X10,X11,X12] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(rectify,[],[f148])).
fof(f148,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(nnf_transformation,[],[f144])).
fof(f144,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <~> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|13','thm.quantHeuristics.LIST_LENGTH_4|split|13')).
fof(f265,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl4),
  inference(cnf_transformation,[],[f265_D])).
fof(f265_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f172,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f150])).
fof(f262,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f263,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f263_D])).
fof(f263_D,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f173,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f150])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 320
% Passive clauses: 1492
% Generated clauses: 18082
% Final active clauses: 203
% Final passive clauses: 732
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 56
% Trivial inequalities: 58
% Fw subsumption resolutions: 320
% Fw demodulations: 4673
% Bw demodulations: 426
% Condensations: 18
% Global subsumptions: 91
% 
% Simple tautologies: 20
% Equational tautologies: 60
% Forward subsumptions: 10991
% Fw demodulations to eq. taut.: 156
% Bw demodulations to eq. taut.: 16
% 
% Unit resulting resolution: 1177
% Factoring: 1
% Forward superposition: 6634
% Backward superposition: 4008
% Self superposition: 77
% Equality factoring: 16
% Equality resolution: 9
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 1759
% SAT solver unit clauses: 184
% SAT solver binary clauses: 625
% 
% Sat splits: 27
% Sat splitting refutations: 120
% 
% Memory used [KB]: 14328
% Time elapsed: 0.524 s
% ------------------------------
% ------------------------------
% Success in time 1.833 s
