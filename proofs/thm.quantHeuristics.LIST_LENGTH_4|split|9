Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (14543)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 373
% Passive clauses: 3115
% Generated clauses: 34865
% Final active clauses: 321
% Final passive clauses: 2497
% Input formulas: 133
% Initial clauses: 214
% 
% Duplicate literals: 477
% Trivial inequalities: 173
% Fw subsumption resolutions: 1307
% Fw demodulations: 3950
% Bw demodulations: 45
% 
% Simple tautologies: 134
% Equational tautologies: 38
% Forward subsumptions: 25762
% Fw demodulations to eq. taut.: 13
% 
% Binary resolution: 125
% Factoring: 1
% Forward superposition: 16634
% Backward superposition: 11861
% Self superposition: 132
% Equality factoring: 62
% Equality resolution: 8
% 
% Split clauses: 59
% Split components: 118
% SAT solver clauses: 130
% SAT solver unit clauses: 4
% SAT solver binary clauses: 34
% 
% Sat splits: 59
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 130
% TWLsolver calls for satisfiability: 38
% 
% Memory used [KB]: 23666
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (14560)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 279
% Passive clauses: 1725
% Generated clauses: 25497
% Final active clauses: 198
% Final passive clauses: 874
% Input formulas: 133
% Initial clauses: 214
% 
% Duplicate literals: 147
% Trivial inequalities: 237
% Fw subsumption resolutions: 1139
% Fw demodulations: 5292
% Bw demodulations: 610
% Condensations: 434
% Global subsumptions: 5
% 
% Simple tautologies: 133
% Equational tautologies: 15
% Forward subsumptions: 14103
% Fw demodulations to eq. taut.: 13
% Bw demodulations to eq. taut.: 9
% 
% Binary resolution: 124
% Factoring: 1
% Forward superposition: 9396
% Backward superposition: 4977
% Self superposition: 137
% Equality factoring: 24
% Equality resolution: 23
% 
% Split clauses: 137
% Split components: 274
% SAT solver clauses: 2126
% SAT solver unit clauses: 286
% SAT solver binary clauses: 106
% SAT solver learnt clauses: 10
% 
% Sat splits: 137
% Sat splitting refutations: 46
% 
% TWLsolver clauses: 2106
% TWLsolver calls for satisfiability: 1012
% 
% Memory used [KB]: 19317
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f138192,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f426,f642,f641,f425,f644,f424,f646,f640,f869,f876,f874,f965,f967,f1077,f1092,f1264,f1903,f1919,f1905,f1922,f1906,f1925,f1923,f1907,f1926,f1908,f1927,f1911,f1921,f1930,f1917,f1934,f1932,f3396,f3402,f3400,f7142,f7225,f7454,f7457,f7460,f7463,f7466,f7503,f7504,f7505,f7506,f7509,f7512,f7515,f7518,f7735,f7736,f7737,f7738,f7739,f7740,f7741,f7742,f7743,f7762,f7763,f7774,f7778,f7779,f7782,f7783,f7788,f7789,f7790,f7795,f7797,f7798,f7799,f7800,f7801,f7802,f7806,f7809,f7810,f7811,f7812,f7819,f7820,f7821,f7830,f7831,f7832,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7874,f7875,f7876,f7877,f7878,f7885,f7888,f7891,f7894,f7985,f7987,f8000,f8005,f8010,f8015,f8057,f8061,f8067,f8071,f8131,f8136,f8141,f8149,f8189,f8193,f8197,f8200,f8203,f8205,f8207,f8209,f8211,f8212,f8214,f19768,f19992,f19769,f19994,f19770,f19996,f19990,f19880,f20012,f20010,f20033,f20045,f20043,f21718,f21824,f21822,f21825,f21829,f21827,f27914,f28086,f28084,f35771,f35774,f35772,f35581,f35789,f35793,f35797,f35795,f35798,f35796,f35799,f35587,f35801,f35802,f35804,f35787,f35589,f35807,f35805,f35590,f35806,f35809,f35707,f35855,f35853,f36158,f36372,f36370,f44232,f44295,f44299,f44300,f44304,f44307,f44747,f44751,f44753,f44755,f44749,f45286,f45352,f44913,f45379,f44905,f45383,f44896,f44895,f45388,f44894,f45386,f44893,f45390,f44892,f45391,f44891,f45395,f45903,f45916,f46043,f46045,f47411,f47817,f47815,f47412,f47819,f47413,f47821,f47823,f47414,f45392,f47825,f47415,f45393,f47826,f47416,f47828,f47417,f45384,f47418,f47831,f47419,f45380,f47829,f47429,f45385,f47833,f47437,f45381,f47835,f47907,f47908,f47909,f47910,f47911,f47912,f47914,f47915,f47916,f47917,f47918,f47919,f47920,f47921,f47922,f52146,f52148,f56384,f56822,f56385,f56824,f56826,f56827,f56829,f56832,f56834,f56836,f56425,f56849,f56847,f56426,f56848,f56850,f56433,f56852,f56434,f56830,f56833,f56435,f56831,f56854,f58168,f58847,f62116,f62130,f62117,f62132,f62134,f62126,f62139,f62127,f62145,f62143,f62128,f62141,f62147,f65865,f66403,f65866,f66405,f66407,f66408,f66410,f66413,f66411,f66414,f66415,f66412,f66417,f65914,f66434,f66432,f72946,f72949,f73000,f72947,f73002,f966,f72950,f75135,f75647,f75645,f75136,f75649,f75137,f75651,f75653,f75138,f75655,f75139,f75656,f75150,f75657,f75660,f75163,f75664,f75168,f75669,f75667,f75169,f75668,f75670,f75172,f75672,f75662,f75173,f75675,f75673,f75174,f75674,f75677,f75175,f75681,f75679,f75176,f75680,f75682,f75180,f75684,f75181,f75685,f75658,f75182,f75686,f75688,f75187,f75690,f75188,f75693,f75189,f75692,f75695,f75312,f75740,f75744,f75736,f75738,f75813,f77347,f77484,f77482,f79731,f79881,f79879,f80789,f89876,f89878,f89881,f89879,f89887,f89880,f89889,f89915,f89917,f89920,f89918,f89882,f89921,f89919,f89923,f88898,f89928,f89926,f91866,f91859,f91868,f91870,f95823,f95827,f95825,f95748,f95831,f95829,f95788,f95856,f95854,f107617,f107847,f107825,f107827,f138182])).
fof(f138182,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f138181,f427])).
fof(f427,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9',aHL_TRUTH)).
fof(f138181,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f138029,f48432])).
fof(f48432,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76(sK2,sK1,sK0)))),s('type.num.num',sK1))) | $spl0),
  inference(unit_resulting_resolution,[],[f47958,f859])).
fof(f859,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f434,f471])).
fof(f471,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9',aHL_BOOL_CASES)).
fof(f434,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9',aHL_FALSITY)).
fof(f47958,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f703])).
fof(f703,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK76(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f687,f591])).
fof(f591,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X18,X19] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.GREATER_EQ')).
fof(f687,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK76(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(backward_demodulation,[],[f591,f567])).
fof(f567,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK76(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f398])).
fof(f398,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK76(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK77(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK78(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK79(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK80(X2,X1,X0)),s('type.list.list'(X0),sK76(X2,X1,X0)))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK76,sK77,sK78,sK79,sK80])],[f397])).
fof(f397,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X8,X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f396])).
fof(f396,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f248])).
fof(f248,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|8')).
fof(f138029,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f47957,f47924])).
fof(f47924,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f642,f591])).
fof(f47957,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK77(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK78(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK79(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK80(sK2,sK1,sK0)),s('type.list.list'(sK0),sK76(sK2,sK1,sK0)))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f695])).
fof(f695,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK77(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK78(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK79(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK80(X2,X1,X0)),s('type.list.list'(X0),sK76(X2,X1,X0))))))))))) )),
  inference(backward_demodulation,[],[f591,f568])).
fof(f568,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK77(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK78(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK79(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK80(X2,X1,X0)),s('type.list.list'(X0),sK76(X2,X1,X0)))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f398])).
fof(f107827,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) | $spl317),
  inference(cnf_transformation,[],[f107827_D])).
fof(f107827_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) <=> ~$spl317),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl317])])).
fof(f107825,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | $spl314),
  inference(cnf_transformation,[],[f107825_D])).
fof(f107825_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f107847,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f107635,f432])).
fof(f432,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f84])).
fof(f84,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_suc|split|0')).
fof(f107635,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f11703,f74424])).
fof(f74424,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f74423,f74389])).
fof(f74389,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f74388,f62870])).
fof(f62870,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f62660,f457])).
fof(f457,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f83])).
fof(f83,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_suc|split|1')).
fof(f62660,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(superposition,[],[f8419,f707])).
fof(f707,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f603,f595])).
fof(f595,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f131])).
fof(f131,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X18))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f603,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f129])).
fof(f129,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f8419,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f8332,f432])).
fof(f8332,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f6798])).
fof(f6798,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f603,f440])).
fof(f440,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f132])).
fof(f132,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.ADD_|48|')).
fof(f8213,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl16),
  inference(backward_demodulation,[],[f1919,f437])).
fof(f437,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f134])).
fof(f134,axiom,(
  ! [X19] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.SUB|split|0')).
fof(f74388,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f74387,f592])).
fof(f592,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X19,X18] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.ADD_SYM')).
fof(f74387,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f74079,f531])).
fof(f531,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f222])).
fof(f222,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X6] : ! [X20,X21] : s(X6,X21) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X20),s(X6,X21)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.bool.COND_CLAUSES|split|1')).
fof(f74079,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0))))))))) ) | ($spl0 | $spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f46205,f531,f73553,f584])).
fof(f584,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f411])).
fof(f411,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK89(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK90(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK89(X3,X2,X1,X0)),s('type.list.list'(X0),sK90(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK89,sK90])],[f410])).
fof(f410,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f409])).
fof(f409,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f259])).
fof(f259,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f258])).
fof(f258,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X8,X14,X15] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) <=> ? [X16,X17] : (s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X17))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.LENGTH_EQ_SUM')).
fof(f73553,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f73297,f667])).
fof(f667,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1)))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK47(X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f591,f537])).
fof(f537,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK47(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f368])).
fof(f368,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK47(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47(X2,X1,X0)),s('type.list.list'(X0),sK48(X2,X1,X0)))))) & (! [X3,X4] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK47,sK48])],[f367])).
fof(f367,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X5,X6] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))) & (! [X3,X4] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f366])).
fof(f366,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))) & (! [X3,X4] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f228])).
fof(f228,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X18,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X16,X17] : (s('type.num.num',X18) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LENGTH_LE_NUM')).
fof(f73297,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1)))) | $spl0),
  inference(forward_demodulation,[],[f73296,f47961])).
fof(f47961,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f696])).
fof(f696,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK91(X3,X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f591,f585])).
fof(f585,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK91(X3,X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f414])).
fof(f414,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK91(X3,X2,X1,X0)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK92(X3,X2,X1,X0))))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK91(X3,X2,X1,X0)),s('type.list.list'(X0),sK92(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK91,sK92])],[f413])).
fof(f413,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | ? [X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f412])).
fof(f412,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | ? [X4,X5] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))))),
  inference(nnf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) <=> ? [X4,X5] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f260])).
fof(f260,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) <=> ? [X4,X5] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X18,X19,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X16,X17] : (s('type.num.num',X18) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X17)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LENGTH_LE_PLUS')).
fof(f73296,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0))))))) | $spl0),
  inference(forward_demodulation,[],[f73208,f531])).
fof(f73208,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0)))))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f531,f47959,f669])).
fof(f669,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1)))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))) )),
  inference(backward_demodulation,[],[f591,f539])).
fof(f539,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f368])).
fof(f47959,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0)),s('type.list.list'(sK0),sK92(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f697])).
fof(f697,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK91(X3,X2,X1,X0)),s('type.list.list'(X0),sK92(X3,X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f591,f587])).
fof(f587,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK91(X3,X2,X1,X0)),s('type.list.list'(X0),sK92(X3,X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f414])).
fof(f46205,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f44632,f667])).
fof(f44632,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f644,f8521])).
fof(f8521,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) ) | $spl16),
  inference(forward_demodulation,[],[f517,f8363])).
fof(f8363,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f8362,f457])).
fof(f8362,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f8257,f432])).
fof(f8257,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f8213,f2671])).
fof(f2671,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f2627,f457])).
fof(f2627,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f463,f433])).
fof(f433,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f59])).
fof(f59,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|13')).
fof(f463,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|14')).
fof(f517,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f344])).
fof(f344,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,X0)),s('type.list.list'(X0),sK18(X1,X0))))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19,sK20])],[f343])).
fof(f343,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X5,X6,X7] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X5)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f342])).
fof(f342,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2)))))) & (! [X2,X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f207])).
fof(f207,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f112])).
fof(f112,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X9,X10,X11] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),X9))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_2|split|5')).
fof(f74423,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))))) | ($spl0 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f74065,f530])).
fof(f530,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f221,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f220])).
fof(f220,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f104])).
fof(f104,axiom,(
  ! [X6] : ! [X20,X21] : s(X6,X20) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X20),s(X6,X21)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.bool.COND_CLAUSES|split|0')).
fof(f74065,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)),s('type.list.list'(sK0),sK47(sK2,sK1,sK0)))),s('type.list.list'(sK0),X0)))))) ) | ($spl0 | $spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f46205,f530,f73553,f584])).
fof(f11703,plain,(
  ( ! [X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f11530,f8349])).
fof(f8349,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f8215,f432])).
fof(f8215,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f8213,f433])).
fof(f11530,plain,(
  ( ! [X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X20) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f432])).
fof(f622,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f415])).
fof(f415,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X18,X19] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) <=> s('type.num.num',X18) = s('type.num.num',X19))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|19')).
fof(f107617,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f8390,f74424])).
fof(f8390,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f8293,f432])).
fof(f8293,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f3541])).
fof(f3541,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f433])).
fof(f95854,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | $spl310),
  inference(cnf_transformation,[],[f95854_D])).
fof(f95854_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f95856,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl313),
  inference(cnf_transformation,[],[f95856_D])).
fof(f95856_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) <=> ~$spl313),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl313])])).
fof(f95788,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8390,f56176])).
fof(f56176,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56093,f531])).
fof(f56093,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))))) ) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f531,f45410,f536])).
fof(f536,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f365])).
fof(f365,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X2,X1,X0)),s('type.list.list'(X0),sK46(X2,X1,X0)))))) & (! [X3,X4] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46])],[f364])).
fof(f364,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | ? [X5,X6] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))) & (! [X3,X4] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f363])).
fof(f363,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | ? [X3,X4] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) & (! [X3,X4] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> ? [X3,X4] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f226])).
fof(f226,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> ? [X3,X4] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X8,X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> ? [X23,X9] : (s('type.num.num',X18) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X9)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.LENGTH_CONS')).
fof(f45410,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0)))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f44639,f8566])).
fof(f8566,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK16(X1,X0))))) ) | $spl16),
  inference(forward_demodulation,[],[f4787,f8213])).
fof(f4787,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK16(X1,X0))))) )),
  inference(backward_demodulation,[],[f4764,f653])).
fof(f653,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK16(X1,X0))))) )),
  inference(forward_demodulation,[],[f514,f433])).
fof(f514,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK16(X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f341])).
fof(f341,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,X0)),s('type.list.list'(X0),sK16(X1,X0))))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f340])).
fof(f340,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f339])).
fof(f339,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) & (! [X2,X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f205])).
fof(f205,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f113])).
fof(f113,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X9,X10] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X9))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_|49||split|5')).
fof(f4764,plain,(
  ( ! [X2,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f593,f591])).
fof(f593,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X19,X18] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X18))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.LESS_EQ')).
fof(f44639,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f644,f8565])).
fof(f8565,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) ) | $spl16),
  inference(forward_demodulation,[],[f4788,f8213])).
fof(f4788,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) )),
  inference(backward_demodulation,[],[f4764,f652])).
fof(f652,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) )),
  inference(forward_demodulation,[],[f515,f433])).
fof(f515,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f341])).
fof(f95829,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | $spl306),
  inference(cnf_transformation,[],[f95829_D])).
fof(f95829_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f95831,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl309),
  inference(cnf_transformation,[],[f95831_D])).
fof(f95831_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl309),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl309])])).
fof(f95748,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8390,f47962])).
fof(f47962,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f667])).
fof(f95825,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | $spl302),
  inference(cnf_transformation,[],[f95825_D])).
fof(f95825_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f95827,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl305),
  inference(cnf_transformation,[],[f95827_D])).
fof(f95827_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl305),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl305])])).
fof(f95823,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f95747,f8363])).
fof(f95747,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8390,f46205])).
fof(f91870,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl300),
  inference(cnf_transformation,[],[f91870_D])).
fof(f91870_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f91868,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl299),
  inference(cnf_transformation,[],[f91868_D])).
fof(f91868_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl299),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl299])])).
fof(f91859,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f8354,f8360])).
fof(f8360,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f8254,f432])).
fof(f8254,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f8213,f2549])).
fof(f2549,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f462,f433])).
fof(f462,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|16')).
fof(f8354,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(forward_demodulation,[],[f8231,f8213])).
fof(f8231,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f1901])).
fof(f1901,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f473,f436])).
fof(f436,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f130])).
fof(f130,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f473,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f313])).
fof(f313,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X18))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|18')).
fof(f91866,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f91865,f8360])).
fof(f91865,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f91799,f8360])).
fof(f91799,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f8354,f8360])).
fof(f89926,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK21(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))) | $spl294),
  inference(cnf_transformation,[],[f89926_D])).
fof(f89926_D,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK21(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f89928,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl297),
  inference(cnf_transformation,[],[f89928_D])).
fof(f89928_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) <=> ~$spl297),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl297])])).
fof(f88898,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK21(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f76441,f88075])).
fof(f88075,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f87462,f64563])).
fof(f64563,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8350,f56176])).
fof(f8350,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f8217,f5797])).
fof(f5797,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f594,f432])).
fof(f594,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.SUB_MONO_EQ')).
fof(f8217,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f439])).
fof(f439,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X19] : s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.SUB_|48||split|1')).
fof(f87462,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8350,f86966])).
fof(f86966,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f86877,f531])).
fof(f86877,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0))))))))) ) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f531,f45411,f536])).
fof(f45411,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54(sK2,'const.arithmetic.ZERO_0',sK0)),s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f44639,f6936])).
fof(f6936,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK53(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f6933,f4764])).
fof(f6933,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK53(X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f6798,f657])).
fof(f657,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK53(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f547,f433])).
fof(f547,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK53(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f377])).
fof(f377,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54(X2,X1,X0)),s('type.list.list'(X0),sK53(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK53,sK54])],[f376])).
fof(f376,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f375])).
fof(f375,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f234])).
fof(f234,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X9,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X9)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_|49||split|9')).
fof(f76441,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,X0)),s('type.list.list'(X0),sK21(X1,X0))))))))) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f76377,f52882])).
fof(f52882,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,X0)),s('type.list.list'(X0),sK21(X1,X0))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f518])).
fof(f518,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,X0)),s('type.list.list'(X0),sK21(X1,X0))))))))) )),
  inference(cnf_transformation,[],[f347])).
fof(f347,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,X0)),s('type.list.list'(X0),sK21(X1,X0))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21,sK22,sK23,sK24])],[f346])).
fof(f346,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),X6)))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f345])).
fof(f345,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2)))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))))),
  inference(flattening,[],[f209])).
fof(f209,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X9,X10,X11,X12] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_3|split|5')).
fof(f52881,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f52880,f432])).
fof(f52880,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f52671,f465])).
fof(f465,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_suc|split|2')).
fof(f52671,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f463,f8363])).
fof(f76377,plain,(
  ( ! [X6] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f4764,f56623])).
fof(f56623,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56622,f56621])).
fof(f56621,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56620,f432])).
fof(f56620,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56619,f465])).
fof(f56619,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56380,f531])).
fof(f56380,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))) ) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f531,f46205,f536])).
fof(f56622,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56379,f530])).
fof(f56379,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))),s('type.list.list'(sK0),X1)))))) ) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f530,f46205,f536])).
fof(f89923,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK35(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | $spl292),
  inference(cnf_transformation,[],[f89923_D])).
fof(f89923_D,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK35(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f89919,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl291),
  inference(cnf_transformation,[],[f89919_D])).
fof(f89919_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl291),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl291])])).
fof(f89921,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK35(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88891,f65078])).
fof(f65078,plain,(
  ( ! [X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X7)))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f64562,f593])).
fof(f64562,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f714,f56176])).
fof(f714,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f604,f591])).
fof(f604,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f277])).
fof(f277,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X18,X19] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.LESS_EQ_MONO')).
fof(f88891,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK35(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f53184,f88075])).
fof(f53184,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK35(X1,X0))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f52888,f4779])).
fof(f4779,plain,(
  ( ! [X2,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f4732,f591])).
fof(f4732,plain,(
  ( ! [X2,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f593,f457])).
fof(f52888,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK35(X1,X0))))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f662])).
fof(f662,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK35(X1,X0))))))))))) )),
  inference(backward_demodulation,[],[f590,f524])).
fof(f524,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK35(X1,X0)))))))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f356])).
fof(f356,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39(X1,X0)),s('type.list.list'(X0),sK35(X1,X0))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK35,sK36,sK37,sK38,sK39])],[f355])).
fof(f355,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X7)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f354])).
fof(f354,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f215])).
fof(f215,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(rectify,[],[f80])).
fof(f80,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|3')).
fof(f590,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X19,X18] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.GREATER_DEF')).
fof(f89882,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl284),
  inference(cnf_transformation,[],[f89882_D])).
fof(f89882_D,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f89918,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl290),
  inference(cnf_transformation,[],[f89918_D])).
fof(f89918_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f89920,plain,(
  ( ! [X76,X74,X72,X75,X73] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),X76)))))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88890,f65078])).
fof(f88890,plain,(
  ( ! [X76,X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X74),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X75),s('type.list.list'(sK0),X76)))))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f53183,f88075])).
fof(f53183,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f52885,f4779])).
fof(f52885,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f523])).
fof(f523,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) )),
  inference(cnf_transformation,[],[f353])).
fof(f353,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,X0)),s('type.list.list'(X0),sK30(X1,X0))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK30,sK31,sK32,sK33,sK34])],[f352])).
fof(f352,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X7)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f351])).
fof(f351,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f213])).
fof(f213,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|2')).
fof(f89917,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK30(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | $spl288),
  inference(cnf_transformation,[],[f89917_D])).
fof(f89917_D,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK30(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f89915,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK30(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88889,f65078])).
fof(f88889,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK30(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f53182,f88075])).
fof(f53182,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,X0)),s('type.list.list'(X0),sK30(X1,X0))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f52884,f4779])).
fof(f52884,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,X0)),s('type.list.list'(X0),sK30(X1,X0))))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f522])).
fof(f522,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,X0)),s('type.list.list'(X0),sK30(X1,X0))))))))))) )),
  inference(cnf_transformation,[],[f353])).
fof(f89889,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK25(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | $spl286),
  inference(cnf_transformation,[],[f89889_D])).
fof(f89889_D,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK25(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f89880,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl283),
  inference(cnf_transformation,[],[f89880_D])).
fof(f89880_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl283),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl283])])).
fof(f89887,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK25(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88863,f65078])).
fof(f88863,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK25(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f692,f88075])).
fof(f692,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,X0)),s('type.list.list'(X0),sK25(X1,X0))))))))))) )),
  inference(backward_demodulation,[],[f591,f520])).
fof(f520,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,X0)),s('type.list.list'(X0),sK25(X1,X0)))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f350])).
fof(f350,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,X0)),s('type.list.list'(X0),sK25(X1,X0))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK25,sK26,sK27,sK28,sK29])],[f349])).
fof(f349,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X7)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f348])).
fof(f348,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f211])).
fof(f211,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|4')).
fof(f89879,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl282),
  inference(cnf_transformation,[],[f89879_D])).
fof(f89879_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f89881,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88852,f65078])).
fof(f88852,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f527,f88075])).
fof(f527,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) )),
  inference(cnf_transformation,[],[f359])).
fof(f359,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,X0)),s('type.list.list'(X0),sK40(X1,X0))))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK40,sK41,sK42,sK43,sK44])],[f358])).
fof(f358,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X7,X8,X9,X10,X11] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),X7)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f357])).
fof(f357,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) & (! [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f218])).
fof(f218,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(flattening,[],[f217])).
fof(f217,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X2,X3,X4,X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2))))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X9,X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|5')).
fof(f89878,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK40(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | $spl280),
  inference(cnf_transformation,[],[f89878_D])).
fof(f89878_D,plain,(
  s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK40(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f89876,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK40(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f88851,f65078])).
fof(f88851,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK53(sK2,'const.arithmetic.ZERO_0',sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)),s('type.list.list'(sK0),sK40(sK53(sK2,'const.arithmetic.ZERO_0',sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f526,f88075])).
fof(f526,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44(X1,X0)),s('type.list.list'(X0),sK40(X1,X0))))))))))) )),
  inference(cnf_transformation,[],[f359])).
fof(f80789,plain,(
  $false | ($spl0 | $spl16 | $spl71)),
  inference(subsumption_resolution,[],[f80788,f427])).
fof(f80788,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl71)),
  inference(forward_demodulation,[],[f80787,f452])).
fof(f452,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X18] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|1')).
fof(f80787,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl0 | $spl16 | $spl71)),
  inference(forward_demodulation,[],[f80784,f8557])).
fof(f8557,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f468,f8213])).
fof(f468,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X18] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|21')).
fof(f80784,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ($spl0 | $spl16 | $spl71)),
  inference(backward_demodulation,[],[f80530,f52149])).
fof(f52149,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f48019,f4782])).
fof(f4782,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f4764,f718])).
fof(f718,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f717,f591])).
fof(f717,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f630,f591])).
fof(f630,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f419])).
fof(f419,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f297])).
fof(f297,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(flattening,[],[f296])).
fof(f296,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X19,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X18)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.NOT_LEQ')).
fof(f48019,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f636])).
fof(f636,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f423])).
fof(f423,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) & ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))))),
  inference(flattening,[],[f422])).
fof(f422,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))))) & ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))))),
  inference(nnf_transformation,[],[f304])).
fof(f304,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) <=> (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X19,X18,X22] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num',X22)))) <=> (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X22)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.SUB_RIGHT_GREATER_EQ')).
fof(f80530,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | ($spl16 | $spl71)),
  inference(unit_resulting_resolution,[],[f52216,f8223])).
fof(f8223,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f473])).
fof(f52216,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))))) | ($spl16 | $spl71)),
  inference(forward_demodulation,[],[f52194,f531])).
fof(f52194,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl71)),
  inference(superposition,[],[f8548,f45756])).
fof(f45756,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl71),
  inference(unit_resulting_resolution,[],[f434,f35774,f618])).
fof(f618,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f308])).
fof(f308,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f307])).
fof(f307,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f291])).
fof(f291,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X20,X21] : ((p(s(bool,X20)) => p(s(bool,X21))) => ((p(s(bool,X21)) => p(s(bool,X20))) => s(bool,X20) = s(bool,X21)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.bool.IMP_ANTISYM_AX')).
fof(f8548,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f617,f8213])).
fof(f617,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f290])).
fof(f290,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f90])).
fof(f90,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.bool.COND_3'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num',X19))))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_sub')).
fof(f79879,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) | $spl276),
  inference(cnf_transformation,[],[f79879_D])).
fof(f79879_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f79881,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl279),
  inference(cnf_transformation,[],[f79881_D])).
fof(f79881_D,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl279),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl279])])).
fof(f79731,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) | ($spl0 | $spl16)),
  inference(equality_factoring,[],[f60452])).
fof(f60452,plain,(
  ( ! [X84] : (s(bool,X84) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X84)) ) | ($spl0 | $spl16)),
  inference(subsumption_resolution,[],[f60404,f434])).
fof(f60404,plain,(
  ( ! [X84] : (p(s(bool,'F_0')) | s(bool,X84) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X84)) ) | ($spl0 | $spl16)),
  inference(superposition,[],[f964,f58961])).
fof(f58961,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | ($spl0 | $spl16)),
  inference(unit_resulting_resolution,[],[f434,f58948,f618])).
fof(f58948,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | ($spl0 | $spl16)),
  inference(unit_resulting_resolution,[],[f58845,f4782])).
fof(f58845,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f58844,f8216])).
fof(f8216,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f436])).
fof(f58844,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))),s('type.num.num',sK1)))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f58827,f592])).
fof(f58827,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f49133,f8273])).
fof(f8273,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f3441])).
fof(f3441,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f3434,f531])).
fof(f3434,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f531,f499])).
fof(f499,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f327])).
fof(f327,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f189])).
fof(f189,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.LENGTH_NIL')).
fof(f49133,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))))) ) | $spl0),
  inference(backward_demodulation,[],[f49132,f49014])).
fof(f49014,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)),s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))))) ) | $spl0),
  inference(forward_demodulation,[],[f48771,f531])).
fof(f48771,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)),s('type.list.list'(sK0),X1))))))),s('type.num.num',sK1))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f531,f48370,f669])).
fof(f48370,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f47958,f667])).
fof(f49132,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)),s('type.list.list'(sK0),X1)))))) ) | $spl0),
  inference(forward_demodulation,[],[f49131,f531])).
fof(f49131,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)),s('type.list.list'(sK0),X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f48731,f531])).
fof(f48731,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)),s('type.list.list'(sK0),X1)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f531,f531,f48370,f584])).
fof(f964,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f926,f434])).
fof(f926,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f618,f471])).
fof(f77482,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) ) | $spl272),
  inference(cnf_transformation,[],[f77482_D])).
fof(f77482_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f77484,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | $spl275),
  inference(cnf_transformation,[],[f77484_D])).
fof(f77484_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) <=> ~$spl275),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl275])])).
fof(f77347,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) ) | $spl45),
  inference(equality_factoring,[],[f60422])).
fof(f60422,plain,(
  ( ! [X17] : (s(bool,X17) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X17)) ) | $spl45),
  inference(subsumption_resolution,[],[f60361,f434])).
fof(f60361,plain,(
  ( ! [X17] : (p(s(bool,'F_0')) | s(bool,X17) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X17)) ) | $spl45),
  inference(superposition,[],[f964,f20225])).
fof(f20225,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | $spl45),
  inference(unit_resulting_resolution,[],[f434,f19994,f618])).
fof(f75813,plain,(
  $false | ($spl234 | $spl242)),
  inference(subsumption_resolution,[],[f75667,f75673])).
fof(f75738,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl271),
  inference(cnf_transformation,[],[f75738_D])).
fof(f75738_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl271),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl271])])).
fof(f75736,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | $spl268),
  inference(cnf_transformation,[],[f75736_D])).
fof(f75736_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f75744,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16 | $spl30)),
  inference(forward_demodulation,[],[f75324,f8240])).
fof(f8240,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl30)),
  inference(backward_demodulation,[],[f8213,f1930])).
fof(f75324,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8389,f47962])).
fof(f8389,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f8388,f8213])).
fof(f8388,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f8292,f8242])).
fof(f8242,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f8213,f1964])).
fof(f1964,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1942,f531])).
fof(f1942,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f531,f474])).
fof(f474,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f313])).
fof(f8292,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f3532])).
fof(f3532,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f622,f431])).
fof(f431,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f71])).
fof(f71,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.prim_rec.PRE|split|0')).
fof(f75740,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f75317,f430])).
fof(f430,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f87])).
fof(f87,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iDUB_removal|split|2')).
fof(f75317,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8296,f47962])).
fof(f8296,plain,(
  ( ! [X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f3613])).
fof(f3613,plain,(
  ( ! [X38] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f3534,f1964])).
fof(f3534,plain,(
  ( ! [X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f430])).
fof(f75312,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8223,f47962])).
fof(f75695,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | $spl266),
  inference(cnf_transformation,[],[f75695_D])).
fof(f75695_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f75692,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl263),
  inference(cnf_transformation,[],[f75692_D])).
fof(f75692_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f75189,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f61242,f47962])).
fof(f61242,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7))))) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f60668,f53195])).
fof(f53195,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f52969,f52881])).
fof(f52969,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f34208])).
fof(f34208,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(forward_demodulation,[],[f34135,f8349])).
fof(f34135,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK52('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f8353,f8349])).
fof(f8353,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK52(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f8229,f432])).
fof(f8229,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK52(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f655])).
fof(f655,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK52(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f543,f433])).
fof(f543,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK52(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK52(X2,X1,X0)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X2,X1,X0)),s('type.list.list'(X0),sK52(X2,X1,X0)))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK51,sK52])],[f373])).
fof(f373,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | ? [X5,X6] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(rectify,[],[f372])).
fof(f372,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f232])).
fof(f232,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : ! [X8,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))) <=> ? [X23,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X9)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.LENGTH_EQ_NUM_compute|split|1')).
fof(f60668,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8350,f56623])).
fof(f75693,plain,(
  ( ! [X91] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0))))) ) | $spl264),
  inference(cnf_transformation,[],[f75693_D])).
fof(f75693_D,plain,(
  ( ! [X91] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f75188,plain,(
  ( ! [X91] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0))))) ) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f61241,f47962])).
fof(f61241,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK52('const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61))))) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f60668,f53196])).
fof(f53196,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK52('const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f52970,f52881])).
fof(f52970,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK52('const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f34252])).
fof(f34252,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK52('const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(forward_demodulation,[],[f34153,f8351])).
fof(f8351,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f8227,f432])).
fof(f8227,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f647])).
fof(f647,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f460,f433])).
fof(f460,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|11')).
fof(f34153,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK52('const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f8353,f8351])).
fof(f75690,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | $spl260),
  inference(cnf_transformation,[],[f75690_D])).
fof(f75690_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f75187,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f61240,f47962])).
fof(f61240,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90,X89))))) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f60668,f53197])).
fof(f53197,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90,X89)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f52971,f52881])).
fof(f52971,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90,X89)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f34276])).
fof(f34276,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90,X89)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(forward_demodulation,[],[f34163,f432])).
fof(f34163,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90,X89)))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f8353,f432])).
fof(f75688,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl258),
  inference(cnf_transformation,[],[f75688_D])).
fof(f75688_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f75686,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl257),
  inference(cnf_transformation,[],[f75686_D])).
fof(f75686_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl257),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl257])])).
fof(f75182,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f53184,f47962])).
fof(f75658,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl226),
  inference(cnf_transformation,[],[f75658_D])).
fof(f75658_D,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f75685,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl256),
  inference(cnf_transformation,[],[f75685_D])).
fof(f75685_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f75181,plain,(
  ( ! [X80,X78,X81,X79,X82] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X78),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X79),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X80),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X81),s('type.list.list'(sK0),X82)))))))))) ) | ($spl0 | $spl16)),
  inference(superposition,[],[f53183,f47962])).
fof(f75684,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl254),
  inference(cnf_transformation,[],[f75684_D])).
fof(f75684_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f75180,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f53182,f47962])).
fof(f75682,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),X70)))))))) ) | $spl252),
  inference(cnf_transformation,[],[f75682_D])).
fof(f75682_D,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),X70)))))))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f75680,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl250),
  inference(cnf_transformation,[],[f75680_D])).
fof(f75680_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f75176,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X67),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X68),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X69),s('type.list.list'(sK0),X70)))))))) ) | ($spl0 | $spl16)),
  inference(superposition,[],[f52883,f47962])).
fof(f52883,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f52881,f519])).
fof(f519,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f347])).
fof(f75679,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))) | $spl248),
  inference(cnf_transformation,[],[f75679_D])).
fof(f75679_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f75681,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl251),
  inference(cnf_transformation,[],[f75681_D])).
fof(f75681_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl251),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl251])])).
fof(f75175,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f52882,f47962])).
fof(f75677,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK16(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | $spl246),
  inference(cnf_transformation,[],[f75677_D])).
fof(f75677_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK16(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f75674,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl245),
  inference(cnf_transformation,[],[f75674_D])).
fof(f75674_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl245),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl245])])).
fof(f75174,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK16(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8566,f47962])).
fof(f75673,plain,(
  ( ! [X66,X65] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),X66))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) | $spl242),
  inference(cnf_transformation,[],[f75673_D])).
fof(f75673_D,plain,(
  ( ! [X66,X65] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),X66))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f75675,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl244),
  inference(cnf_transformation,[],[f75675_D])).
fof(f75675_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f75173,plain,(
  ( ! [X66,X65] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),X66))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) | ($spl0 | $spl16)),
  inference(superposition,[],[f8565,f47962])).
fof(f75662,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) | $spl230),
  inference(cnf_transformation,[],[f75662_D])).
fof(f75662_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f75672,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl241),
  inference(cnf_transformation,[],[f75672_D])).
fof(f75672_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl241),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl241])])).
fof(f75172,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) | ($spl0 | $spl16)),
  inference(superposition,[],[f8554,f47962])).
fof(f8554,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl16),
  inference(forward_demodulation,[],[f8553,f432])).
fof(f8553,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl16),
  inference(forward_demodulation,[],[f651,f8213])).
fof(f651,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(forward_demodulation,[],[f512,f433])).
fof(f512,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f203])).
fof(f203,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f74])).
fof(f74,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|0')).
fof(f75670,plain,(
  ( ! [X61,X62,X63] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),X63))))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) | $spl238),
  inference(cnf_transformation,[],[f75670_D])).
fof(f75670_D,plain,(
  ( ! [X61,X62,X63] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),X63))))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f75668,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl236),
  inference(cnf_transformation,[],[f75668_D])).
fof(f75668_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f75169,plain,(
  ( ! [X61,X62,X63] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X61),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X62),s('type.list.list'(sK0),X63))))) != s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))) ) | ($spl0 | $spl16)),
  inference(superposition,[],[f8521,f47962])).
fof(f75667,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK18(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))) | $spl234),
  inference(cnf_transformation,[],[f75667_D])).
fof(f75667_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK18(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f75669,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl237),
  inference(cnf_transformation,[],[f75669_D])).
fof(f75669_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f75168,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK18(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))) | ($spl0 | $spl16)),
  inference(superposition,[],[f8520,f47962])).
fof(f8520,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,X0)),s('type.list.list'(X0),sK18(X1,X0))))))) ) | $spl16),
  inference(forward_demodulation,[],[f516,f8363])).
fof(f516,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,X0)),s('type.list.list'(X0),sK18(X1,X0)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f344])).
fof(f75664,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl233),
  inference(cnf_transformation,[],[f75664_D])).
fof(f75664_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f75163,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) | ($spl0 | $spl16)),
  inference(superposition,[],[f8225,f47962])).
fof(f8225,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f498])).
fof(f498,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f327])).
fof(f75660,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl228),
  inference(cnf_transformation,[],[f75660_D])).
fof(f75660_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f75657,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl225),
  inference(cnf_transformation,[],[f75657_D])).
fof(f75657_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl225),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl225])])).
fof(f75150,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f692,f47962])).
fof(f75656,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl224),
  inference(cnf_transformation,[],[f75656_D])).
fof(f75656_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f75139,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl0),
  inference(superposition,[],[f527,f47962])).
fof(f75655,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl222),
  inference(cnf_transformation,[],[f75655_D])).
fof(f75655_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f75138,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f526,f47962])).
fof(f75653,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl220),
  inference(cnf_transformation,[],[f75653_D])).
fof(f75653_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f75651,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl219),
  inference(cnf_transformation,[],[f75651_D])).
fof(f75651_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl219])])).
fof(f75137,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl0),
  inference(superposition,[],[f508,f47962])).
fof(f508,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK15(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))) )),
  inference(cnf_transformation,[],[f336])).
fof(f336,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK15(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f335])).
fof(f335,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f334])).
fof(f334,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))))),
  inference(flattening,[],[f199])).
fof(f199,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.NIL_0'))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|0')).
fof(f75649,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl216),
  inference(cnf_transformation,[],[f75649_D])).
fof(f75649_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f75136,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl0),
  inference(superposition,[],[f506,f47962])).
fof(f506,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))) )),
  inference(cnf_transformation,[],[f333])).
fof(f333,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10,sK11])],[f332])).
fof(f332,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X6,X7,X8,X9] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f331])).
fof(f331,plain,(
  ! [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))))))) & (! [X2,X3,X4,X5] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))))),
  inference(flattening,[],[f197])).
fof(f197,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X2,X3,X4,X5] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ? [X10,X11,X12,X13] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.NIL_0'))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|1')).
fof(f75645,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))))))))))) ) | $spl212),
  inference(cnf_transformation,[],[f75645_D])).
fof(f75645_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))))))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f75647,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))) | $spl215),
  inference(cnf_transformation,[],[f75647_D])).
fof(f75647_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f75135,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK0))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f47924,f47962])).
fof(f72950,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK88('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl210),
  inference(cnf_transformation,[],[f72950_D])).
fof(f72950_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK88('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f966,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f966_D])).
fof(f966_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f73002,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK88('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f73001])).
fof(f73001,plain,(
  ( ! [X39,X37,X41,X38,X40] : (p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK88('T_0',X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40)))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f72376,f964])).
fof(f72376,plain,(
  ( ! [X39,X37,X41,X38,X40] : (~p(s(bool,X37)) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK88('T_0',X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40)))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f578,f855])).
fof(f855,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f471,f471])).
fof(f578,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK88(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f408])).
fof(f408,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK87(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK88(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK87,sK88])],[f407])).
fof(f407,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f406])).
fof(f406,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f405])).
fof(f405,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f254])).
fof(f254,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X6] : ! [X25,X26] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7)))) & p(s(bool,X26))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7)))) & p(s(bool,X26))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f72947,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl208),
  inference(cnf_transformation,[],[f72947_D])).
fof(f72947_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f73000,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f72999])).
fof(f72999,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK87('T_0',X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35)))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f72375,f964])).
fof(f72375,plain,(
  ( ! [X35,X33,X36,X34,X32] : (~p(s(bool,X32)) | p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK87('T_0',X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35)))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f576,f855])).
fof(f576,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK87(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f408])).
fof(f72949,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK88('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f72948])).
fof(f72948,plain,(
  ( ! [X39,X37,X41,X38,X40] : (p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK88('T_0',X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40)))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f72196,f964])).
fof(f72196,plain,(
  ( ! [X39,X37,X41,X38,X40] : (~p(s(bool,X37)) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK88('T_0',X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40)))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f578,f855])).
fof(f72946,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f72945])).
fof(f72945,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK87('T_0',X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35)))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f72195,f964])).
fof(f72195,plain,(
  ( ! [X35,X33,X36,X34,X32] : (~p(s(bool,X32)) | p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK87('T_0',X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35)))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f576,f855])).
fof(f66432,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) | $spl204),
  inference(cnf_transformation,[],[f66432_D])).
fof(f66432_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f66434,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl207),
  inference(cnf_transformation,[],[f66434_D])).
fof(f66434_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl207),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl207])])).
fof(f65914,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) | ($spl4 | $spl16 | $spl39)),
  inference(superposition,[],[f61240,f51665])).
fof(f51665,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f49577,f667])).
fof(f49577,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f44619,f4783])).
fof(f4783,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f4764,f720])).
fof(f720,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) )),
  inference(forward_demodulation,[],[f719,f591])).
fof(f719,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f629,f591])).
fof(f629,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f419])).
fof(f44619,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f44321,f8554])).
fof(f44321,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f44320,f8226])).
fof(f8226,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f8213,f499])).
fof(f44320,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f3402,f8213])).
fof(f66417,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl202),
  inference(cnf_transformation,[],[f66417_D])).
fof(f66417_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f66412,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl199),
  inference(cnf_transformation,[],[f66412_D])).
fof(f66412_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl199),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl199])])).
fof(f66415,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f65879,f8531])).
fof(f8531,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f8530,f432])).
fof(f8530,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f7091,f8213])).
fof(f7091,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f705,f433])).
fof(f705,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f597,f591])).
fof(f597,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X18,X19] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X18))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|31')).
fof(f65879,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl16 | $spl39)),
  inference(superposition,[],[f692,f51665])).
fof(f66414,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl200),
  inference(cnf_transformation,[],[f66414_D])).
fof(f66414_D,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f66411,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl198),
  inference(cnf_transformation,[],[f66411_D])).
fof(f66411_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f66413,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f65868,f8531])).
fof(f65868,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl16 | $spl39)),
  inference(superposition,[],[f527,f51665])).
fof(f66410,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl196),
  inference(cnf_transformation,[],[f66410_D])).
fof(f66410_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f66408,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f65867,f8531])).
fof(f65867,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl16 | $spl39)),
  inference(superposition,[],[f526,f51665])).
fof(f66407,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl194),
  inference(cnf_transformation,[],[f66407_D])).
fof(f66407_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f66405,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl193),
  inference(cnf_transformation,[],[f66405_D])).
fof(f66405_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f65866,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ($spl16 | $spl39)),
  inference(superposition,[],[f508,f51665])).
fof(f66403,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl190),
  inference(cnf_transformation,[],[f66403_D])).
fof(f66403_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f65865,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ($spl16 | $spl39)),
  inference(superposition,[],[f506,f51665])).
fof(f62147,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0),sK0)))) | $spl188),
  inference(cnf_transformation,[],[f62147_D])).
fof(f62147_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0),sK0)))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f62141,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl183),
  inference(cnf_transformation,[],[f62141_D])).
fof(f62141_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl183),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl183])])).
fof(f62128,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK91(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK1,sK0),sK0)))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f61240,f47961])).
fof(f62143,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) | $spl184),
  inference(cnf_transformation,[],[f62143_D])).
fof(f62143_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f62145,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl187),
  inference(cnf_transformation,[],[f62145_D])).
fof(f62145_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f62127,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f61240,f46205])).
fof(f62139,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))) | $spl180),
  inference(cnf_transformation,[],[f62139_D])).
fof(f62139_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f62126,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))) | ($spl0 | $spl4 | $spl16)),
  inference(superposition,[],[f61240,f48370])).
fof(f62134,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0))),sK0)))) | $spl178),
  inference(cnf_transformation,[],[f62134_D])).
fof(f62134_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0))),sK0)))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f62132,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl177),
  inference(cnf_transformation,[],[f62132_D])).
fof(f62132_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f62117,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0))),sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f61240,f45410])).
fof(f62130,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | $spl174),
  inference(cnf_transformation,[],[f62130_D])).
fof(f62130_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f62116,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK52('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f61240,f644])).
fof(f58847,plain,(
  $false | ($spl0 | $spl16 | $spl129)),
  inference(subsumption_resolution,[],[f58846,f434])).
fof(f58846,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl16 | $spl129)),
  inference(forward_demodulation,[],[f58845,f47942])).
fof(f47942,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl129),
  inference(unit_resulting_resolution,[],[f434,f47817,f618])).
fof(f58168,plain,(
  $false | $spl166),
  inference(subsumption_resolution,[],[f58167,f427])).
fof(f58167,plain,(
  ~p(s(bool,'T_0')) | $spl166),
  inference(forward_demodulation,[],[f58166,f453])).
fof(f453,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X18] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|0')).
fof(f58166,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl166),
  inference(forward_demodulation,[],[f58158,f602])).
fof(f602,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X18,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|6')).
fof(f58158,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl166),
  inference(unit_resulting_resolution,[],[f56848,f4782])).
fof(f56854,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl172),
  inference(cnf_transformation,[],[f56854_D])).
fof(f56854_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f56831,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl159),
  inference(cnf_transformation,[],[f56831_D])).
fof(f56831_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f56435,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f53184,f46205])).
fof(f56833,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl160),
  inference(cnf_transformation,[],[f56833_D])).
fof(f56833_D,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f56830,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl158),
  inference(cnf_transformation,[],[f56830_D])).
fof(f56830_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f56434,plain,(
  ( ! [X92,X90,X93,X91,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X89),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X90),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X91),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X92),s('type.list.list'(sK0),X93)))))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f53183,f46205])).
fof(f56852,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl170),
  inference(cnf_transformation,[],[f56852_D])).
fof(f56852_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f56433,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f53182,f46205])).
fof(f56850,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),X74)))))))) ) | $spl168),
  inference(cnf_transformation,[],[f56850_D])).
fof(f56850_D,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),X74)))))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f56848,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl166),
  inference(cnf_transformation,[],[f56848_D])).
fof(f56848_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f56426,plain,(
  ( ! [X74,X72,X71,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X71),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X72),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X73),s('type.list.list'(sK0),X74)))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f52883,f46205])).
fof(f56847,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))) | $spl164),
  inference(cnf_transformation,[],[f56847_D])).
fof(f56847_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f56849,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl167),
  inference(cnf_transformation,[],[f56849_D])).
fof(f56849_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f56425,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f52882,f46205])).
fof(f56836,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl162),
  inference(cnf_transformation,[],[f56836_D])).
fof(f56836_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f56834,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56398,f52684])).
fof(f52684,plain,(
  ( ! [X14] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X14))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))) ) | $spl16),
  inference(superposition,[],[f705,f8363])).
fof(f56398,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f692,f46205])).
fof(f56832,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56387,f52684])).
fof(f56387,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f527,f46205])).
fof(f56829,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | $spl156),
  inference(cnf_transformation,[],[f56829_D])).
fof(f56829_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f56827,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f56386,f52684])).
fof(f56386,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f526,f46205])).
fof(f56826,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl154),
  inference(cnf_transformation,[],[f56826_D])).
fof(f56826_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f56824,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl153),
  inference(cnf_transformation,[],[f56824_D])).
fof(f56824_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f56385,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f508,f46205])).
fof(f56822,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl150),
  inference(cnf_transformation,[],[f56822_D])).
fof(f56822_D,plain,(
  s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f56384,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f506,f46205])).
fof(f52148,plain,(
  $false | ($spl76 | $spl80)),
  inference(subsumption_resolution,[],[f35795,f35799])).
fof(f52146,plain,(
  $false | ($spl4 | $spl16 | $spl79)),
  inference(subsumption_resolution,[],[f52145,f27751])).
fof(f27751,plain,(
  ( ! [X4,X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl16),
  inference(forward_demodulation,[],[f27746,f27732])).
fof(f27732,plain,(
  ( ! [X4,X2,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f27731,f531])).
fof(f27731,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X2))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))))) )),
  inference(forward_demodulation,[],[f27674,f531])).
fof(f27674,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f531,f531,f536])).
fof(f27746,plain,(
  ( ! [X4,X0,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl16),
  inference(backward_demodulation,[],[f27732,f27591])).
fof(f27591,plain,(
  ( ! [X4,X2,X0,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl16),
  inference(forward_demodulation,[],[f27576,f531])).
fof(f27576,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f531,f8521])).
fof(f52145,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl4 | $spl79)),
  inference(forward_demodulation,[],[f52144,f27732])).
fof(f52144,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl4 | $spl79)),
  inference(forward_demodulation,[],[f52134,f27732])).
fof(f52134,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl4 | $spl79)),
  inference(unit_resulting_resolution,[],[f644,f35797,f4784])).
fof(f4784,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) )),
  inference(backward_demodulation,[],[f4764,f712])).
fof(f712,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) )),
  inference(forward_demodulation,[],[f709,f436])).
fof(f709,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) )),
  inference(backward_demodulation,[],[f707,f679])).
fof(f679,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) )),
  inference(backward_demodulation,[],[f591,f659])).
fof(f659,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(forward_demodulation,[],[f551,f433])).
fof(f551,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f380])).
fof(f380,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0)))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK55,sK56])],[f379])).
fof(f379,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X5))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(rectify,[],[f378])).
fof(f378,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))) & (! [X3,X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f237])).
fof(f237,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f236])).
fof(f236,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))))) <=> ? [X9,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X9)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_|49||split|7')).
fof(f47922,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl123)),
  inference(global_subsumption,[],[f45392,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47913,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f646,f591])).
fof(f47030,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK2,sK0)),s('type.list.list'(sK0),sK25(sK2,sK0)))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f692])).
fof(f47031,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK2,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK2,sK0)),s('type.list.list'(sK0),sK40(sK2,sK0)))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f526])).
fof(f47032,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK0)))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f667])).
fof(f47033,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK0)),s('type.list.list'(sK0),sK48(sK2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),sK0)))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f668])).
fof(f47202,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47201,f27732])).
fof(f47201,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47200,f27732])).
fof(f47200,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47199,f531])).
fof(f47199,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47058,f592])).
fof(f47058,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f531,f580,f44629,f701])).
fof(f47132,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47131,f531])).
fof(f47131,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47130,f531])).
fof(f47130,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f47079,f592])).
fof(f47079,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK2))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f531,f531,f44629,f701])).
fof(f47089,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f4782])).
fof(f47094,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f44629,f859])).
fof(f46188,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK77(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK78(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK79(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK80(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))))) )),
  inference(forward_demodulation,[],[f46187,f457])).
fof(f46187,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK77(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK78(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK79(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK80(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))))) )),
  inference(forward_demodulation,[],[f46186,f465])).
fof(f46186,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK77(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK78(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK79(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK80(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))))) )),
  inference(forward_demodulation,[],[f46118,f463])).
fof(f46118,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK77(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK78(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK79(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK80(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))))) )),
  inference(superposition,[],[f695,f707])).
fof(f46114,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK77(X2,X0,X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK78(X2,X0,X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK79(X2,X0,X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK80(X2,X0,X1)),s('type.list.list'(X1),sK76(X2,X0,X1))))))))))) )),
  inference(superposition,[],[f695,f592])).
fof(f46113,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X157),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X158),X159) = s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK77(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK78(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK79(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK80(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),sK76(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158))))))))))) )),
  inference(superposition,[],[f695,f531])).
fof(f46112,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X152),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK77(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK78(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK79(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK80(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),sK76(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154))))))))))) )),
  inference(superposition,[],[f695,f530])).
fof(f46183,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK77(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK78(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK79(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK80(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK76(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))))) )),
  inference(forward_demodulation,[],[f46110,f592])).
fof(f46110,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK77(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK78(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK79(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK80(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK76(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))))) )),
  inference(superposition,[],[f695,f616])).
fof(f46182,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK77(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK78(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK79(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK80(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK76(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))))) )),
  inference(forward_demodulation,[],[f46109,f592])).
fof(f46109,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK77(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK78(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK79(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK80(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK76(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))))) )),
  inference(superposition,[],[f695,f611])).
fof(f46181,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137)))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK77(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK78(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK79(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK80(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK76(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))))) )),
  inference(forward_demodulation,[],[f46108,f592])).
fof(f46108,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK77(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK78(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK79(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK80(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK76(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))))) )),
  inference(superposition,[],[f695,f615])).
fof(f46180,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK77(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK78(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK79(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK80(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK76(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))))) )),
  inference(forward_demodulation,[],[f46107,f592])).
fof(f46107,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK77(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK78(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK79(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK80(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK76(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))))) )),
  inference(superposition,[],[f695,f609])).
fof(f46106,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK77(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK78(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK79(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK80(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),sK76(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130))))))))))) )),
  inference(superposition,[],[f695,f467])).
fof(f46105,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X127),X128) = s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK77(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK78(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK79(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK80(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),sK76(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127))))))))))) )),
  inference(superposition,[],[f695,f466])).
fof(f46178,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK77(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK78(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK79(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK80(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK76(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))))) )),
  inference(forward_demodulation,[],[f46103,f592])).
fof(f46103,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK77(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK78(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK79(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK80(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK76(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))))) )),
  inference(superposition,[],[f695,f614])).
fof(f46177,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK77(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK78(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK79(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK80(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK76(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))))) )),
  inference(forward_demodulation,[],[f46102,f592])).
fof(f46102,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK77(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK78(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK79(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK80(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK76(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))))) )),
  inference(superposition,[],[f695,f613])).
fof(f46176,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK77(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK78(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK79(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK80(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK76(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))))) )),
  inference(forward_demodulation,[],[f46101,f592])).
fof(f46101,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK77(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK78(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK79(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK80(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK76(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))))) )),
  inference(superposition,[],[f695,f612])).
fof(f46175,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107)))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK77(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK78(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK79(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK80(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK76(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))))) )),
  inference(forward_demodulation,[],[f46100,f592])).
fof(f46100,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK77(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK78(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK79(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK80(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK76(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))))) )),
  inference(superposition,[],[f695,f610])).
fof(f46099,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK77(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK78(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK79(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK80(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),sK76(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104))))))))))) )),
  inference(superposition,[],[f695,f454])).
fof(f46098,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK77(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK78(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK79(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK80(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),sK76(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101))))))))))) )),
  inference(superposition,[],[f695,f459])).
fof(f46097,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X98),X99) = s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK77(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK78(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK79(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK80(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),sK76(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98))))))))))) )),
  inference(superposition,[],[f695,f458])).
fof(f46171,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK77(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK78(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK79(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK80(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK76(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(forward_demodulation,[],[f46170,f457])).
fof(f46170,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK77(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK78(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK79(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK80(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK76(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(forward_demodulation,[],[f46169,f465])).
fof(f46169,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK77(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK78(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK79(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK80(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK76(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(forward_demodulation,[],[f46168,f463])).
fof(f46168,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK77(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK78(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK79(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK80(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK76(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(forward_demodulation,[],[f46093,f17113])).
fof(f46093,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK77(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK78(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK79(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK80(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK76(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(superposition,[],[f695,f603])).
fof(f46162,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK77(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK78(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK79(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK80(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK76(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(forward_demodulation,[],[f46161,f457])).
fof(f46161,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK77(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK78(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK79(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK80(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK76(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(forward_demodulation,[],[f46160,f465])).
fof(f46160,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK77(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK78(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK79(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK80(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK76(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(forward_demodulation,[],[f46159,f463])).
fof(f46159,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK77(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK78(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK79(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK80(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK76(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(forward_demodulation,[],[f46091,f17111])).
fof(f46091,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK77(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK78(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK79(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK80(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK76(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(superposition,[],[f695,f465])).
fof(f46090,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK77(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK78(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK79(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK80(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),sK76(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))))))))) )),
  inference(superposition,[],[f695,f457])).
fof(f46081,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK77(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK78(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK79(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK80(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),sK76(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))))))))) )),
  inference(superposition,[],[f695,f594])).
fof(f46139,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK77(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK78(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK79(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK80(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK76(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(forward_demodulation,[],[f46138,f457])).
fof(f46138,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK77(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK78(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK79(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK80(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK76(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(forward_demodulation,[],[f46137,f465])).
fof(f46137,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK77(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK78(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK79(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK80(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK76(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(forward_demodulation,[],[f46136,f463])).
fof(f46136,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK77(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK78(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK79(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK80(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK76(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(forward_demodulation,[],[f46073,f17113])).
fof(f46073,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK77(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK78(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK79(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK80(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK76(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(superposition,[],[f695,f707])).
fof(f46069,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK77(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK78(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK79(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK80(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK76(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12))))))))))) )),
  inference(superposition,[],[f695,f592])).
fof(f46129,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.list.list'(X36),X38) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK77('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK78('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK79('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK80('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK76('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f46063,f531])).
fof(f46063,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X36),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38))) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK77('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK78('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK79('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK80('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK76('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36))))))))))) )),
  inference(superposition,[],[f695,f531])).
fof(f46128,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK77('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK78('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK79('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK80('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK76('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f46062,f530])).
fof(f46062,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X32),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34))) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK77('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK78('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK79('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK80('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK76('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32))))))))))) )),
  inference(superposition,[],[f695,f530])).
fof(f46059,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21)))) = s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK77('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK78('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK79('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK80('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),sK76('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) )),
  inference(superposition,[],[f695,f583])).
fof(f46123,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK77('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK78('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK79('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK80('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK76('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f46122,f580])).
fof(f46122,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK77('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK78('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK79('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK80('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK76('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(forward_demodulation,[],[f46058,f27732])).
fof(f46058,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK77('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK78('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK79('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK80('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK76('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(superposition,[],[f695,f580])).
fof(f46121,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK77('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK78('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK79('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK80('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK76('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f46057,f495])).
fof(f46057,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X13),'const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14))) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK77('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK78('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK79('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK80('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK76('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13))))))))))) )),
  inference(superposition,[],[f695,f495])).
fof(f46120,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK77('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK78('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK79('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK80('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK76('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f46056,f644])).
fof(f46056,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK77('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK78('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK79('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK80('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK76('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0))))))))))) ) | $spl4),
  inference(superposition,[],[f695,f644])).
fof(f46055,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8)))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK77('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK78('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK79('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK80('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),sK76('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f695,f544])).
fof(f46054,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4)))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK77('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK78('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK79('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK80('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),sK76('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f695,f541])).
fof(f46053,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK77('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK78('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK79('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK80('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),sK76('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f695,f535])).
fof(f45980,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK72(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK73(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK74(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK75(X7,X5,X6)),s('type.list.list'(X6),sK71(X7,X5,X6))))))))))) )),
  inference(superposition,[],[f694,f592])).
fof(f45977,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X157)))))) | s('type.list.list'(X158),X159) = s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK72(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK73(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK74(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK75(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),sK71(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158))))))))))) )),
  inference(superposition,[],[f694,f531])).
fof(f45976,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X152)))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK72(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK73(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK74(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK75(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),sK71(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154))))))))))) )),
  inference(superposition,[],[f694,f530])).
fof(f45974,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK72(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK73(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK74(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK75(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK71(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))))) )),
  inference(superposition,[],[f694,f616])).
fof(f45973,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK72(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK73(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK74(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK75(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK71(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))))) )),
  inference(superposition,[],[f694,f611])).
fof(f45972,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137)))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK72(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK73(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK74(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK75(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK71(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))))) )),
  inference(superposition,[],[f694,f615])).
fof(f45971,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK72(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK73(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK74(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK75(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK71(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))))) )),
  inference(superposition,[],[f694,f609])).
fof(f45970,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129)))))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK72(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK73(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK74(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK75(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),sK71(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130))))))))))) )),
  inference(superposition,[],[f694,f467])).
fof(f45969,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126)))))))) | s('type.list.list'(X127),X128) = s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK72(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK73(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK74(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK75(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),sK71(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127))))))))))) )),
  inference(superposition,[],[f694,f466])).
fof(f45967,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK72(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK73(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK74(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK75(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK71(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))))) )),
  inference(superposition,[],[f694,f614])).
fof(f45966,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK72(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK73(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK74(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK75(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK71(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))))) )),
  inference(superposition,[],[f694,f613])).
fof(f45965,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK72(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK73(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK74(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK75(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK71(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))))) )),
  inference(superposition,[],[f694,f612])).
fof(f45964,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107)))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK72(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK73(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK74(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK75(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK71(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))))) )),
  inference(superposition,[],[f694,f610])).
fof(f45963,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X103)))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK72(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK73(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK74(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK75(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),sK71(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104))))))))))) )),
  inference(superposition,[],[f694,f454])).
fof(f45962,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100)))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK72(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK73(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK74(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK75(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),sK71(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101))))))))))) )),
  inference(superposition,[],[f694,f459])).
fof(f45961,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X97)))))))))) | s('type.list.list'(X98),X99) = s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK72(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK73(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK74(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK75(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),sK71(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98))))))))))) )),
  inference(superposition,[],[f694,f458])).
fof(f45957,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87)))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK72(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK73(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK74(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK75(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK71(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(superposition,[],[f694,f603])).
fof(f45955,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80)))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK72(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK73(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK74(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK75(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK71(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(superposition,[],[f694,f465])).
fof(f45954,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77)))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK72(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK73(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK74(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK75(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),sK71(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))))))))) )),
  inference(superposition,[],[f694,f457])).
fof(f45945,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49)))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK72(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK73(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK74(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK75(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),sK71(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))))))))) )),
  inference(superposition,[],[f694,f594])).
fof(f45937,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK72(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK73(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK74(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK75(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK71(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(superposition,[],[f694,f707])).
fof(f45933,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK72(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK73(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK74(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK75(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK71(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12))))))))))) )),
  inference(superposition,[],[f694,f592])).
fof(f45990,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.list.list'(X36),X38) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK72('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK73('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK74('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK75('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK71('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39))))))) )),
  inference(forward_demodulation,[],[f45927,f531])).
fof(f45927,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39)))))) | s('type.list.list'(X36),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38))) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK72('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK73('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK74('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK75('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK71('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36))))))))))) )),
  inference(superposition,[],[f694,f531])).
fof(f45989,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK72('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK73('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK74('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK75('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK71('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f45926,f530])).
fof(f45926,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(X32),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34))) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK72('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK73('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK74('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK75('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK71('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32))))))))))) )),
  inference(superposition,[],[f694,f530])).
fof(f45923,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X25)))))) | s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21)))) = s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK72('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK73('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK74('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK75('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),sK71('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) )),
  inference(superposition,[],[f694,f583])).
fof(f45986,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK72('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK73('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK74('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK75('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK71('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f45985,f580])).
fof(f45985,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK72('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK73('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK74('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK75('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK71('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(forward_demodulation,[],[f45922,f27732])).
fof(f45922,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK72('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK73('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK74('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK75('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK71('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(superposition,[],[f694,f580])).
fof(f45984,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK72('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK73('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK74('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK75('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK71('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X15))))))) )),
  inference(forward_demodulation,[],[f45921,f495])).
fof(f45921,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X15)))))) | s('type.list.list'(X13),'const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14))) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK72('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK73('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK74('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK75('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK71('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13))))))))))) )),
  inference(superposition,[],[f694,f495])).
fof(f45983,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK72('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK73('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK74('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK75('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK71('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12))))))) ) | $spl4),
  inference(forward_demodulation,[],[f45920,f644])).
fof(f45920,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK72('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK73('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK74('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK75('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK71('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0))))))))))) ) | $spl4),
  inference(superposition,[],[f694,f644])).
fof(f45919,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11)))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8)))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK72('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK73('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK74('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK75('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),sK71('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f694,f544])).
fof(f45918,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4)))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK72('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK73('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK74('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK75('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),sK71('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f694,f541])).
fof(f45917,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK72('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK73('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK74('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK75('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),sK71('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f694,f535])).
fof(f45835,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK82(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK83(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK84(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK85(X7,X5,X6)),s('type.list.list'(X6),sK81(X7,X5,X6))))))))))) )),
  inference(superposition,[],[f571,f592])).
fof(f45832,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X157)))))) | s('type.list.list'(X158),X159) = s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK82(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK83(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK84(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK85(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),sK81(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158))))))))))) )),
  inference(superposition,[],[f571,f531])).
fof(f45831,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X152)))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK82(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK83(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK84(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK85(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),sK81(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154))))))))))) )),
  inference(superposition,[],[f571,f530])).
fof(f45829,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK82(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK83(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK84(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK85(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK81(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))))) )),
  inference(superposition,[],[f571,f616])).
fof(f45828,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK82(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK83(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK84(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK85(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK81(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))))) )),
  inference(superposition,[],[f571,f611])).
fof(f45827,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137)))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK82(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK83(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK84(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK85(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK81(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))))) )),
  inference(superposition,[],[f571,f615])).
fof(f45826,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK82(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK83(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK84(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK85(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK81(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))))) )),
  inference(superposition,[],[f571,f609])).
fof(f45825,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129)))))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK82(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK83(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK84(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK85(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),sK81(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130))))))))))) )),
  inference(superposition,[],[f571,f467])).
fof(f45824,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126)))))))) | s('type.list.list'(X127),X128) = s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK82(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK83(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK84(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK85(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),sK81(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127))))))))))) )),
  inference(superposition,[],[f571,f466])).
fof(f45822,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK82(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK83(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK84(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK85(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK81(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))))) )),
  inference(superposition,[],[f571,f614])).
fof(f45821,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK82(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK83(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK84(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK85(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK81(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))))) )),
  inference(superposition,[],[f571,f613])).
fof(f45820,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK82(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK83(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK84(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK85(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK81(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))))) )),
  inference(superposition,[],[f571,f612])).
fof(f45819,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107)))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK82(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK83(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK84(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK85(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK81(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))))) )),
  inference(superposition,[],[f571,f610])).
fof(f45818,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X103)))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK82(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK83(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK84(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK85(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),sK81(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104))))))))))) )),
  inference(superposition,[],[f571,f454])).
fof(f45817,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100)))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK82(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK83(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK84(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK85(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),sK81(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101))))))))))) )),
  inference(superposition,[],[f571,f459])).
fof(f45816,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X97)))))))))) | s('type.list.list'(X98),X99) = s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK82(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK83(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK84(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK85(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),sK81(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98))))))))))) )),
  inference(superposition,[],[f571,f458])).
fof(f45812,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87)))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK82(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK83(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK84(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK85(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK81(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))))) )),
  inference(superposition,[],[f571,f603])).
fof(f45810,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80)))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK82(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK83(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK84(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK85(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK81(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))))) )),
  inference(superposition,[],[f571,f465])).
fof(f45809,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77)))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK82(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK83(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK84(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK85(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),sK81(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))))))))) )),
  inference(superposition,[],[f571,f457])).
fof(f45800,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49)))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK82(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK83(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK84(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK85(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),sK81(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))))))))) )),
  inference(superposition,[],[f571,f594])).
fof(f45792,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK82(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK83(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK84(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK85(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK81(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))))) )),
  inference(superposition,[],[f571,f707])).
fof(f45788,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK82(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK83(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK84(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK85(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK81(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12))))))))))) )),
  inference(superposition,[],[f571,f592])).
fof(f45847,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.list.list'(X36),X38) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK82('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK83('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK84('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK85('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK81('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39))))))) )),
  inference(forward_demodulation,[],[f45782,f531])).
fof(f45782,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39)))))) | s('type.list.list'(X36),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38))) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK82('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK83('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK84('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK85('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK81('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36))))))))))) )),
  inference(superposition,[],[f571,f531])).
fof(f45846,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK82('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK83('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK84('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK85('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK81('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f45781,f530])).
fof(f45781,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(X32),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34))) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK82('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK83('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK84('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK85('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK81('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32))))))))))) )),
  inference(superposition,[],[f571,f530])).
fof(f45778,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X25)))))) | s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21)))) = s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK82('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK83('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK84('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),'const.list.CONS_2'(s(X21,sK85('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)),s('type.list.list'(X21),sK81('const.list.APPEND_2'(s('type.list.list'(X21),sK89(X22,X23,X24,X21)),s('type.list.list'(X21),sK90(X22,X23,X24,X21))),X25,X21)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) )),
  inference(superposition,[],[f571,f583])).
fof(f45841,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK82('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK83('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK84('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK85('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK81('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f45840,f580])).
fof(f45840,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK82('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK83('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK84('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK85('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK81('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(forward_demodulation,[],[f45777,f27732])).
fof(f45777,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19))) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK82('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK83('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK84('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK85('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16)),s('type.list.list'(X16),sK81('const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X20,X16))))))))))) )),
  inference(superposition,[],[f571,f580])).
fof(f45839,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK82('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK83('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK84('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK85('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK81('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X15))))))) )),
  inference(forward_demodulation,[],[f45776,f495])).
fof(f45776,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X15)))))) | s('type.list.list'(X13),'const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14))) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK82('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK83('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK84('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK85('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13)),s('type.list.list'(X13),sK81('const.list.APPEND_2'(s('type.list.list'(X13),'const.list.NIL_0'),s('type.list.list'(X13),X14)),X15,X13))))))))))) )),
  inference(superposition,[],[f571,f495])).
fof(f45838,plain,(
  ( ! [X12] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK82('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK83('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK84('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK85('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK81('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12))))))) ) | $spl4),
  inference(forward_demodulation,[],[f45775,f644])).
fof(f45775,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK82('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK83('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK84('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK85('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0)),s('type.list.list'(sK0),sK81('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X12,sK0))))))))))) ) | $spl4),
  inference(superposition,[],[f571,f644])).
fof(f45774,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11)))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8)))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK82('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK83('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK84('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK85('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),sK81('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f571,f544])).
fof(f45773,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4)))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK82('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK83('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK84('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK85('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),sK81('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f571,f541])).
fof(f45772,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK83('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK85('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),sK81('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f571,f535])).
fof(f44901,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64(sK47(sK3,sK1,sK0),X22,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65(sK47(sK3,sK1,sK0),X22,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66(sK47(sK3,sK1,sK0),X22,sK0)),s('type.list.list'(sK0),sK63(sK47(sK3,sK1,sK0),X22,sK0))))))))) ) | $spl6),
  inference(superposition,[],[f559,f44328])).
fof(f44902,plain,(
  ( ! [X23] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X23)))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK68(sK47(sK3,sK1,sK0),X23,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK69(sK47(sK3,sK1,sK0),X23,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK70(sK47(sK3,sK1,sK0),X23,sK0)),s('type.list.list'(sK0),sK67(sK47(sK3,sK1,sK0),X23,sK0))))))))) ) | $spl6),
  inference(superposition,[],[f562,f44328])).
fof(f44910,plain,(
  ( ! [X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK63(sK47(sK3,sK1,sK0),X40,sK0)))),s('type.num.num',X40))))) ) | $spl6),
  inference(superposition,[],[f684,f44328])).
fof(f44911,plain,(
  ( ! [X41] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X41)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK67(sK47(sK3,sK1,sK0),X41,sK0)))),s('type.num.num',X41))))) ) | $spl6),
  inference(superposition,[],[f685,f44328])).
fof(f44922,plain,(
  ( ! [X66] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X66),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK56(sK47(sK3,sK1,sK0),X66,sK0)),s('type.list.list'(sK0),sK55(sK47(sK3,sK1,sK0),X66,sK0))))) ) | $spl6),
  inference(superposition,[],[f4785,f44328])).
fof(f44923,plain,(
  ( ! [X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54(sK47(sK3,sK1,sK0),X67,sK0)),s('type.list.list'(sK0),sK53(sK47(sK3,sK1,sK0),X67,sK0))))) ) | $spl6),
  inference(superposition,[],[f6936,f44328])).
fof(f45368,plain,(
  ( ! [X251,X250] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X250),X251)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X250),sK55(X251,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X250)))),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f45050,f44328])).
fof(f45050,plain,(
  ( ! [X251,X250] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X250),sK55(X251,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X250)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X250),X251))))))) ) | $spl6),
  inference(superposition,[],[f4786,f44328])).
fof(f45367,plain,(
  ( ! [X253,X252] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X252),X253)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X252),sK53(X253,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X252)))),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f45051,f44328])).
fof(f45051,plain,(
  ( ! [X253,X252] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X252),sK53(X253,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X252)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X252),X253))))))) ) | $spl6),
  inference(superposition,[],[f6935,f44328])).
fof(f45358,plain,(
  ( ! [X313] : (s('type.num.num',sK1) = s('type.num.num',sK86('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X313,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X313),s('type.num.num',sK1))))) ) | $spl6),
  inference(backward_demodulation,[],[f44328,f45112])).
fof(f44328,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | $spl6),
  inference(unit_resulting_resolution,[],[f44305,f667])).
fof(f45111,plain,(
  ( ! [X312,X311] : (~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num',sK1)))) | p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num',X312)))) | s('type.num.num',X312) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))) ) | $spl6),
  inference(superposition,[],[f573,f44328])).
fof(f45112,plain,(
  ( ! [X313] : (~p(s(bool,happ(s(fun('type.num.num',bool),X313),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num',sK86('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X313,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f574,f44328])).
fof(f45052,plain,(
  ( ! [X255,X254] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X254),X255)))))) | s('type.list.list'(X254),X255) = s('type.list.list'(X254),'const.list.CONS_2'(s(X254,sK54(X255,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X254)),s('type.list.list'(X254),sK53(X255,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X254))))) ) | $spl6),
  inference(superposition,[],[f6936,f44328])).
fof(f45049,plain,(
  ( ! [X249,X248] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X248),X249)))))) | s('type.list.list'(X248),X249) = s('type.list.list'(X248),'const.list.CONS_2'(s(X248,sK56(X249,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X248)),s('type.list.list'(X248),sK55(X249,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X248))))) ) | $spl6),
  inference(superposition,[],[f4785,f44328])).
fof(f45319,plain,(
  ( ! [X227,X225,X226] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X225),sK92(X226,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X227,X225)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X225),X226))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X227),s('type.num.num',sK1))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45030,f44328])).
fof(f45030,plain,(
  ( ! [X227,X225,X226] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X225),X226))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X227),s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X225),sK92(X226,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X227,X225)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f704,f44328])).
fof(f45029,plain,(
  ( ! [X222,X223,X224] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X222),X223))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X224)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X222),sK92(X223,X224,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X222)))),s('type.num.num',X224))))) ) | $spl6),
  inference(superposition,[],[f704,f44328])).
fof(f45318,plain,(
  ( ! [X220,X221] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X220),sK76(X221,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X220)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X220),X221))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45028,f44328])).
fof(f45028,plain,(
  ( ! [X220,X221] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X220),X221))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X220),sK76(X221,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X220)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f703,f44328])).
fof(f45317,plain,(
  ( ! [X218,X219] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),sK71(X219,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X218)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),X219))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45316,f44328])).
fof(f45316,plain,(
  ( ! [X218,X219] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),X219))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),sK71(X219,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X218)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45027,f592])).
fof(f45027,plain,(
  ( ! [X218,X219] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),X219))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X218),sK71(X219,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X218)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f702,f44328])).
fof(f45024,plain,(
  ( ! [X202,X203,X201] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X203),s('type.num.num',sK1)))))) | s('type.list.list'(X201),X202) = s('type.list.list'(X201),'const.list.APPEND_2'(s('type.list.list'(X201),sK91(X202,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X203,X201)),s('type.list.list'(X201),sK92(X202,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X203,X201))))) ) | $spl6),
  inference(superposition,[],[f697,f44328])).
fof(f45023,plain,(
  ( ! [X198,X200,X199] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),X199))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X200)))))) | s('type.list.list'(X198),X199) = s('type.list.list'(X198),'const.list.APPEND_2'(s('type.list.list'(X198),sK91(X199,X200,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X198)),s('type.list.list'(X198),sK92(X199,X200,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X198))))) ) | $spl6),
  inference(superposition,[],[f697,f44328])).
fof(f45022,plain,(
  ( ! [X196,X197,X195] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),X196))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X197),s('type.num.num',sK1)))))) | s('type.num.num',X197) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),sK91(X196,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X197,X195))))) ) | $spl6),
  inference(superposition,[],[f696,f44328])).
fof(f45312,plain,(
  ( ! [X194,X192,X193] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),sK91(X193,X194,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X192)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),X193))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X194))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45021,f44328])).
fof(f45021,plain,(
  ( ! [X194,X192,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),X193))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X194)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),sK91(X193,X194,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X192))))) ) | $spl6),
  inference(superposition,[],[f696,f44328])).
fof(f45311,plain,(
  ( ! [X191,X190] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),sK81(X191,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X190)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45310,f44328])).
fof(f45310,plain,(
  ( ! [X191,X190] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),sK81(X191,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X190)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45020,f592])).
fof(f45020,plain,(
  ( ! [X191,X190] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),sK81(X191,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X190)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f688,f44328])).
fof(f45309,plain,(
  ( ! [X189,X188] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK67(X189,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X188)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45308,f44328])).
fof(f45308,plain,(
  ( ! [X189,X188] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK67(X189,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X188)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45019,f592])).
fof(f45019,plain,(
  ( ! [X189,X188] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK67(X189,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X188)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f685,f44328])).
fof(f45307,plain,(
  ( ! [X187,X186] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X186),sK63(X187,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X186)))),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X186),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45018,f44328])).
fof(f45018,plain,(
  ( ! [X187,X186] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X186),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X186),sK63(X187,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X186)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f684,f44328])).
fof(f45015,plain,(
  ( ! [X173,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num',sK1)))) | s('type.list.list'(X172),X173) = s('type.list.list'(X172),'const.list.APPEND_2'(s('type.list.list'(X172),sK47(X173,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X172)),s('type.list.list'(X172),sK48(X173,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X172))))) ) | $spl6),
  inference(superposition,[],[f668,f44328])).
fof(f45303,plain,(
  ( ! [X171,X170] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK47(X171,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X170)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f45014,f44328])).
fof(f45014,plain,(
  ( ! [X171,X170] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK47(X171,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X170))))) ) | $spl6),
  inference(superposition,[],[f667,f44328])).
fof(f45007,plain,(
  ( ! [X160] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X160))) | s('type.num.num',X160) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))) ) | $spl6),
  inference(superposition,[],[f622,f44328])).
fof(f45297,plain,(
  ( ! [X114,X112,X113] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK90('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X114,X113,X112)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',sK1)))) ) | $spl6),
  inference(forward_demodulation,[],[f44961,f44328])).
fof(f44961,plain,(
  ( ! [X114,X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',sK1))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK90('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X114,X113,X112))))) ) | $spl6),
  inference(superposition,[],[f582,f44328])).
fof(f44960,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X111))) | s('type.num.num',X111) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK90(X111,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X110,X109))))) ) | $spl6),
  inference(superposition,[],[f582,f44328])).
fof(f44959,plain,(
  ( ! [X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X108),s('type.num.num',sK1))) | s('type.num.num',X108) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK89('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X108,X107,X106))))) ) | $spl6),
  inference(superposition,[],[f581,f44328])).
fof(f45296,plain,(
  ( ! [X103,X105,X104] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK89(X105,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X105)))) ) | $spl6),
  inference(forward_demodulation,[],[f44958,f44328])).
fof(f44958,plain,(
  ( ! [X103,X105,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X105))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK89(X105,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X104,X103))))) ) | $spl6),
  inference(superposition,[],[f581,f44328])).
fof(f45295,plain,(
  ( ! [X101,X102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK68(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK69(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK70(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),sK67(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44957,f592])).
fof(f44957,plain,(
  ( ! [X101,X102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK68(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK69(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK70(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101)),s('type.list.list'(X101),sK67(X102,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X101))))))))) ) | $spl6),
  inference(superposition,[],[f562,f44328])).
fof(f44956,plain,(
  ( ! [X99,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X99),X100) = s('type.list.list'(X99),'const.list.CONS_2'(s(X99,sK64(X100,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X99)),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,sK65(X100,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X99)),s('type.list.list'(X99),'const.list.CONS_2'(s(X99,sK66(X100,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X99)),s('type.list.list'(X99),sK63(X100,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X99))))))))) ) | $spl6),
  inference(superposition,[],[f559,f44328])).
fof(f45293,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK50('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X94,X93)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))) ) | $spl6),
  inference(forward_demodulation,[],[f44954,f44328])).
fof(f44954,plain,(
  ( ! [X94,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK50('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X94,X93))))) ) | $spl6),
  inference(superposition,[],[f540,f44328])).
fof(f45291,plain,(
  ( ! [X88,X87] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X88,X87)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl6),
  inference(forward_demodulation,[],[f44952,f44328])).
fof(f44952,plain,(
  ( ! [X88,X87] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X88,X87))))) ) | $spl6),
  inference(superposition,[],[f534,f44328])).
fof(f44921,plain,(
  ( ! [X64,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X63)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X63),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X64)))))) | s('type.list.list'(sK0),X64) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X65),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))) ) | $spl6),
  inference(superposition,[],[f4784,f44328])).
fof(f44920,plain,(
  ( ! [X61,X62] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num',X62)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK92(sK47(sK3,sK1,sK0),X62,X61,sK0)))),s('type.num.num',X62))))) ) | $spl6),
  inference(superposition,[],[f704,f44328])).
fof(f44919,plain,(
  ( ! [X60] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76(sK47(sK3,sK1,sK0),X60,sK0)))),s('type.num.num',X60))))) ) | $spl6),
  inference(superposition,[],[f703,f44328])).
fof(f44918,plain,(
  ( ! [X59] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X59)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK71(sK47(sK3,sK1,sK0),X59,sK0)))),s('type.num.num',X59))))) ) | $spl6),
  inference(superposition,[],[f702,f44328])).
fof(f44917,plain,(
  ( ! [X57,X54,X58,X56,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X53)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X54))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),X54) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))))) ) | $spl6),
  inference(superposition,[],[f700,f44328])).
fof(f44916,plain,(
  ( ! [X47,X52,X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X47)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X48))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X47)))))) | s('type.list.list'(sK0),X48) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))))) ) | $spl6),
  inference(superposition,[],[f699,f44328])).
fof(f44915,plain,(
  ( ! [X45,X46] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X46)))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91(sK47(sK3,sK1,sK0),X46,X45,sK0)),s('type.list.list'(sK0),sK92(sK47(sK3,sK1,sK0),X46,X45,sK0))))) ) | $spl6),
  inference(superposition,[],[f697,f44328])).
fof(f44914,plain,(
  ( ! [X43,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X44)))))) | s('type.num.num',X43) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91(sK47(sK3,sK1,sK0),X44,X43,sK0))))) ) | $spl6),
  inference(superposition,[],[f696,f44328])).
fof(f44912,plain,(
  ( ! [X42] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X42)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK81(sK47(sK3,sK1,sK0),X42,sK0)))),s('type.num.num',X42))))) ) | $spl6),
  inference(superposition,[],[f688,f44328])).
fof(f44909,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(sK0),X36) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(superposition,[],[f673,f44328])).
fof(f44908,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X30)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),X31) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(superposition,[],[f672,f44328])).
fof(f44907,plain,(
  ( ! [X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X29)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK47(sK3,sK1,sK0),X29,sK0)),s('type.list.list'(sK0),sK48(sK47(sK3,sK1,sK0),X29,sK0))))) ) | $spl6),
  inference(superposition,[],[f668,f44328])).
fof(f44906,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X28)))) | s('type.num.num',X28) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK47(sK3,sK1,sK0),X28,sK0))))) ) | $spl6),
  inference(superposition,[],[f667,f44328])).
fof(f44904,plain,(
  ( ! [X26,X27] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK90(X27,X26,sK47(sK3,sK1,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f582,f44328])).
fof(f44903,plain,(
  ( ! [X24,X25] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25))) | s('type.num.num',X24) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK89(X25,X24,sK47(sK3,sK1,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f581,f44328])).
fof(f44900,plain,(
  ( ! [X21,X19,X20] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) | s('type.list.list'(sK0),X20) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X20))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))) ) | $spl6),
  inference(superposition,[],[f542,f44328])).
fof(f44899,plain,(
  ( ! [X18] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK50(X18,sK47(sK3,sK1,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f540,f44328])).
fof(f44898,plain,(
  ( ! [X17,X15,X16] : (s('type.num.num',sK1) != s('type.num.num',X15) | s('type.list.list'(sK0),X16) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X16)))) ) | $spl6),
  inference(superposition,[],[f536,f44328])).
fof(f44897,plain,(
  ( ! [X14] : (s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46(X14,sK47(sK3,sK1,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f534,f44328])).
fof(f45230,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))))) ) | $spl6),
  inference(backward_demodulation,[],[f45229,f45117])).
fof(f45229,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),X1)))))) ) | $spl6),
  inference(forward_demodulation,[],[f45228,f531])).
fof(f45228,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1)))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44845,f531])).
fof(f44845,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),X1)))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f531,f44328,f584])).
fof(f45191,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45190,f27732])).
fof(f45190,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45189,f592])).
fof(f45189,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44858,f531])).
fof(f44858,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))),s('type.num.num',sK1)))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f580,f44328,f584])).
fof(f45139,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))) | $spl6),
  inference(forward_demodulation,[],[f44876,f531])).
fof(f44876,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f44328,f531,f44328,f584])).
fof(f45122,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45121,f592])).
fof(f45121,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))) ) | $spl6),
  inference(forward_demodulation,[],[f45120,f531])).
fof(f45120,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num',sK1)))) ) | $spl6),
  inference(forward_demodulation,[],[f44882,f531])).
fof(f44882,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f531,f44328,f584])).
fof(f45117,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f44885,f531])).
fof(f44885,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),X1))))))),s('type.num.num',sK1))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f44328,f669])).
fof(f45114,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44888,f531])).
fof(f44888,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f44328,f536])).
fof(f44818,plain,(
  ( ! [X153] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),sK86('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X153,'type.list.list'(sK0))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X153),s('type.list.list'(sK0),sK2))))) ) | $spl4),
  inference(forward_demodulation,[],[f44716,f644])).
fof(f44716,plain,(
  ( ! [X153] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X153),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),sK86('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X153,'type.list.list'(sK0)))) ) | $spl4),
  inference(superposition,[],[f574,f644])).
fof(f44806,plain,(
  ( ! [X109] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X109,sK0)),s('type.list.list'(sK0),sK53('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X109,sK0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X109),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44688,f644])).
fof(f44688,plain,(
  ( ! [X109] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X109),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X109,sK0)),s('type.list.list'(sK0),sK53('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X109,sK0))))) ) | $spl4),
  inference(superposition,[],[f6936,f644])).
fof(f44805,plain,(
  ( ! [X108] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK56('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X108,sK0)),s('type.list.list'(sK0),sK55('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X108,sK0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X108),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44687,f644])).
fof(f44687,plain,(
  ( ! [X108] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X108),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK56('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X108,sK0)),s('type.list.list'(sK0),sK55('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X108,sK0))))) ) | $spl4),
  inference(superposition,[],[f4785,f644])).
fof(f44685,plain,(
  ( ! [X103,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X103),s('type.num.num',X104)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X104,X103,sK0)))),s('type.num.num',X104))))) ) | $spl4),
  inference(superposition,[],[f704,f644])).
fof(f44684,plain,(
  ( ! [X102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X102,sK0)))),s('type.num.num',X102))))) ) | $spl4),
  inference(superposition,[],[f703,f644])).
fof(f44683,plain,(
  ( ! [X101] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X101)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK71('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X101,sK0)))),s('type.num.num',X101))))) ) | $spl4),
  inference(superposition,[],[f702,f644])).
fof(f44786,plain,(
  ( ! [X76,X75] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X76,X75,sK0)),s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X76,X75,sK0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X75),s('type.num.num',X76))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44677,f644])).
fof(f44677,plain,(
  ( ! [X76,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X75),s('type.num.num',X76)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X76,X75,sK0)),s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X76,X75,sK0))))) ) | $spl4),
  inference(superposition,[],[f697,f644])).
fof(f44676,plain,(
  ( ! [X74,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num',X74)))))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X74,X73,sK0))))) ) | $spl4),
  inference(superposition,[],[f696,f644])).
fof(f44785,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(forward_demodulation,[],[f44784,f644])).
fof(f44784,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(subsumption_resolution,[],[f44675,f44629])).
fof(f44675,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(superposition,[],[f692,f644])).
fof(f44674,plain,(
  ( ! [X72] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X72)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK81('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X72,sK0)))),s('type.num.num',X72))))) ) | $spl4),
  inference(superposition,[],[f688,f644])).
fof(f44673,plain,(
  ( ! [X71] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X71)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK67('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X71,sK0)))),s('type.num.num',X71))))) ) | $spl4),
  inference(superposition,[],[f685,f644])).
fof(f44672,plain,(
  ( ! [X70] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK63('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X70,sK0)))),s('type.num.num',X70))))) ) | $spl4),
  inference(superposition,[],[f684,f644])).
fof(f44771,plain,(
  ( ! [X50] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X50,sK0)),s('type.list.list'(sK0),sK48('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X50,sK0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X50))))) ) | $spl4),
  inference(forward_demodulation,[],[f44666,f644])).
fof(f44666,plain,(
  ( ! [X50] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X50)))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X50,sK0)),s('type.list.list'(sK0),sK48('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X50,sK0))))) ) | $spl4),
  inference(superposition,[],[f668,f644])).
fof(f44665,plain,(
  ( ! [X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X49)))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X49,sK0))))) ) | $spl4),
  inference(superposition,[],[f667,f644])).
fof(f44770,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK35('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(forward_demodulation,[],[f44769,f644])).
fof(f44769,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK35('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(subsumption_resolution,[],[f44664,f44630])).
fof(f44664,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK35('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(superposition,[],[f662,f644])).
fof(f44660,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK90(X36,X35,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f582,f644])).
fof(f44659,plain,(
  ( ! [X33,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))) | s('type.num.num',X33) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK89(X34,X33,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f581,f644])).
fof(f44765,plain,(
  ( ! [X28] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK68('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK69('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK70('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),sK67('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44656,f644])).
fof(f44656,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK68('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK69('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK70('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0)),s('type.list.list'(sK0),sK67('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X28,sK0))))))))) ) | $spl4),
  inference(superposition,[],[f562,f644])).
fof(f44764,plain,(
  ( ! [X27] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),sK63('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44655,f644])).
fof(f44655,plain,(
  ( ! [X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0)),s('type.list.list'(sK0),sK63('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X27,sK0))))))))) ) | $spl4),
  inference(superposition,[],[f559,f644])).
fof(f44653,plain,(
  ( ! [X23] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK50(X23,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f540,f644])).
fof(f44651,plain,(
  ( ! [X19] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',X19) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46(X19,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f534,f644])).
fof(f44761,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK40('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(forward_demodulation,[],[f44760,f644])).
fof(f44760,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK40('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(subsumption_resolution,[],[f44649,f44629])).
fof(f44649,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK40('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(superposition,[],[f526,f644])).
fof(f44759,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(forward_demodulation,[],[f44758,f644])).
fof(f44758,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(subsumption_resolution,[],[f44647,f44630])).
fof(f44647,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK30('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))))) | $spl4),
  inference(superposition,[],[f522,f644])).
fof(f44757,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))) | $spl4),
  inference(forward_demodulation,[],[f44756,f644])).
fof(f44756,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))) | $spl4),
  inference(subsumption_resolution,[],[f44645,f44631])).
fof(f44645,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))))))) | $spl4),
  inference(superposition,[],[f518,f644])).
fof(f44746,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0)))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44745,f580])).
fof(f44745,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))),s('type.list.list'(sK0),X0)))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44744,f580])).
fof(f44744,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))),s('type.list.list'(sK0),X0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f44640,f580])).
fof(f44640,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))),s('type.list.list'(sK0),X0)))))) ) | $spl4),
  inference(superposition,[],[f580,f644])).
fof(f44629,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f644,f527])).
fof(f44630,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl4),
  inference(unit_resulting_resolution,[],[f644,f523])).
fof(f44631,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f644,f519])).
fof(f44722,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl4 | $spl6)),
  inference(backward_demodulation,[],[f44721,f44563])).
fof(f44721,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f44720,f27732])).
fof(f44720,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f44719,f27732])).
fof(f44719,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f44718,f27732])).
fof(f44718,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f44638,f531])).
fof(f44638,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f531,f644,f536])).
fof(f44329,plain,(
  s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)),s('type.list.list'(sK0),sK48(sK3,sK1,sK0)))) | $spl6),
  inference(unit_resulting_resolution,[],[f44305,f668])).
fof(f44596,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl6),
  inference(forward_demodulation,[],[f44595,f27732])).
fof(f44595,plain,(
  ( ! [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44594,f27732])).
fof(f44594,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44593,f27732])).
fof(f44593,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK3))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44592,f531])).
fof(f44592,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44335,f592])).
fof(f44335,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f44305,f673])).
fof(f44563,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl6),
  inference(forward_demodulation,[],[f44562,f27732])).
fof(f44562,plain,(
  ( ! [X4] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44561,f27732])).
fof(f44561,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44560,f27732])).
fof(f44560,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44559,f27732])).
fof(f44559,plain,(
  ( ! [X4,X2,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK3))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44341,f531])).
fof(f44341,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK3))))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f44305,f700])).
fof(f44498,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44497,f27732])).
fof(f44497,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44496,f27732])).
fof(f44496,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44495,f531])).
fof(f44495,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44354,f592])).
fof(f44354,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1))))))),s('type.num.num',sK1))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f580,f44305,f701])).
fof(f44428,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44427,f531])).
fof(f44427,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44426,f531])).
fof(f44426,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))))))))) ) | $spl6),
  inference(forward_demodulation,[],[f44375,f592])).
fof(f44375,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X1),s('type.list.list'(sK0),sK3))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))))),s('type.num.num',sK1))))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f531,f531,f44305,f701])).
fof(f44385,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(unit_resulting_resolution,[],[f44305,f4782])).
fof(f44390,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(unit_resulting_resolution,[],[f44305,f859])).
fof(f44305,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f646,f591])).
fof(f44119,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(forward_demodulation,[],[f44118,f457])).
fof(f44118,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(forward_demodulation,[],[f44117,f465])).
fof(f44117,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(forward_demodulation,[],[f44116,f463])).
fof(f44116,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(forward_demodulation,[],[f43995,f707])).
fof(f43995,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(superposition,[],[f700,f603])).
fof(f44110,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X210))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X212))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X210)))))))) | s('type.list.list'(X211),X213) != s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X214),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X215),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X216),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X217),s('type.list.list'(X211),X212)))))))))) )),
  inference(forward_demodulation,[],[f44109,f457])).
fof(f44109,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X210))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X212))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X210)))))))) | s('type.list.list'(X211),X213) != s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X214),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X215),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X216),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X217),s('type.list.list'(X211),X212)))))))))) )),
  inference(forward_demodulation,[],[f44108,f465])).
fof(f44108,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X210))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X212))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X210)))))))) | s('type.list.list'(X211),X213) != s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X214),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X215),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X216),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X217),s('type.list.list'(X211),X212)))))))))) )),
  inference(forward_demodulation,[],[f44107,f463])).
fof(f44107,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X210))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X212))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X210)))))))) | s('type.list.list'(X211),X213) != s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X214),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X215),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X216),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X217),s('type.list.list'(X211),X212)))))))))) )),
  inference(forward_demodulation,[],[f43993,f707])).
fof(f43993,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X212))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X210)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X211),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X210))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X211),X213) != s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X214),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X215),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X216),s('type.list.list'(X211),'const.list.CONS_2'(s(X211,X217),s('type.list.list'(X211),X212)))))))))) )),
  inference(superposition,[],[f700,f465])).
fof(f43971,plain,(
  ( ! [X30,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X30)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X32),X34) != s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X35),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X36),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X37),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X38),s('type.list.list'(X32),X33)))))))))) )),
  inference(superposition,[],[f700,f592])).
fof(f43960,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X48))),s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X45),X50) != s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X51),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X52),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X53),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X54),s('type.list.list'(X45),'const.list.APPEND_2'(s('type.list.list'(X45),sK89(X46,X47,X48,X45)),s('type.list.list'(X45),sK90(X46,X47,X48,X45)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X46)))) )),
  inference(superposition,[],[f700,f583])).
fof(f44021,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f44020,f580])).
fof(f44020,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),X37))),s('type.list.list'(X35),X38)))))))))))) )),
  inference(forward_demodulation,[],[f43959,f27732])).
fof(f43959,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),X37))),s('type.list.list'(X35),X38)))))))))))) )),
  inference(superposition,[],[f700,f580])).
fof(f43957,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20))),s('type.num.num',X21)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X18),X22) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X23),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK51(X19,X20,X18)),s('type.list.list'(X18),sK52(X19,X20,X18)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f700,f544])).
fof(f43956,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X9),X13) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X16),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X17),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK49(X10,X11,X9)),s('type.list.list'(X9),sK50(X10,X11,X9)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f700,f541])).
fof(f43955,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f700,f535])).
fof(f43734,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X227),s('type.num.num','const.num.SUC_1'(s('type.num.num',X226)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(forward_demodulation,[],[f43622,f6799])).
fof(f43622,plain,(
  ( ! [X231,X229,X227,X233,X230,X228,X226,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X229))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num','const.num.SUC_1'(s('type.num.num',X227)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X228),X230))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X226),s('type.num.num',X227)))))))))) | s('type.list.list'(X228),X230) != s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X231),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X232),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X233),s('type.list.list'(X228),'const.list.CONS_2'(s(X228,X234),s('type.list.list'(X228),X229)))))))))) )),
  inference(superposition,[],[f699,f603])).
fof(f43598,plain,(
  ( ! [X30,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X30)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)))))))) | s('type.list.list'(X32),X34) != s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X35),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X36),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X37),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,X38),s('type.list.list'(X32),X33)))))))))) )),
  inference(superposition,[],[f699,f592])).
fof(f43587,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X48))),s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X49)))))) | s('type.list.list'(X45),X50) != s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X51),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X52),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X53),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,X54),s('type.list.list'(X45),'const.list.APPEND_2'(s('type.list.list'(X45),sK89(X46,X47,X48,X45)),s('type.list.list'(X45),sK90(X46,X47,X48,X45)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X46)))) )),
  inference(superposition,[],[f699,f583])).
fof(f43648,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39))))))) )),
  inference(forward_demodulation,[],[f43647,f580])).
fof(f43647,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39)))))) | s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),X37))),s('type.list.list'(X35),X38)))))))))))) )),
  inference(forward_demodulation,[],[f43586,f27732])).
fof(f43586,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X37),s('type.list.list'(X35),X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39)))))) | s('type.list.list'(X35),X40) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X43),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X44),s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X36),s('type.list.list'(X35),X37))),s('type.list.list'(X35),X38)))))))))))) )),
  inference(superposition,[],[f699,f580])).
fof(f43584,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20))),s('type.num.num',X21)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X21)))))) | s('type.list.list'(X18),X22) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X23),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK51(X19,X20,X18)),s('type.list.list'(X18),sK52(X19,X20,X18)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f699,f544])).
fof(f43583,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | s('type.list.list'(X9),X13) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X16),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X17),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK49(X10,X11,X9)),s('type.list.list'(X9),sK50(X10,X11,X9)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f699,f541])).
fof(f43582,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f699,f535])).
fof(f43426,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X199),s('type.num.num','const.num.SUC_1'(s('type.num.num',X198)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(forward_demodulation,[],[f43315,f6799])).
fof(f43315,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199)))))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(superposition,[],[f673,f603])).
fof(f43291,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X26)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27)))))))) | s('type.list.list'(X28),X30) != s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X31),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X32),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X33),s('type.list.list'(X28),X29)))))))) )),
  inference(superposition,[],[f673,f592])).
fof(f43280,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))),s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X45))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X44)))))) | s('type.list.list'(X40),X45) != s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X46),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X47),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X48),s('type.list.list'(X40),'const.list.APPEND_2'(s('type.list.list'(X40),sK89(X41,X42,X43,X40)),s('type.list.list'(X40),sK90(X41,X42,X43,X40)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f673,f583])).
fof(f43341,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f43340,f580])).
fof(f43340,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34)))))))))) )),
  inference(forward_demodulation,[],[f43279,f27732])).
fof(f43279,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34)))))))))) )),
  inference(superposition,[],[f673,f580])).
fof(f43277,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X19)))))) | s('type.list.list'(X16),X20) != s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X21),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X22),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X23),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK51(X17,X18,X16)),s('type.list.list'(X16),sK52(X17,X18,X16)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f673,f544])).
fof(f43276,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11)))))) | s('type.list.list'(X8),X12) != s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X13),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X14),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X15),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK49(X9,X10,X8)),s('type.list.list'(X8),sK50(X9,X10,X8)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f673,f541])).
fof(f43275,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f673,f535])).
fof(f42964,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(forward_demodulation,[],[f42963,f457])).
fof(f42963,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(forward_demodulation,[],[f42962,f463])).
fof(f42962,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(forward_demodulation,[],[f42844,f707])).
fof(f42844,plain,(
  ( ! [X198,X204,X202,X200,X199,X205,X203,X201] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X201))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num','const.num.SUC_1'(s('type.num.num',X199)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X200),X202))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X200),X202) != s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X203),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X204),s('type.list.list'(X200),'const.list.CONS_2'(s(X200,X205),s('type.list.list'(X200),X201)))))))) )),
  inference(superposition,[],[f672,f603])).
fof(f42957,plain,(
  ( ! [X189,X187,X185,X190,X188,X186,X184] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X184))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X186))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X184)))))))) | s('type.list.list'(X185),X187) != s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X188),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X189),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X190),s('type.list.list'(X185),X186)))))))) )),
  inference(forward_demodulation,[],[f42956,f457])).
fof(f42956,plain,(
  ( ! [X189,X187,X185,X190,X188,X186,X184] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X184))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X186))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X184)))))))) | s('type.list.list'(X185),X187) != s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X188),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X189),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X190),s('type.list.list'(X185),X186)))))))) )),
  inference(forward_demodulation,[],[f42955,f463])).
fof(f42955,plain,(
  ( ! [X189,X187,X185,X190,X188,X186,X184] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X184))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X186))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X184)))))))) | s('type.list.list'(X185),X187) != s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X188),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X189),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X190),s('type.list.list'(X185),X186)))))))) )),
  inference(forward_demodulation,[],[f42842,f707])).
fof(f42842,plain,(
  ( ! [X189,X187,X185,X190,X188,X186,X184] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X186))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X184)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X185),X187))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X184))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X185),X187) != s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X188),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X189),s('type.list.list'(X185),'const.list.CONS_2'(s(X185,X190),s('type.list.list'(X185),X186)))))))) )),
  inference(superposition,[],[f672,f465])).
fof(f42820,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X26)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X28),X30) != s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X31),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X32),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X33),s('type.list.list'(X28),X29)))))))) )),
  inference(superposition,[],[f672,f592])).
fof(f42809,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))),s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X45))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X40),X45) != s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X46),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X47),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X48),s('type.list.list'(X40),'const.list.APPEND_2'(s('type.list.list'(X40),sK89(X41,X42,X43,X40)),s('type.list.list'(X40),sK90(X41,X42,X43,X40)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f672,f583])).
fof(f42870,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f42869,f580])).
fof(f42869,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34)))))))))) )),
  inference(forward_demodulation,[],[f42808,f27732])).
fof(f42808,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34)))))))))) )),
  inference(superposition,[],[f672,f580])).
fof(f42806,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X16),X20) != s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X21),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X22),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X23),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK51(X17,X18,X16)),s('type.list.list'(X16),sK52(X17,X18,X16)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f672,f544])).
fof(f42805,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X8),X12) != s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X13),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X14),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X15),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK49(X9,X10,X8)),s('type.list.list'(X8),sK50(X9,X10,X8)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f672,f541])).
fof(f42804,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f672,f535])).
fof(f42567,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK68(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK69(X7,X5,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK70(X7,X5,X6)),s('type.list.list'(X6),sK67(X7,X5,X6))))))))) )),
  inference(superposition,[],[f562,f592])).
fof(f42564,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X157)))))) | s('type.list.list'(X158),X159) = s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK68(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK69(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK70(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),sK67(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158))))))))) )),
  inference(superposition,[],[f562,f531])).
fof(f42563,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X152)))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK68(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK69(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK70(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),sK67(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154))))))))) )),
  inference(superposition,[],[f562,f530])).
fof(f42561,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK68(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK69(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK70(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK67(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))) )),
  inference(superposition,[],[f562,f616])).
fof(f42560,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK68(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK69(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK70(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK67(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))) )),
  inference(superposition,[],[f562,f611])).
fof(f42559,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137)))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK68(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK69(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK70(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK67(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))) )),
  inference(superposition,[],[f562,f615])).
fof(f42558,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK68(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK69(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK70(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK67(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))) )),
  inference(superposition,[],[f562,f609])).
fof(f42557,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129)))))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK68(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK69(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK70(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),sK67(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130))))))))) )),
  inference(superposition,[],[f562,f467])).
fof(f42556,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126)))))))) | s('type.list.list'(X127),X128) = s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK68(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK69(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK70(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),sK67(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127))))))))) )),
  inference(superposition,[],[f562,f466])).
fof(f42554,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK68(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK69(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK70(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK67(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))) )),
  inference(superposition,[],[f562,f614])).
fof(f42553,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK68(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK69(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK70(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK67(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))) )),
  inference(superposition,[],[f562,f613])).
fof(f42552,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK68(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK69(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK70(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK67(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))) )),
  inference(superposition,[],[f562,f612])).
fof(f42551,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107)))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK68(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK69(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK70(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK67(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))) )),
  inference(superposition,[],[f562,f610])).
fof(f42550,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X103)))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK68(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK69(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK70(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),sK67(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104))))))))) )),
  inference(superposition,[],[f562,f454])).
fof(f42549,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100)))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK68(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK69(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK70(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),sK67(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101))))))))) )),
  inference(superposition,[],[f562,f459])).
fof(f42548,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X97)))))))))) | s('type.list.list'(X98),X99) = s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK68(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK69(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK70(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),sK67(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98))))))))) )),
  inference(superposition,[],[f562,f458])).
fof(f42544,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87)))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK68(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK69(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK70(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK67(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))) )),
  inference(superposition,[],[f562,f603])).
fof(f42542,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80)))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK68(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK69(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK70(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK67(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))) )),
  inference(superposition,[],[f562,f465])).
fof(f42541,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77)))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK68(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK69(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK70(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),sK67(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))))))) )),
  inference(superposition,[],[f562,f457])).
fof(f42532,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49)))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK68(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK69(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK70(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),sK67(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))))))) )),
  inference(superposition,[],[f562,f594])).
fof(f42524,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK68(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK69(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK70(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK67(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))) )),
  inference(superposition,[],[f562,f707])).
fof(f42520,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK68(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK69(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK70(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK67(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12))))))))) )),
  inference(superposition,[],[f562,f592])).
fof(f42577,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.list.list'(X36),X38) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK68('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK69('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK70('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK67('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39))))))) )),
  inference(forward_demodulation,[],[f42514,f531])).
fof(f42514,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X39)))))) | s('type.list.list'(X36),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38))) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK68('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK69('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK70('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK67('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36))))))))) )),
  inference(superposition,[],[f562,f531])).
fof(f42576,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK68('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK69('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK70('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK67('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f42513,f530])).
fof(f42513,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X35)))))) | s('type.list.list'(X32),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34))) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK68('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK69('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK70('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK67('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32))))))))) )),
  inference(superposition,[],[f562,f530])).
fof(f42509,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X24)))))) | s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20)))) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK68('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK69('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK70('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),sK67('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21)))) )),
  inference(superposition,[],[f562,f583])).
fof(f42572,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK68('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK69('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK70('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK67('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f42571,f580])).
fof(f42571,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X19)))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK68('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK69('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK70('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK67('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15))))))))) )),
  inference(forward_demodulation,[],[f42508,f27732])).
fof(f42508,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X19)))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK68('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK69('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK70('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK67('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15))))))))) )),
  inference(superposition,[],[f562,f580])).
fof(f42570,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK68('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK69('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK70('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),sK67('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X14))))))) )),
  inference(forward_demodulation,[],[f42507,f495])).
fof(f42507,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X14)))))) | s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13))) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK68('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK69('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK70('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),sK67('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12))))))))) )),
  inference(superposition,[],[f562,f495])).
fof(f42506,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X11)))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8)))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK68('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK69('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK70('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),sK67('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f562,f544])).
fof(f42505,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4)))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK68('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK69('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK70('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),sK67('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f562,f541])).
fof(f42504,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X3)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK68('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK69('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK70('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),sK67('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f562,f535])).
fof(f42314,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))) )),
  inference(forward_demodulation,[],[f42313,f457])).
fof(f42313,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))) )),
  inference(forward_demodulation,[],[f42249,f463])).
fof(f42249,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))))) )),
  inference(superposition,[],[f559,f707])).
fof(f42245,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK64(X2,X0,X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK65(X2,X0,X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK66(X2,X0,X1)),s('type.list.list'(X1),sK63(X2,X0,X1))))))))) )),
  inference(superposition,[],[f559,f592])).
fof(f42244,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X157),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X158),X159) = s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK64(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK65(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),'const.list.CONS_2'(s(X158,sK66(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158)),s('type.list.list'(X158),sK63(X159,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)),X158))))))))) )),
  inference(superposition,[],[f559,f531])).
fof(f42243,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X152),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK64(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK65(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),'const.list.CONS_2'(s(X154,sK66(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154)),s('type.list.list'(X154),sK63(X155,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)),X154))))))))) )),
  inference(superposition,[],[f559,f530])).
fof(f42310,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK64(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK65(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK66(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK63(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))) )),
  inference(forward_demodulation,[],[f42241,f592])).
fof(f42241,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK64(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK65(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK66(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146)),s('type.list.list'(X146),sK63(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X145)))),X146))))))))) )),
  inference(superposition,[],[f559,f616])).
fof(f42309,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK64(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK65(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK66(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK63(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))) )),
  inference(forward_demodulation,[],[f42240,f592])).
fof(f42240,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK64(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK65(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK66(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142)),s('type.list.list'(X142),sK63(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141)))),X142))))))))) )),
  inference(superposition,[],[f559,f611])).
fof(f42308,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137)))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK64(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK65(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK66(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK63(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))) )),
  inference(forward_demodulation,[],[f42239,f592])).
fof(f42239,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X136),s('type.num.num',X137))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK64(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK65(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK66(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK63(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))),X138))))))))) )),
  inference(superposition,[],[f559,f615])).
fof(f42307,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK64(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK65(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK66(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK63(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))) )),
  inference(forward_demodulation,[],[f42238,f592])).
fof(f42238,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK64(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK65(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK66(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK63(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134))))))))) )),
  inference(superposition,[],[f559,f609])).
fof(f42237,plain,(
  ( ! [X130,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK64(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK65(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK66(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130)),s('type.list.list'(X130),sK63(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.ZERO_0')),X130))))))))) )),
  inference(superposition,[],[f559,f467])).
fof(f42236,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X127),X128) = s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK64(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK65(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),'const.list.CONS_2'(s(X127,sK66(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127)),s('type.list.list'(X127),sK63(X128,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.ZERO_0')),X127))))))))) )),
  inference(superposition,[],[f559,f466])).
fof(f42305,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK64(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK65(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK66(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK63(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))) )),
  inference(forward_demodulation,[],[f42234,f592])).
fof(f42234,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X120),X121) = s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK64(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK65(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),'const.list.CONS_2'(s(X120,sK66(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)),s('type.list.list'(X120),sK63(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120))))))))) )),
  inference(superposition,[],[f559,f614])).
fof(f42304,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK64(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK65(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK66(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK63(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))) )),
  inference(forward_demodulation,[],[f42233,f592])).
fof(f42233,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num',X115))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK64(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK65(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK66(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)),s('type.list.list'(X116),sK63(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116))))))))) )),
  inference(superposition,[],[f559,f613])).
fof(f42303,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK64(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK65(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK66(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK63(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))) )),
  inference(forward_demodulation,[],[f42232,f592])).
fof(f42232,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK64(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK65(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK66(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK63(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))))))) )),
  inference(superposition,[],[f559,f612])).
fof(f42302,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107)))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK64(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK65(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK66(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK63(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))) )),
  inference(forward_demodulation,[],[f42231,f592])).
fof(f42231,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X106),s('type.num.num',X107))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK64(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK65(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK66(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK63(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))))))) )),
  inference(superposition,[],[f559,f610])).
fof(f42230,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK64(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK65(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK66(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104)),s('type.list.list'(X104),sK63(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X103),s('type.num.num','const.arithmetic.ZERO_0')),X104))))))))) )),
  inference(superposition,[],[f559,f454])).
fof(f42229,plain,(
  ( ! [X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X101),X102) = s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK64(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK65(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),'const.list.CONS_2'(s(X101,sK66(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101)),s('type.list.list'(X101),sK63(X102,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100)))),X101))))))))) )),
  inference(superposition,[],[f559,f459])).
fof(f42228,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X97))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X98),X99) = s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK64(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK65(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),'const.list.CONS_2'(s(X98,sK66(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98)),s('type.list.list'(X98),sK63(X99,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))),X98))))))))) )),
  inference(superposition,[],[f559,f458])).
fof(f42298,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK64(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK65(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK66(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK63(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))) )),
  inference(forward_demodulation,[],[f42297,f457])).
fof(f42297,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK64(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK65(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK66(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK63(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))) )),
  inference(forward_demodulation,[],[f42296,f463])).
fof(f42296,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK64(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK65(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK66(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK63(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))) )),
  inference(forward_demodulation,[],[f42224,f17113])).
fof(f42224,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK64(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK65(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK66(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88)),s('type.list.list'(X88),sK63(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87)))),X88))))))))) )),
  inference(superposition,[],[f559,f603])).
fof(f42291,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK64(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK65(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK66(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK63(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))) )),
  inference(forward_demodulation,[],[f42290,f457])).
fof(f42290,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK64(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK65(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK66(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK63(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))) )),
  inference(forward_demodulation,[],[f42289,f463])).
fof(f42289,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK64(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK65(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK66(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK63(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))) )),
  inference(forward_demodulation,[],[f42222,f17111])).
fof(f42222,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X80))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK64(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK65(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK66(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)),s('type.list.list'(X81),sK63(X82,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))))))) )),
  inference(superposition,[],[f559,f465])).
fof(f42221,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK64(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK65(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK66(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)),s('type.list.list'(X78),sK63(X79,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))))))) )),
  inference(superposition,[],[f559,f457])).
fof(f42212,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK64(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK65(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK66(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)),s('type.list.list'(X50),sK63(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))))))) )),
  inference(superposition,[],[f559,f594])).
fof(f42269,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK64(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK65(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK66(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK63(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))) )),
  inference(forward_demodulation,[],[f42268,f457])).
fof(f42268,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK64(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK65(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK66(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK63(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))) )),
  inference(forward_demodulation,[],[f42267,f463])).
fof(f42267,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK64(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK65(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK66(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK63(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))) )),
  inference(forward_demodulation,[],[f42204,f17113])).
fof(f42204,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK64(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK65(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK66(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)),s('type.list.list'(X27),sK63(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27))))))))) )),
  inference(superposition,[],[f559,f707])).
fof(f42200,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)),s('type.list.list'(X12),sK63(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12))))))))) )),
  inference(superposition,[],[f559,f592])).
fof(f42260,plain,(
  ( ! [X39,X37,X38,X36] : (s('type.list.list'(X36),X38) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK64('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK65('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK66('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK63('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f42194,f531])).
fof(f42194,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X36),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38))) = s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK64('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK65('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK66('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36)),s('type.list.list'(X36),sK63('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X36),X37),s('type.list.list'(X36),X38)),X39,X36))))))))) )),
  inference(superposition,[],[f559,f531])).
fof(f42259,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK64('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK65('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK66('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK63('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f42193,f530])).
fof(f42193,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X32),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34))) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK64('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK65('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK66('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32)),s('type.list.list'(X32),sK63('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X32),X33),s('type.list.list'(X32),X34)),X35,X32))))))))) )),
  inference(superposition,[],[f559,f530])).
fof(f42189,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20)))) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK64('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK65('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK66('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)),s('type.list.list'(X20),sK63('const.list.APPEND_2'(s('type.list.list'(X20),sK89(X21,X22,X23,X20)),s('type.list.list'(X20),sK90(X21,X22,X23,X20))),X24,X20)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21)))) )),
  inference(superposition,[],[f559,f583])).
fof(f42253,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK64('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK65('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK66('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK63('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f42252,f580])).
fof(f42252,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK64('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK65('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK66('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK63('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15))))))))) )),
  inference(forward_demodulation,[],[f42188,f27732])).
fof(f42188,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),X17),s('type.list.list'(X15),X18))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK64('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK65('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK66('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15)),s('type.list.list'(X15),sK63('const.list.APPEND_2'(s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X16),s('type.list.list'(X15),X17))),s('type.list.list'(X15),X18)),X19,X15))))))))) )),
  inference(superposition,[],[f559,f580])).
fof(f42251,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(X12),X13) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),sK63('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f42187,f495])).
fof(f42187,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13))) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK64('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK65('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK66('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12)),s('type.list.list'(X12),sK63('const.list.APPEND_2'(s('type.list.list'(X12),'const.list.NIL_0'),s('type.list.list'(X12),X13)),X14,X12))))))))) )),
  inference(superposition,[],[f559,f495])).
fof(f42186,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8)))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK64('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK65('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK66('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)),s('type.list.list'(X8),sK63('const.list.CONS_2'(s(X8,sK51(X9,X10,X8)),s('type.list.list'(X8),sK52(X9,X10,X8))),X11,X8)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f559,f544])).
fof(f42185,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4)))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK64('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK65('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK66('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)),s('type.list.list'(X4),sK63('const.list.CONS_2'(s(X4,sK49(X5,X6,X4)),s('type.list.list'(X4),sK50(X5,X6,X4))),X7,X4)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f559,f541])).
fof(f42184,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK64('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK65('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK66('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)),s('type.list.list'(X0),sK63('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X3,X0)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f559,f535])).
fof(f42057,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK27('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK28('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f42041,f531])).
fof(f42041,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK27('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK28('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26))))))))))) )),
  inference(superposition,[],[f692,f531])).
fof(f42056,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK26('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK27('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK28('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK25('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f42040,f530])).
fof(f42040,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK26('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK27('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK28('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK25('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23))))))))))) )),
  inference(superposition,[],[f692,f530])).
fof(f42036,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK26('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK27('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK28('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK29('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),sK25('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f692,f583])).
fof(f42046,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK27('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK28('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK29('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK25('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f42045,f580])).
fof(f42045,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK27('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK28('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK29('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK25('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f42035,f27732])).
fof(f42035,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK27('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK28('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK29('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK25('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(superposition,[],[f692,f580])).
fof(f42044,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK26('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK27('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK28('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK29('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK25('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f42034,f495])).
fof(f42034,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK26('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK27('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK28('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK29('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK25('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9))))))))))) )),
  inference(superposition,[],[f692,f495])).
fof(f42033,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK27('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK28('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK29('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),sK25('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f692,f544])).
fof(f42032,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),sK25('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f692,f541])).
fof(f42031,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),sK25('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f692,f535])).
fof(f41909,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK37('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK38('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK39('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))))))) )),
  inference(forward_demodulation,[],[f41895,f531])).
fof(f41895,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28)))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK37('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK38('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK39('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26))))))))))) )),
  inference(superposition,[],[f662,f531])).
fof(f41908,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK37('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK38('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK39('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))))))) )),
  inference(forward_demodulation,[],[f41894,f530])).
fof(f41894,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24)))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK37('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK38('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK39('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23))))))))))) )),
  inference(superposition,[],[f662,f530])).
fof(f41890,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18)))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK36('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK37('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK38('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK39('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),sK35('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f662,f583])).
fof(f41901,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK35('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41900,f580])).
fof(f41900,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK35('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f41899,f17572])).
fof(f41899,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK35('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f41889,f27732])).
fof(f41889,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK37('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK38('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK39('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK35('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(superposition,[],[f662,f580])).
fof(f41898,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK36('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK37('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK38('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK39('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK35('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))))))) )),
  inference(forward_demodulation,[],[f41888,f495])).
fof(f41888,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10)))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK36('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK37('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK38('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK39('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK35('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9))))))))))) )),
  inference(superposition,[],[f662,f495])).
fof(f41887,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK36('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK37('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK38('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK39('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),sK35('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f662,f544])).
fof(f41886,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5)))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK37('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK38('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK39('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),sK35('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f662,f541])).
fof(f41885,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK37('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK38('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK39('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),sK35('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f662,f535])).
fof(f41715,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK41('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK42('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK43('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK44('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK40('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41699,f531])).
fof(f41699,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK41('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK42('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK43('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK44('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK40('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26))))))))))) )),
  inference(superposition,[],[f526,f531])).
fof(f41714,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK41('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK42('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK43('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK44('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK40('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41698,f530])).
fof(f41698,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK41('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK42('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK43('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK44('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK40('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23))))))))))) )),
  inference(superposition,[],[f526,f530])).
fof(f41694,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK41('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK42('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK43('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK44('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),sK40('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f526,f583])).
fof(f41704,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK41('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK42('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK43('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK44('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK40('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41703,f580])).
fof(f41703,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK41('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK42('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK43('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK44('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK40('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f41693,f27732])).
fof(f41693,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK41('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK42('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK43('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK44('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK40('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(superposition,[],[f526,f580])).
fof(f41702,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK41('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK42('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK43('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK44('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK40('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41692,f495])).
fof(f41692,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK41('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK42('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK43('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK44('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK40('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9))))))))))) )),
  inference(superposition,[],[f526,f495])).
fof(f41691,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK41('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK42('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK43('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK44('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),sK40('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f526,f544])).
fof(f41690,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK41('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK42('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK43('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK44('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),sK40('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f526,f541])).
fof(f41689,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK41('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK42('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK43('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK44('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),sK40('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f526,f535])).
fof(f41478,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))))))) )),
  inference(forward_demodulation,[],[f41464,f531])).
fof(f41464,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28)))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26))))))))))) )),
  inference(superposition,[],[f522,f531])).
fof(f41477,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))))))) )),
  inference(forward_demodulation,[],[f41463,f530])).
fof(f41463,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24)))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23))))))))))) )),
  inference(superposition,[],[f522,f530])).
fof(f41459,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18)))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK31('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK32('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK33('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK34('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),sK30('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f522,f583])).
fof(f41470,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK30('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f41469,f580])).
fof(f41469,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK30('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f41468,f17572])).
fof(f41468,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK30('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(forward_demodulation,[],[f41458,f27732])).
fof(f41458,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK30('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))))) )),
  inference(superposition,[],[f522,f580])).
fof(f41467,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK31('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK32('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK33('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK34('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK30('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))))))) )),
  inference(forward_demodulation,[],[f41457,f495])).
fof(f41457,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10)))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK31('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK32('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK33('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK34('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK30('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9))))))))))) )),
  inference(superposition,[],[f522,f495])).
fof(f41456,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK31('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK32('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK33('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK34('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),sK30('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f522,f544])).
fof(f41455,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5)))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),sK30('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f522,f541])).
fof(f41454,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),sK30('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f522,f535])).
fof(f41330,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK12('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK13('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK14('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK15('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41322,f531])).
fof(f41322,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK12('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK13('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK14('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK15('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f508,f531])).
fof(f41329,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK12('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK13('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK14('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK15('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41321,f530])).
fof(f41321,plain,(
  ( ! [X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK12('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK13('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK14('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK15('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f508,f530])).
fof(f41318,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK12('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK13('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK14('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK15('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f508,f583])).
fof(f41326,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK15('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))) )),
  inference(forward_demodulation,[],[f41325,f580])).
fof(f41325,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK15('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0')))))))))) )),
  inference(forward_demodulation,[],[f41317,f27732])).
fof(f41317,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK15('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f508,f580])).
fof(f41324,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK12('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK13('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK14('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK15('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41316,f495])).
fof(f41316,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK12('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK13('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK14('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK15('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f508,f495])).
fof(f41315,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK12('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK13('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK14('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK15('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f508,f544])).
fof(f41314,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK12('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK13('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK14('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK15('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f508,f541])).
fof(f41313,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK15('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f508,f535])).
fof(f41193,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41185,f531])).
fof(f41185,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f506,f531])).
fof(f41192,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK8('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK9('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK10('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK11('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41184,f530])).
fof(f41184,plain,(
  ( ! [X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK8('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK9('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK10('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK11('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f506,f530])).
fof(f41181,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK8('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK9('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK10('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK11('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f506,f583])).
fof(f41189,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK8('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14)))))))) )),
  inference(forward_demodulation,[],[f41188,f580])).
fof(f41188,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK8('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0')))))))))) )),
  inference(forward_demodulation,[],[f41180,f27732])).
fof(f41180,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK8('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f506,f580])).
fof(f41187,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK8('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK9('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK10('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK11('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f41179,f495])).
fof(f41179,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK8('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK9('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK10('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK11('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.NIL_0')))))))))) )),
  inference(superposition,[],[f506,f495])).
fof(f41178,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK8('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK9('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK10('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK11('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f506,f544])).
fof(f41177,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK8('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK9('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK10('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK11('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f506,f541])).
fof(f41176,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK8('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f506,f535])).
fof(f41023,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X2)))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))) )),
  inference(equality_resolution,[],[f701])).
fof(f41022,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),X16) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK90(X13,X14,X15,X12)))),s('type.num.num',X17)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f701,f583])).
fof(f41062,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X11) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7))))) | s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10))))))) )),
  inference(forward_demodulation,[],[f41021,f27732])).
fof(f41021,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))) | s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7)))))) )),
  inference(superposition,[],[f701,f580])).
fof(f41014,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X39) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X40),s('type.list.list'(X35),X38))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))),s('type.num.num',X41)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f701,f583])).
fof(f41053,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK52(X15,X16,X14)))))),s('type.num.num',X19)))) | s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X18),s('type.list.list'(X14),X16))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f41011,f27732])).
fof(f41011,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X18),s('type.list.list'(X14),X16))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f701,f544])).
fof(f41052,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK50(X8,X9,X7)))))),s('type.num.num',X12)))) | s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X9))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f41010,f27732])).
fof(f41010,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X9))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f701,f541])).
fof(f41051,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X1,X2,X0)))))),s('type.num.num',X5)))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(forward_demodulation,[],[f41009,f27732])).
fof(f41009,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f701,f535])).
fof(f41003,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X39) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X38),s('type.list.list'(X35),X40))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num',X41)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f701,f583])).
fof(f41039,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (s('type.num.num',X34) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))))))) | s('type.list.list'(X27),X31) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))),s('type.list.list'(X27),X32))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X32))),s('type.num.num',X33)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33))))))) )),
  inference(forward_demodulation,[],[f41038,f27732])).
fof(f41038,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (s('type.num.num',X34) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))))))) | s('type.list.list'(X27),X31) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))),s('type.list.list'(X27),X32))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X32))),s('type.num.num',X33)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33))))))) )),
  inference(forward_demodulation,[],[f41037,f580])).
fof(f41037,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (s('type.list.list'(X27),X31) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))),s('type.list.list'(X27),X32))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X32))),s('type.num.num',X33)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33)))))) | s('type.num.num',X34) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),X29))),s('type.list.list'(X27),X30)))))) )),
  inference(forward_demodulation,[],[f41002,f580])).
fof(f41002,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (s('type.list.list'(X27),X31) != s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))))),s('type.list.list'(X27),X32))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X32))),s('type.num.num',X33)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33)))))) | s('type.num.num',X34) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),X29))),s('type.list.list'(X27),X30)))))) )),
  inference(superposition,[],[f701,f580])).
fof(f41035,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X16),s('type.list.list'(X14),X18))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f41000,f27732])).
fof(f41000,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X16),s('type.list.list'(X14),X18))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f701,f544])).
fof(f41034,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.num.num',X13) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f40999,f27732])).
fof(f40999,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f701,f541])).
fof(f41033,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num',X6) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(forward_demodulation,[],[f40998,f27732])).
fof(f40998,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f701,f535])).
fof(f40993,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X38) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X39),s('type.list.list'(X35),X40))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))),s('type.num.num',X41)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f701,f583])).
fof(f41026,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK52(X15,X16,X14)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X17),s('type.list.list'(X14),X18))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))),s('type.num.num',X19)))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f40990,f27732])).
fof(f40990,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X17),s('type.list.list'(X14),X18))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f701,f544])).
fof(f41025,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK50(X8,X9,X7)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.list.list'(X7),X9) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X11))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))),s('type.num.num',X12)))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f40989,f27732])).
fof(f40989,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X9) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X11))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f701,f541])).
fof(f41024,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X1,X2,X0)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num',X5)))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(forward_demodulation,[],[f40988,f27732])).
fof(f40988,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f701,f535])).
fof(f40850,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'(X26),X28) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f40834,f531])).
fof(f40834,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X26),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28))) = s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26)),s('type.list.list'(X26),sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X26),X27),s('type.list.list'(X26),X28)),X26))))))))) )),
  inference(superposition,[],[f518,f531])).
fof(f40849,plain,(
  ( ! [X24,X23,X25] : (s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK22('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK23('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK24('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK21('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f40833,f530])).
fof(f40833,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X23),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25))) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK22('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK23('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK24('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23)),s('type.list.list'(X23),sK21('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X23),X24),s('type.list.list'(X23),X25)),X23))))))))) )),
  inference(superposition,[],[f518,f530])).
fof(f40829,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15)))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK22('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK23('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK24('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)),s('type.list.list'(X15),sK21('const.list.APPEND_2'(s('type.list.list'(X15),sK89(X16,X17,X18,X15)),s('type.list.list'(X15),sK90(X16,X17,X18,X15))),X15)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X18))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X16)))) )),
  inference(superposition,[],[f518,f583])).
fof(f40839,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK21('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f40838,f580])).
fof(f40838,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK21('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))) )),
  inference(forward_demodulation,[],[f40828,f27732])).
fof(f40828,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11)),s('type.list.list'(X11),sK21('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))))))) )),
  inference(superposition,[],[f518,f580])).
fof(f40837,plain,(
  ( ! [X10,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK22('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK23('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK24('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK21('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f40827,f495])).
fof(f40827,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X9),'const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK22('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK23('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK24('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9)),s('type.list.list'(X9),sK21('const.list.APPEND_2'(s('type.list.list'(X9),'const.list.NIL_0'),s('type.list.list'(X9),X10)),X9))))))))) )),
  inference(superposition,[],[f518,f495])).
fof(f40826,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)),s('type.list.list'(X6),sK21('const.list.CONS_2'(s(X6,sK51(X7,X8,X6)),s('type.list.list'(X6),sK52(X7,X8,X6))),X6)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f518,f544])).
fof(f40825,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3)))) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)),s('type.list.list'(X3),sK21('const.list.CONS_2'(s(X3,sK49(X4,X5,X3)),s('type.list.list'(X3),sK50(X4,X5,X3))),X3)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f518,f541])).
fof(f40824,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)),s('type.list.list'(X0),sK21('const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0))),X0)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f518,f535])).
fof(f39966,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f39930,f434])).
fof(f39930,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'F_0')) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f527,f471])).
fof(f39923,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X40),'const.list.APPEND_2'(s('type.list.list'(X40),sK89(X41,X42,X43,X40)),s('type.list.list'(X40),sK90(X41,X42,X43,X40)))) != s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X44),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X45),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X46),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X47),s('type.list.list'(X40),X48))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f527,f583])).
fof(f39948,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39947,f580])).
fof(f39947,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39)))))))))) )),
  inference(forward_demodulation,[],[f39922,f27732])).
fof(f39922,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39)))))))))) )),
  inference(superposition,[],[f527,f580])).
fof(f39920,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK51(X17,X18,X16)),s('type.list.list'(X16),sK52(X17,X18,X16)))) != s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X19),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X20),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X21),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X22),s('type.list.list'(X16),X23))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f527,f544])).
fof(f39919,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK49(X9,X10,X8)),s('type.list.list'(X8),sK50(X9,X10,X8)))) != s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X11),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X12),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X13),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X14),s('type.list.list'(X8),X15))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f527,f541])).
fof(f39918,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f527,f535])).
fof(f39935,plain,(
  ( ! [X6,X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39934,f27732])).
fof(f39934,plain,(
  ( ! [X6,X0,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39933,f27732])).
fof(f39933,plain,(
  ( ! [X6,X4,X0,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39932,f27732])).
fof(f39932,plain,(
  ( ! [X6,X4,X0,X5,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39931,f27732])).
fof(f39931,plain,(
  ( ! [X6,X4,X2,X0,X5,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39917,f531])).
fof(f39917,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(unit_resulting_resolution,[],[f531,f527])).
fof(f39740,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) )),
  inference(subsumption_resolution,[],[f39703,f434])).
fof(f39703,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'F_0')) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) )),
  inference(superposition,[],[f523,f471])).
fof(f39696,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X40] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43)))))) | s('type.list.list'(X40),'const.list.APPEND_2'(s('type.list.list'(X40),sK89(X41,X42,X43,X40)),s('type.list.list'(X40),sK90(X41,X42,X43,X40)))) != s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X44),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X45),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X46),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X47),s('type.list.list'(X40),X48))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f523,f583])).
fof(f39725,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f39724,f580])).
fof(f39724,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39)))))))))) )),
  inference(forward_demodulation,[],[f39723,f17572])).
fof(f39723,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34)))))))))) | s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39)))))))))) )),
  inference(forward_demodulation,[],[f39695,f27732])).
fof(f39695,plain,(
  ( ! [X39,X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X34)))))))))) | s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X32),s('type.list.list'(X31),X33))),s('type.list.list'(X31),X34))) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X35),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),X39)))))))))) )),
  inference(superposition,[],[f523,f580])).
fof(f39693,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18)))))) | s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK51(X17,X18,X16)),s('type.list.list'(X16),sK52(X17,X18,X16)))) != s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X19),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X20),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X21),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X22),s('type.list.list'(X16),X23))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17)))))) )),
  inference(superposition,[],[f523,f544])).
fof(f39692,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10)))))) | s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK49(X9,X10,X8)),s('type.list.list'(X8),sK50(X9,X10,X8)))) != s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X11),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X12),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X13),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X14),s('type.list.list'(X8),X15))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f523,f541])).
fof(f39691,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f523,f535])).
fof(f38735,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X38) != s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X39),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X40),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X41),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,X42),s('type.list.list'(X35),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f507,f583])).
fof(f38732,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f507,f544])).
fof(f38731,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X9) != s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X10),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X11),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X12),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f507,f541])).
fof(f38730,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f507,f535])).
fof(f39153,plain,(
  ( ! [X4,X2,X0,X5,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) )),
  inference(forward_demodulation,[],[f38729,f531])).
fof(f38729,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))) )),
  inference(unit_resulting_resolution,[],[f531,f507])).
fof(f37737,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f584])).
fof(f37736,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),X16) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK90(X13,X14,X15,X12)))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f584,f583])).
fof(f38551,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X10) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7))))) | s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8)))) )),
  inference(forward_demodulation,[],[f37735,f27732])).
fof(f37735,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) | s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))) | s('type.num.num',X10) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7)))))) )),
  inference(superposition,[],[f584,f580])).
fof(f37734,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f584,f495])).
fof(f37728,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X39) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X40),s('type.list.list'(X35),X38))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f584,f583])).
fof(f37725,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X18),s('type.list.list'(X14),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X20))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f584,f544])).
fof(f37724,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X9))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.num.num',X12) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f584,f541])).
fof(f37723,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f584,f535])).
fof(f37717,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X39) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X38),s('type.list.list'(X35),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f584,f583])).
fof(f37714,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X17) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X16),s('type.list.list'(X14),X18))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X20))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f584,f544])).
fof(f37713,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X10) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X9),s('type.list.list'(X7),X11))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) | s('type.num.num',X12) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f584,f541])).
fof(f37712,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f584,f535])).
fof(f37707,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X42,X40] : (s('type.list.list'(X35),X38) != s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),X39),s('type.list.list'(X35),X40))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.APPEND_2'(s('type.list.list'(X35),sK89(X36,X37,X38,X35)),s('type.list.list'(X35),sK90(X36,X37,X38,X35)))))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X40))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X39))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X38))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X36)))) )),
  inference(superposition,[],[f584,f583])).
fof(f37704,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),X17),s('type.list.list'(X14),X18))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X20))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK51(X15,X16,X14)),s('type.list.list'(X14),sK52(X15,X16,X14)))))) | s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X18))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f584,f544])).
fof(f37703,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X7),X9) != s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X10),s('type.list.list'(X7),X11))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK49(X8,X9,X7)),s('type.list.list'(X7),sK50(X8,X9,X7)))))) | s('type.num.num',X13) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X11))) | s('type.num.num',X12) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f584,f541])).
fof(f37702,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X1,X2,X0)),s('type.list.list'(X0),sK46(X1,X2,X0)))))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f584,f535])).
fof(f38219,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f38218,f707])).
fof(f38218,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f38217,f27732])).
fof(f38217,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f38216,f531])).
fof(f38216,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f37554,f531])).
fof(f37554,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f531,f531,f580,f584])).
fof(f37740,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f37739,f531])).
fof(f37739,plain,(
  ( ! [X4,X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f37738,f531])).
fof(f37738,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f37701,f531])).
fof(f37701,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f531,f531,f531,f584])).
fof(f36041,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(subsumption_resolution,[],[f36013,f434])).
fof(f36013,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'F_0')) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f519,f471])).
fof(f36006,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK51(X37,X38,X36)),s('type.list.list'(X36),sK52(X37,X38,X36)))) != s('type.list.list'(X36),'const.list.CONS_2'(s(X36,X39),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,X40),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,X41),s('type.list.list'(X36),X42))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))))) )),
  inference(superposition,[],[f519,f544])).
fof(f36005,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X29),'const.list.CONS_2'(s(X29,sK49(X30,X31,X29)),s('type.list.list'(X29),sK50(X30,X31,X29)))) != s('type.list.list'(X29),'const.list.CONS_2'(s(X29,X32),s('type.list.list'(X29),'const.list.CONS_2'(s(X29,X33),s('type.list.list'(X29),'const.list.CONS_2'(s(X29,X34),s('type.list.list'(X29),X35))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30)))))) )),
  inference(superposition,[],[f519,f541])).
fof(f36004,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X22),'const.list.CONS_2'(s(X22,sK45(X23,X24,X22)),s('type.list.list'(X22),sK46(X23,X24,X22)))) != s('type.list.list'(X22),'const.list.CONS_2'(s(X22,X25),s('type.list.list'(X22),'const.list.CONS_2'(s(X22,X26),s('type.list.list'(X22),'const.list.CONS_2'(s(X22,X27),s('type.list.list'(X22),X28))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24)))) )),
  inference(superposition,[],[f519,f535])).
fof(f36003,plain,(
  ( ! [X14,X21,X19,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),sK89(X15,X16,X17,X14)),s('type.list.list'(X14),sK90(X15,X16,X17,X14)))) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),X21))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X15)))) )),
  inference(superposition,[],[f519,f583])).
fof(f36028,plain,(
  ( ! [X6,X12,X10,X8,X7,X13,X11,X9] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X13))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f36027,f580])).
fof(f36027,plain,(
  ( ! [X6,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X13)))))))) )),
  inference(forward_demodulation,[],[f36002,f27732])).
fof(f36002,plain,(
  ( ! [X6,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9))) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X13)))))))) )),
  inference(superposition,[],[f519,f580])).
fof(f36017,plain,(
  ( ! [X0,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f36016,f27732])).
fof(f36016,plain,(
  ( ! [X4,X0,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f36015,f27732])).
fof(f36015,plain,(
  ( ! [X4,X0,X5,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f36014,f27732])).
fof(f36014,plain,(
  ( ! [X4,X2,X0,X5,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f36000,f531])).
fof(f36000,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(unit_resulting_resolution,[],[f531,f519])).
fof(f35491,plain,(
  ( ! [X177,X175,X178,X176,X174,X179] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X178))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num','const.num.SUC_1'(s('type.num.num',X174))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X177))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X174),s('type.num.num','const.num.SUC_1'(s('type.num.num',X175))))))))) | s('type.list.list'(X176),X178) != s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X179),s('type.list.list'(X176),X177)))) )),
  inference(forward_demodulation,[],[f35397,f6799])).
fof(f35397,plain,(
  ( ! [X177,X175,X178,X176,X174,X179] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X177))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X174),s('type.num.num','const.num.SUC_1'(s('type.num.num',X175))))))))) | s('type.list.list'(X176),X178) != s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X179),s('type.list.list'(X176),X177))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X178))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X174),s('type.num.num',X175)))))))))) )),
  inference(superposition,[],[f542,f603])).
fof(f35367,plain,(
  ( ! [X30,X28,X26,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X26))))))) | s('type.list.list'(X28),X30) != s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X31),s('type.list.list'(X28),X29))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X30))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27)))))))) )),
  inference(superposition,[],[f542,f592])).
fof(f35353,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X46))))) | s('type.list.list'(X43),X47) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,sK51(X44,X45,X43)),s('type.list.list'(X43),sK52(X44,X45,X43)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X47))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(superposition,[],[f542,f544])).
fof(f35352,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))))) | s('type.list.list'(X37),X41) != s('type.list.list'(X37),'const.list.CONS_2'(s(X37,X42),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,X39,X37)),s('type.list.list'(X37),sK50(X38,X39,X37)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X41))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X40))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(superposition,[],[f542,f541])).
fof(f35351,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34))))) | s('type.list.list'(X31),X35) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK45(X32,X33,X31)),s('type.list.list'(X31),sK46(X32,X33,X31)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X35))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(superposition,[],[f542,f535])).
fof(f35346,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))))) | s('type.list.list'(X12),X17) != s('type.list.list'(X12),'const.list.CONS_2'(s(X12,X18),s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)),s('type.list.list'(X12),sK90(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f542,f583])).
fof(f35421,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f35420,f580])).
fof(f35420,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f35345,f27732])).
fof(f35345,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f542,f580])).
fof(f33473,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33472,f4764])).
fof(f33472,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f33471,f457])).
fof(f33471,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f33470,f465])).
fof(f33470,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f33330,f463])).
fof(f33330,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK76(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(superposition,[],[f703,f707])).
fof(f33326,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK76(X2,X0,X1)))),s('type.num.num',X0))))) )),
  inference(superposition,[],[f703,f592])).
fof(f33468,plain,(
  ( ! [X173,X171,X172,X170] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),sK76(X173,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171)),X172)))),s('type.num.num',X171)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33325,f531])).
fof(f33325,plain,(
  ( ! [X173,X171,X172,X170] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),sK76(X173,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171)),X172)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171))))))) )),
  inference(superposition,[],[f703,f531])).
fof(f33467,plain,(
  ( ! [X167,X169,X166,X168] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),sK76(X169,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X166),s('type.num.num',X167)),X168)))),s('type.num.num',X166)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),X169))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33324,f530])).
fof(f33324,plain,(
  ( ! [X167,X169,X166,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),X169))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),sK76(X169,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X166),s('type.num.num',X167)),X168)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X166),s('type.num.num',X167))))))) )),
  inference(superposition,[],[f703,f530])).
fof(f33463,plain,(
  ( ! [X158,X161,X159,X160] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),sK76(X161,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X159)))),X160)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X158),s('type.num.num',X159)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),X161))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X158),s('type.num.num',X159))))))))))) )),
  inference(forward_demodulation,[],[f33462,f616])).
fof(f33462,plain,(
  ( ! [X158,X161,X159,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),X161))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X158),s('type.num.num',X159)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),sK76(X161,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X159)))),X160)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X159))))))))) )),
  inference(forward_demodulation,[],[f33322,f592])).
fof(f33322,plain,(
  ( ! [X158,X161,X159,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),X161))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X158),s('type.num.num',X159))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),sK76(X161,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X159)))),X160)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X159))))))))) )),
  inference(superposition,[],[f703,f616])).
fof(f33461,plain,(
  ( ! [X156,X154,X157,X155] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),sK76(X157,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X155)))),X156)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X154),s('type.num.num',X155)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),X157))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X154),s('type.num.num',X155))))))))))) )),
  inference(forward_demodulation,[],[f33460,f611])).
fof(f33460,plain,(
  ( ! [X156,X154,X157,X155] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),X157))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X154),s('type.num.num',X155)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),sK76(X157,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X155)))),X156)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X155))))))))) )),
  inference(forward_demodulation,[],[f33321,f592])).
fof(f33321,plain,(
  ( ! [X156,X154,X157,X155] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),X157))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X154),s('type.num.num',X155))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X156),sK76(X157,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X155)))),X156)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X155))))))))) )),
  inference(superposition,[],[f703,f611])).
fof(f33459,plain,(
  ( ! [X152,X151,X153,X150] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK76(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X150),s('type.num.num',X151)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X150),s('type.num.num',X151))))))))))) )),
  inference(forward_demodulation,[],[f33458,f615])).
fof(f33458,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X150),s('type.num.num',X151)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK76(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))))))))) )),
  inference(forward_demodulation,[],[f33320,f592])).
fof(f33320,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X150),s('type.num.num',X151))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK76(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))))))))) )),
  inference(superposition,[],[f703,f615])).
fof(f33457,plain,(
  ( ! [X146,X149,X147,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK76(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147))))))))))) )),
  inference(forward_demodulation,[],[f33456,f609])).
fof(f33456,plain,(
  ( ! [X146,X149,X147,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK76(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))))))))) )),
  inference(forward_demodulation,[],[f33319,f592])).
fof(f33319,plain,(
  ( ! [X146,X149,X147,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK76(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))))))))) )),
  inference(superposition,[],[f703,f609])).
fof(f33455,plain,(
  ( ! [X144,X145,X143] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK76(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.ZERO_0')),X144)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33318,f467])).
fof(f33318,plain,(
  ( ! [X144,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK76(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.ZERO_0')),X144)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f703,f467])).
fof(f33454,plain,(
  ( ! [X142,X140,X141] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X141),sK76(X142,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.ZERO_0')),X141)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X140)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X141),X142))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33317,f466])).
fof(f33317,plain,(
  ( ! [X142,X140,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X141),X142))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X141),sK76(X142,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.ZERO_0')),X141)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f703,f466])).
fof(f33450,plain,(
  ( ! [X134,X132,X135,X133] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK76(X135,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))))))))))) )),
  inference(forward_demodulation,[],[f33449,f614])).
fof(f33449,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK76(X135,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133))))))))) )),
  inference(forward_demodulation,[],[f33315,f592])).
fof(f33315,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK76(X135,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133)))),X134)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X133))))))))) )),
  inference(superposition,[],[f703,f614])).
fof(f33448,plain,(
  ( ! [X130,X128,X131,X129] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),sK76(X131,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129)))),X130)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X128),s('type.num.num',X129)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X128),s('type.num.num',X129))))))))))) )),
  inference(forward_demodulation,[],[f33447,f613])).
fof(f33447,plain,(
  ( ! [X130,X128,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X128),s('type.num.num',X129)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),sK76(X131,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129)))),X130)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))))))))) )),
  inference(forward_demodulation,[],[f33314,f592])).
fof(f33314,plain,(
  ( ! [X130,X128,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X128),s('type.num.num',X129))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),sK76(X131,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129)))),X130)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X129))))))))) )),
  inference(superposition,[],[f703,f613])).
fof(f33446,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK76(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125))))))))))) )),
  inference(forward_demodulation,[],[f33445,f612])).
fof(f33445,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK76(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))))))))) )),
  inference(forward_demodulation,[],[f33313,f592])).
fof(f33313,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK76(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))))))))) )),
  inference(superposition,[],[f703,f612])).
fof(f33444,plain,(
  ( ! [X123,X121,X122,X120] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK76(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121))))))))))) )),
  inference(forward_demodulation,[],[f33443,f610])).
fof(f33443,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK76(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))))))))) )),
  inference(forward_demodulation,[],[f33312,f592])).
fof(f33312,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK76(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))))))))) )),
  inference(superposition,[],[f703,f610])).
fof(f33442,plain,(
  ( ! [X118,X119,X117] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK76(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X117),s('type.num.num','const.arithmetic.ZERO_0')),X118)))),s('type.num.num',X117)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33311,f454])).
fof(f33311,plain,(
  ( ! [X118,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK76(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X117),s('type.num.num','const.arithmetic.ZERO_0')),X118)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X117),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f703,f454])).
fof(f33441,plain,(
  ( ! [X116,X114,X115] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK76(X116,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33310,f459])).
fof(f33310,plain,(
  ( ! [X116,X114,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK76(X116,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))))))))) )),
  inference(superposition,[],[f703,f459])).
fof(f33440,plain,(
  ( ! [X111,X112,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK76(X113,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X111)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X111))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33309,f458])).
fof(f33309,plain,(
  ( ! [X111,X112,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X111))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK76(X113,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))))))) )),
  inference(superposition,[],[f703,f458])).
fof(f33431,plain,(
  ( ! [X103,X101,X102,X100] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33430,f4764])).
fof(f33430,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))))))))) )),
  inference(forward_demodulation,[],[f33429,f457])).
fof(f33429,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))))))))) )),
  inference(forward_demodulation,[],[f33428,f465])).
fof(f33428,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))))))))) )),
  inference(forward_demodulation,[],[f33427,f463])).
fof(f33427,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))))))))) )),
  inference(forward_demodulation,[],[f33305,f17113])).
fof(f33305,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num','const.num.SUC_1'(s('type.num.num',X101))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK76(X103,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101)))),X102)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num',X101))))))))) )),
  inference(superposition,[],[f703,f603])).
fof(f33415,plain,(
  ( ! [X94,X92,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33414,f4764])).
fof(f33414,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))))))))) )),
  inference(forward_demodulation,[],[f33413,f457])).
fof(f33413,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))))))))) )),
  inference(forward_demodulation,[],[f33412,f465])).
fof(f33412,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))))))))) )),
  inference(forward_demodulation,[],[f33411,f463])).
fof(f33411,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))))))))) )),
  inference(forward_demodulation,[],[f33302,f17111])).
fof(f33302,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X92))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),sK76(X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92))))))))) )),
  inference(superposition,[],[f703,f465])).
fof(f33410,plain,(
  ( ! [X90,X91,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK76(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33409,f4779])).
fof(f33409,plain,(
  ( ! [X90,X91,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK76(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33301,f4764])).
fof(f33301,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK76(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))))))))) )),
  inference(superposition,[],[f703,f457])).
fof(f33378,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK76(X57,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55)))),X56)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33289,f594])).
fof(f33289,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK76(X57,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55)))),X56)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55))))))))) )),
  inference(superposition,[],[f703,f594])).
fof(f33355,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f33354,f707])).
fof(f33354,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(forward_demodulation,[],[f33353,f457])).
fof(f33353,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(forward_demodulation,[],[f33352,f465])).
fof(f33352,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(forward_demodulation,[],[f33351,f463])).
fof(f33351,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(forward_demodulation,[],[f33280,f17113])).
fof(f33280,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK76(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(superposition,[],[f703,f707])).
fof(f33276,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK76(X17,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f703,f592])).
fof(f33266,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK76('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X33),X34),s('type.list.list'(X33),X35)),X36,X33)))),s('type.num.num',X36))))) )),
  inference(superposition,[],[f703,f531])).
fof(f33265,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK76('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X29),X30),s('type.list.list'(X29),X31)),X32,X29)))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f703,f530])).
fof(f33264,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK76('const.list.CONS_2'(s(X25,sK51(X26,X27,X25)),s('type.list.list'(X25),sK52(X26,X27,X25))),X28,X25)))),s('type.num.num',X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))) )),
  inference(superposition,[],[f703,f544])).
fof(f33263,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK76('const.list.CONS_2'(s(X21,sK49(X22,X23,X21)),s('type.list.list'(X21),sK50(X22,X23,X21))),X24,X21)))),s('type.num.num',X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f703,f541])).
fof(f33262,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK76('const.list.CONS_2'(s(X17,sK45(X18,X19,X17)),s('type.list.list'(X17),sK46(X18,X19,X17))),X20,X17)))),s('type.num.num',X20)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19)))) )),
  inference(superposition,[],[f703,f535])).
fof(f33258,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X13,sK0)))),s('type.num.num',X13))))) ) | $spl4),
  inference(superposition,[],[f703,f644])).
fof(f33257,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK76('const.list.APPEND_2'(s('type.list.list'(X8),sK89(X9,X10,X11,X8)),s('type.list.list'(X8),sK90(X9,X10,X11,X8))),X12,X8)))),s('type.num.num',X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f703,f583])).
fof(f33332,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK76('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f33256,f27732])).
fof(f33256,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK76('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f703,f580])).
fof(f33255,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK76('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f703,f495])).
fof(f32489,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK71(X7,X5,X6)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f702,f592])).
fof(f32619,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK71(X171,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169)),X170)))),s('type.num.num',X169)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X169))))))) )),
  inference(forward_demodulation,[],[f32486,f531])).
fof(f32486,plain,(
  ( ! [X171,X169,X170,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X169)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK71(X171,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169)),X170)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169))))))) )),
  inference(superposition,[],[f702,f531])).
fof(f32618,plain,(
  ( ! [X167,X165,X166,X164] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK71(X167,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num',X164)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X164))))))) )),
  inference(forward_demodulation,[],[f32485,f530])).
fof(f32485,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X164)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK71(X167,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165))))))) )),
  inference(superposition,[],[f702,f530])).
fof(f32615,plain,(
  ( ! [X158,X156,X159,X157] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),sK71(X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157)))),X158)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157))))))))))) )),
  inference(forward_demodulation,[],[f32483,f616])).
fof(f32483,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),sK71(X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157)))),X158)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))))))))) )),
  inference(superposition,[],[f702,f616])).
fof(f32614,plain,(
  ( ! [X154,X152,X155,X153] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK71(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153))))))))))) )),
  inference(forward_demodulation,[],[f32482,f611])).
fof(f32482,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK71(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))))))))) )),
  inference(superposition,[],[f702,f611])).
fof(f32613,plain,(
  ( ! [X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK71(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149))))))))))) )),
  inference(forward_demodulation,[],[f32481,f615])).
fof(f32481,plain,(
  ( ! [X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK71(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149))))))))) )),
  inference(superposition,[],[f702,f615])).
fof(f32612,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK71(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145))))))))))) )),
  inference(forward_demodulation,[],[f32480,f609])).
fof(f32480,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK71(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145))))))))) )),
  inference(superposition,[],[f702,f609])).
fof(f32611,plain,(
  ( ! [X142,X143,X141] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK71(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0')),X142)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))))))))) )),
  inference(forward_demodulation,[],[f32479,f467])).
fof(f32479,plain,(
  ( ! [X142,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK71(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0')),X142)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f702,f467])).
fof(f32610,plain,(
  ( ! [X140,X138,X139] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK71(X140,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0')),X139)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138))))))))) )),
  inference(forward_demodulation,[],[f32478,f466])).
fof(f32478,plain,(
  ( ! [X140,X138,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK71(X140,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0')),X139)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f702,f466])).
fof(f32605,plain,(
  ( ! [X132,X130,X133,X131] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK71(X133,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131))))))))))) )),
  inference(forward_demodulation,[],[f32476,f614])).
fof(f32476,plain,(
  ( ! [X132,X130,X133,X131] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK71(X133,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131))))))))) )),
  inference(superposition,[],[f702,f614])).
fof(f32604,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK71(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127))))))))))) )),
  inference(forward_demodulation,[],[f32475,f613])).
fof(f32475,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK71(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))))) )),
  inference(superposition,[],[f702,f613])).
fof(f32603,plain,(
  ( ! [X125,X123,X124,X122] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK71(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123))))))))))) )),
  inference(forward_demodulation,[],[f32474,f612])).
fof(f32474,plain,(
  ( ! [X125,X123,X124,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK71(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))))))))) )),
  inference(superposition,[],[f702,f612])).
fof(f32602,plain,(
  ( ! [X121,X118,X120,X119] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK71(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119))))))))))) )),
  inference(forward_demodulation,[],[f32473,f610])).
fof(f32473,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK71(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119))))))))) )),
  inference(superposition,[],[f702,f610])).
fof(f32601,plain,(
  ( ! [X116,X117,X115] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK71(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X116)))),s('type.num.num',X115)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X115))))))) )),
  inference(forward_demodulation,[],[f32472,f454])).
fof(f32472,plain,(
  ( ! [X116,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X115)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK71(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X116)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f702,f454])).
fof(f32600,plain,(
  ( ! [X114,X112,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK71(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112)))),X113)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))))))))))) )),
  inference(forward_demodulation,[],[f32471,f459])).
fof(f32471,plain,(
  ( ! [X114,X112,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK71(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112)))),X113)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))))))))) )),
  inference(superposition,[],[f702,f459])).
fof(f32599,plain,(
  ( ! [X111,X109,X110] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK71(X111,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109))))))))))) )),
  inference(forward_demodulation,[],[f32470,f458])).
fof(f32470,plain,(
  ( ! [X111,X109,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK71(X111,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109))))))))) )),
  inference(superposition,[],[f702,f458])).
fof(f32588,plain,(
  ( ! [X101,X99,X100,X98] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK71(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99)))),X100))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99))))))))))) )),
  inference(forward_demodulation,[],[f32466,f4764])).
fof(f32466,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK71(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99)))),X100)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))))))))) )),
  inference(superposition,[],[f702,f603])).
fof(f32579,plain,(
  ( ! [X92,X90,X91] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK71(X92,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90)))),X91))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X90))))))))))) )),
  inference(forward_demodulation,[],[f32463,f4764])).
fof(f32463,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X90)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK71(X92,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90)))),X91)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90))))))))) )),
  inference(superposition,[],[f702,f465])).
fof(f32578,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK71(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))))))) )),
  inference(forward_demodulation,[],[f32577,f4779])).
fof(f32577,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK71(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))))))) )),
  inference(forward_demodulation,[],[f32462,f4764])).
fof(f32462,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK71(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))))))))) )),
  inference(superposition,[],[f702,f457])).
fof(f32539,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK71(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53))))))))) )),
  inference(forward_demodulation,[],[f32450,f594])).
fof(f32450,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK71(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53))))))))) )),
  inference(superposition,[],[f702,f594])).
fof(f32515,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK71(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))))))))) )),
  inference(forward_demodulation,[],[f32442,f707])).
fof(f32442,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK71(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(superposition,[],[f702,f707])).
fof(f32438,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK71(X17,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f702,f592])).
fof(f32428,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X36)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK71('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X33),X34),s('type.list.list'(X33),X35)),X36,X33)))),s('type.num.num',X36))))) )),
  inference(superposition,[],[f702,f531])).
fof(f32427,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X32)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK71('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X29),X30),s('type.list.list'(X29),X31)),X32,X29)))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f702,f530])).
fof(f32426,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK71('const.list.CONS_2'(s(X25,sK51(X26,X27,X25)),s('type.list.list'(X25),sK52(X26,X27,X25))),X28,X25)))),s('type.num.num',X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))) )),
  inference(superposition,[],[f702,f544])).
fof(f32425,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X24)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK71('const.list.CONS_2'(s(X21,sK49(X22,X23,X21)),s('type.list.list'(X21),sK50(X22,X23,X21))),X24,X21)))),s('type.num.num',X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f702,f541])).
fof(f32424,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK71('const.list.CONS_2'(s(X17,sK45(X18,X19,X17)),s('type.list.list'(X17),sK46(X18,X19,X17))),X20,X17)))),s('type.num.num',X20)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19)))) )),
  inference(superposition,[],[f702,f535])).
fof(f32420,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X13)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK71('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X13,sK0)))),s('type.num.num',X13))))) ) | $spl4),
  inference(superposition,[],[f702,f644])).
fof(f32419,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK71('const.list.APPEND_2'(s('type.list.list'(X8),sK89(X9,X10,X11,X8)),s('type.list.list'(X8),sK90(X9,X10,X11,X8))),X12,X8)))),s('type.num.num',X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f702,f583])).
fof(f32492,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK71('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f32418,f27732])).
fof(f32418,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK71('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f702,f580])).
fof(f32417,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK71('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f702,f495])).
fof(f32248,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK81(X7,X5,X6)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f688,f592])).
fof(f32378,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK81(X171,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169)),X170)))),s('type.num.num',X169)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X169))))))) )),
  inference(forward_demodulation,[],[f32245,f531])).
fof(f32245,plain,(
  ( ! [X171,X169,X170,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),X171))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X169)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X170),sK81(X171,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169)),X170)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X168),s('type.num.num',X169))))))) )),
  inference(superposition,[],[f688,f531])).
fof(f32377,plain,(
  ( ! [X167,X165,X166,X164] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK81(X167,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num',X164)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X164))))))) )),
  inference(forward_demodulation,[],[f32244,f530])).
fof(f32244,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X164)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK81(X167,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X164),s('type.num.num',X165))))))) )),
  inference(superposition,[],[f688,f530])).
fof(f32374,plain,(
  ( ! [X158,X156,X159,X157] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),sK81(X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157)))),X158)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157))))))))))) )),
  inference(forward_demodulation,[],[f32242,f616])).
fof(f32242,plain,(
  ( ! [X158,X156,X159,X157] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),X159))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X156),s('type.num.num',X157)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X158),sK81(X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157)))),X158)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))))))))) )),
  inference(superposition,[],[f688,f616])).
fof(f32373,plain,(
  ( ! [X154,X152,X155,X153] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK81(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153))))))))))) )),
  inference(forward_demodulation,[],[f32241,f611])).
fof(f32241,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK81(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))))))))) )),
  inference(superposition,[],[f688,f611])).
fof(f32372,plain,(
  ( ! [X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK81(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149))))))))))) )),
  inference(forward_demodulation,[],[f32240,f615])).
fof(f32240,plain,(
  ( ! [X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK81(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X149))))))))) )),
  inference(superposition,[],[f688,f615])).
fof(f32371,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK81(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145))))))))))) )),
  inference(forward_demodulation,[],[f32239,f609])).
fof(f32239,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK81(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145))))))))) )),
  inference(superposition,[],[f688,f609])).
fof(f32370,plain,(
  ( ! [X142,X143,X141] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK81(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0')),X142)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))))))))) )),
  inference(forward_demodulation,[],[f32238,f467])).
fof(f32238,plain,(
  ( ! [X142,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK81(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0')),X142)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f688,f467])).
fof(f32369,plain,(
  ( ! [X140,X138,X139] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK81(X140,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0')),X139)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138))))))))) )),
  inference(forward_demodulation,[],[f32237,f466])).
fof(f32237,plain,(
  ( ! [X140,X138,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X138)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK81(X140,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0')),X139)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f688,f466])).
fof(f32364,plain,(
  ( ! [X132,X130,X133,X131] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK81(X133,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131))))))))))) )),
  inference(forward_demodulation,[],[f32235,f614])).
fof(f32235,plain,(
  ( ! [X132,X130,X133,X131] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X130),s('type.num.num',X131)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK81(X133,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131))))))))) )),
  inference(superposition,[],[f688,f614])).
fof(f32363,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK81(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127))))))))))) )),
  inference(forward_demodulation,[],[f32234,f613])).
fof(f32234,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK81(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))))))))) )),
  inference(superposition,[],[f688,f613])).
fof(f32362,plain,(
  ( ! [X125,X123,X124,X122] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK81(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123))))))))))) )),
  inference(forward_demodulation,[],[f32233,f612])).
fof(f32233,plain,(
  ( ! [X125,X123,X124,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK81(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))))))))) )),
  inference(superposition,[],[f688,f612])).
fof(f32361,plain,(
  ( ! [X121,X118,X120,X119] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK81(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119))))))))))) )),
  inference(forward_demodulation,[],[f32232,f610])).
fof(f32232,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK81(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X119))))))))) )),
  inference(superposition,[],[f688,f610])).
fof(f32360,plain,(
  ( ! [X116,X117,X115] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK81(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X116)))),s('type.num.num',X115)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X115))))))) )),
  inference(forward_demodulation,[],[f32231,f454])).
fof(f32231,plain,(
  ( ! [X116,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X115)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK81(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X116)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f688,f454])).
fof(f32359,plain,(
  ( ! [X114,X112,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK81(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112)))),X113)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))))))))))) )),
  inference(forward_demodulation,[],[f32230,f459])).
fof(f32230,plain,(
  ( ! [X114,X112,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK81(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112)))),X113)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))))))))) )),
  inference(superposition,[],[f688,f459])).
fof(f32358,plain,(
  ( ! [X111,X109,X110] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK81(X111,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109))))))))))) )),
  inference(forward_demodulation,[],[f32229,f458])).
fof(f32229,plain,(
  ( ! [X111,X109,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X109)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK81(X111,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109))))))))) )),
  inference(superposition,[],[f688,f458])).
fof(f32347,plain,(
  ( ! [X101,X99,X100,X98] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK81(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99)))),X100))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99))))))))))) )),
  inference(forward_demodulation,[],[f32225,f4764])).
fof(f32225,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK81(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99)))),X100)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))))))))) )),
  inference(superposition,[],[f688,f603])).
fof(f32338,plain,(
  ( ! [X92,X90,X91] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK81(X92,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90)))),X91))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X90))))))))))) )),
  inference(forward_demodulation,[],[f32222,f4764])).
fof(f32222,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X90)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK81(X92,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90)))),X91)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X90))))))))) )),
  inference(superposition,[],[f688,f465])).
fof(f32337,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK81(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))))))) )),
  inference(forward_demodulation,[],[f32336,f4779])).
fof(f32336,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK81(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))))))) )),
  inference(forward_demodulation,[],[f32221,f4764])).
fof(f32221,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK81(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87)))),X88)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))))))))) )),
  inference(superposition,[],[f688,f457])).
fof(f32298,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK81(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53))))))))) )),
  inference(forward_demodulation,[],[f32209,f594])).
fof(f32209,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK81(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53))))))))) )),
  inference(superposition,[],[f688,f594])).
fof(f32274,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK81(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))))))))) )),
  inference(forward_demodulation,[],[f32201,f707])).
fof(f32201,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK81(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(superposition,[],[f688,f707])).
fof(f32197,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK81(X17,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f688,f592])).
fof(f32187,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X36)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK81('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X33),X34),s('type.list.list'(X33),X35)),X36,X33)))),s('type.num.num',X36))))) )),
  inference(superposition,[],[f688,f531])).
fof(f32186,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X32)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK81('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X29),X30),s('type.list.list'(X29),X31)),X32,X29)))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f688,f530])).
fof(f32185,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK81('const.list.CONS_2'(s(X25,sK51(X26,X27,X25)),s('type.list.list'(X25),sK52(X26,X27,X25))),X28,X25)))),s('type.num.num',X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))) )),
  inference(superposition,[],[f688,f544])).
fof(f32184,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X24)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK81('const.list.CONS_2'(s(X21,sK49(X22,X23,X21)),s('type.list.list'(X21),sK50(X22,X23,X21))),X24,X21)))),s('type.num.num',X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f688,f541])).
fof(f32183,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK81('const.list.CONS_2'(s(X17,sK45(X18,X19,X17)),s('type.list.list'(X17),sK46(X18,X19,X17))),X20,X17)))),s('type.num.num',X20)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19)))) )),
  inference(superposition,[],[f688,f535])).
fof(f32179,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X13)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK81('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X13,sK0)))),s('type.num.num',X13))))) ) | $spl4),
  inference(superposition,[],[f688,f644])).
fof(f32178,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK81('const.list.APPEND_2'(s('type.list.list'(X8),sK89(X9,X10,X11,X8)),s('type.list.list'(X8),sK90(X9,X10,X11,X8))),X12,X8)))),s('type.num.num',X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f688,f583])).
fof(f32251,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK81('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f32177,f27732])).
fof(f32177,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK81('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f688,f580])).
fof(f32176,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f688,f495])).
fof(f31562,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK67(X7,X5,X6)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f685,f592])).
fof(f31693,plain,(
  ( ! [X167,X165,X166,X164] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK67(X167,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num',X165)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X165))))))) )),
  inference(forward_demodulation,[],[f31559,f531])).
fof(f31559,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),X167))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X165)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X166),sK67(X167,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X164),s('type.num.num',X165)),X166)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X164),s('type.num.num',X165))))))) )),
  inference(superposition,[],[f685,f531])).
fof(f31692,plain,(
  ( ! [X163,X161,X162,X160] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),sK67(X163,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161)),X162)))),s('type.num.num',X160)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),X163))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X160))))))) )),
  inference(forward_demodulation,[],[f31558,f530])).
fof(f31558,plain,(
  ( ! [X163,X161,X162,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),X163))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X160)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),sK67(X163,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161)),X162)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161))))))) )),
  inference(superposition,[],[f685,f530])).
fof(f31688,plain,(
  ( ! [X154,X152,X155,X153] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK67(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153))))))))))) )),
  inference(forward_demodulation,[],[f31556,f616])).
fof(f31556,plain,(
  ( ! [X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X152),s('type.num.num',X153)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK67(X155,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153)))),X154)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))))))))) )),
  inference(superposition,[],[f685,f616])).
fof(f31687,plain,(
  ( ! [X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK67(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X148),s('type.num.num',X149)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X148),s('type.num.num',X149))))))))))) )),
  inference(forward_demodulation,[],[f31555,f611])).
fof(f31555,plain,(
  ( ! [X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X148),s('type.num.num',X149)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK67(X151,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149)))),X150)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149))))))))) )),
  inference(superposition,[],[f685,f611])).
fof(f31686,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK67(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X144),s('type.num.num',X145)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X144),s('type.num.num',X145))))))))))) )),
  inference(forward_demodulation,[],[f31554,f615])).
fof(f31554,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X144),s('type.num.num',X145)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),sK67(X147,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145)))),X146)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145))))))))) )),
  inference(superposition,[],[f685,f615])).
fof(f31685,plain,(
  ( ! [X142,X140,X143,X141] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK67(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))),X142)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141))))))))))) )),
  inference(forward_demodulation,[],[f31553,f609])).
fof(f31553,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X140),s('type.num.num',X141)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),sK67(X143,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141)))),X142)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))))))))) )),
  inference(superposition,[],[f685,f609])).
fof(f31684,plain,(
  ( ! [X138,X139,X137] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),sK67(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.ZERO_0')),X138)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137))))))))) )),
  inference(forward_demodulation,[],[f31552,f467])).
fof(f31552,plain,(
  ( ! [X138,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),sK67(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.ZERO_0')),X138)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f685,f467])).
fof(f31683,plain,(
  ( ! [X134,X136,X135] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),sK67(X136,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.ZERO_0')),X135)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X134)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),X136))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X134))))))))) )),
  inference(forward_demodulation,[],[f31551,f466])).
fof(f31551,plain,(
  ( ! [X134,X136,X135] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),X136))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X134)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),sK67(X136,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.ZERO_0')),X135)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f685,f466])).
fof(f31678,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK67(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127))))))))))) )),
  inference(forward_demodulation,[],[f31549,f614])).
fof(f31549,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X126),s('type.num.num',X127)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK67(X129,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127)))),X128)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))))))))) )),
  inference(superposition,[],[f685,f614])).
fof(f31677,plain,(
  ( ! [X125,X123,X124,X122] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK67(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123))))))))))) )),
  inference(forward_demodulation,[],[f31548,f613])).
fof(f31548,plain,(
  ( ! [X125,X123,X124,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X122),s('type.num.num',X123)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK67(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123)))),X124)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123))))))))) )),
  inference(superposition,[],[f685,f613])).
fof(f31676,plain,(
  ( ! [X121,X118,X120,X119] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK67(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119))))))))))) )),
  inference(forward_demodulation,[],[f31547,f612])).
fof(f31547,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num',X119)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK67(X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119)))),X120)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119))))))))) )),
  inference(superposition,[],[f685,f612])).
fof(f31675,plain,(
  ( ! [X116,X114,X117,X115] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK67(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X114),s('type.num.num',X115)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X114),s('type.num.num',X115))))))))))) )),
  inference(forward_demodulation,[],[f31546,f610])).
fof(f31546,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X114),s('type.num.num',X115)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK67(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115)))),X116)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115))))))))) )),
  inference(superposition,[],[f685,f610])).
fof(f31674,plain,(
  ( ! [X111,X112,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK67(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X111),s('type.num.num','const.arithmetic.ZERO_0')),X112)))),s('type.num.num',X111)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X111))))))) )),
  inference(forward_demodulation,[],[f31545,f454])).
fof(f31545,plain,(
  ( ! [X111,X112,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X111)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK67(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X111),s('type.num.num','const.arithmetic.ZERO_0')),X112)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X111),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f685,f454])).
fof(f31673,plain,(
  ( ! [X109,X110,X108] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK67(X110,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X108)))),X109)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))))))))))) )),
  inference(forward_demodulation,[],[f31544,f459])).
fof(f31544,plain,(
  ( ! [X109,X110,X108] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK67(X110,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X108)))),X109)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X108))))))))) )),
  inference(superposition,[],[f685,f459])).
fof(f31672,plain,(
  ( ! [X107,X105,X106] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK67(X107,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X105)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X105))))))))))) )),
  inference(forward_demodulation,[],[f31543,f458])).
fof(f31543,plain,(
  ( ! [X107,X105,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X105)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK67(X107,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105))))))))) )),
  inference(superposition,[],[f685,f458])).
fof(f31660,plain,(
  ( ! [X94,X97,X95,X96] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num',X95))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK67(X97,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num',X95)))),X96))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.num.SUC_1'(s('type.num.num',X95))))))))))) )),
  inference(forward_demodulation,[],[f31539,f4764])).
fof(f31539,plain,(
  ( ! [X94,X97,X95,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.num.SUC_1'(s('type.num.num',X95)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK67(X97,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num',X95)))),X96)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num',X95))))))))) )),
  inference(superposition,[],[f685,f603])).
fof(f31651,plain,(
  ( ! [X88,X87,X86] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X86))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK67(X88,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X86)))),X87))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X86))))))))))) )),
  inference(forward_demodulation,[],[f31536,f4764])).
fof(f31536,plain,(
  ( ! [X88,X87,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X86)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK67(X88,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X86)))),X87)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X86))))))))) )),
  inference(superposition,[],[f685,f465])).
fof(f31650,plain,(
  ( ! [X85,X83,X84] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK67(X85,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X84)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83))))))))) )),
  inference(forward_demodulation,[],[f31649,f4779])).
fof(f31649,plain,(
  ( ! [X85,X83,X84] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK67(X85,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X84))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83))))))))) )),
  inference(forward_demodulation,[],[f31535,f4764])).
fof(f31535,plain,(
  ( ! [X85,X83,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK67(X85,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X84)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83))))))))) )),
  inference(superposition,[],[f685,f457])).
fof(f31615,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK67(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53))))))))) )),
  inference(forward_demodulation,[],[f31525,f594])).
fof(f31525,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK67(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53))))))))) )),
  inference(superposition,[],[f685,f594])).
fof(f31590,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK67(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))))))))) )),
  inference(forward_demodulation,[],[f31517,f707])).
fof(f31517,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK67(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(superposition,[],[f685,f707])).
fof(f31513,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK67(X17,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f685,f592])).
fof(f31503,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X36)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK67('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X33),X34),s('type.list.list'(X33),X35)),X36,X33)))),s('type.num.num',X36))))) )),
  inference(superposition,[],[f685,f531])).
fof(f31502,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X32)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK67('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X29),X30),s('type.list.list'(X29),X31)),X32,X29)))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f685,f530])).
fof(f31501,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK67('const.list.CONS_2'(s(X25,sK51(X26,X27,X25)),s('type.list.list'(X25),sK52(X26,X27,X25))),X28,X25)))),s('type.num.num',X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))) )),
  inference(superposition,[],[f685,f544])).
fof(f31500,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X24)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK67('const.list.CONS_2'(s(X21,sK49(X22,X23,X21)),s('type.list.list'(X21),sK50(X22,X23,X21))),X24,X21)))),s('type.num.num',X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f685,f541])).
fof(f31499,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X20)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK67('const.list.CONS_2'(s(X17,sK45(X18,X19,X17)),s('type.list.list'(X17),sK46(X18,X19,X17))),X20,X17)))),s('type.num.num',X20)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19)))) )),
  inference(superposition,[],[f685,f535])).
fof(f31495,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X13)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK67('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X13,sK0)))),s('type.num.num',X13))))) ) | $spl4),
  inference(superposition,[],[f685,f644])).
fof(f31494,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X12)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK67('const.list.APPEND_2'(s('type.list.list'(X8),sK89(X9,X10,X11,X8)),s('type.list.list'(X8),sK90(X9,X10,X11,X8))),X12,X8)))),s('type.num.num',X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f685,f583])).
fof(f31565,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK67('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f31493,f27732])).
fof(f31493,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK67('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f685,f580])).
fof(f31492,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK67('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f685,f495])).
fof(f31229,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31228,f4764])).
fof(f31228,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f31227,f457])).
fof(f31227,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(forward_demodulation,[],[f31099,f463])).
fof(f31099,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK63(X13,'const.num.SUC_1'(s('type.num.num',X11)),X12)))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) )),
  inference(superposition,[],[f684,f707])).
fof(f31095,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK63(X2,X0,X1)))),s('type.num.num',X0))))) )),
  inference(superposition,[],[f684,f592])).
fof(f31225,plain,(
  ( ! [X165,X163,X164,X162] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),sK63(X165,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X162),s('type.num.num',X163)),X164)))),s('type.num.num',X163)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31094,f531])).
fof(f31094,plain,(
  ( ! [X165,X163,X164,X162] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X163),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),sK63(X165,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X162),s('type.num.num',X163)),X164)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X162),s('type.num.num',X163))))))) )),
  inference(superposition,[],[f684,f531])).
fof(f31224,plain,(
  ( ! [X158,X161,X159,X160] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),sK63(X161,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X158),s('type.num.num',X159)),X160)))),s('type.num.num',X158)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),X161))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31093,f530])).
fof(f31093,plain,(
  ( ! [X158,X161,X159,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),X161))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X160),sK63(X161,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X158),s('type.num.num',X159)),X160)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X158),s('type.num.num',X159))))))) )),
  inference(superposition,[],[f684,f530])).
fof(f31219,plain,(
  ( ! [X152,X151,X153,X150] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK63(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151))))))))))) )),
  inference(forward_demodulation,[],[f31218,f616])).
fof(f31218,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK63(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))))))))) )),
  inference(forward_demodulation,[],[f31091,f592])).
fof(f31091,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK63(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151)))),X152)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))))))))) )),
  inference(superposition,[],[f684,f616])).
fof(f31217,plain,(
  ( ! [X146,X149,X147,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK63(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147))))))))))) )),
  inference(forward_demodulation,[],[f31216,f611])).
fof(f31216,plain,(
  ( ! [X146,X149,X147,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK63(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X147))))))))) )),
  inference(forward_demodulation,[],[f31090,f592])).
fof(f31090,plain,(
  ( ! [X146,X149,X147,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X146),s('type.num.num',X147))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK63(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X147)))),X148)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X147))))))))) )),
  inference(superposition,[],[f684,f611])).
fof(f31215,plain,(
  ( ! [X144,X142,X145,X143] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK63(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143)))),X144)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X142),s('type.num.num',X143)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X142),s('type.num.num',X143))))))))))) )),
  inference(forward_demodulation,[],[f31214,f615])).
fof(f31214,plain,(
  ( ! [X144,X142,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X142),s('type.num.num',X143)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK63(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143)))),X144)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))))))))) )),
  inference(forward_demodulation,[],[f31089,f592])).
fof(f31089,plain,(
  ( ! [X144,X142,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X142),s('type.num.num',X143))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK63(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143)))),X144)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))))))))) )),
  inference(superposition,[],[f684,f615])).
fof(f31213,plain,(
  ( ! [X140,X138,X141,X139] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK63(X141,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139)))),X140)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))))))))) )),
  inference(forward_demodulation,[],[f31212,f609])).
fof(f31212,plain,(
  ( ! [X140,X138,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK63(X141,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139)))),X140)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))))))))) )),
  inference(forward_demodulation,[],[f31088,f592])).
fof(f31088,plain,(
  ( ! [X140,X138,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK63(X141,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139)))),X140)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))))))))) )),
  inference(superposition,[],[f684,f609])).
fof(f31211,plain,(
  ( ! [X136,X135,X137] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK63(X137,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.ZERO_0')),X136)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31087,f467])).
fof(f31087,plain,(
  ( ! [X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK63(X137,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.ZERO_0')),X136)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f684,f467])).
fof(f31210,plain,(
  ( ! [X134,X132,X133] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X133),sK63(X134,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.ZERO_0')),X133)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X132)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X133),X134))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31086,f466])).
fof(f31086,plain,(
  ( ! [X134,X132,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X133),X134))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X133),sK63(X134,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.ZERO_0')),X133)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f684,f466])).
fof(f31206,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK63(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125))))))))))) )),
  inference(forward_demodulation,[],[f31205,f614])).
fof(f31205,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK63(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))))))))) )),
  inference(forward_demodulation,[],[f31084,f592])).
fof(f31084,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X124),s('type.num.num',X125))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),sK63(X127,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125))))))))) )),
  inference(superposition,[],[f684,f614])).
fof(f31204,plain,(
  ( ! [X123,X121,X122,X120] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK63(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X120),s('type.num.num',X121)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X120),s('type.num.num',X121))))))))))) )),
  inference(forward_demodulation,[],[f31203,f613])).
fof(f31203,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X120),s('type.num.num',X121)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK63(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))))))))) )),
  inference(forward_demodulation,[],[f31083,f592])).
fof(f31083,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X120),s('type.num.num',X121))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK63(X123,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))),X122)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))))))))) )),
  inference(superposition,[],[f684,f613])).
fof(f31202,plain,(
  ( ! [X118,X116,X119,X117] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK63(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117))))))))))) )),
  inference(forward_demodulation,[],[f31201,f612])).
fof(f31201,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK63(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117))))))))) )),
  inference(forward_demodulation,[],[f31082,f592])).
fof(f31082,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK63(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117))))))))) )),
  inference(superposition,[],[f684,f612])).
fof(f31200,plain,(
  ( ! [X114,X112,X115,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK63(X115,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X114)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X112),s('type.num.num',X113)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X112),s('type.num.num',X113))))))))))) )),
  inference(forward_demodulation,[],[f31199,f610])).
fof(f31199,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X112),s('type.num.num',X113)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK63(X115,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X114)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))))))))) )),
  inference(forward_demodulation,[],[f31081,f592])).
fof(f31081,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X112),s('type.num.num',X113))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK63(X115,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X114)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))))))))) )),
  inference(superposition,[],[f684,f610])).
fof(f31198,plain,(
  ( ! [X111,X109,X110] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK63(X111,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X109),s('type.num.num','const.arithmetic.ZERO_0')),X110)))),s('type.num.num',X109)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31080,f454])).
fof(f31080,plain,(
  ( ! [X111,X109,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK63(X111,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X109),s('type.num.num','const.arithmetic.ZERO_0')),X110)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X109),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f684,f454])).
fof(f31197,plain,(
  ( ! [X107,X108,X106] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK63(X108,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X107)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31079,f459])).
fof(f31079,plain,(
  ( ! [X107,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK63(X108,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X107)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))))))))) )),
  inference(superposition,[],[f684,f459])).
fof(f31196,plain,(
  ( ! [X103,X105,X104] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK63(X105,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103)))),X104)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X103)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X103))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31078,f458])).
fof(f31078,plain,(
  ( ! [X103,X105,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X103))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK63(X105,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103)))),X104)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))))))))) )),
  inference(superposition,[],[f684,f458])).
fof(f31187,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK63(X95,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X94))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))))))))) )),
  inference(forward_demodulation,[],[f31186,f4764])).
fof(f31186,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK63(X95,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X94)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))))))))) )),
  inference(forward_demodulation,[],[f31074,f592])).
fof(f31074,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK63(X95,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X94)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))))))))) )),
  inference(superposition,[],[f684,f603])).
fof(f31176,plain,(
  ( ! [X85,X86,X84] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK63(X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31175,f4764])).
fof(f31175,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK63(X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))))))) )),
  inference(forward_demodulation,[],[f31174,f457])).
fof(f31174,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK63(X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))))))) )),
  inference(forward_demodulation,[],[f31173,f463])).
fof(f31173,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK63(X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))))))) )),
  inference(forward_demodulation,[],[f31071,f17111])).
fof(f31071,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK63(X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))))))) )),
  inference(superposition,[],[f684,f465])).
fof(f31172,plain,(
  ( ! [X83,X81,X82] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK63(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31171,f4779])).
fof(f31171,plain,(
  ( ! [X83,X81,X82] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK63(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31070,f4764])).
fof(f31070,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK63(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))))))))) )),
  inference(superposition,[],[f684,f457])).
fof(f31144,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK63(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f31061,f594])).
fof(f31061,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK63(X55,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53)))),X54)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X53))))))))) )),
  inference(superposition,[],[f684,f594])).
fof(f31123,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK63(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))))))))) )),
  inference(forward_demodulation,[],[f31122,f707])).
fof(f31122,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK63(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(forward_demodulation,[],[f31053,f592])).
fof(f31053,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK63(X32,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30)),X31)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))),s('type.num.num',X30))))))) )),
  inference(superposition,[],[f684,f707])).
fof(f31049,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK63(X17,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f684,f592])).
fof(f31039,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X35))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK63('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X33),X34),s('type.list.list'(X33),X35)),X36,X33)))),s('type.num.num',X36))))) )),
  inference(superposition,[],[f684,f531])).
fof(f31038,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK63('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X29),X30),s('type.list.list'(X29),X31)),X32,X29)))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f684,f530])).
fof(f31037,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK63('const.list.CONS_2'(s(X25,sK51(X26,X27,X25)),s('type.list.list'(X25),sK52(X26,X27,X25))),X28,X25)))),s('type.num.num',X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))) )),
  inference(superposition,[],[f684,f544])).
fof(f31036,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK63('const.list.CONS_2'(s(X21,sK49(X22,X23,X21)),s('type.list.list'(X21),sK50(X22,X23,X21))),X24,X21)))),s('type.num.num',X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X23))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f684,f541])).
fof(f31035,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK63('const.list.CONS_2'(s(X17,sK45(X18,X19,X17)),s('type.list.list'(X17),sK46(X18,X19,X17))),X20,X17)))),s('type.num.num',X20)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19)))) )),
  inference(superposition,[],[f684,f535])).
fof(f31031,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK63('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X13,sK0)))),s('type.num.num',X13))))) ) | $spl4),
  inference(superposition,[],[f684,f644])).
fof(f31030,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK63('const.list.APPEND_2'(s('type.list.list'(X8),sK89(X9,X10,X11,X8)),s('type.list.list'(X8),sK90(X9,X10,X11,X8))),X12,X8)))),s('type.num.num',X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f684,f583])).
fof(f31101,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK63('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f31029,f27732])).
fof(f31029,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK63('const.list.APPEND_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),X5))),s('type.list.list'(X3),X6)),X7,X3)))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f684,f580])).
fof(f31028,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK63('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f684,f495])).
fof(f30702,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK91(X21,X19,'const.num.SUC_1'(s('type.num.num',X18)),X20)),s('type.list.list'(X20),sK92(X21,X19,'const.num.SUC_1'(s('type.num.num',X18)),X20))))) )),
  inference(superposition,[],[f697,f707])).
fof(f30698,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))))) | s('type.list.list'(X5),X6) = s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),sK91(X6,X4,X3,X5)),s('type.list.list'(X5),sK92(X6,X4,X3,X5))))) )),
  inference(superposition,[],[f697,f592])).
fof(f30696,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X212),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X214),s('type.num.num',X211)))))) | s('type.list.list'(X212),X213) = s('type.list.list'(X212),'const.list.APPEND_2'(s('type.list.list'(X212),sK91(X213,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X210),s('type.num.num',X211)),X214,X212)),s('type.list.list'(X212),sK92(X213,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X210),s('type.num.num',X211)),X214,X212))))) )),
  inference(superposition,[],[f697,f531])).
fof(f30695,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X209),s('type.num.num',X205)))))) | s('type.list.list'(X207),X208) = s('type.list.list'(X207),'const.list.APPEND_2'(s('type.list.list'(X207),sK91(X208,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X205),s('type.num.num',X206)),X209,X207)),s('type.list.list'(X207),sK92(X208,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X205),s('type.num.num',X206)),X209,X207))))) )),
  inference(superposition,[],[f697,f530])).
fof(f30693,plain,(
  ( ! [X198,X196,X199,X197,X195] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X197),X198))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X199),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X195),s('type.num.num',X196)))))))))) | s('type.list.list'(X197),X198) = s('type.list.list'(X197),'const.list.APPEND_2'(s('type.list.list'(X197),sK91(X198,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X196)))),X199,X197)),s('type.list.list'(X197),sK92(X198,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X196)))),X199,X197))))) )),
  inference(superposition,[],[f697,f616])).
fof(f30692,plain,(
  ( ! [X191,X194,X192,X190,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),X193))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X194),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X190),s('type.num.num',X191)))))))))) | s('type.list.list'(X192),X193) = s('type.list.list'(X192),'const.list.APPEND_2'(s('type.list.list'(X192),sK91(X193,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X191)))),X194,X192)),s('type.list.list'(X192),sK92(X193,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X191)))),X194,X192))))) )),
  inference(superposition,[],[f697,f611])).
fof(f30691,plain,(
  ( ! [X189,X187,X185,X188,X186] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X187),X188))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X185),s('type.num.num',X186)))))))))) | s('type.list.list'(X187),X188) = s('type.list.list'(X187),'const.list.APPEND_2'(s('type.list.list'(X187),sK91(X188,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186)))),X189,X187)),s('type.list.list'(X187),sK92(X188,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186)))),X189,X187))))) )),
  inference(superposition,[],[f697,f615])).
fof(f30690,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),X183))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X184),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181)))))))))) | s('type.list.list'(X182),X183) = s('type.list.list'(X182),'const.list.APPEND_2'(s('type.list.list'(X182),sK91(X183,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181)))),X184,X182)),s('type.list.list'(X182),sK92(X183,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181)))),X184,X182))))) )),
  inference(superposition,[],[f697,f609])).
fof(f30689,plain,(
  ( ! [X177,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X179),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X176)))))))) | s('type.list.list'(X177),X178) = s('type.list.list'(X177),'const.list.APPEND_2'(s('type.list.list'(X177),sK91(X178,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.ZERO_0')),X179,X177)),s('type.list.list'(X177),sK92(X178,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.ZERO_0')),X179,X177))))) )),
  inference(superposition,[],[f697,f467])).
fof(f30688,plain,(
  ( ! [X175,X173,X174,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),X174))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X172)))))))) | s('type.list.list'(X173),X174) = s('type.list.list'(X173),'const.list.APPEND_2'(s('type.list.list'(X173),sK91(X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0')),X175,X173)),s('type.list.list'(X173),sK92(X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0')),X175,X173))))) )),
  inference(superposition,[],[f697,f466])).
fof(f30686,plain,(
  ( ! [X165,X163,X166,X164,X162] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X162),s('type.num.num',X163)))))))))) | s('type.list.list'(X164),X165) = s('type.list.list'(X164),'const.list.APPEND_2'(s('type.list.list'(X164),sK91(X165,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X162))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163)))),X166,X164)),s('type.list.list'(X164),sK92(X165,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X162))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163)))),X166,X164))))) )),
  inference(superposition,[],[f697,f614])).
fof(f30685,plain,(
  ( ! [X158,X161,X159,X157,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X159),X160))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X161),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X157),s('type.num.num',X158)))))))))) | s('type.list.list'(X159),X160) = s('type.list.list'(X159),'const.list.APPEND_2'(s('type.list.list'(X159),sK91(X160,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X158)))),X161,X159)),s('type.list.list'(X159),sK92(X160,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X158)))),X161,X159))))) )),
  inference(superposition,[],[f697,f613])).
fof(f30684,plain,(
  ( ! [X156,X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153)))))))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.APPEND_2'(s('type.list.list'(X154),sK91(X155,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X153)))),X156,X154)),s('type.list.list'(X154),sK92(X155,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X153)))),X156,X154))))) )),
  inference(superposition,[],[f697,f612])).
fof(f30683,plain,(
  ( ! [X151,X149,X147,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X151),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X147),s('type.num.num',X148)))))))))) | s('type.list.list'(X149),X150) = s('type.list.list'(X149),'const.list.APPEND_2'(s('type.list.list'(X149),sK91(X150,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148)))),X151,X149)),s('type.list.list'(X149),sK92(X150,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148)))),X151,X149))))) )),
  inference(superposition,[],[f697,f610])).
fof(f30682,plain,(
  ( ! [X146,X144,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X146),s('type.num.num',X143)))))) | s('type.list.list'(X144),X145) = s('type.list.list'(X144),'const.list.APPEND_2'(s('type.list.list'(X144),sK91(X145,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num','const.arithmetic.ZERO_0')),X146,X144)),s('type.list.list'(X144),sK92(X145,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num','const.arithmetic.ZERO_0')),X146,X144))))) )),
  inference(superposition,[],[f697,f454])).
fof(f30681,plain,(
  ( ! [X142,X140,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X142),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139)))))))))) | s('type.list.list'(X140),X141) = s('type.list.list'(X140),'const.list.APPEND_2'(s('type.list.list'(X140),sK91(X141,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X142,X140)),s('type.list.list'(X140),sK92(X141,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X142,X140))))) )),
  inference(superposition,[],[f697,f459])).
fof(f30680,plain,(
  ( ! [X138,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X135)))))))))) | s('type.list.list'(X136),X137) = s('type.list.list'(X136),'const.list.APPEND_2'(s('type.list.list'(X136),sK91(X137,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X138,X136)),s('type.list.list'(X136),sK92(X137,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X138,X136))))) )),
  inference(superposition,[],[f697,f458])).
fof(f30677,plain,(
  ( ! [X127,X125,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X128),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X125)))))))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.APPEND_2'(s('type.list.list'(X126),sK91(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X128,X126)),s('type.list.list'(X126),sK92(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X128,X126))))) )),
  inference(superposition,[],[f697,f462])).
fof(f30676,plain,(
  ( ! [X123,X121,X124,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X124),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num','const.num.SUC_1'(s('type.num.num',X121)))))))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK91(X123,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X124,X122)),s('type.list.list'(X122),sK92(X123,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X124,X122))))) )),
  inference(superposition,[],[f697,f603])).
fof(f30675,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X119),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X116)))))))))) | s('type.list.list'(X117),X118) = s('type.list.list'(X117),'const.list.APPEND_2'(s('type.list.list'(X117),sK91(X118,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X119,X117)),s('type.list.list'(X117),sK92(X118,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X119,X117))))) )),
  inference(superposition,[],[f697,f463])).
fof(f30673,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X109)))))))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.APPEND_2'(s('type.list.list'(X110),sK91(X111,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X112,X110)),s('type.list.list'(X110),sK92(X111,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X112,X110))))) )),
  inference(superposition,[],[f697,f465])).
fof(f30672,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X108),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))))))) | s('type.list.list'(X106),X107) = s('type.list.list'(X106),'const.list.APPEND_2'(s('type.list.list'(X106),sK91(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X108,X106)),s('type.list.list'(X106),sK92(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X108,X106))))) )),
  inference(superposition,[],[f697,f457])).
fof(f30668,plain,(
  ( ! [X92,X90,X93,X91,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X93),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X89),s('type.num.num',X90)))))))))) | s('type.list.list'(X91),X92) = s('type.list.list'(X91),'const.list.APPEND_2'(s('type.list.list'(X91),sK91(X92,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X93,X91)),s('type.list.list'(X91),sK92(X92,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X93,X91))))) )),
  inference(superposition,[],[f697,f605])).
fof(f30667,plain,(
  ( ! [X88,X87,X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X88),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X84),s('type.num.num',X85)))))))))) | s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.APPEND_2'(s('type.list.list'(X86),sK91(X87,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X88,X86)),s('type.list.list'(X86),sK92(X87,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X88,X86))))) )),
  inference(superposition,[],[f697,f607])).
fof(f30663,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X67),s('type.num.num',X68)))))))) | s('type.list.list'(X69),X70) = s('type.list.list'(X69),'const.list.APPEND_2'(s('type.list.list'(X69),sK91(X70,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X68)))),X71,X69)),s('type.list.list'(X69),sK92(X70,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X68)))),X71,X69))))) )),
  inference(superposition,[],[f697,f594])).
fof(f30662,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X62),s('type.num.num',X63)))))))))) | s('type.list.list'(X64),X65) = s('type.list.list'(X64),'const.list.APPEND_2'(s('type.list.list'(X64),sK91(X65,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X66,X64)),s('type.list.list'(X64),sK92(X65,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X66,X64))))) )),
  inference(superposition,[],[f697,f606])).
fof(f30656,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40)))))))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.APPEND_2'(s('type.list.list'(X41),sK91(X42,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X43,X41)),s('type.list.list'(X41),sK92(X42,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X43,X41))))) )),
  inference(superposition,[],[f697,f707])).
fof(f30652,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X20)))))))) | s('type.list.list'(X22),X23) = s('type.list.list'(X22),'const.list.APPEND_2'(s('type.list.list'(X22),sK91(X23,'const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)),X24,X22)),s('type.list.list'(X22),sK92(X23,'const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)),X24,X22))))) )),
  inference(superposition,[],[f697,f592])).
fof(f30645,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X212),X213))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X211),s('type.num.num',X214)))))) | s('type.list.list'(X212),X213) = s('type.list.list'(X212),'const.list.APPEND_2'(s('type.list.list'(X212),sK91(X213,X214,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X210),s('type.num.num',X211)),X212)),s('type.list.list'(X212),sK92(X213,X214,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X210),s('type.num.num',X211)),X212))))) )),
  inference(superposition,[],[f697,f531])).
fof(f30644,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X205),s('type.num.num',X209)))))) | s('type.list.list'(X207),X208) = s('type.list.list'(X207),'const.list.APPEND_2'(s('type.list.list'(X207),sK91(X208,X209,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X205),s('type.num.num',X206)),X207)),s('type.list.list'(X207),sK92(X208,X209,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X205),s('type.num.num',X206)),X207))))) )),
  inference(superposition,[],[f697,f530])).
fof(f30642,plain,(
  ( ! [X198,X196,X199,X197,X195] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X197),X198))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X195),s('type.num.num',X196))))),s('type.num.num',X199)))))) | s('type.list.list'(X197),X198) = s('type.list.list'(X197),'const.list.APPEND_2'(s('type.list.list'(X197),sK91(X198,X199,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X196)))),X197)),s('type.list.list'(X197),sK92(X198,X199,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X196)))),X197))))) )),
  inference(superposition,[],[f697,f616])).
fof(f30641,plain,(
  ( ! [X191,X194,X192,X190,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X192),X193))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X190),s('type.num.num',X191))))),s('type.num.num',X194)))))) | s('type.list.list'(X192),X193) = s('type.list.list'(X192),'const.list.APPEND_2'(s('type.list.list'(X192),sK91(X193,X194,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X191)))),X192)),s('type.list.list'(X192),sK92(X193,X194,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X190))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X191)))),X192))))) )),
  inference(superposition,[],[f697,f611])).
fof(f30640,plain,(
  ( ! [X189,X187,X185,X188,X186] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X187),X188))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X185),s('type.num.num',X186))))),s('type.num.num',X189)))))) | s('type.list.list'(X187),X188) = s('type.list.list'(X187),'const.list.APPEND_2'(s('type.list.list'(X187),sK91(X188,X189,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186)))),X187)),s('type.list.list'(X187),sK92(X188,X189,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186)))),X187))))) )),
  inference(superposition,[],[f697,f615])).
fof(f30639,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),X183))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181))))),s('type.num.num',X184)))))) | s('type.list.list'(X182),X183) = s('type.list.list'(X182),'const.list.APPEND_2'(s('type.list.list'(X182),sK91(X183,X184,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181)))),X182)),s('type.list.list'(X182),sK92(X183,X184,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181)))),X182))))) )),
  inference(superposition,[],[f697,f609])).
fof(f30638,plain,(
  ( ! [X177,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X176))),s('type.num.num',X179)))))) | s('type.list.list'(X177),X178) = s('type.list.list'(X177),'const.list.APPEND_2'(s('type.list.list'(X177),sK91(X178,X179,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.ZERO_0')),X177)),s('type.list.list'(X177),sK92(X178,X179,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.ZERO_0')),X177))))) )),
  inference(superposition,[],[f697,f467])).
fof(f30637,plain,(
  ( ! [X175,X173,X174,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),X174))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X172))),s('type.num.num',X175)))))) | s('type.list.list'(X173),X174) = s('type.list.list'(X173),'const.list.APPEND_2'(s('type.list.list'(X173),sK91(X174,X175,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0')),X173)),s('type.list.list'(X173),sK92(X174,X175,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0')),X173))))) )),
  inference(superposition,[],[f697,f466])).
fof(f30635,plain,(
  ( ! [X165,X163,X166,X164,X162] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X162),s('type.num.num',X163))))),s('type.num.num',X166)))))) | s('type.list.list'(X164),X165) = s('type.list.list'(X164),'const.list.APPEND_2'(s('type.list.list'(X164),sK91(X165,X166,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X162))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163)))),X164)),s('type.list.list'(X164),sK92(X165,X166,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X162))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163)))),X164))))) )),
  inference(superposition,[],[f697,f614])).
fof(f30634,plain,(
  ( ! [X158,X161,X159,X157,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X159),X160))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X157),s('type.num.num',X158))))),s('type.num.num',X161)))))) | s('type.list.list'(X159),X160) = s('type.list.list'(X159),'const.list.APPEND_2'(s('type.list.list'(X159),sK91(X160,X161,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X158)))),X159)),s('type.list.list'(X159),sK92(X160,X161,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X157))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X158)))),X159))))) )),
  inference(superposition,[],[f697,f613])).
fof(f30633,plain,(
  ( ! [X156,X154,X152,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X155))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X152),s('type.num.num',X153))))),s('type.num.num',X156)))))) | s('type.list.list'(X154),X155) = s('type.list.list'(X154),'const.list.APPEND_2'(s('type.list.list'(X154),sK91(X155,X156,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X153)))),X154)),s('type.list.list'(X154),sK92(X155,X156,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X152))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X153)))),X154))))) )),
  inference(superposition,[],[f697,f612])).
fof(f30632,plain,(
  ( ! [X151,X149,X147,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X147),s('type.num.num',X148))))),s('type.num.num',X151)))))) | s('type.list.list'(X149),X150) = s('type.list.list'(X149),'const.list.APPEND_2'(s('type.list.list'(X149),sK91(X150,X151,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148)))),X149)),s('type.list.list'(X149),sK92(X150,X151,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148)))),X149))))) )),
  inference(superposition,[],[f697,f610])).
fof(f30631,plain,(
  ( ! [X146,X144,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X143),s('type.num.num',X146)))))) | s('type.list.list'(X144),X145) = s('type.list.list'(X144),'const.list.APPEND_2'(s('type.list.list'(X144),sK91(X145,X146,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num','const.arithmetic.ZERO_0')),X144)),s('type.list.list'(X144),sK92(X145,X146,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num','const.arithmetic.ZERO_0')),X144))))) )),
  inference(superposition,[],[f697,f454])).
fof(f30630,plain,(
  ( ! [X142,X140,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))))),s('type.num.num',X142)))))) | s('type.list.list'(X140),X141) = s('type.list.list'(X140),'const.list.APPEND_2'(s('type.list.list'(X140),sK91(X141,X142,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X140)),s('type.list.list'(X140),sK92(X141,X142,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X140))))) )),
  inference(superposition,[],[f697,f459])).
fof(f30629,plain,(
  ( ! [X138,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X135))))),s('type.num.num',X138)))))) | s('type.list.list'(X136),X137) = s('type.list.list'(X136),'const.list.APPEND_2'(s('type.list.list'(X136),sK91(X137,X138,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X136)),s('type.list.list'(X136),sK92(X137,X138,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X136))))) )),
  inference(superposition,[],[f697,f458])).
fof(f30626,plain,(
  ( ! [X127,X125,X128,X126] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X125))))),s('type.num.num',X128)))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.APPEND_2'(s('type.list.list'(X126),sK91(X127,X128,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),sK92(X127,X128,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126))))) )),
  inference(superposition,[],[f697,f462])).
fof(f30735,plain,(
  ( ! [X123,X121,X124,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X124)))))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK91(X123,X124,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X122)),s('type.list.list'(X122),sK92(X123,X124,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X122))))) )),
  inference(forward_demodulation,[],[f30625,f17113])).
fof(f30625,plain,(
  ( ! [X123,X121,X124,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num','const.num.SUC_1'(s('type.num.num',X121))))),s('type.num.num',X124)))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK91(X123,X124,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X122)),s('type.list.list'(X122),sK92(X123,X124,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121)))),X122))))) )),
  inference(superposition,[],[f697,f603])).
fof(f30734,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X119)))))))) | s('type.list.list'(X117),X118) = s('type.list.list'(X117),'const.list.APPEND_2'(s('type.list.list'(X117),sK91(X118,X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X117)),s('type.list.list'(X117),sK92(X118,X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X117))))) )),
  inference(forward_demodulation,[],[f30624,f17112])).
fof(f30624,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X116))))),s('type.num.num',X119)))))) | s('type.list.list'(X117),X118) = s('type.list.list'(X117),'const.list.APPEND_2'(s('type.list.list'(X117),sK91(X118,X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X117)),s('type.list.list'(X117),sK92(X118,X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X117))))) )),
  inference(superposition,[],[f697,f463])).
fof(f30732,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X112)))))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.APPEND_2'(s('type.list.list'(X110),sK91(X111,X112,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),sK92(X111,X112,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X110))))) )),
  inference(forward_demodulation,[],[f30622,f17111])).
fof(f30622,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X109))))),s('type.num.num',X112)))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.APPEND_2'(s('type.list.list'(X110),sK91(X111,X112,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),sK92(X111,X112,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))),X110))))) )),
  inference(superposition,[],[f697,f465])).
fof(f30621,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105))),s('type.num.num',X108)))))) | s('type.list.list'(X106),X107) = s('type.list.list'(X106),'const.list.APPEND_2'(s('type.list.list'(X106),sK91(X107,X108,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106)),s('type.list.list'(X106),sK92(X107,X108,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106))))) )),
  inference(superposition,[],[f697,f457])).
fof(f30617,plain,(
  ( ! [X92,X90,X93,X91,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X89),s('type.num.num',X90))))),s('type.num.num',X93)))))) | s('type.list.list'(X91),X92) = s('type.list.list'(X91),'const.list.APPEND_2'(s('type.list.list'(X91),sK91(X92,X93,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X91)),s('type.list.list'(X91),sK92(X92,X93,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X89))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X91))))) )),
  inference(superposition,[],[f697,f605])).
fof(f30616,plain,(
  ( ! [X88,X87,X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X84),s('type.num.num',X85))))),s('type.num.num',X88)))))) | s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.APPEND_2'(s('type.list.list'(X86),sK91(X87,X88,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X86)),s('type.list.list'(X86),sK92(X87,X88,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X86))))) )),
  inference(superposition,[],[f697,f607])).
fof(f30612,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X67),s('type.num.num',X68))),s('type.num.num',X71)))))) | s('type.list.list'(X69),X70) = s('type.list.list'(X69),'const.list.APPEND_2'(s('type.list.list'(X69),sK91(X70,X71,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X68)))),X69)),s('type.list.list'(X69),sK92(X70,X71,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X68)))),X69))))) )),
  inference(superposition,[],[f697,f594])).
fof(f30611,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X62),s('type.num.num',X63))))),s('type.num.num',X66)))))) | s('type.list.list'(X64),X65) = s('type.list.list'(X64),'const.list.APPEND_2'(s('type.list.list'(X64),sK91(X65,X66,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X64)),s('type.list.list'(X64),sK92(X65,X66,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X64))))) )),
  inference(superposition,[],[f697,f606])).
fof(f30719,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X43)))))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.APPEND_2'(s('type.list.list'(X41),sK91(X42,X43,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X41)),s('type.list.list'(X41),sK92(X42,X43,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X41))))) )),
  inference(forward_demodulation,[],[f30605,f17113])).
fof(f30605,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40))))),s('type.num.num',X43)))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.APPEND_2'(s('type.list.list'(X41),sK91(X42,X43,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X41)),s('type.list.list'(X41),sK92(X42,X43,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num',X40)),X41))))) )),
  inference(superposition,[],[f697,f707])).
fof(f30601,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X20))),s('type.num.num',X24)))))) | s('type.list.list'(X22),X23) = s('type.list.list'(X22),'const.list.APPEND_2'(s('type.list.list'(X22),sK91(X23,X24,'const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)),X22)),s('type.list.list'(X22),sK92(X23,X24,'const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)),X22))))) )),
  inference(superposition,[],[f697,f592])).
fof(f30712,plain,(
  ( ! [X47,X45,X48,X46,X44] : (s('type.list.list'(X44),X46) = s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK91('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X44),X45),s('type.list.list'(X44),X46)),X48,X47,X44)),s('type.list.list'(X44),sK92('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X44),X45),s('type.list.list'(X44),X46)),X48,X47,X44)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X48))))))) )),
  inference(forward_demodulation,[],[f30591,f531])).
fof(f30591,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | s('type.list.list'(X44),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X44),X45),s('type.list.list'(X44),X46))) = s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK91('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X44),X45),s('type.list.list'(X44),X46)),X48,X47,X44)),s('type.list.list'(X44),sK92('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X44),X45),s('type.list.list'(X44),X46)),X48,X47,X44))))) )),
  inference(superposition,[],[f697,f531])).
fof(f30711,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s('type.list.list'(X39),X40) = s('type.list.list'(X39),'const.list.APPEND_2'(s('type.list.list'(X39),sK91('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X39),X40),s('type.list.list'(X39),X41)),X43,X42,X39)),s('type.list.list'(X39),sK92('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X39),X40),s('type.list.list'(X39),X41)),X43,X42,X39)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X43))))))) )),
  inference(forward_demodulation,[],[f30590,f530])).
fof(f30590,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X43)))))) | s('type.list.list'(X39),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X39),X40),s('type.list.list'(X39),X41))) = s('type.list.list'(X39),'const.list.APPEND_2'(s('type.list.list'(X39),sK91('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X39),X40),s('type.list.list'(X39),X41)),X43,X42,X39)),s('type.list.list'(X39),sK92('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X39),X40),s('type.list.list'(X39),X41)),X43,X42,X39))))) )),
  inference(superposition,[],[f697,f530])).
fof(f30589,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X38)))))) | s('type.list.list'(X34),'const.list.CONS_2'(s(X34,sK51(X35,X36,X34)),s('type.list.list'(X34),sK52(X35,X36,X34)))) = s('type.list.list'(X34),'const.list.APPEND_2'(s('type.list.list'(X34),sK91('const.list.CONS_2'(s(X34,sK51(X35,X36,X34)),s('type.list.list'(X34),sK52(X35,X36,X34))),X38,X37,X34)),s('type.list.list'(X34),sK92('const.list.CONS_2'(s(X34,sK51(X35,X36,X34)),s('type.list.list'(X34),sK52(X35,X36,X34))),X38,X37,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X36))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35)))))) )),
  inference(superposition,[],[f697,f544])).
fof(f30588,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X33)))))) | s('type.list.list'(X29),'const.list.CONS_2'(s(X29,sK49(X30,X31,X29)),s('type.list.list'(X29),sK50(X30,X31,X29)))) = s('type.list.list'(X29),'const.list.APPEND_2'(s('type.list.list'(X29),sK91('const.list.CONS_2'(s(X29,sK49(X30,X31,X29)),s('type.list.list'(X29),sK50(X30,X31,X29))),X33,X32,X29)),s('type.list.list'(X29),sK92('const.list.CONS_2'(s(X29,sK49(X30,X31,X29)),s('type.list.list'(X29),sK50(X30,X31,X29))),X33,X32,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30)))))) )),
  inference(superposition,[],[f697,f541])).
fof(f30587,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X26))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28)))))) | s('type.list.list'(X24),'const.list.CONS_2'(s(X24,sK45(X25,X26,X24)),s('type.list.list'(X24),sK46(X25,X26,X24)))) = s('type.list.list'(X24),'const.list.APPEND_2'(s('type.list.list'(X24),sK91('const.list.CONS_2'(s(X24,sK45(X25,X26,X24)),s('type.list.list'(X24),sK46(X25,X26,X24))),X28,X27,X24)),s('type.list.list'(X24),sK92('const.list.CONS_2'(s(X24,sK45(X25,X26,X24)),s('type.list.list'(X24),sK46(X25,X26,X24))),X28,X27,X24)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X26)))) )),
  inference(superposition,[],[f697,f535])).
fof(f30707,plain,(
  ( ! [X17,X16] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X17,X16,sK0)),s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X17,X16,sK0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17))))))) ) | $spl4),
  inference(forward_demodulation,[],[f30583,f644])).
fof(f30583,plain,(
  ( ! [X17,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X17,X16,sK0)),s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X17,X16,sK0))))) ) | $spl4),
  inference(superposition,[],[f697,f644])).
fof(f30582,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)))))) | s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),sK89(X11,X12,X13,X10)),s('type.list.list'(X10),sK90(X11,X12,X13,X10)))) = s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),sK91('const.list.APPEND_2'(s('type.list.list'(X10),sK89(X11,X12,X13,X10)),s('type.list.list'(X10),sK90(X11,X12,X13,X10))),X15,X14,X10)),s('type.list.list'(X10),sK92('const.list.APPEND_2'(s('type.list.list'(X10),sK89(X11,X12,X13,X10)),s('type.list.list'(X10),sK90(X11,X12,X13,X10))),X15,X14,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))) )),
  inference(superposition,[],[f697,f583])).
fof(f30706,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK91('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4)),s('type.list.list'(X4),sK92('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) )),
  inference(forward_demodulation,[],[f30705,f580])).
fof(f30705,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9)))))) | s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK91('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4)),s('type.list.list'(X4),sK92('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4))))) )),
  inference(forward_demodulation,[],[f30581,f27732])).
fof(f30581,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9)))))) | s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7))) = s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK91('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4)),s('type.list.list'(X4),sK92('const.list.APPEND_2'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6))),s('type.list.list'(X4),X7)),X9,X8,X4))))) )),
  inference(superposition,[],[f697,f580])).
fof(f30704,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK91('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0)),s('type.list.list'(X0),sK92('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) )),
  inference(forward_demodulation,[],[f30580,f495])).
fof(f30580,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK91('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0)),s('type.list.list'(X0),sK92('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0))))) )),
  inference(superposition,[],[f697,f495])).
fof(f29969,plain,(
  ( ! [X146,X151,X149,X147,X150,X148] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X147),s('type.num.num','const.num.SUC_1'(s('type.num.num',X146))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X150)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X146),s('type.num.num','const.num.SUC_1'(s('type.num.num',X147)))))))) | s('type.list.list'(X148),X150) != s('type.list.list'(X148),'const.list.CONS_2'(s(X148,X151),s('type.list.list'(X148),X149)))) )),
  inference(forward_demodulation,[],[f29888,f6799])).
fof(f29888,plain,(
  ( ! [X146,X151,X149,X147,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X146),s('type.num.num','const.num.SUC_1'(s('type.num.num',X147)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X146),s('type.num.num',X147))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X150)))))) | s('type.list.list'(X148),X150) != s('type.list.list'(X148),'const.list.CONS_2'(s(X148,X151),s('type.list.list'(X148),X149)))) )),
  inference(superposition,[],[f4784,f603])).
fof(f29865,plain,(
  ( ! [X30,X28,X26,X31,X29,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X26)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X30)))))) | s('type.list.list'(X28),X30) != s('type.list.list'(X28),'const.list.CONS_2'(s(X28,X31),s('type.list.list'(X28),X29)))) )),
  inference(superposition,[],[f4784,f592])).
fof(f29853,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))),s('type.num.num',X46)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X47)))))) | s('type.list.list'(X43),X47) != s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X48),s('type.list.list'(X43),'const.list.CONS_2'(s(X43,sK51(X44,X45,X43)),s('type.list.list'(X43),sK52(X44,X45,X43)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(superposition,[],[f4784,f544])).
fof(f29852,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))),s('type.num.num',X40)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X41)))))) | s('type.list.list'(X37),X41) != s('type.list.list'(X37),'const.list.CONS_2'(s(X37,X42),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,X39,X37)),s('type.list.list'(X37),sK50(X38,X39,X37)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(superposition,[],[f4784,f541])).
fof(f29851,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))),s('type.num.num',X34)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X35)))))) | s('type.list.list'(X31),X35) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X36),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK45(X32,X33,X31)),s('type.list.list'(X31),sK46(X32,X33,X31)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(superposition,[],[f4784,f535])).
fof(f29846,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))),s('type.num.num',X16)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17)))))) | s('type.list.list'(X12),X17) != s('type.list.list'(X12),'const.list.CONS_2'(s(X12,X18),s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)),s('type.list.list'(X12),sK90(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f4784,f583])).
fof(f29915,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))),s('type.num.num',X9)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10))))))) )),
  inference(forward_demodulation,[],[f29914,f580])).
fof(f29914,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))),s('type.num.num',X9)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10)))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f29845,f27732])).
fof(f29845,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))),s('type.num.num',X9)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10)))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8)))))) )),
  inference(superposition,[],[f4784,f580])).
fof(f28284,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))),s('type.num.num',X3)))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f669])).
fof(f28283,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (s('type.list.list'(X10),X13) != s('type.list.list'(X10),X14) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X14))),s('type.num.num',X15)))) | s('type.num.num',X15) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK89(X11,X12,X13,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))) )),
  inference(superposition,[],[f669,f583])).
fof(f28423,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.num.num',X9) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6))))) | s('type.list.list'(X4),X8) != s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X8))),s('type.num.num',X9))))) )),
  inference(forward_demodulation,[],[f28282,f27732])).
fof(f28282,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.list.list'(X4),X8) != s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X8))),s('type.num.num',X9)))) | s('type.num.num',X9) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.CONS_2'(s(X4,X5),s('type.list.list'(X4),X6)))))) )),
  inference(superposition,[],[f669,f580])).
fof(f28419,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s('type.num.num',X48) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK52(X44,X45,X43)))))) | s('type.list.list'(X43),X46) != s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X45),s('type.list.list'(X43),X47))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X46))),s('type.num.num',X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(forward_demodulation,[],[f28266,f27732])).
fof(f28266,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s('type.list.list'(X43),X46) != s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X45),s('type.list.list'(X43),X47))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X46))),s('type.num.num',X48)))) | s('type.num.num',X48) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),'const.list.CONS_2'(s(X43,sK51(X44,X45,X43)),s('type.list.list'(X43),sK52(X44,X45,X43)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(superposition,[],[f669,f544])).
fof(f28418,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s('type.num.num',X42) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK50(X38,X39,X37)))))) | s('type.list.list'(X37),X40) != s('type.list.list'(X37),'const.list.APPEND_2'(s('type.list.list'(X37),X39),s('type.list.list'(X37),X41))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X40))),s('type.num.num',X42)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(forward_demodulation,[],[f28265,f27732])).
fof(f28265,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s('type.list.list'(X37),X40) != s('type.list.list'(X37),'const.list.APPEND_2'(s('type.list.list'(X37),X39),s('type.list.list'(X37),X41))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X40))),s('type.num.num',X42)))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,X39,X37)),s('type.list.list'(X37),sK50(X38,X39,X37)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(superposition,[],[f669,f541])).
fof(f28417,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s('type.num.num',X36) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK46(X32,X33,X31)))))) | s('type.list.list'(X31),X34) != s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X35))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X34))),s('type.num.num',X36)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(forward_demodulation,[],[f28264,f27732])).
fof(f28264,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s('type.list.list'(X31),X34) != s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X33),s('type.list.list'(X31),X35))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X34))),s('type.num.num',X36)))) | s('type.num.num',X36) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK45(X32,X33,X31)),s('type.list.list'(X31),sK46(X32,X33,X31)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(superposition,[],[f669,f535])).
fof(f28259,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))),s('type.num.num',X18)))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)),s('type.list.list'(X12),sK90(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f669,f583])).
fof(f28405,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X11) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))),s('type.list.list'(X5),X10))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num',X11))))) )),
  inference(forward_demodulation,[],[f28404,f27732])).
fof(f28404,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))),s('type.list.list'(X5),X10))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num',X11))))) )),
  inference(forward_demodulation,[],[f28403,f580])).
fof(f28403,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))),s('type.list.list'(X5),X10))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f28258,f580])).
fof(f28258,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X9) != s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))),s('type.list.list'(X5),X10))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X9))),s('type.num.num',X11)))) | s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8)))))) )),
  inference(superposition,[],[f669,f580])).
fof(f28399,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK52(X44,X45,X43)))))),s('type.num.num',X48)))) | s('type.list.list'(X43),X45) != s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X46),s('type.list.list'(X43),X47))) | s('type.num.num',X48) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X46))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(forward_demodulation,[],[f28254,f27732])).
fof(f28254,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s('type.list.list'(X43),X45) != s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X46),s('type.list.list'(X43),X47))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),'const.list.CONS_2'(s(X43,sK51(X44,X45,X43)),s('type.list.list'(X43),sK52(X44,X45,X43)))))),s('type.num.num',X48)))) | s('type.num.num',X48) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X46))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44)))))) )),
  inference(superposition,[],[f669,f544])).
fof(f28398,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK50(X38,X39,X37)))))),s('type.num.num',X42)))) | s('type.list.list'(X37),X39) != s('type.list.list'(X37),'const.list.APPEND_2'(s('type.list.list'(X37),X40),s('type.list.list'(X37),X41))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(forward_demodulation,[],[f28253,f27732])).
fof(f28253,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s('type.list.list'(X37),X39) != s('type.list.list'(X37),'const.list.APPEND_2'(s('type.list.list'(X37),X40),s('type.list.list'(X37),X41))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK49(X38,X39,X37)),s('type.list.list'(X37),sK50(X38,X39,X37)))))),s('type.num.num',X42)))) | s('type.num.num',X42) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X39))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) )),
  inference(superposition,[],[f669,f541])).
fof(f28397,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK46(X32,X33,X31)))))),s('type.num.num',X36)))) | s('type.list.list'(X31),X33) != s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X34),s('type.list.list'(X31),X35))) | s('type.num.num',X36) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X34))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(forward_demodulation,[],[f28252,f27732])).
fof(f28252,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s('type.list.list'(X31),X33) != s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),X34),s('type.list.list'(X31),X35))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK45(X32,X33,X31)),s('type.list.list'(X31),sK46(X32,X33,X31)))))),s('type.num.num',X36)))) | s('type.num.num',X36) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X34))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33)))) )),
  inference(superposition,[],[f669,f535])).
fof(f28247,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X16),s('type.list.list'(X12),X17))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK89(X13,X14,X15,X12)),s('type.list.list'(X12),sK90(X13,X14,X15,X12)))))),s('type.num.num',X18)))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f669,f583])).
fof(f28286,plain,(
  ( ! [X2,X0,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(forward_demodulation,[],[f28285,f531])).
fof(f28285,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(forward_demodulation,[],[f28244,f531])).
fof(f28244,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))) )),
  inference(unit_resulting_resolution,[],[f531,f531,f669])).
fof(f28172,plain,(
  ( ! [X165,X163,X161,X164,X162] : (~p(s(bool,happ(s(fun('type.list.list'(X161),bool),X165),s('type.list.list'(X161),X164)))) | s('type.list.list'(X161),'const.list.APPEND_2'(s('type.list.list'(X161),sK89(X162,X163,X164,X161)),s('type.list.list'(X161),sK90(X162,X163,X164,X161)))) = s('type.list.list'(X161),sK86('const.list.APPEND_2'(s('type.list.list'(X161),sK89(X162,X163,X164,X161)),s('type.list.list'(X161),sK90(X162,X163,X164,X161))),X165,'type.list.list'(X161))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X161),X164))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X163),s('type.num.num',X162)))) )),
  inference(superposition,[],[f574,f583])).
fof(f28171,plain,(
  ( ! [X158,X156,X159,X157,X155,X160] : (~p(s(bool,happ(s(fun('type.list.list'(X155),bool),X159),s('type.list.list'(X155),X158)))) | p(s(bool,happ(s(fun('type.list.list'(X155),bool),X159),s('type.list.list'(X155),X160)))) | s('type.list.list'(X155),X160) != s('type.list.list'(X155),'const.list.APPEND_2'(s('type.list.list'(X155),sK89(X156,X157,X158,X155)),s('type.list.list'(X155),sK90(X156,X157,X158,X155)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),X158))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X157),s('type.num.num',X156)))) )),
  inference(superposition,[],[f573,f583])).
fof(f28155,plain,(
  ( ! [X80,X83,X81,X79,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X83),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X82)))))) | s('type.list.list'(X79),'const.list.APPEND_2'(s('type.list.list'(X79),sK89(X80,X81,X82,X79)),s('type.list.list'(X79),sK90(X80,X81,X82,X79)))) = s('type.list.list'(X79),'const.list.CONS_2'(s(X79,sK54('const.list.APPEND_2'(s('type.list.list'(X79),sK89(X80,X81,X82,X79)),s('type.list.list'(X79),sK90(X80,X81,X82,X79))),X83,X79)),s('type.list.list'(X79),sK53('const.list.APPEND_2'(s('type.list.list'(X79),sK89(X80,X81,X82,X79)),s('type.list.list'(X79),sK90(X80,X81,X82,X79))),X83,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num',X80)))) )),
  inference(superposition,[],[f6936,f583])).
fof(f28154,plain,(
  ( ! [X78,X76,X74,X77,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X78),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X77)))))) | s('type.list.list'(X74),'const.list.APPEND_2'(s('type.list.list'(X74),sK89(X75,X76,X77,X74)),s('type.list.list'(X74),sK90(X75,X76,X77,X74)))) = s('type.list.list'(X74),'const.list.CONS_2'(s(X74,sK56('const.list.APPEND_2'(s('type.list.list'(X74),sK89(X75,X76,X77,X74)),s('type.list.list'(X74),sK90(X75,X76,X77,X74))),X78,X74)),s('type.list.list'(X74),sK55('const.list.APPEND_2'(s('type.list.list'(X74),sK89(X75,X76,X77,X74)),s('type.list.list'(X74),sK90(X75,X76,X77,X74))),X78,X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X77))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num',X75)))) )),
  inference(superposition,[],[f4785,f583])).
fof(f28153,plain,(
  ( ! [X70,X68,X72,X71,X69,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X71))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK92('const.list.APPEND_2'(s('type.list.list'(X68),sK89(X69,X70,X71,X68)),s('type.list.list'(X68),sK90(X69,X70,X71,X68))),X73,X72,X68)))),s('type.num.num',X73)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X71))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X69)))) )),
  inference(superposition,[],[f704,f583])).
fof(f28152,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X65))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num',X67)))))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK91('const.list.APPEND_2'(s('type.list.list'(X62),sK89(X63,X64,X65,X62)),s('type.list.list'(X62),sK90(X63,X64,X65,X62))),X67,X66,X62)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X64),s('type.num.num',X63)))) )),
  inference(superposition,[],[f696,f583])).
fof(f28151,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X60))),s('type.num.num',X61)))) | s('type.list.list'(X57),'const.list.APPEND_2'(s('type.list.list'(X57),sK89(X58,X59,X60,X57)),s('type.list.list'(X57),sK90(X58,X59,X60,X57)))) = s('type.list.list'(X57),'const.list.APPEND_2'(s('type.list.list'(X57),sK47('const.list.APPEND_2'(s('type.list.list'(X57),sK89(X58,X59,X60,X57)),s('type.list.list'(X57),sK90(X58,X59,X60,X57))),X61,X57)),s('type.list.list'(X57),sK48('const.list.APPEND_2'(s('type.list.list'(X57),sK89(X58,X59,X60,X57)),s('type.list.list'(X57),sK90(X58,X59,X60,X57))),X61,X57)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num',X58)))) )),
  inference(superposition,[],[f668,f583])).
fof(f28150,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X55))),s('type.num.num',X56)))) | s('type.num.num',X56) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK47('const.list.APPEND_2'(s('type.list.list'(X52),sK89(X53,X54,X55,X52)),s('type.list.list'(X52),sK90(X53,X54,X55,X52))),X56,X52)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X55))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X53)))) )),
  inference(superposition,[],[f667,f583])).
fof(f28149,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num',X51))) | s('type.num.num',X51) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),sK90(X51,X50,'const.list.APPEND_2'(s('type.list.list'(X46),sK89(X47,X48,X49,X46)),s('type.list.list'(X46),sK90(X47,X48,X49,X46))),X46)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X47)))) )),
  inference(superposition,[],[f582,f583])).
fof(f28148,plain,(
  ( ! [X45,X43,X41,X44,X42,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num',X45))) | s('type.num.num',X44) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK89(X45,X44,'const.list.APPEND_2'(s('type.list.list'(X40),sK89(X41,X42,X43,X40)),s('type.list.list'(X40),sK90(X41,X42,X43,X40))),X40)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f581,f583])).
fof(f28145,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X26))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK50(X27,'const.list.APPEND_2'(s('type.list.list'(X23),sK89(X24,X25,X26,X23)),s('type.list.list'(X23),sK90(X24,X25,X26,X23))),X23)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X24)))) )),
  inference(superposition,[],[f540,f583])).
fof(f28144,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (s('type.num.num',X20) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) | s('type.list.list'(X16),X21) != s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X22),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK89(X17,X18,X19,X16)),s('type.list.list'(X16),sK90(X17,X18,X19,X16)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X21))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))) )),
  inference(superposition,[],[f536,f583])).
fof(f28143,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) | s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK46(X15,'const.list.APPEND_2'(s('type.list.list'(X11),sK89(X12,X13,X14,X11)),s('type.list.list'(X11),sK90(X12,X13,X14,X11))),X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) )),
  inference(superposition,[],[f534,f583])).
fof(f27730,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(equality_resolution,[],[f536])).
fof(f27725,plain,(
  ( ! [X39,X37,X41,X38,X36,X40] : (s('type.num.num',X39) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))) | s('type.list.list'(X36),X40) != s('type.list.list'(X36),'const.list.CONS_2'(s(X36,X41),s('type.list.list'(X36),'const.list.CONS_2'(s(X36,sK51(X37,X38,X36)),s('type.list.list'(X36),sK52(X37,X38,X36)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X40))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X38))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))))) )),
  inference(superposition,[],[f536,f544])).
fof(f27724,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s('type.num.num',X33) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X32))) | s('type.list.list'(X30),X34) != s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X35),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK49(X31,X32,X30)),s('type.list.list'(X30),sK50(X31,X32,X30)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X34))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f536,f541])).
fof(f27723,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s('type.num.num',X27) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X26))) | s('type.list.list'(X24),X28) != s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X29),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,sK45(X25,X26,X24)),s('type.list.list'(X24),sK46(X25,X26,X24)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X28))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X26)))) )),
  inference(superposition,[],[f536,f535])).
fof(f27902,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.num.num',X9) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10)))) )),
  inference(forward_demodulation,[],[f27901,f580])).
fof(f27901,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X9) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10)))) )),
  inference(forward_demodulation,[],[f27718,f27732])).
fof(f27718,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s('type.num.num',X9) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),X7),s('type.list.list'(X5),X8))))))) | s('type.list.list'(X5),X10) != s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X11),s('type.list.list'(X5),'const.list.APPEND_2'(s('type.list.list'(X5),'const.list.CONS_2'(s(X5,X6),s('type.list.list'(X5),X7))),s('type.list.list'(X5),X8))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X10)))) )),
  inference(superposition,[],[f536,f580])).
fof(f27882,plain,(
  ( ! [X134,X132,X136,X135,X133,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X136))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.num.SUC_1'(s('type.num.num',X132))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num','const.num.SUC_1'(s('type.num.num',X133))))) | s('type.list.list'(X134),X136) != s('type.list.list'(X134),'const.list.CONS_2'(s(X134,X137),s('type.list.list'(X134),X135)))) )),
  inference(forward_demodulation,[],[f27699,f6799])).
fof(f27699,plain,(
  ( ! [X134,X132,X136,X135,X133,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num','const.num.SUC_1'(s('type.num.num',X133))))) | s('type.list.list'(X134),X136) != s('type.list.list'(X134),'const.list.CONS_2'(s(X134,X137),s('type.list.list'(X134),X135))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X136))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))))))) )),
  inference(superposition,[],[f536,f603])).
fof(f27679,plain,(
  ( ! [X24,X23,X21,X25,X22,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X20))) | s('type.list.list'(X22),X24) != s('type.list.list'(X22),'const.list.CONS_2'(s(X22,X25),s('type.list.list'(X22),X23))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)))))) )),
  inference(superposition,[],[f536,f592])).
fof(f27838,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f27837,f27732])).
fof(f27837,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f27836,f27732])).
fof(f27836,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f27835,f27732])).
fof(f27835,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(forward_demodulation,[],[f27626,f531])).
fof(f27626,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f531,f644,f536])).
fof(f27750,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63))))),s('type.num.num',X64)))) | s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63))))) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK54('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60)),s('type.list.list'(X60),sK53('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60))))) )),
  inference(forward_demodulation,[],[f27743,f17572])).
fof(f27743,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63)))))))))) | s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63))))) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK54('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60)),s('type.list.list'(X60),sK53('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60))))) )),
  inference(backward_demodulation,[],[f27732,f26918])).
fof(f27749,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58))))),s('type.num.num',X59)))) | s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58))))) = s('type.list.list'(X55),'const.list.CONS_2'(s(X55,sK56('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55)),s('type.list.list'(X55),sK55('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55))))) )),
  inference(forward_demodulation,[],[f27742,f17572])).
fof(f27742,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X59),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58)))))))))) | s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58))))) = s('type.list.list'(X55),'const.list.CONS_2'(s(X55,sK56('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55)),s('type.list.list'(X55),sK55('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55))))) )),
  inference(backward_demodulation,[],[f27732,f26917])).
fof(f27741,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),X40),s('type.list.list'(X38),X41))))))),s('type.num.num',X42)))) | s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),X40),s('type.list.list'(X38),X41))))) = s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK47('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38)),s('type.list.list'(X38),sK48('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38))))) )),
  inference(backward_demodulation,[],[f27732,f26916])).
fof(f27740,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.APPEND_2'(s('type.list.list'(X49),X51),s('type.list.list'(X49),X52))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X54)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK92('const.list.APPEND_2'(s('type.list.list'(X49),'const.list.CONS_2'(s(X49,X50),s('type.list.list'(X49),X51))),s('type.list.list'(X49),X52)),X54,X53,X49)))),s('type.num.num',X54))))) )),
  inference(backward_demodulation,[],[f27732,f26894])).
fof(f27739,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X45),s('type.list.list'(X43),X46))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | s('type.num.num',X47) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK91('const.list.APPEND_2'(s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X44),s('type.list.list'(X43),X45))),s('type.list.list'(X43),X46)),X48,X47,X43))))) )),
  inference(backward_demodulation,[],[f27732,f26893])).
fof(f27738,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),X35),s('type.list.list'(X33),X36))))))),s('type.num.num',X37)))) | s('type.num.num',X37) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK47('const.list.APPEND_2'(s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X34),s('type.list.list'(X33),X35))),s('type.list.list'(X33),X36)),X37,X33))))) )),
  inference(backward_demodulation,[],[f27732,f26891])).
fof(f27737,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X32))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))))))) | s('type.num.num',X32) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK90(X32,X31,'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),X29))),s('type.list.list'(X27),X30)),X27))))) )),
  inference(backward_demodulation,[],[f27732,f26890])).
fof(f27736,plain,(
  ( ! [X26,X24,X23,X21,X25,X22] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),X23),s('type.list.list'(X21),X24))))))) | s('type.num.num',X25) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK89(X26,X25,'const.list.APPEND_2'(s('type.list.list'(X21),'const.list.CONS_2'(s(X21,X22),s('type.list.list'(X21),X23))),s('type.list.list'(X21),X24)),X21))))) )),
  inference(backward_demodulation,[],[f27732,f26889])).
fof(f27735,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK50(X20,'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X16))))) )),
  inference(backward_demodulation,[],[f27732,f26888])).
fof(f27734,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK46(X15,'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))) )),
  inference(backward_demodulation,[],[f27732,f26887])).
fof(f27033,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK88('const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')),X18,X17))))) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19))))) )),
  inference(subsumption_resolution,[],[f27013,f427])).
fof(f27013,plain,(
  ( ! [X19,X17,X18,X16] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK88('const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')),X18,X17))))) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19))))) )),
  inference(superposition,[],[f578,f7139])).
fof(f27032,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun(X13,bool),X14),s(X13,sK87('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.ZERO_0')),X14,X13))))) | ~p(s(bool,happ(s(fun(X13,bool),X14),s(X13,X15))))) )),
  inference(subsumption_resolution,[],[f27012,f427])).
fof(f27012,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X13,bool),X14),s(X13,sK87('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.ZERO_0')),X14,X13))))) | ~p(s(bool,happ(s(fun(X13,bool),X14),s(X13,X15))))) )),
  inference(superposition,[],[f576,f7139])).
fof(f27029,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK47(X3,'const.arithmetic.ZERO_0',X2))))) )),
  inference(subsumption_resolution,[],[f27004,f427])).
fof(f27004,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK47(X3,'const.arithmetic.ZERO_0',X2))))) )),
  inference(superposition,[],[f667,f7139])).
fof(f27028,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47(X1,'const.arithmetic.ZERO_0',X0)),s('type.list.list'(X0),sK48(X1,'const.arithmetic.ZERO_0',X0))))) )),
  inference(subsumption_resolution,[],[f27003,f427])).
fof(f27003,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47(X1,'const.arithmetic.ZERO_0',X0)),s('type.list.list'(X0),sK48(X1,'const.arithmetic.ZERO_0',X0))))) )),
  inference(superposition,[],[f668,f7139])).
fof(f26950,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK88('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6))))) )),
  inference(subsumption_resolution,[],[f26932,f427])).
fof(f26932,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK88('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6))))) )),
  inference(superposition,[],[f578,f5371])).
fof(f26949,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(subsumption_resolution,[],[f26931,f427])).
fof(f26931,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK87('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(superposition,[],[f576,f5371])).
fof(f26925,plain,(
  ( ! [X127,X125,X128,X126,X129] : (s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),'const.list.APPEND_2'(s('type.list.list'(X125),X127),s('type.list.list'(X125),X128))))) = s('type.list.list'(X125),sK86('const.list.APPEND_2'(s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),X127))),s('type.list.list'(X125),X128)),X129,'type.list.list'(X125))) | ~p(s(bool,happ(s(fun('type.list.list'(X125),bool),X129),s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),'const.list.APPEND_2'(s('type.list.list'(X125),X127),s('type.list.list'(X125),X128))))))))) )),
  inference(forward_demodulation,[],[f26910,f580])).
fof(f26910,plain,(
  ( ! [X127,X125,X128,X126,X129] : (~p(s(bool,happ(s(fun('type.list.list'(X125),bool),X129),s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),'const.list.APPEND_2'(s('type.list.list'(X125),X127),s('type.list.list'(X125),X128)))))))) | s('type.list.list'(X125),'const.list.APPEND_2'(s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),X127))),s('type.list.list'(X125),X128))) = s('type.list.list'(X125),sK86('const.list.APPEND_2'(s('type.list.list'(X125),'const.list.CONS_2'(s(X125,X126),s('type.list.list'(X125),X127))),s('type.list.list'(X125),X128)),X129,'type.list.list'(X125)))) )),
  inference(superposition,[],[f574,f580])).
fof(f26918,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63))))) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK54('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60)),s('type.list.list'(X60),sK53('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63))))))))))) )),
  inference(forward_demodulation,[],[f26896,f580])).
fof(f26896,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),X62),s('type.list.list'(X60),X63)))))))))) | s('type.list.list'(X60),'const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63))) = s('type.list.list'(X60),'const.list.CONS_2'(s(X60,sK54('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60)),s('type.list.list'(X60),sK53('const.list.APPEND_2'(s('type.list.list'(X60),'const.list.CONS_2'(s(X60,X61),s('type.list.list'(X60),X62))),s('type.list.list'(X60),X63)),X64,X60))))) )),
  inference(superposition,[],[f6936,f580])).
fof(f26917,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58))))) = s('type.list.list'(X55),'const.list.CONS_2'(s(X55,sK56('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55)),s('type.list.list'(X55),sK55('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58))))))))))) )),
  inference(forward_demodulation,[],[f26895,f580])).
fof(f26895,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X59),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),X57),s('type.list.list'(X55),X58)))))))))) | s('type.list.list'(X55),'const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58))) = s('type.list.list'(X55),'const.list.CONS_2'(s(X55,sK56('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55)),s('type.list.list'(X55),sK55('const.list.APPEND_2'(s('type.list.list'(X55),'const.list.CONS_2'(s(X55,X56),s('type.list.list'(X55),X57))),s('type.list.list'(X55),X58)),X59,X55))))) )),
  inference(superposition,[],[f4785,f580])).
fof(f26894,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.CONS_2'(s(X49,X50),s('type.list.list'(X49),'const.list.APPEND_2'(s('type.list.list'(X49),X51),s('type.list.list'(X49),X52))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X54)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK92('const.list.APPEND_2'(s('type.list.list'(X49),'const.list.CONS_2'(s(X49,X50),s('type.list.list'(X49),X51))),s('type.list.list'(X49),X52)),X54,X53,X49)))),s('type.num.num',X54))))) )),
  inference(superposition,[],[f704,f580])).
fof(f26893,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X44),s('type.list.list'(X43),'const.list.APPEND_2'(s('type.list.list'(X43),X45),s('type.list.list'(X43),X46))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X47),s('type.num.num',X48)))))) | s('type.num.num',X47) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK91('const.list.APPEND_2'(s('type.list.list'(X43),'const.list.CONS_2'(s(X43,X44),s('type.list.list'(X43),X45))),s('type.list.list'(X43),X46)),X48,X47,X43))))) )),
  inference(superposition,[],[f696,f580])).
fof(f26916,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),X40),s('type.list.list'(X38),X41))))) = s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK47('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38)),s('type.list.list'(X38),sK48('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),X40),s('type.list.list'(X38),X41))))))),s('type.num.num',X42))))) )),
  inference(forward_demodulation,[],[f26892,f580])).
fof(f26892,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),X40),s('type.list.list'(X38),X41))))))),s('type.num.num',X42)))) | s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41))) = s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK47('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38)),s('type.list.list'(X38),sK48('const.list.APPEND_2'(s('type.list.list'(X38),'const.list.CONS_2'(s(X38,X39),s('type.list.list'(X38),X40))),s('type.list.list'(X38),X41)),X42,X38))))) )),
  inference(superposition,[],[f668,f580])).
fof(f26891,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X34),s('type.list.list'(X33),'const.list.APPEND_2'(s('type.list.list'(X33),X35),s('type.list.list'(X33),X36))))))),s('type.num.num',X37)))) | s('type.num.num',X37) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK47('const.list.APPEND_2'(s('type.list.list'(X33),'const.list.CONS_2'(s(X33,X34),s('type.list.list'(X33),X35))),s('type.list.list'(X33),X36)),X37,X33))))) )),
  inference(superposition,[],[f667,f580])).
fof(f26890,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X32))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),'const.list.APPEND_2'(s('type.list.list'(X27),X29),s('type.list.list'(X27),X30))))))) | s('type.num.num',X32) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK90(X32,X31,'const.list.APPEND_2'(s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X28),s('type.list.list'(X27),X29))),s('type.list.list'(X27),X30)),X27))))) )),
  inference(superposition,[],[f582,f580])).
fof(f26889,plain,(
  ( ! [X26,X24,X23,X21,X25,X22] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),'const.list.CONS_2'(s(X21,X22),s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),X23),s('type.list.list'(X21),X24))))))) | s('type.num.num',X25) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK89(X26,X25,'const.list.APPEND_2'(s('type.list.list'(X21),'const.list.CONS_2'(s(X21,X22),s('type.list.list'(X21),X23))),s('type.list.list'(X21),X24)),X21))))) )),
  inference(superposition,[],[f581,f580])).
fof(f26888,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),X18),s('type.list.list'(X16),X19))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK50(X20,'const.list.APPEND_2'(s('type.list.list'(X16),'const.list.CONS_2'(s(X16,X17),s('type.list.list'(X16),X18))),s('type.list.list'(X16),X19)),X16))))) )),
  inference(superposition,[],[f540,f580])).
fof(f26887,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),X13),s('type.list.list'(X11),X14))))))) | s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK46(X15,'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.CONS_2'(s(X11,X12),s('type.list.list'(X11),X13))),s('type.list.list'(X11),X14)),X11))))) )),
  inference(superposition,[],[f534,f580])).
fof(f26873,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X14),s('type.list.list'(X12),X15))) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK51(X13,X14,X12)),s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK52(X13,X14,X12)),s('type.list.list'(X12),X15))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))) )),
  inference(superposition,[],[f580,f544])).
fof(f26872,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),X10),s('type.list.list'(X8),X11))) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK49(X9,X10,X8)),s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK50(X9,X10,X8)),s('type.list.list'(X8),X11))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f580,f541])).
fof(f26871,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),X6),s('type.list.list'(X4),X7))) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK45(X5,X6,X4)),s('type.list.list'(X4),'const.list.APPEND_2'(s('type.list.list'(X4),sK46(X5,X6,X4)),s('type.list.list'(X4),X7))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X6)))) )),
  inference(superposition,[],[f580,f535])).
fof(f26914,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0)))))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f26913,f580])).
fof(f26913,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))),s('type.list.list'(sK0),X0)))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f26912,f580])).
fof(f26912,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))),s('type.list.list'(sK0),X0)))))))) ) | $spl4),
  inference(forward_demodulation,[],[f26867,f580])).
fof(f26867,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X0))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))),s('type.list.list'(sK0),X0)))))) ) | $spl4),
  inference(superposition,[],[f580,f644])).
fof(f26674,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,happ(s(fun('type.list.list'(X84),bool),X87),s('type.list.list'(X84),X86)))) | s('type.list.list'(X84),'const.list.CONS_2'(s(X84,sK51(X85,X86,X84)),s('type.list.list'(X84),sK52(X85,X86,X84)))) = s('type.list.list'(X84),sK86('const.list.CONS_2'(s(X84,sK51(X85,X86,X84)),s('type.list.list'(X84),sK52(X85,X86,X84))),X87,'type.list.list'(X84))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X86))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X85)))))) )),
  inference(superposition,[],[f574,f544])).
fof(f26673,plain,(
  ( ! [X80,X83,X81,X79,X82] : (~p(s(bool,happ(s(fun('type.list.list'(X79),bool),X82),s('type.list.list'(X79),X81)))) | p(s(bool,happ(s(fun('type.list.list'(X79),bool),X82),s('type.list.list'(X79),X83)))) | s('type.list.list'(X79),X83) != s('type.list.list'(X79),'const.list.CONS_2'(s(X79,sK51(X80,X81,X79)),s('type.list.list'(X79),sK52(X80,X81,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X81))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))))) )),
  inference(superposition,[],[f573,f544])).
fof(f26664,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X51)))))) | s('type.list.list'(X49),'const.list.CONS_2'(s(X49,sK51(X50,X51,X49)),s('type.list.list'(X49),sK52(X50,X51,X49)))) = s('type.list.list'(X49),'const.list.CONS_2'(s(X49,sK54('const.list.CONS_2'(s(X49,sK51(X50,X51,X49)),s('type.list.list'(X49),sK52(X50,X51,X49))),X52,X49)),s('type.list.list'(X49),sK53('const.list.CONS_2'(s(X49,sK51(X50,X51,X49)),s('type.list.list'(X49),sK52(X50,X51,X49))),X52,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X51))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))) )),
  inference(superposition,[],[f6936,f544])).
fof(f26663,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X48),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X47)))))) | s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK51(X46,X47,X45)),s('type.list.list'(X45),sK52(X46,X47,X45)))) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK56('const.list.CONS_2'(s(X45,sK51(X46,X47,X45)),s('type.list.list'(X45),sK52(X46,X47,X45))),X48,X45)),s('type.list.list'(X45),sK55('const.list.CONS_2'(s(X45,sK51(X46,X47,X45)),s('type.list.list'(X45),sK52(X46,X47,X45))),X48,X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X47))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X46)))))) )),
  inference(superposition,[],[f4785,f544])).
fof(f26662,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X44)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK92('const.list.CONS_2'(s(X40,sK51(X41,X42,X40)),s('type.list.list'(X40),sK52(X41,X42,X40))),X44,X43,X40)))),s('type.num.num',X44)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X42))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))) )),
  inference(superposition,[],[f704,f544])).
fof(f26661,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X37))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X39)))))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK91('const.list.CONS_2'(s(X35,sK51(X36,X37,X35)),s('type.list.list'(X35),sK52(X36,X37,X35))),X39,X38,X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36)))))) )),
  inference(superposition,[],[f696,f544])).
fof(f26660,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))),s('type.num.num',X34)))) | s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK51(X32,X33,X31)),s('type.list.list'(X31),sK52(X32,X33,X31)))) = s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),sK47('const.list.CONS_2'(s(X31,sK51(X32,X33,X31)),s('type.list.list'(X31),sK52(X32,X33,X31))),X34,X31)),s('type.list.list'(X31),sK48('const.list.CONS_2'(s(X31,sK51(X32,X33,X31)),s('type.list.list'(X31),sK52(X32,X33,X31))),X34,X31)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f668,f544])).
fof(f26659,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29))),s('type.num.num',X30)))) | s('type.num.num',X30) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK47('const.list.CONS_2'(s(X27,sK51(X28,X29,X27)),s('type.list.list'(X27),sK52(X28,X29,X27))),X30,X27)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))))) )),
  inference(superposition,[],[f667,f544])).
fof(f26658,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK90(X26,X25,'const.list.CONS_2'(s(X22,sK51(X23,X24,X22)),s('type.list.list'(X22),sK52(X23,X24,X22))),X22)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f582,f544])).
fof(f26657,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num',X20) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK89(X21,X20,'const.list.CONS_2'(s(X17,sK51(X18,X19,X17)),s('type.list.list'(X17),sK52(X18,X19,X17))),X17)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))) )),
  inference(superposition,[],[f581,f544])).
fof(f26656,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK50(X16,'const.list.CONS_2'(s(X13,sK51(X14,X15,X13)),s('type.list.list'(X13),sK52(X14,X15,X13))),X13)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14)))))) )),
  inference(superposition,[],[f540,f544])).
fof(f26655,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK46(X12,'const.list.CONS_2'(s(X9,sK51(X10,X11,X9)),s('type.list.list'(X9),sK52(X10,X11,X9))),X9)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f534,f544])).
fof(f26652,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),X1) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK52(X0,X1,bool)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) | s(bool,'T_0') = s(bool,sK51(X0,X1,bool))) )),
  inference(superposition,[],[f544,f471])).
fof(f26524,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,happ(s(fun('type.list.list'(X84),bool),X87),s('type.list.list'(X84),X86)))) | s('type.list.list'(X84),'const.list.CONS_2'(s(X84,sK49(X85,X86,X84)),s('type.list.list'(X84),sK50(X85,X86,X84)))) = s('type.list.list'(X84),sK86('const.list.CONS_2'(s(X84,sK49(X85,X86,X84)),s('type.list.list'(X84),sK50(X85,X86,X84))),X87,'type.list.list'(X84))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X86))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X85)))))) )),
  inference(superposition,[],[f574,f541])).
fof(f26523,plain,(
  ( ! [X80,X83,X81,X79,X82] : (~p(s(bool,happ(s(fun('type.list.list'(X79),bool),X82),s('type.list.list'(X79),X81)))) | p(s(bool,happ(s(fun('type.list.list'(X79),bool),X82),s('type.list.list'(X79),X83)))) | s('type.list.list'(X79),X83) != s('type.list.list'(X79),'const.list.CONS_2'(s(X79,sK49(X80,X81,X79)),s('type.list.list'(X79),sK50(X80,X81,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X81))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))))) )),
  inference(superposition,[],[f573,f541])).
fof(f26514,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X51)))))) | s('type.list.list'(X49),'const.list.CONS_2'(s(X49,sK49(X50,X51,X49)),s('type.list.list'(X49),sK50(X50,X51,X49)))) = s('type.list.list'(X49),'const.list.CONS_2'(s(X49,sK54('const.list.CONS_2'(s(X49,sK49(X50,X51,X49)),s('type.list.list'(X49),sK50(X50,X51,X49))),X52,X49)),s('type.list.list'(X49),sK53('const.list.CONS_2'(s(X49,sK49(X50,X51,X49)),s('type.list.list'(X49),sK50(X50,X51,X49))),X52,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X51))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50)))))) )),
  inference(superposition,[],[f6936,f541])).
fof(f26513,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X48),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X47)))))) | s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK49(X46,X47,X45)),s('type.list.list'(X45),sK50(X46,X47,X45)))) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK56('const.list.CONS_2'(s(X45,sK49(X46,X47,X45)),s('type.list.list'(X45),sK50(X46,X47,X45))),X48,X45)),s('type.list.list'(X45),sK55('const.list.CONS_2'(s(X45,sK49(X46,X47,X45)),s('type.list.list'(X45),sK50(X46,X47,X45))),X48,X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X47))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) )),
  inference(superposition,[],[f4785,f541])).
fof(f26512,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X44)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK92('const.list.CONS_2'(s(X40,sK49(X41,X42,X40)),s('type.list.list'(X40),sK50(X41,X42,X40))),X44,X43,X40)))),s('type.num.num',X44)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X42))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))))) )),
  inference(superposition,[],[f704,f541])).
fof(f26511,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X37))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X39)))))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK91('const.list.CONS_2'(s(X35,sK49(X36,X37,X35)),s('type.list.list'(X35),sK50(X36,X37,X35))),X39,X38,X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))))) )),
  inference(superposition,[],[f696,f541])).
fof(f26510,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))),s('type.num.num',X34)))) | s('type.list.list'(X31),'const.list.CONS_2'(s(X31,sK49(X32,X33,X31)),s('type.list.list'(X31),sK50(X32,X33,X31)))) = s('type.list.list'(X31),'const.list.APPEND_2'(s('type.list.list'(X31),sK47('const.list.CONS_2'(s(X31,sK49(X32,X33,X31)),s('type.list.list'(X31),sK50(X32,X33,X31))),X34,X31)),s('type.list.list'(X31),sK48('const.list.CONS_2'(s(X31,sK49(X32,X33,X31)),s('type.list.list'(X31),sK50(X32,X33,X31))),X34,X31)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X33))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f668,f541])).
fof(f26509,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29))),s('type.num.num',X30)))) | s('type.num.num',X30) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK47('const.list.CONS_2'(s(X27,sK49(X28,X29,X27)),s('type.list.list'(X27),sK50(X28,X29,X27))),X30,X27)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))))) )),
  inference(superposition,[],[f667,f541])).
fof(f26508,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK90(X26,X25,'const.list.CONS_2'(s(X22,sK49(X23,X24,X22)),s('type.list.list'(X22),sK50(X23,X24,X22))),X22)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f582,f541])).
fof(f26507,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num',X20) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK89(X21,X20,'const.list.CONS_2'(s(X17,sK49(X18,X19,X17)),s('type.list.list'(X17),sK50(X18,X19,X17))),X17)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))) )),
  inference(superposition,[],[f581,f541])).
fof(f26506,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK50(X16,'const.list.CONS_2'(s(X13,sK49(X14,X15,X13)),s('type.list.list'(X13),sK50(X14,X15,X13))),X13)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))) )),
  inference(superposition,[],[f540,f541])).
fof(f26505,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK46(X12,'const.list.CONS_2'(s(X9,sK49(X10,X11,X9)),s('type.list.list'(X9),sK50(X10,X11,X9))),X9)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f534,f541])).
fof(f26502,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),X1) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK50(X0,X1,bool)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) | s(bool,'T_0') = s(bool,sK49(X0,X1,bool))) )),
  inference(superposition,[],[f541,f471])).
fof(f26279,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK92(X21,X19,'const.num.SUC_1'(s('type.num.num',X18)),X20)))),s('type.num.num',X19))))) )),
  inference(superposition,[],[f704,f707])).
fof(f26275,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK92(X6,X4,X3,X5)))),s('type.num.num',X4))))) )),
  inference(superposition,[],[f704,f592])).
fof(f26382,plain,(
  ( ! [X198,X196,X200,X199,X197] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),sK92(X199,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X196),s('type.num.num',X197)),X200,X198)))),s('type.num.num',X197)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),X199))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X200),s('type.num.num',X197))))))) )),
  inference(forward_demodulation,[],[f26273,f531])).
fof(f26273,plain,(
  ( ! [X198,X196,X200,X199,X197] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),X199))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X200),s('type.num.num',X197)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),sK92(X199,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X196),s('type.num.num',X197)),X200,X198)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X196),s('type.num.num',X197))))))) )),
  inference(superposition,[],[f704,f531])).
fof(f26381,plain,(
  ( ! [X191,X194,X192,X195,X193] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),sK92(X194,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X191),s('type.num.num',X192)),X195,X193)))),s('type.num.num',X191)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),X194))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X195),s('type.num.num',X191))))))) )),
  inference(forward_demodulation,[],[f26272,f530])).
fof(f26272,plain,(
  ( ! [X191,X194,X192,X195,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),X194))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X195),s('type.num.num',X191)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),sK92(X194,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X191),s('type.num.num',X192)),X195,X193)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X191),s('type.num.num',X192))))))) )),
  inference(superposition,[],[f704,f530])).
fof(f26380,plain,(
  ( ! [X189,X187,X190,X188,X186] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK92(X189,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187)))),X190,X188)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X186),s('type.num.num',X187)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X190),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X186),s('type.num.num',X187))))))))))) )),
  inference(forward_demodulation,[],[f26271,f616])).
fof(f26271,plain,(
  ( ! [X189,X187,X190,X188,X186] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X190),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X186),s('type.num.num',X187)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK92(X189,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187)))),X190,X188)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))))))))) )),
  inference(superposition,[],[f704,f616])).
fof(f26379,plain,(
  ( ! [X185,X182,X184,X183,X181] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),sK92(X184,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182)))),X185,X183)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X181),s('type.num.num',X182)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),X184))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X181),s('type.num.num',X182))))))))))) )),
  inference(forward_demodulation,[],[f26270,f611])).
fof(f26270,plain,(
  ( ! [X185,X182,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),X184))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X181),s('type.num.num',X182)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),sK92(X184,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182)))),X185,X183)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182))))))))) )),
  inference(superposition,[],[f704,f611])).
fof(f26378,plain,(
  ( ! [X177,X180,X178,X176,X179] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),sK92(X179,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X177)))),X180,X178)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X176),s('type.num.num',X177)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),X179))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X180),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X176),s('type.num.num',X177))))))))))) )),
  inference(forward_demodulation,[],[f26269,f615])).
fof(f26269,plain,(
  ( ! [X177,X180,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),X179))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X180),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X176),s('type.num.num',X177)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),sK92(X179,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X177)))),X180,X178)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X177))))))))) )),
  inference(superposition,[],[f704,f615])).
fof(f26377,plain,(
  ( ! [X175,X173,X171,X174,X172] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),sK92(X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172)))),X175,X173)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X171),s('type.num.num',X172)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),X174))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X171),s('type.num.num',X172))))))))))) )),
  inference(forward_demodulation,[],[f26268,f609])).
fof(f26268,plain,(
  ( ! [X175,X173,X171,X174,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),X174))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X171),s('type.num.num',X172)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),sK92(X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172)))),X175,X173)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172))))))))) )),
  inference(superposition,[],[f704,f609])).
fof(f26376,plain,(
  ( ! [X167,X169,X170,X168] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),sK92(X169,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0')),X170,X168)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),X169))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))))))))) )),
  inference(forward_demodulation,[],[f26267,f467])).
fof(f26267,plain,(
  ( ! [X167,X169,X170,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),X169))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),sK92(X169,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0')),X170,X168)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f704,f467])).
fof(f26375,plain,(
  ( ! [X165,X163,X166,X164] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),sK92(X165,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.ZERO_0')),X166,X164)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X163)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X163))))))))) )),
  inference(forward_demodulation,[],[f26266,f466])).
fof(f26266,plain,(
  ( ! [X165,X163,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X163)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),sK92(X165,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.ZERO_0')),X166,X164)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f704,f466])).
fof(f26371,plain,(
  ( ! [X156,X154,X157,X155,X153] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),sK92(X156,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X154)))),X157,X155)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X153),s('type.num.num',X154)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),X156))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X157),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X153),s('type.num.num',X154))))))))))) )),
  inference(forward_demodulation,[],[f26264,f614])).
fof(f26264,plain,(
  ( ! [X156,X154,X157,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),X156))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X157),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X153),s('type.num.num',X154)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),sK92(X156,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X154)))),X157,X155)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X154))))))))) )),
  inference(superposition,[],[f704,f614])).
fof(f26370,plain,(
  ( ! [X152,X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK92(X151,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149)))),X152,X150)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X152),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149))))))))))) )),
  inference(forward_demodulation,[],[f26263,f613])).
fof(f26263,plain,(
  ( ! [X152,X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X152),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK92(X151,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149)))),X152,X150)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149))))))))) )),
  inference(superposition,[],[f704,f613])).
fof(f26369,plain,(
  ( ! [X146,X144,X147,X145,X143] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),sK92(X146,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144)))),X147,X145)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X147),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144))))))))))) )),
  inference(forward_demodulation,[],[f26262,f612])).
fof(f26262,plain,(
  ( ! [X146,X144,X147,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X147),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),sK92(X146,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144)))),X147,X145)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144))))))))) )),
  inference(superposition,[],[f704,f612])).
fof(f26368,plain,(
  ( ! [X142,X140,X138,X141,X139] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK92(X141,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X142,X140)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X142),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))))))))) )),
  inference(forward_demodulation,[],[f26261,f610])).
fof(f26261,plain,(
  ( ! [X142,X140,X138,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X142),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK92(X141,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X142,X140)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139))))))))) )),
  inference(superposition,[],[f704,f610])).
fof(f26367,plain,(
  ( ! [X134,X136,X135,X137] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),sK92(X136,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num','const.arithmetic.ZERO_0')),X137,X135)))),s('type.num.num',X134)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),X136))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X137),s('type.num.num',X134))))))) )),
  inference(forward_demodulation,[],[f26260,f454])).
fof(f26260,plain,(
  ( ! [X134,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),X136))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X137),s('type.num.num',X134)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),sK92(X136,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num','const.arithmetic.ZERO_0')),X137,X135)))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f704,f454])).
fof(f26366,plain,(
  ( ! [X132,X130,X133,X131] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK92(X132,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130)))),X133,X131)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))))))))))) )),
  inference(forward_demodulation,[],[f26259,f459])).
fof(f26259,plain,(
  ( ! [X132,X130,X133,X131] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK92(X132,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130)))),X133,X131)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130))))))))) )),
  inference(superposition,[],[f704,f459])).
fof(f26365,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK92(X128,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126)))),X129,X127)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126))))))))))) )),
  inference(forward_demodulation,[],[f26258,f458])).
fof(f26258,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK92(X128,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126)))),X129,X127)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126))))))))) )),
  inference(superposition,[],[f704,f458])).
fof(f26358,plain,(
  ( ! [X118,X116,X119,X117] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),sK92(X118,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X119,X117)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X116)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X119),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X116))))))))))) )),
  inference(forward_demodulation,[],[f26255,f462])).
fof(f26255,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X119),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X116)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),sK92(X118,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X119,X117)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116))))))))) )),
  inference(superposition,[],[f704,f462])).
fof(f26357,plain,(
  ( ! [X111,X114,X112,X115,X113] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK92(X114,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112)))),X115,X113))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num','const.num.SUC_1'(s('type.num.num',X112))))))))))) )),
  inference(forward_demodulation,[],[f26254,f4764])).
fof(f26254,plain,(
  ( ! [X111,X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num','const.num.SUC_1'(s('type.num.num',X112)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK92(X114,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112)))),X115,X113)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112))))))))) )),
  inference(superposition,[],[f704,f603])).
fof(f26356,plain,(
  ( ! [X109,X107,X110,X108] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK92(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107)))),X110,X108))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X110),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X107))))))))))) )),
  inference(forward_demodulation,[],[f26253,f4764])).
fof(f26253,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X110),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X107)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK92(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107)))),X110,X108)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107))))))))) )),
  inference(superposition,[],[f704,f463])).
fof(f26355,plain,(
  ( ! [X103,X105,X106,X104] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK92(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103)))),X106,X104))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X106),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X103))))))))))) )),
  inference(forward_demodulation,[],[f26252,f4764])).
fof(f26252,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X106),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X103)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK92(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103)))),X106,X104)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103))))))))) )),
  inference(superposition,[],[f704,f465])).
fof(f26354,plain,(
  ( ! [X101,X99,X102,X100] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK92(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99)))),X102,X100)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))))))))) )),
  inference(forward_demodulation,[],[f26353,f4779])).
fof(f26353,plain,(
  ( ! [X101,X99,X102,X100] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK92(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99)))),X102,X100))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))))))))) )),
  inference(forward_demodulation,[],[f26251,f4764])).
fof(f26251,plain,(
  ( ! [X101,X99,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK92(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99)))),X102,X100)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99))))))))) )),
  inference(superposition,[],[f704,f457])).
fof(f26343,plain,(
  ( ! [X87,X85,X83,X86,X84] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK92(X86,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X87,X85)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X83),s('type.num.num',X84)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X83),s('type.num.num',X84))))))))))) )),
  inference(forward_demodulation,[],[f26247,f605])).
fof(f26247,plain,(
  ( ! [X87,X85,X83,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X83),s('type.num.num',X84)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK92(X86,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X87,X85)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84))))))))) )),
  inference(superposition,[],[f704,f605])).
fof(f26342,plain,(
  ( ! [X80,X78,X81,X79,X82] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK92(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79)))),X82,X80)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num',X79)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num',X79))))))))))) )),
  inference(forward_demodulation,[],[f26246,f607])).
fof(f26246,plain,(
  ( ! [X80,X78,X81,X79,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num',X79)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK92(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79)))),X82,X80)))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79))))))))) )),
  inference(superposition,[],[f704,f607])).
fof(f26332,plain,(
  ( ! [X61,X64,X62,X65,X63] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK92(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62)))),X65,X63)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X61),s('type.num.num',X62)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X61),s('type.num.num',X62))))))))) )),
  inference(forward_demodulation,[],[f26242,f594])).
fof(f26242,plain,(
  ( ! [X61,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X61),s('type.num.num',X62)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK92(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62)))),X65,X63)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62))))))))) )),
  inference(superposition,[],[f704,f594])).
fof(f26331,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),sK92(X59,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))),X60,X58)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57))))))))))) )),
  inference(forward_demodulation,[],[f26241,f606])).
fof(f26241,plain,(
  ( ! [X59,X57,X60,X58,X56] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),sK92(X59,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))),X60,X58)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))))))))) )),
  inference(superposition,[],[f704,f606])).
fof(f26320,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK92(X39,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X40,X38)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))))))) )),
  inference(forward_demodulation,[],[f26236,f707])).
fof(f26236,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK92(X39,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X40,X38)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37))))))) )),
  inference(superposition,[],[f704,f707])).
fof(f26232,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK92(X20,'const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)),X21,X19)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18))))))) )),
  inference(superposition,[],[f704,f592])).
fof(f26226,plain,(
  ( ! [X198,X196,X200,X199,X197] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),X199))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X197),s('type.num.num',X200)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X198),sK92(X199,X200,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X196),s('type.num.num',X197)),X198)))),s('type.num.num',X200))))) )),
  inference(superposition,[],[f704,f531])).
fof(f26225,plain,(
  ( ! [X191,X194,X192,X195,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),X194))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X191),s('type.num.num',X195)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X193),sK92(X194,X195,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X191),s('type.num.num',X192)),X193)))),s('type.num.num',X195))))) )),
  inference(superposition,[],[f704,f530])).
fof(f26224,plain,(
  ( ! [X189,X187,X190,X188,X186] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),X189))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X186),s('type.num.num',X187))))),s('type.num.num',X190)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X188),sK92(X189,X190,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187)))),X188)))),s('type.num.num',X190))))) )),
  inference(superposition,[],[f704,f616])).
fof(f26223,plain,(
  ( ! [X185,X182,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),X184))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X181),s('type.num.num',X182))))),s('type.num.num',X185)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),sK92(X184,X185,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182)))),X183)))),s('type.num.num',X185))))) )),
  inference(superposition,[],[f704,f611])).
fof(f26222,plain,(
  ( ! [X177,X180,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),X179))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X176),s('type.num.num',X177))))),s('type.num.num',X180)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X178),sK92(X179,X180,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X177)))),X178)))),s('type.num.num',X180))))) )),
  inference(superposition,[],[f704,f615])).
fof(f26221,plain,(
  ( ! [X175,X173,X171,X174,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),X174))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X171),s('type.num.num',X172))))),s('type.num.num',X175)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X173),sK92(X174,X175,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X172)))),X173)))),s('type.num.num',X175))))) )),
  inference(superposition,[],[f704,f609])).
fof(f26220,plain,(
  ( ! [X167,X169,X170,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),X169))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))),s('type.num.num',X170)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X168),sK92(X169,X170,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0')),X168)))),s('type.num.num',X170))))) )),
  inference(superposition,[],[f704,f467])).
fof(f26219,plain,(
  ( ! [X165,X163,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),X165))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X163))),s('type.num.num',X166)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X164),sK92(X165,X166,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.ZERO_0')),X164)))),s('type.num.num',X166))))) )),
  inference(superposition,[],[f704,f466])).
fof(f26217,plain,(
  ( ! [X156,X154,X157,X155,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),X156))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X153),s('type.num.num',X154))))),s('type.num.num',X157)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X155),sK92(X156,X157,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X154)))),X155)))),s('type.num.num',X157))))) )),
  inference(superposition,[],[f704,f614])).
fof(f26216,plain,(
  ( ! [X152,X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),X151))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X148),s('type.num.num',X149))))),s('type.num.num',X152)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X150),sK92(X151,X152,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X149)))),X150)))),s('type.num.num',X152))))) )),
  inference(superposition,[],[f704,f613])).
fof(f26215,plain,(
  ( ! [X146,X144,X147,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144))))),s('type.num.num',X147)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),sK92(X146,X147,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X144)))),X145)))),s('type.num.num',X147))))) )),
  inference(superposition,[],[f704,f612])).
fof(f26214,plain,(
  ( ! [X142,X140,X138,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))),s('type.num.num',X142)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK92(X141,X142,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X140)))),s('type.num.num',X142))))) )),
  inference(superposition,[],[f704,f610])).
fof(f26213,plain,(
  ( ! [X134,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),X136))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X137)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X135),sK92(X136,X137,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num','const.arithmetic.ZERO_0')),X135)))),s('type.num.num',X137))))) )),
  inference(superposition,[],[f704,f454])).
fof(f26212,plain,(
  ( ! [X132,X130,X133,X131] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))))),s('type.num.num',X133)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK92(X132,X133,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X130)))),X131)))),s('type.num.num',X133))))) )),
  inference(superposition,[],[f704,f459])).
fof(f26211,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X126))))),s('type.num.num',X129)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK92(X128,X129,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X126)))),X127)))),s('type.num.num',X129))))) )),
  inference(superposition,[],[f704,f458])).
fof(f26208,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),X118))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X116))))),s('type.num.num',X119)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X117),sK92(X118,X119,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X117)))),s('type.num.num',X119))))) )),
  inference(superposition,[],[f704,f462])).
fof(f26301,plain,(
  ( ! [X111,X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X115)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK92(X114,X115,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112)))),X113)))),s('type.num.num',X115))))) )),
  inference(forward_demodulation,[],[f26207,f17113])).
fof(f26207,plain,(
  ( ! [X111,X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num','const.num.SUC_1'(s('type.num.num',X112))))),s('type.num.num',X115)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X113),sK92(X114,X115,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X111),s('type.num.num',X112)))),X113)))),s('type.num.num',X115))))) )),
  inference(superposition,[],[f704,f603])).
fof(f26300,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X110)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK92(X109,X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107)))),X108)))),s('type.num.num',X110))))) )),
  inference(forward_demodulation,[],[f26206,f17112])).
fof(f26206,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X107))))),s('type.num.num',X110)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK92(X109,X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107)))),X108)))),s('type.num.num',X110))))) )),
  inference(superposition,[],[f704,f463])).
fof(f26299,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X106)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK92(X105,X106,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103)))),X104)))),s('type.num.num',X106))))) )),
  inference(forward_demodulation,[],[f26205,f17111])).
fof(f26205,plain,(
  ( ! [X103,X105,X106,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X103))))),s('type.num.num',X106)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),sK92(X105,X106,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X103)))),X104)))),s('type.num.num',X106))))) )),
  inference(superposition,[],[f704,f465])).
fof(f26204,plain,(
  ( ! [X101,X99,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99))),s('type.num.num',X102)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK92(X101,X102,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X99)))),X100)))),s('type.num.num',X102))))) )),
  inference(superposition,[],[f704,f457])).
fof(f26200,plain,(
  ( ! [X87,X85,X83,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X83),s('type.num.num',X84))))),s('type.num.num',X87)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK92(X86,X87,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)))),s('type.num.num',X87))))) )),
  inference(superposition,[],[f704,f605])).
fof(f26199,plain,(
  ( ! [X80,X78,X81,X79,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X78),s('type.num.num',X79))))),s('type.num.num',X82)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK92(X81,X82,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X79)))),X80)))),s('type.num.num',X82))))) )),
  inference(superposition,[],[f704,f607])).
fof(f26195,plain,(
  ( ! [X61,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X61),s('type.num.num',X62))),s('type.num.num',X65)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK92(X64,X65,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X61))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X62)))),X63)))),s('type.num.num',X65))))) )),
  inference(superposition,[],[f704,f594])).
fof(f26194,plain,(
  ( ! [X59,X57,X60,X58,X56] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57))))),s('type.num.num',X60)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),sK92(X59,X60,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))),X58)))),s('type.num.num',X60))))) )),
  inference(superposition,[],[f704,f606])).
fof(f26287,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK92(X39,X40,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X38)))),s('type.num.num',X40))))) )),
  inference(forward_demodulation,[],[f26189,f17113])).
fof(f26189,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))),s('type.num.num',X40)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK92(X39,X40,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X38)))),s('type.num.num',X40))))) )),
  inference(superposition,[],[f704,f707])).
fof(f26185,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17))),s('type.num.num',X21)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK92(X20,X21,'const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)),X19)))),s('type.num.num',X21))))) )),
  inference(superposition,[],[f704,f592])).
fof(f26177,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK92('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X22),X23),s('type.list.list'(X22),X24)),X26,X25,X22)))),s('type.num.num',X26))))) )),
  inference(superposition,[],[f704,f531])).
fof(f26176,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X18))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),sK92('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X21,X20,X17)))),s('type.num.num',X21))))) )),
  inference(superposition,[],[f704,f530])).
fof(f26175,plain,(
  ( ! [X14,X12,X15,X13,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK92('const.list.CONS_2'(s(X12,sK45(X13,X14,X12)),s('type.list.list'(X12),sK46(X13,X14,X12))),X16,X15,X12)))),s('type.num.num',X16)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14)))) )),
  inference(superposition,[],[f704,f535])).
fof(f26171,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK92('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X5,X4,sK0)))),s('type.num.num',X5))))) ) | $spl4),
  inference(superposition,[],[f704,f644])).
fof(f26170,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK92('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0)))),s('type.num.num',X3))))) )),
  inference(superposition,[],[f704,f495])).
fof(f26014,plain,(
  ( ! [X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num',X151)))) | s('type.list.list'(X152),X153) = s('type.list.list'(X152),'const.list.APPEND_2'(s('type.list.list'(X152),sK47(X153,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)),X152)),s('type.list.list'(X152),sK48(X153,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)),X152))))) )),
  inference(superposition,[],[f668,f531])).
fof(f26013,plain,(
  ( ! [X146,X149,X147,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num',X146)))) | s('type.list.list'(X148),X149) = s('type.list.list'(X148),'const.list.APPEND_2'(s('type.list.list'(X148),sK47(X149,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X146),s('type.num.num',X147)),X148)),s('type.list.list'(X148),sK48(X149,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X146),s('type.num.num',X147)),X148))))) )),
  inference(superposition,[],[f668,f530])).
fof(f26012,plain,(
  ( ! [X144,X142,X145,X143] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X142),s('type.num.num',X143)))))))) | s('type.list.list'(X144),X145) = s('type.list.list'(X144),'const.list.APPEND_2'(s('type.list.list'(X144),sK47(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143)))),X144)),s('type.list.list'(X144),sK48(X145,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143)))),X144))))) )),
  inference(superposition,[],[f668,f616])).
fof(f26011,plain,(
  ( ! [X140,X138,X141,X139] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))) | s('type.list.list'(X140),X141) = s('type.list.list'(X140),'const.list.APPEND_2'(s('type.list.list'(X140),sK47(X141,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X140)),s('type.list.list'(X140),sK48(X141,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X140))))) )),
  inference(superposition,[],[f668,f611])).
fof(f26010,plain,(
  ( ! [X134,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)))))))) | s('type.list.list'(X136),X137) = s('type.list.list'(X136),'const.list.APPEND_2'(s('type.list.list'(X136),sK47(X137,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X136)),s('type.list.list'(X136),sK48(X137,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X136))))) )),
  inference(superposition,[],[f668,f615])).
fof(f26009,plain,(
  ( ! [X132,X130,X133,X131] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X130),s('type.num.num',X131)))))))) | s('type.list.list'(X132),X133) = s('type.list.list'(X132),'const.list.APPEND_2'(s('type.list.list'(X132),sK47(X133,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132)),s('type.list.list'(X132),sK48(X133,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X132))))) )),
  inference(superposition,[],[f668,f609])).
fof(f26008,plain,(
  ( ! [X127,X128,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127)))))) | s('type.list.list'(X128),X129) = s('type.list.list'(X128),'const.list.APPEND_2'(s('type.list.list'(X128),sK47(X129,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.ZERO_0')),X128)),s('type.list.list'(X128),sK48(X129,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.ZERO_0')),X128))))) )),
  inference(superposition,[],[f668,f467])).
fof(f26007,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124)))))) | s('type.list.list'(X125),X126) = s('type.list.list'(X125),'const.list.APPEND_2'(s('type.list.list'(X125),sK47(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125)),s('type.list.list'(X125),sK48(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125))))) )),
  inference(superposition,[],[f668,f466])).
fof(f26048,plain,(
  ( ! [X123,X121,X122,X120] : (s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK47(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122)),s('type.list.list'(X122),sK48(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122))))) )),
  inference(subsumption_resolution,[],[f26047,f427])).
fof(f26047,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'T_0')) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK47(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122)),s('type.list.list'(X122),sK48(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122))))) )),
  inference(forward_demodulation,[],[f26006,f7139])).
fof(f26006,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.APPEND_2'(s('type.list.list'(X122),sK47(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122)),s('type.list.list'(X122),sK48(X123,'const.numeral.iSUB_3'(s(bool,X120),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X121)),X122))))) )),
  inference(superposition,[],[f668,f589])).
fof(f26005,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117)))))))) | s('type.list.list'(X118),X119) = s('type.list.list'(X118),'const.list.APPEND_2'(s('type.list.list'(X118),sK47(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),sK48(X119,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118))))) )),
  inference(superposition,[],[f668,f614])).
fof(f26004,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)))))))) | s('type.list.list'(X114),X115) = s('type.list.list'(X114),'const.list.APPEND_2'(s('type.list.list'(X114),sK47(X115,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X114)),s('type.list.list'(X114),sK48(X115,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X114))))) )),
  inference(superposition,[],[f668,f613])).
fof(f26003,plain,(
  ( ! [X111,X109,X110,X108] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X108),s('type.num.num',X109)))))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.APPEND_2'(s('type.list.list'(X110),sK47(X111,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),sK48(X111,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X110))))) )),
  inference(superposition,[],[f668,f612])).
fof(f26002,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)))))))) | s('type.list.list'(X106),X107) = s('type.list.list'(X106),'const.list.APPEND_2'(s('type.list.list'(X106),sK47(X107,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X106)),s('type.list.list'(X106),sK48(X107,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X106))))) )),
  inference(superposition,[],[f668,f610])).
fof(f26001,plain,(
  ( ! [X103,X101,X102] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num',X101)))) | s('type.list.list'(X102),X103) = s('type.list.list'(X102),'const.list.APPEND_2'(s('type.list.list'(X102),sK47(X103,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.ZERO_0')),X102)),s('type.list.list'(X102),sK48(X103,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.ZERO_0')),X102))))) )),
  inference(superposition,[],[f668,f454])).
fof(f26000,plain,(
  ( ! [X99,X100,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98)))))))) | s('type.list.list'(X99),X100) = s('type.list.list'(X99),'const.list.APPEND_2'(s('type.list.list'(X99),sK47(X100,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X98)))),X99)),s('type.list.list'(X99),sK48(X100,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X98)))),X99))))) )),
  inference(superposition,[],[f668,f459])).
fof(f25999,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X95)))))))) | s('type.list.list'(X96),X97) = s('type.list.list'(X96),'const.list.APPEND_2'(s('type.list.list'(X96),sK47(X97,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95)))),X96)),s('type.list.list'(X96),sK48(X97,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95)))),X96))))) )),
  inference(superposition,[],[f668,f458])).
fof(f26046,plain,(
  ( ! [X94,X93] : (s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.APPEND_2'(s('type.list.list'(X93),sK47(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93)),s('type.list.list'(X93),sK48(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93))))) )),
  inference(subsumption_resolution,[],[f26045,f427])).
fof(f26045,plain,(
  ( ! [X94,X93] : (~p(s(bool,'T_0')) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.APPEND_2'(s('type.list.list'(X93),sK47(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93)),s('type.list.list'(X93),sK48(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93))))) )),
  inference(forward_demodulation,[],[f25998,f7139])).
fof(f25998,plain,(
  ( ! [X94,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.APPEND_2'(s('type.list.list'(X93),sK47(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93)),s('type.list.list'(X93),sK48(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X93))))) )),
  inference(superposition,[],[f668,f430])).
fof(f25996,plain,(
  ( ! [X90,X88,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X88)))))))) | s('type.list.list'(X89),X90) = s('type.list.list'(X89),'const.list.APPEND_2'(s('type.list.list'(X89),sK47(X90,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X89)),s('type.list.list'(X89),sK48(X90,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X89))))) )),
  inference(superposition,[],[f668,f462])).
fof(f25995,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num','const.num.SUC_1'(s('type.num.num',X85)))))))) | s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.APPEND_2'(s('type.list.list'(X86),sK47(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X85)))),X86)),s('type.list.list'(X86),sK48(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X85)))),X86))))) )),
  inference(superposition,[],[f668,f603])).
fof(f25994,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81)))))))) | s('type.list.list'(X82),X83) = s('type.list.list'(X82),'const.list.APPEND_2'(s('type.list.list'(X82),sK47(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82)),s('type.list.list'(X82),sK48(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82))))) )),
  inference(superposition,[],[f668,f463])).
fof(f25993,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X78)))))))) | s('type.list.list'(X79),X80) = s('type.list.list'(X79),'const.list.APPEND_2'(s('type.list.list'(X79),sK47(X80,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X79)),s('type.list.list'(X79),sK48(X80,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X79))))) )),
  inference(superposition,[],[f668,f465])).
fof(f25992,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))))) | s('type.list.list'(X76),X77) = s('type.list.list'(X76),'const.list.APPEND_2'(s('type.list.list'(X76),sK47(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75)))),X76)),s('type.list.list'(X76),sK48(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75)))),X76))))) )),
  inference(superposition,[],[f668,f457])).
fof(f25991,plain,(
  ( ! [X74,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X73),X74) = s('type.list.list'(X73),'const.list.APPEND_2'(s('type.list.list'(X73),sK47(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X73)),s('type.list.list'(X73),sK48(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X73))))) )),
  inference(superposition,[],[f668,f432])).
fof(f25988,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64)))))))) | s('type.list.list'(X65),X66) = s('type.list.list'(X65),'const.list.APPEND_2'(s('type.list.list'(X65),sK47(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65)),s('type.list.list'(X65),sK48(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65))))) )),
  inference(superposition,[],[f668,f605])).
fof(f25987,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60)))))))) | s('type.list.list'(X61),X62) = s('type.list.list'(X61),'const.list.APPEND_2'(s('type.list.list'(X61),sK47(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61)),s('type.list.list'(X61),sK48(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61))))) )),
  inference(superposition,[],[f668,f607])).
fof(f25983,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47)))))) | s('type.list.list'(X48),X49) = s('type.list.list'(X48),'const.list.APPEND_2'(s('type.list.list'(X48),sK47(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48)),s('type.list.list'(X48),sK48(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48))))) )),
  inference(superposition,[],[f668,f594])).
fof(f25982,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43)))))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK47(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44)),s('type.list.list'(X44),sK48(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44))))) )),
  inference(superposition,[],[f668,f606])).
fof(f25977,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))))))) | s('type.list.list'(X29),X30) = s('type.list.list'(X29),'const.list.APPEND_2'(s('type.list.list'(X29),sK47(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29)),s('type.list.list'(X29),sK48(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29))))) )),
  inference(superposition,[],[f668,f707])).
fof(f25973,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.APPEND_2'(s('type.list.list'(X14),sK47(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14)),s('type.list.list'(X14),sK48(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14))))) )),
  inference(superposition,[],[f668,f592])).
fof(f26024,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.list.list'(X15),X17) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK47('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK48('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num',X18))))) )),
  inference(forward_demodulation,[],[f25965,f531])).
fof(f25965,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num',X18)))) | s('type.list.list'(X15),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17))) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),sK47('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK48('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15))))) )),
  inference(superposition,[],[f668,f531])).
fof(f26023,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK47('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK48('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num',X14))))) )),
  inference(forward_demodulation,[],[f25964,f530])).
fof(f25964,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num',X14)))) | s('type.list.list'(X11),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),sK47('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK48('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11))))) )),
  inference(superposition,[],[f668,f530])).
fof(f25963,plain,(
  ( ! [X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))),s('type.num.num',X10)))) | s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK45(X8,X9,X7)),s('type.list.list'(X7),sK46(X8,X9,X7)))) = s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),sK47('const.list.CONS_2'(s(X7,sK45(X8,X9,X7)),s('type.list.list'(X7),sK46(X8,X9,X7))),X10,X7)),s('type.list.list'(X7),sK48('const.list.CONS_2'(s(X7,sK45(X8,X9,X7)),s('type.list.list'(X7),sK46(X8,X9,X7))),X10,X7)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9)))) )),
  inference(superposition,[],[f668,f535])).
fof(f26019,plain,(
  ( ! [X3] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK48('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X3))))) ) | $spl4),
  inference(forward_demodulation,[],[f25959,f644])).
fof(f25959,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X3)))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK48('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0))))) ) | $spl4),
  inference(superposition,[],[f668,f644])).
fof(f26018,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK48('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f25958,f495])).
fof(f25958,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK48('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0))))) )),
  inference(superposition,[],[f668,f495])).
fof(f25802,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f434,f12187,f618])).
fof(f25803,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f12187,f12187,f618])).
fof(f25795,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK50('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)),X153,X152)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151)))))) )),
  inference(forward_demodulation,[],[f25726,f531])).
fof(f25726,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK50('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X150),s('type.num.num',X151)),X153,X152))))) )),
  inference(superposition,[],[f540,f531])).
fof(f25794,plain,(
  ( ! [X146,X149,X147,X148] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X146))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK50('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X146),s('type.num.num',X147)),X149,X148)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146)))))) )),
  inference(forward_demodulation,[],[f25725,f530])).
fof(f25725,plain,(
  ( ! [X146,X149,X147,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X146),s('type.num.num',X147))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK50('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X146),s('type.num.num',X147)),X149,X148))))) )),
  inference(superposition,[],[f540,f530])).
fof(f25793,plain,(
  ( ! [X144,X142,X145,X143] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X142),s('type.num.num',X143))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143)))),X145,X144)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X142),s('type.num.num',X143)))))))))) )),
  inference(forward_demodulation,[],[f25724,f616])).
fof(f25724,plain,(
  ( ! [X144,X142,X145,X143] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),X145))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X142),s('type.num.num',X143))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X144),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X143)))),X145,X144))))) )),
  inference(superposition,[],[f540,f616])).
fof(f25792,plain,(
  ( ! [X140,X138,X141,X139] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X141,X140)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139)))))))))) )),
  inference(forward_demodulation,[],[f25723,f611])).
fof(f25723,plain,(
  ( ! [X140,X138,X141,X139] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),X141))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X138),s('type.num.num',X139))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X140),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139)))),X141,X140))))) )),
  inference(superposition,[],[f540,f611])).
fof(f25791,plain,(
  ( ! [X134,X136,X135,X137] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)))))))))) )),
  inference(forward_demodulation,[],[f25722,f615])).
fof(f25722,plain,(
  ( ! [X134,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135)))),X137,X136))))) )),
  inference(superposition,[],[f540,f615])).
fof(f25790,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X130),s('type.num.num',X131))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X133,X132)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X130),s('type.num.num',X131)))))))))) )),
  inference(forward_demodulation,[],[f25721,f609])).
fof(f25721,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X133))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X130),s('type.num.num',X131))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X131)))),X133,X132))))) )),
  inference(superposition,[],[f540,f609])).
fof(f25789,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.ZERO_0')),X129,X128)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127)))))))) )),
  inference(forward_demodulation,[],[f25720,f467])).
fof(f25720,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),X129))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X128),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.ZERO_0')),X129,X128))))) )),
  inference(superposition,[],[f540,f467])).
fof(f25788,plain,(
  ( ! [X125,X126,X124] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124)))))))) )),
  inference(forward_demodulation,[],[f25719,f466])).
fof(f25719,plain,(
  ( ! [X125,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK50('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125))))) )),
  inference(superposition,[],[f540,f466])).
fof(f25784,plain,(
  ( ! [X118,X116,X119,X117] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X119,X118)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117)))))))))) )),
  inference(forward_demodulation,[],[f25717,f614])).
fof(f25717,plain,(
  ( ! [X118,X116,X119,X117] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X116),s('type.num.num',X117))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X119,X118))))) )),
  inference(superposition,[],[f540,f614])).
fof(f25783,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X115,X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)))))))))) )),
  inference(forward_demodulation,[],[f25716,f613])).
fof(f25716,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113)))),X115,X114))))) )),
  inference(superposition,[],[f540,f613])).
fof(f25782,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X108),s('type.num.num',X109))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X111,X110)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X108),s('type.num.num',X109)))))))))) )),
  inference(forward_demodulation,[],[f25715,f612])).
fof(f25715,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X108),s('type.num.num',X109))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X109)))),X111,X110))))) )),
  inference(superposition,[],[f540,f612])).
fof(f25781,plain,(
  ( ! [X107,X105,X106,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X107,X106)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)))))))))) )),
  inference(forward_demodulation,[],[f25714,f610])).
fof(f25714,plain,(
  ( ! [X107,X105,X106,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))),X107,X106))))) )),
  inference(superposition,[],[f540,f610])).
fof(f25780,plain,(
  ( ! [X103,X101,X102] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X101))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.ZERO_0')),X103,X102)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X101)))))) )),
  inference(forward_demodulation,[],[f25713,f454])).
fof(f25713,plain,(
  ( ! [X103,X101,X102] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X101))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK50('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.ZERO_0')),X103,X102))))) )),
  inference(superposition,[],[f540,f454])).
fof(f25779,plain,(
  ( ! [X99,X100,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK50('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X98)))),X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98)))))))))) )),
  inference(forward_demodulation,[],[f25712,f459])).
fof(f25712,plain,(
  ( ! [X99,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X98))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK50('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X98)))),X100,X99))))) )),
  inference(superposition,[],[f540,f459])).
fof(f25778,plain,(
  ( ! [X97,X95,X96] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X95))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK50('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95)))),X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X95)))))))))) )),
  inference(forward_demodulation,[],[f25711,f458])).
fof(f25711,plain,(
  ( ! [X97,X95,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X95))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK50('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95)))),X97,X96))))) )),
  inference(superposition,[],[f540,f458])).
fof(f25771,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X88))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK50('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X88)))))))))) )),
  inference(forward_demodulation,[],[f25708,f462])).
fof(f25708,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X88))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK50('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) )),
  inference(superposition,[],[f540,f462])).
fof(f25770,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X85)))),X87,X86)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num','const.num.SUC_1'(s('type.num.num',X85)))))))))) )),
  inference(forward_demodulation,[],[f25707,f6799])).
fof(f25707,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num','const.num.SUC_1'(s('type.num.num',X85))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X85))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X84),s('type.num.num',X85)))),X87,X86))))) )),
  inference(superposition,[],[f540,f603])).
fof(f25769,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X83,X82)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81)))))))))) )),
  inference(forward_demodulation,[],[f25706,f463])).
fof(f25706,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X83,X82))))) )),
  inference(superposition,[],[f540,f463])).
fof(f25768,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X78))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X78)))))))))) )),
  inference(forward_demodulation,[],[f25705,f465])).
fof(f25705,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X78))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f540,f465])).
fof(f25767,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75)))),X77,X76)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))))))) )),
  inference(forward_demodulation,[],[f25704,f457])).
fof(f25704,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75)))),X77,X76))))) )),
  inference(superposition,[],[f540,f457])).
fof(f25766,plain,(
  ( ! [X74,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74,X73)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f25703,f432])).
fof(f25703,plain,(
  ( ! [X74,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK50('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74,X73))))) )),
  inference(superposition,[],[f540,f432])).
fof(f25759,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK50('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X66,X65)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64)))))))))) )),
  inference(forward_demodulation,[],[f25700,f605])).
fof(f25700,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK50('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X66,X65))))) )),
  inference(superposition,[],[f540,f605])).
fof(f25758,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK50('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X62,X61)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60)))))))))) )),
  inference(forward_demodulation,[],[f25699,f607])).
fof(f25699,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK50('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X62,X61))))) )),
  inference(superposition,[],[f540,f607])).
fof(f25750,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK50('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X49,X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47)))))))) )),
  inference(forward_demodulation,[],[f25695,f594])).
fof(f25695,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK50('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X49,X48))))) )),
  inference(superposition,[],[f540,f594])).
fof(f25749,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK50('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X45,X44)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43)))))))))) )),
  inference(forward_demodulation,[],[f25694,f606])).
fof(f25694,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK50('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f540,f606])).
fof(f25738,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK50('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))))))))) )),
  inference(forward_demodulation,[],[f25689,f707])).
fof(f25689,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK50('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X30,X29))))) )),
  inference(superposition,[],[f540,f707])).
fof(f25685,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK50('const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X15,X14))))) )),
  inference(superposition,[],[f540,f592])).
fof(f25677,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK50(X18,'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X15))))) )),
  inference(superposition,[],[f540,f531])).
fof(f25676,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK50(X14,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X11))))) )),
  inference(superposition,[],[f540,f530])).
fof(f25675,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK50(X10,'const.list.CONS_2'(s(X7,sK45(X8,X9,X7)),s('type.list.list'(X7),sK46(X8,X9,X7))),X7)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X9)))) )),
  inference(superposition,[],[f540,f535])).
fof(f25671,plain,(
  ( ! [X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK50(X3,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f540,f644])).
fof(f25670,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK50(X2,'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X0))))) )),
  inference(superposition,[],[f540,f495])).
fof(f25405,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.list.list'(X14),X16) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK54('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X14),X15),s('type.list.list'(X14),X16)),X17,X14)),s('type.list.list'(X14),sK53('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X14),X15),s('type.list.list'(X14),X16)),X17,X14)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))))))) )),
  inference(forward_demodulation,[],[f25385,f531])).
fof(f25385,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16)))))) | s('type.list.list'(X14),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X14),X15),s('type.list.list'(X14),X16))) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK54('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X14),X15),s('type.list.list'(X14),X16)),X17,X14)),s('type.list.list'(X14),sK53('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X14),X15),s('type.list.list'(X14),X16)),X17,X14))))) )),
  inference(superposition,[],[f6936,f531])).
fof(f25404,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(X10),X11) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK54('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X10),X11),s('type.list.list'(X10),X12)),X13,X10)),s('type.list.list'(X10),sK53('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X10),X11),s('type.list.list'(X10),X12)),X13,X10)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))))))) )),
  inference(forward_demodulation,[],[f25384,f530])).
fof(f25384,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11)))))) | s('type.list.list'(X10),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X10),X11),s('type.list.list'(X10),X12))) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,sK54('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X10),X11),s('type.list.list'(X10),X12)),X13,X10)),s('type.list.list'(X10),sK53('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X10),X11),s('type.list.list'(X10),X12)),X13,X10))))) )),
  inference(superposition,[],[f6936,f530])).
fof(f25383,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) | s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK45(X7,X8,X6)),s('type.list.list'(X6),sK46(X7,X8,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK54('const.list.CONS_2'(s(X6,sK45(X7,X8,X6)),s('type.list.list'(X6),sK46(X7,X8,X6))),X9,X6)),s('type.list.list'(X6),sK53('const.list.CONS_2'(s(X6,sK45(X7,X8,X6)),s('type.list.list'(X6),sK46(X7,X8,X6))),X9,X6)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))) )),
  inference(superposition,[],[f6936,f535])).
fof(f25401,plain,(
  ( ! [X3] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK53('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f25380,f644])).
fof(f25380,plain,(
  ( ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK54('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK53('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0))))) ) | $spl4),
  inference(superposition,[],[f6936,f644])).
fof(f25400,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK53('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(forward_demodulation,[],[f25379,f495])).
fof(f25379,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK54('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK53('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0))))) )),
  inference(superposition,[],[f6936,f495])).
fof(f25378,plain,(
  ( ! [X149,X147,X150,X148] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X148),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X149),X150)))))) | s('type.list.list'(X149),X150) = s('type.list.list'(X149),'const.list.CONS_2'(s(X149,sK54(X150,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X147),s('type.num.num',X148)),X149)),s('type.list.list'(X149),sK53(X150,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X147),s('type.num.num',X148)),X149))))) )),
  inference(superposition,[],[f6936,f531])).
fof(f25377,plain,(
  ( ! [X146,X144,X145,X143] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X143),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146)))))) | s('type.list.list'(X145),X146) = s('type.list.list'(X145),'const.list.CONS_2'(s(X145,sK54(X146,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144)),X145)),s('type.list.list'(X145),sK53(X146,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X143),s('type.num.num',X144)),X145))))) )),
  inference(superposition,[],[f6936,f530])).
fof(f25376,plain,(
  ( ! [X142,X140,X141,X139] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X139),s('type.num.num',X140))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X141),X142)))))) | s('type.list.list'(X141),X142) = s('type.list.list'(X141),'const.list.CONS_2'(s(X141,sK54(X142,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140)))),X141)),s('type.list.list'(X141),sK53(X142,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140)))),X141))))) )),
  inference(superposition,[],[f6936,f616])).
fof(f25399,plain,(
  ( ! [X138,X136,X135,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X137),X138))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X135),s('type.num.num',X136)))))))) | s('type.list.list'(X137),X138) = s('type.list.list'(X137),'const.list.CONS_2'(s(X137,sK54(X138,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136)))),X137)),s('type.list.list'(X137),sK53(X138,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136)))),X137))))) )),
  inference(forward_demodulation,[],[f25375,f4779])).
fof(f25375,plain,(
  ( ! [X138,X136,X135,X137] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X135),s('type.num.num',X136))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X137),X138)))))) | s('type.list.list'(X137),X138) = s('type.list.list'(X137),'const.list.CONS_2'(s(X137,sK54(X138,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136)))),X137)),s('type.list.list'(X137),sK53(X138,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X136)))),X137))))) )),
  inference(superposition,[],[f6936,f611])).
fof(f25374,plain,(
  ( ! [X134,X132,X133,X131] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X131),s('type.num.num',X132))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X133),X134)))))) | s('type.list.list'(X133),X134) = s('type.list.list'(X133),'const.list.CONS_2'(s(X133,sK54(X134,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132)))),X133)),s('type.list.list'(X133),sK53(X134,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X131))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X132)))),X133))))) )),
  inference(superposition,[],[f6936,f615])).
fof(f25398,plain,(
  ( ! [X127,X130,X128,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X127),s('type.num.num',X128)))))))) | s('type.list.list'(X129),X130) = s('type.list.list'(X129),'const.list.CONS_2'(s(X129,sK54(X130,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129)),s('type.list.list'(X129),sK53(X130,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129))))) )),
  inference(forward_demodulation,[],[f25373,f4779])).
fof(f25373,plain,(
  ( ! [X127,X130,X128,X129] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X127),s('type.num.num',X128))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130)))))) | s('type.list.list'(X129),X130) = s('type.list.list'(X129),'const.list.CONS_2'(s(X129,sK54(X130,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129)),s('type.list.list'(X129),sK53(X130,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129))))) )),
  inference(superposition,[],[f6936,f609])).
fof(f25397,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124)))))) | s('type.list.list'(X125),X126) = s('type.list.list'(X125),'const.list.CONS_2'(s(X125,sK54(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125)),s('type.list.list'(X125),sK53(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125))))) )),
  inference(forward_demodulation,[],[f25372,f4779])).
fof(f25372,plain,(
  ( ! [X125,X126,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126)))))) | s('type.list.list'(X125),X126) = s('type.list.list'(X125),'const.list.CONS_2'(s(X125,sK54(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125)),s('type.list.list'(X125),sK53(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X125))))) )),
  inference(superposition,[],[f6936,f467])).
fof(f25371,plain,(
  ( ! [X123,X121,X122] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X121))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123)))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.CONS_2'(s(X122,sK54(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122)),s('type.list.list'(X122),sK53(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122))))) )),
  inference(superposition,[],[f6936,f466])).
fof(f25370,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),X120)))))) | s('type.list.list'(X119),X120) = s('type.list.list'(X119),'const.list.CONS_2'(s(X119,sK54(X120,'const.numeral.iSUB_3'(s(bool,X117),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X118)),X119)),s('type.list.list'(X119),sK53(X120,'const.numeral.iSUB_3'(s(bool,X117),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X118)),X119))))) )),
  inference(superposition,[],[f6936,f589])).
fof(f25396,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X113),s('type.num.num',X114)))))))) | s('type.list.list'(X115),X116) = s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK54(X116,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),sK53(X116,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))),X115))))) )),
  inference(forward_demodulation,[],[f25369,f4779])).
fof(f25369,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X113),s('type.num.num',X114))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116)))))) | s('type.list.list'(X115),X116) = s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK54(X116,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),sK53(X116,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))),X115))))) )),
  inference(superposition,[],[f6936,f614])).
fof(f25368,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X109),s('type.num.num',X110))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112)))))) | s('type.list.list'(X111),X112) = s('type.list.list'(X111),'const.list.CONS_2'(s(X111,sK54(X112,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X111)),s('type.list.list'(X111),sK53(X112,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110)))),X111))))) )),
  inference(superposition,[],[f6936,f613])).
fof(f25367,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X105),s('type.num.num',X106))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108)))))) | s('type.list.list'(X107),X108) = s('type.list.list'(X107),'const.list.CONS_2'(s(X107,sK54(X108,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106)))),X107)),s('type.list.list'(X107),sK53(X108,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X106)))),X107))))) )),
  inference(superposition,[],[f6936,f612])).
fof(f25395,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X101),s('type.num.num',X102)))))))) | s('type.list.list'(X103),X104) = s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK54(X104,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X101))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103)),s('type.list.list'(X103),sK53(X104,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X101))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103))))) )),
  inference(forward_demodulation,[],[f25366,f4779])).
fof(f25366,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X101),s('type.num.num',X102))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104)))))) | s('type.list.list'(X103),X104) = s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK54(X104,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X101))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103)),s('type.list.list'(X103),sK53(X104,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X101))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103))))) )),
  inference(superposition,[],[f6936,f610])).
fof(f25365,plain,(
  ( ! [X99,X100,X98] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X98),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100)))))) | s('type.list.list'(X99),X100) = s('type.list.list'(X99),'const.list.CONS_2'(s(X99,sK54(X100,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X98),s('type.num.num','const.arithmetic.ZERO_0')),X99)),s('type.list.list'(X99),sK53(X100,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X98),s('type.num.num','const.arithmetic.ZERO_0')),X99))))) )),
  inference(superposition,[],[f6936,f454])).
fof(f25364,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X95))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97)))))) | s('type.list.list'(X96),X97) = s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK54(X97,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X95)))),X96)),s('type.list.list'(X96),sK53(X97,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X95)))),X96))))) )),
  inference(superposition,[],[f6936,f459])).
fof(f25363,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X92))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK54(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92)))),X93)),s('type.list.list'(X93),sK53(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92)))),X93))))) )),
  inference(superposition,[],[f6936,f458])).
fof(f25362,plain,(
  ( ! [X90,X91] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91)))))) | s('type.list.list'(X90),X91) = s('type.list.list'(X90),'const.list.CONS_2'(s(X90,sK54(X91,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90)),s('type.list.list'(X90),sK53(X91,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X90))))) )),
  inference(superposition,[],[f6936,f430])).
fof(f25360,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X85))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87)))))) | s('type.list.list'(X86),X87) = s('type.list.list'(X86),'const.list.CONS_2'(s(X86,sK54(X87,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X86)),s('type.list.list'(X86),sK53(X87,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85)))),X86))))) )),
  inference(superposition,[],[f6936,f462])).
fof(f25359,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))))) | s('type.list.list'(X83),X84) = s('type.list.list'(X83),'const.list.CONS_2'(s(X83,sK54(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num',X82)))),X83)),s('type.list.list'(X83),sK53(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num',X82)))),X83))))) )),
  inference(superposition,[],[f6936,f603])).
fof(f25358,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X78))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80)))))) | s('type.list.list'(X79),X80) = s('type.list.list'(X79),'const.list.CONS_2'(s(X79,sK54(X80,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X79)),s('type.list.list'(X79),sK53(X80,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X79))))) )),
  inference(superposition,[],[f6936,f463])).
fof(f25394,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75)))))))) | s('type.list.list'(X76),X77) = s('type.list.list'(X76),'const.list.CONS_2'(s(X76,sK54(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))),X76)),s('type.list.list'(X76),sK53(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))),X76))))) )),
  inference(forward_demodulation,[],[f25357,f4779])).
fof(f25357,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77)))))) | s('type.list.list'(X76),X77) = s('type.list.list'(X76),'const.list.CONS_2'(s(X76,sK54(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))),X76)),s('type.list.list'(X76),sK53(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X75)))),X76))))) )),
  inference(superposition,[],[f6936,f465])).
fof(f25356,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74)))))) | s('type.list.list'(X73),X74) = s('type.list.list'(X73),'const.list.CONS_2'(s(X73,sK54(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X72)))),X73)),s('type.list.list'(X73),sK53(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X72)))),X73))))) )),
  inference(superposition,[],[f6936,f457])).
fof(f25393,plain,(
  ( ! [X70,X71] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),X71))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X70),X71) = s('type.list.list'(X70),'const.list.CONS_2'(s(X70,sK54(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70)),s('type.list.list'(X70),sK53(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70))))) )),
  inference(forward_demodulation,[],[f25355,f4779])).
fof(f25355,plain,(
  ( ! [X70,X71] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),X71)))))) | s('type.list.list'(X70),X71) = s('type.list.list'(X70),'const.list.CONS_2'(s(X70,sK54(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70)),s('type.list.list'(X70),sK53(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70))))) )),
  inference(superposition,[],[f6936,f432])).
fof(f25353,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66)))))) | s('type.list.list'(X65),X66) = s('type.list.list'(X65),'const.list.CONS_2'(s(X65,sK54(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65)),s('type.list.list'(X65),sK53(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65))))) )),
  inference(superposition,[],[f6936,f605])).
fof(f25352,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62)))))) | s('type.list.list'(X61),X62) = s('type.list.list'(X61),'const.list.CONS_2'(s(X61,sK54(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61)),s('type.list.list'(X61),sK53(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61))))) )),
  inference(superposition,[],[f6936,f607])).
fof(f25348,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49)))))) | s('type.list.list'(X48),X49) = s('type.list.list'(X48),'const.list.CONS_2'(s(X48,sK54(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48)),s('type.list.list'(X48),sK53(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48))))) )),
  inference(superposition,[],[f6936,f594])).
fof(f25347,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK54(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44)),s('type.list.list'(X44),sK53(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44))))) )),
  inference(superposition,[],[f6936,f606])).
fof(f25342,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30)))))) | s('type.list.list'(X29),X30) = s('type.list.list'(X29),'const.list.CONS_2'(s(X29,sK54(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29)),s('type.list.list'(X29),sK53(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29))))) )),
  inference(superposition,[],[f6936,f707])).
fof(f25338,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK54(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14)),s('type.list.list'(X14),sK53(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14))))) )),
  inference(superposition,[],[f6936,f592])).
fof(f25073,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.list.list'(X13),X15) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK56('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),sK55('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))))))) )),
  inference(forward_demodulation,[],[f25054,f531])).
fof(f25054,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15)))))) | s('type.list.list'(X13),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15))) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK56('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),sK55('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13))))) )),
  inference(superposition,[],[f4785,f531])).
fof(f25072,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'(X9),X10) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK56('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X9),X10),s('type.list.list'(X9),X11)),X12,X9)),s('type.list.list'(X9),sK55('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X9),X10),s('type.list.list'(X9),X11)),X12,X9)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))))))) )),
  inference(forward_demodulation,[],[f25053,f530])).
fof(f25053,plain,(
  ( ! [X12,X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10)))))) | s('type.list.list'(X9),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X9),X10),s('type.list.list'(X9),X11))) = s('type.list.list'(X9),'const.list.CONS_2'(s(X9,sK56('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X9),X10),s('type.list.list'(X9),X11)),X12,X9)),s('type.list.list'(X9),sK55('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X9),X10),s('type.list.list'(X9),X11)),X12,X9))))) )),
  inference(superposition,[],[f4785,f530])).
fof(f25052,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7)))))) | s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK45(X6,X7,X5)),s('type.list.list'(X5),sK46(X6,X7,X5)))) = s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK56('const.list.CONS_2'(s(X5,sK45(X6,X7,X5)),s('type.list.list'(X5),sK46(X6,X7,X5))),X8,X5)),s('type.list.list'(X5),sK55('const.list.CONS_2'(s(X5,sK45(X6,X7,X5)),s('type.list.list'(X5),sK46(X6,X7,X5))),X8,X5)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7)))) )),
  inference(superposition,[],[f4785,f535])).
fof(f25070,plain,(
  ( ! [X3] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK56('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK55('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) ) | $spl4),
  inference(forward_demodulation,[],[f25050,f644])).
fof(f25050,plain,(
  ( ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK56('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0)),s('type.list.list'(sK0),sK55('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0))))) ) | $spl4),
  inference(superposition,[],[f4785,f644])).
fof(f25069,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK55('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(forward_demodulation,[],[f25049,f495])).
fof(f25049,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0)),s('type.list.list'(X0),sK55('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0))))) )),
  inference(superposition,[],[f4785,f495])).
fof(f25048,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X145),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X146),X147)))))) | s('type.list.list'(X146),X147) = s('type.list.list'(X146),'const.list.CONS_2'(s(X146,sK56(X147,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)),X146)),s('type.list.list'(X146),sK55(X147,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X144),s('type.num.num',X145)),X146))))) )),
  inference(superposition,[],[f4785,f531])).
fof(f25047,plain,(
  ( ! [X142,X140,X143,X141] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X140),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X142),X143)))))) | s('type.list.list'(X142),X143) = s('type.list.list'(X142),'const.list.CONS_2'(s(X142,sK56(X143,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X140),s('type.num.num',X141)),X142)),s('type.list.list'(X142),sK55(X143,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X140),s('type.num.num',X141)),X142))))) )),
  inference(superposition,[],[f4785,f530])).
fof(f25046,plain,(
  ( ! [X138,X136,X139,X137] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X136),s('type.num.num',X137))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X138),X139)))))) | s('type.list.list'(X138),X139) = s('type.list.list'(X138),'const.list.CONS_2'(s(X138,sK56(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137)))),X138)),s('type.list.list'(X138),sK55(X139,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137)))),X138))))) )),
  inference(superposition,[],[f4785,f616])).
fof(f25068,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)))))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK56(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK55(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134))))) )),
  inference(forward_demodulation,[],[f25045,f4779])).
fof(f25045,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135)))))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK56(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134)),s('type.list.list'(X134),sK55(X135,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134))))) )),
  inference(superposition,[],[f4785,f611])).
fof(f25044,plain,(
  ( ! [X130,X128,X131,X129] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X128),s('type.num.num',X129))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X130),X131)))))) | s('type.list.list'(X130),X131) = s('type.list.list'(X130),'const.list.CONS_2'(s(X130,sK56(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129)))),X130)),s('type.list.list'(X130),sK55(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129)))),X130))))) )),
  inference(superposition,[],[f4785,f615])).
fof(f25067,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X124),s('type.num.num',X125)))))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK56(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),sK55(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126))))) )),
  inference(forward_demodulation,[],[f25043,f4779])).
fof(f25043,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X124),s('type.num.num',X125))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127)))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK56(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),sK55(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X125)))),X126))))) )),
  inference(superposition,[],[f4785,f609])).
fof(f25066,plain,(
  ( ! [X123,X121,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.CONS_2'(s(X122,sK56(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122)),s('type.list.list'(X122),sK55(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122))))) )),
  inference(forward_demodulation,[],[f25042,f4779])).
fof(f25042,plain,(
  ( ! [X123,X121,X122] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X121))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123)))))) | s('type.list.list'(X122),X123) = s('type.list.list'(X122),'const.list.CONS_2'(s(X122,sK56(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122)),s('type.list.list'(X122),sK55(X123,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121))),s('type.num.num','const.arithmetic.ZERO_0')),X122))))) )),
  inference(superposition,[],[f4785,f467])).
fof(f25041,plain,(
  ( ! [X118,X120,X119] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X118))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),X120)))))) | s('type.list.list'(X119),X120) = s('type.list.list'(X119),'const.list.CONS_2'(s(X119,sK56(X120,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.ZERO_0')),X119)),s('type.list.list'(X119),sK55(X120,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X118))),s('type.num.num','const.arithmetic.ZERO_0')),X119))))) )),
  inference(superposition,[],[f4785,f466])).
fof(f25040,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117)))))) | s('type.list.list'(X116),X117) = s('type.list.list'(X116),'const.list.CONS_2'(s(X116,sK56(X117,'const.numeral.iSUB_3'(s(bool,X114),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X115)),X116)),s('type.list.list'(X116),sK55(X117,'const.numeral.iSUB_3'(s(bool,X114),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X115)),X116))))) )),
  inference(superposition,[],[f4785,f589])).
fof(f25065,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111)))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK56(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK55(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))) )),
  inference(forward_demodulation,[],[f25039,f4779])).
fof(f25039,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X110),s('type.num.num',X111))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113)))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK56(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112)),s('type.list.list'(X112),sK55(X113,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))),X112))))) )),
  inference(superposition,[],[f4785,f614])).
fof(f25038,plain,(
  ( ! [X109,X107,X108,X106] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X106),s('type.num.num',X107))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109)))))) | s('type.list.list'(X108),X109) = s('type.list.list'(X108),'const.list.CONS_2'(s(X108,sK56(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108)),s('type.list.list'(X108),sK55(X109,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X107)))),X108))))) )),
  inference(superposition,[],[f4785,f613])).
fof(f25037,plain,(
  ( ! [X103,X105,X102,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X102),s('type.num.num',X103))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X104),X105)))))) | s('type.list.list'(X104),X105) = s('type.list.list'(X104),'const.list.CONS_2'(s(X104,sK56(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103)))),X104)),s('type.list.list'(X104),sK55(X105,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103)))),X104))))) )),
  inference(superposition,[],[f4785,f612])).
fof(f25064,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X98),s('type.num.num',X99)))))))) | s('type.list.list'(X100),X101) = s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK56(X101,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),sK55(X101,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))),X100))))) )),
  inference(forward_demodulation,[],[f25036,f4779])).
fof(f25036,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X98),s('type.num.num',X99))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101)))))) | s('type.list.list'(X100),X101) = s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK56(X101,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),sK55(X101,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X99)))),X100))))) )),
  inference(superposition,[],[f4785,f610])).
fof(f25035,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X95),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97)))))) | s('type.list.list'(X96),X97) = s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK56(X97,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X95),s('type.num.num','const.arithmetic.ZERO_0')),X96)),s('type.list.list'(X96),sK55(X97,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X95),s('type.num.num','const.arithmetic.ZERO_0')),X96))))) )),
  inference(superposition,[],[f4785,f454])).
fof(f25034,plain,(
  ( ! [X94,X92,X93] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X93),X94)))))) | s('type.list.list'(X93),X94) = s('type.list.list'(X93),'const.list.CONS_2'(s(X93,sK56(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93)),s('type.list.list'(X93),sK55(X94,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X92)))),X93))))) )),
  inference(superposition,[],[f4785,f459])).
fof(f25033,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X89))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91)))))) | s('type.list.list'(X90),X91) = s('type.list.list'(X90),'const.list.CONS_2'(s(X90,sK56(X91,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)),s('type.list.list'(X90),sK55(X91,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90))))) )),
  inference(superposition,[],[f4785,f458])).
fof(f25032,plain,(
  ( ! [X88,X87] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))))) | s('type.list.list'(X87),X88) = s('type.list.list'(X87),'const.list.CONS_2'(s(X87,sK56(X88,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87)),s('type.list.list'(X87),sK55(X88,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X87))))) )),
  inference(superposition,[],[f4785,f430])).
fof(f25030,plain,(
  ( ! [X83,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X82))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))))) | s('type.list.list'(X83),X84) = s('type.list.list'(X83),'const.list.CONS_2'(s(X83,sK56(X84,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83)),s('type.list.list'(X83),sK55(X84,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83))))) )),
  inference(superposition,[],[f4785,f462])).
fof(f25029,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X78),s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81)))))) | s('type.list.list'(X80),X81) = s('type.list.list'(X80),'const.list.CONS_2'(s(X80,sK56(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X78),s('type.num.num',X79)))),X80)),s('type.list.list'(X80),sK55(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X78),s('type.num.num',X79)))),X80))))) )),
  inference(superposition,[],[f4785,f603])).
fof(f25028,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X75))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77)))))) | s('type.list.list'(X76),X77) = s('type.list.list'(X76),'const.list.CONS_2'(s(X76,sK56(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75)))),X76)),s('type.list.list'(X76),sK55(X77,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75)))),X76))))) )),
  inference(superposition,[],[f4785,f463])).
fof(f25063,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72)))))))) | s('type.list.list'(X73),X74) = s('type.list.list'(X73),'const.list.CONS_2'(s(X73,sK56(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))),X73)),s('type.list.list'(X73),sK55(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))),X73))))) )),
  inference(forward_demodulation,[],[f25027,f4779])).
fof(f25027,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74)))))) | s('type.list.list'(X73),X74) = s('type.list.list'(X73),'const.list.CONS_2'(s(X73,sK56(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))),X73)),s('type.list.list'(X73),sK55(X74,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))),X73))))) )),
  inference(superposition,[],[f4785,f465])).
fof(f25026,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X70),X71)))))) | s('type.list.list'(X70),X71) = s('type.list.list'(X70),'const.list.CONS_2'(s(X70,sK56(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X69)))),X70)),s('type.list.list'(X70),sK55(X71,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X69)))),X70))))) )),
  inference(superposition,[],[f4785,f457])).
fof(f25062,plain,(
  ( ! [X68,X67] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(X67),X68) = s('type.list.list'(X67),'const.list.CONS_2'(s(X67,sK56(X68,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67)),s('type.list.list'(X67),sK55(X68,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67))))) )),
  inference(forward_demodulation,[],[f25025,f4779])).
fof(f25025,plain,(
  ( ! [X68,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X67),X68)))))) | s('type.list.list'(X67),X68) = s('type.list.list'(X67),'const.list.CONS_2'(s(X67,sK56(X68,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67)),s('type.list.list'(X67),sK55(X68,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67))))) )),
  inference(superposition,[],[f4785,f432])).
fof(f25024,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X63),s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66)))))) | s('type.list.list'(X65),X66) = s('type.list.list'(X65),'const.list.CONS_2'(s(X65,sK56(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65)),s('type.list.list'(X65),sK55(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64)))),X65))))) )),
  inference(superposition,[],[f4785,f605])).
fof(f25023,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num',X60))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62)))))) | s('type.list.list'(X61),X62) = s('type.list.list'(X61),'const.list.CONS_2'(s(X61,sK56(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61)),s('type.list.list'(X61),sK55(X62,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61))))) )),
  inference(superposition,[],[f4785,f607])).
fof(f25019,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num',X47))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49)))))) | s('type.list.list'(X48),X49) = s('type.list.list'(X48),'const.list.CONS_2'(s(X48,sK56(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48)),s('type.list.list'(X48),sK55(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X47)))),X48))))) )),
  inference(superposition,[],[f4785,f594])).
fof(f25018,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45)))))) | s('type.list.list'(X44),X45) = s('type.list.list'(X44),'const.list.CONS_2'(s(X44,sK56(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44)),s('type.list.list'(X44),sK55(X45,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44))))) )),
  inference(superposition,[],[f4785,f606])).
fof(f25013,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30)))))) | s('type.list.list'(X29),X30) = s('type.list.list'(X29),'const.list.CONS_2'(s(X29,sK56(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29)),s('type.list.list'(X29),sK55(X30,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))),s('type.num.num',X28)),X29))))) )),
  inference(superposition,[],[f4785,f707])).
fof(f25009,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15)))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK56(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14)),s('type.list.list'(X14),sK55(X15,'const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13)),X14))))) )),
  inference(superposition,[],[f4785,f592])).
fof(f24726,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,happ(s(fun('type.list.list'(X63),bool),X66),s('type.list.list'(X63),X65)))) | s('type.list.list'(X63),'const.list.CONS_2'(s(X63,sK45(X64,X65,X63)),s('type.list.list'(X63),sK46(X64,X65,X63)))) = s('type.list.list'(X63),sK86('const.list.CONS_2'(s(X63,sK45(X64,X65,X63)),s('type.list.list'(X63),sK46(X64,X65,X63))),X66,'type.list.list'(X63))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X65)))) )),
  inference(superposition,[],[f574,f535])).
fof(f24725,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,happ(s(fun('type.list.list'(X58),bool),X61),s('type.list.list'(X58),X60)))) | p(s(bool,happ(s(fun('type.list.list'(X58),bool),X61),s('type.list.list'(X58),X62)))) | s('type.list.list'(X58),X62) != s('type.list.list'(X58),'const.list.CONS_2'(s(X58,sK45(X59,X60,X58)),s('type.list.list'(X58),sK46(X59,X60,X58)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X60)))) )),
  inference(superposition,[],[f573,f535])).
fof(f24716,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)))))) | s('type.num.num',X30) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK91('const.list.CONS_2'(s(X27,sK45(X28,X29,X27)),s('type.list.list'(X27),sK46(X28,X29,X27))),X31,X30,X27)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X29)))) )),
  inference(superposition,[],[f696,f535])).
fof(f24715,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X25))),s('type.num.num',X26)))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK47('const.list.CONS_2'(s(X23,sK45(X24,X25,X23)),s('type.list.list'(X23),sK46(X24,X25,X23))),X26,X23)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X25)))) )),
  inference(superposition,[],[f667,f535])).
fof(f24714,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X22))) | s('type.num.num',X22) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK90(X22,X21,'const.list.CONS_2'(s(X18,sK45(X19,X20,X18)),s('type.list.list'(X18),sK46(X19,X20,X18))),X18)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X20)))) )),
  inference(superposition,[],[f582,f535])).
fof(f24713,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17))) | s('type.num.num',X16) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK89(X17,X16,'const.list.CONS_2'(s(X13,sK45(X14,X15,X13)),s('type.list.list'(X13),sK46(X14,X15,X13))),X13)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15)))) )),
  inference(superposition,[],[f581,f535])).
fof(f24712,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK46(X12,'const.list.CONS_2'(s(X9,sK45(X10,X11,X9)),s('type.list.list'(X9),sK46(X10,X11,X9))),X9)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11)))) )),
  inference(superposition,[],[f534,f535])).
fof(f24709,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),X1) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK46(X0,X1,bool)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(bool),X1))) | s(bool,'T_0') = s(bool,sK45(X0,X1,bool))) )),
  inference(superposition,[],[f535,f471])).
fof(f24613,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f434,f4986,f618])).
fof(f24614,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f4986,f4986,f618])).
fof(f24307,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK91(X21,X19,'const.num.SUC_1'(s('type.num.num',X18)),X20))))) )),
  inference(superposition,[],[f696,f707])).
fof(f24303,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK91(X6,X4,X3,X5))))) )),
  inference(superposition,[],[f696,f592])).
fof(f24301,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),X183))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X184),s('type.num.num',X181)))))) | s('type.num.num',X184) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),sK91(X183,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181)),X184,X182))))) )),
  inference(superposition,[],[f696,f531])).
fof(f24300,plain,(
  ( ! [X177,X175,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X179),s('type.num.num',X175)))))) | s('type.num.num',X179) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),sK91(X178,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X175),s('type.num.num',X176)),X179,X177))))) )),
  inference(superposition,[],[f696,f530])).
fof(f24299,plain,(
  ( ! [X173,X171,X174,X172,X170] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X174),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171)))))))))) | s('type.num.num',X174) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),sK91(X173,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X171)))),X174,X172))))) )),
  inference(superposition,[],[f696,f616])).
fof(f24298,plain,(
  ( ! [X167,X165,X169,X166,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),X168))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X169),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X165),s('type.num.num',X166)))))))))) | s('type.num.num',X169) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),sK91(X168,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166)))),X169,X167))))) )),
  inference(superposition,[],[f696,f611])).
fof(f24297,plain,(
  ( ! [X163,X161,X164,X162,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),X163))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X164),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161)))))))))) | s('type.num.num',X164) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),sK91(X163,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X160))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X161)))),X164,X162))))) )),
  inference(superposition,[],[f696,f615])).
fof(f24296,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),X158))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X159),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X155),s('type.num.num',X156)))))))))) | s('type.num.num',X159) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),sK91(X158,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X155))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156)))),X159,X157))))) )),
  inference(superposition,[],[f696,f609])).
fof(f24295,plain,(
  ( ! [X154,X152,X151,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X154),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151)))))))) | s('type.num.num',X154) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK91(X153,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))),s('type.num.num','const.arithmetic.ZERO_0')),X154,X152))))) )),
  inference(superposition,[],[f696,f467])).
fof(f24294,plain,(
  ( ! [X149,X147,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X150),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X147)))))))) | s('type.num.num',X150) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK91(X149,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0')),X150,X148))))) )),
  inference(superposition,[],[f696,f466])).
fof(f24292,plain,(
  ( ! [X140,X138,X141,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X137),s('type.num.num',X138)))))))))) | s('type.num.num',X141) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK91(X140,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138)))),X141,X139))))) )),
  inference(superposition,[],[f696,f614])).
fof(f24291,plain,(
  ( ! [X134,X132,X136,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X136),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)))))))))) | s('type.num.num',X136) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK91(X135,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X136,X134))))) )),
  inference(superposition,[],[f696,f613])).
fof(f24290,plain,(
  ( ! [X127,X130,X128,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X127),s('type.num.num',X128)))))))))) | s('type.num.num',X131) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK91(X130,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X131,X129))))) )),
  inference(superposition,[],[f696,f612])).
fof(f24289,plain,(
  ( ! [X125,X123,X126,X124,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num',X123)))))))))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK91(X125,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123)))),X126,X124))))) )),
  inference(superposition,[],[f696,f610])).
fof(f24288,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),X120))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X121),s('type.num.num',X118)))))) | s('type.num.num',X121) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),sK91(X120,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num','const.arithmetic.ZERO_0')),X121,X119))))) )),
  inference(superposition,[],[f696,f454])).
fof(f24287,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114)))))))))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK91(X116,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X117,X115))))) )),
  inference(superposition,[],[f696,f459])).
fof(f24286,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X110)))))))))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK91(X112,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110)))),X113,X111))))) )),
  inference(superposition,[],[f696,f458])).
fof(f24283,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X103),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X100)))))))))) | s('type.num.num',X103) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK91(X102,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X100)))),X103,X101))))) )),
  inference(superposition,[],[f696,f462])).
fof(f24282,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X99),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96)))))))))) | s('type.num.num',X99) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),sK91(X98,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96)))),X99,X97))))) )),
  inference(superposition,[],[f696,f603])).
fof(f24281,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X91)))))))))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK91(X93,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X92))))) )),
  inference(superposition,[],[f696,f463])).
fof(f24280,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X90),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X87)))))))))) | s('type.num.num',X90) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK91(X89,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))),X90,X88))))) )),
  inference(superposition,[],[f696,f465])).
fof(f24279,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83)))))))) | s('type.num.num',X86) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK91(X85,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X86,X84))))) )),
  inference(superposition,[],[f696,f457])).
fof(f24277,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X79),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76)))))))))) | s('type.num.num',X79) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK91(X78,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76)))),X79,X77))))) )),
  inference(superposition,[],[f696,f605])).
fof(f24276,plain,(
  ( ! [X70,X74,X72,X71,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num',X71)))))))))) | s('type.num.num',X74) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK91(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X74,X72))))) )),
  inference(superposition,[],[f696,f607])).
fof(f24272,plain,(
  ( ! [X57,X54,X56,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54)))))))))) | s('type.num.num',X57) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK91(X56,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X57,X55))))) )),
  inference(superposition,[],[f696,f606])).
fof(f24271,plain,(
  ( ! [X52,X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49)))))))) | s('type.num.num',X52) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),sK91(X51,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X52,X50))))) )),
  inference(superposition,[],[f696,f594])).
fof(f24268,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))))))) | s('type.num.num',X40) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK91(X39,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X40,X38))))) )),
  inference(superposition,[],[f696,f707])).
fof(f24264,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))))))) | s('type.num.num',X21) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK91(X20,'const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)),X21,X19))))) )),
  inference(superposition,[],[f696,f592])).
fof(f24369,plain,(
  ( ! [X182,X180,X184,X183,X181] : (s('type.num.num',X181) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),sK91(X183,X184,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181)),X182)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),X183))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X181),s('type.num.num',X184))))))) )),
  inference(forward_demodulation,[],[f24258,f531])).
fof(f24258,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),X183))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X181),s('type.num.num',X184)))))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X182),sK91(X183,X184,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X180),s('type.num.num',X181)),X182))))) )),
  inference(superposition,[],[f696,f531])).
fof(f24368,plain,(
  ( ! [X177,X175,X178,X176,X179] : (s('type.num.num',X175) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),sK91(X178,X179,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X175),s('type.num.num',X176)),X177)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X179))))))) )),
  inference(forward_demodulation,[],[f24257,f530])).
fof(f24257,plain,(
  ( ! [X177,X175,X178,X176,X179] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X179)))))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X175),s('type.num.num',X176))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),sK91(X178,X179,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X175),s('type.num.num',X176)),X177))))) )),
  inference(superposition,[],[f696,f530])).
fof(f24367,plain,(
  ( ! [X173,X171,X174,X172,X170] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),sK91(X173,X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X171)))),X172)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num',X174))))))) )),
  inference(forward_demodulation,[],[f24256,f616])).
fof(f24256,plain,(
  ( ! [X173,X171,X174,X172,X170] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),X173))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num',X174)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X171))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X172),sK91(X173,X174,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X171)))),X172))))) )),
  inference(superposition,[],[f696,f616])).
fof(f24366,plain,(
  ( ! [X167,X165,X169,X166,X168] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X165),s('type.num.num',X166))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),sK91(X168,X169,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166)))),X167)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),X168))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X165),s('type.num.num',X166))))),s('type.num.num',X169))))))) )),
  inference(forward_demodulation,[],[f24255,f611])).
fof(f24255,plain,(
  ( ! [X167,X165,X169,X166,X168] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),X168))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X165),s('type.num.num',X166))))),s('type.num.num',X169)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X167),sK91(X168,X169,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166)))),X167))))) )),
  inference(superposition,[],[f696,f611])).
fof(f24365,plain,(
  ( ! [X163,X161,X164,X162,X160] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),sK91(X163,X164,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X160))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X161)))),X162)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),X163))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161))))),s('type.num.num',X164))))))) )),
  inference(forward_demodulation,[],[f24254,f615])).
fof(f24254,plain,(
  ( ! [X163,X161,X164,X162,X160] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),X163))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X160),s('type.num.num',X161))))),s('type.num.num',X164)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X160))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X161))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X162),sK91(X163,X164,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X160))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X161)))),X162))))) )),
  inference(superposition,[],[f696,f615])).
fof(f24364,plain,(
  ( ! [X158,X156,X159,X157,X155] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X155),s('type.num.num',X156))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),sK91(X158,X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X155))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156)))),X157)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),X158))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X155),s('type.num.num',X156))))),s('type.num.num',X159))))))) )),
  inference(forward_demodulation,[],[f24253,f609])).
fof(f24253,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),X158))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X155),s('type.num.num',X156))))),s('type.num.num',X159)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X155))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X157),sK91(X158,X159,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X155))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X156)))),X157))))) )),
  inference(superposition,[],[f696,f609])).
fof(f24363,plain,(
  ( ! [X154,X152,X151,X153] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK91(X153,X154,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))),s('type.num.num','const.arithmetic.ZERO_0')),X152)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))),s('type.num.num',X154))))))) )),
  inference(forward_demodulation,[],[f24252,f467])).
fof(f24252,plain,(
  ( ! [X154,X152,X151,X153] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),X153))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X151))),s('type.num.num',X154)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X152),sK91(X153,X154,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))),s('type.num.num','const.arithmetic.ZERO_0')),X152))))) )),
  inference(superposition,[],[f696,f467])).
fof(f24362,plain,(
  ( ! [X149,X147,X150,X148] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X147))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK91(X149,X150,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0')),X148)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X147))),s('type.num.num',X150))))))) )),
  inference(forward_demodulation,[],[f24251,f466])).
fof(f24251,plain,(
  ( ! [X149,X147,X150,X148] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X149))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X147))),s('type.num.num',X150)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK91(X149,X150,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0')),X148))))) )),
  inference(superposition,[],[f696,f466])).
fof(f24359,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X137),s('type.num.num',X138))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK91(X140,X141,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138)))),X139)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X137),s('type.num.num',X138))))),s('type.num.num',X141))))))) )),
  inference(forward_demodulation,[],[f24249,f614])).
fof(f24249,plain,(
  ( ! [X140,X138,X141,X139,X137] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X137),s('type.num.num',X138))))),s('type.num.num',X141)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK91(X140,X141,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X137))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X138)))),X139))))) )),
  inference(superposition,[],[f696,f614])).
fof(f24358,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK91(X135,X136,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num',X136))))))) )),
  inference(forward_demodulation,[],[f24248,f613])).
fof(f24248,plain,(
  ( ! [X134,X132,X136,X135,X133] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))))),s('type.num.num',X136)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK91(X135,X136,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))),X134))))) )),
  inference(superposition,[],[f696,f613])).
fof(f24357,plain,(
  ( ! [X127,X130,X128,X131,X129] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X127),s('type.num.num',X128))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK91(X130,X131,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X127),s('type.num.num',X128))))),s('type.num.num',X131))))))) )),
  inference(forward_demodulation,[],[f24247,f612])).
fof(f24247,plain,(
  ( ! [X127,X130,X128,X131,X129] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X127),s('type.num.num',X128))))),s('type.num.num',X131)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK91(X130,X131,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))),X129))))) )),
  inference(superposition,[],[f696,f612])).
fof(f24356,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num',X123))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK91(X125,X126,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123)))),X124)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num',X123))))),s('type.num.num',X126))))))) )),
  inference(forward_demodulation,[],[f24246,f610])).
fof(f24246,plain,(
  ( ! [X125,X123,X126,X124,X122] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num',X123))))),s('type.num.num',X126)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK91(X125,X126,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X122))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X123)))),X124))))) )),
  inference(superposition,[],[f696,f610])).
fof(f24355,plain,(
  ( ! [X121,X118,X120,X119] : (s('type.num.num',X118) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),sK91(X120,X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num','const.arithmetic.ZERO_0')),X119)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),X120))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num',X121))))))) )),
  inference(forward_demodulation,[],[f24245,f454])).
fof(f24245,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),X120))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num',X121)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X119),sK91(X120,X121,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X118),s('type.num.num','const.arithmetic.ZERO_0')),X119))))) )),
  inference(superposition,[],[f696,f454])).
fof(f24354,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK91(X116,X117,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))))),s('type.num.num',X117))))))) )),
  inference(forward_demodulation,[],[f24244,f459])).
fof(f24244,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X114))))),s('type.num.num',X117)))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK91(X116,X117,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115))))) )),
  inference(superposition,[],[f696,f459])).
fof(f24353,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK91(X112,X113,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110)))),X111)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X110))))),s('type.num.num',X113))))))) )),
  inference(forward_demodulation,[],[f24243,f458])).
fof(f24243,plain,(
  ( ! [X111,X112,X110,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X110))))),s('type.num.num',X113)))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK91(X112,X113,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110)))),X111))))) )),
  inference(superposition,[],[f696,f458])).
fof(f24348,plain,(
  ( ! [X103,X101,X102,X100] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X100))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK91(X102,X103,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X100)))),X101)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X100))))),s('type.num.num',X103))))))) )),
  inference(forward_demodulation,[],[f24240,f462])).
fof(f24240,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X100))))),s('type.num.num',X103)))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X100))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK91(X102,X103,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X100)))),X101))))) )),
  inference(superposition,[],[f696,f462])).
fof(f24347,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num','const.num.SUC_1'(s('type.num.num',X95))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),sK91(X98,X99,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96)))),X97)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99))))))))) )),
  inference(forward_demodulation,[],[f24346,f6799])).
fof(f24346,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X99)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),sK91(X98,X99,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96)))),X97))))) )),
  inference(forward_demodulation,[],[f24239,f17113])).
fof(f24239,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))))),s('type.num.num',X99)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),sK91(X98,X99,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X96)))),X97))))) )),
  inference(superposition,[],[f696,f603])).
fof(f24345,plain,(
  ( ! [X94,X92,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK91(X93,X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X92)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X94))))))))) )),
  inference(forward_demodulation,[],[f24344,f463])).
fof(f24344,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X94)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK91(X93,X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X92))))) )),
  inference(forward_demodulation,[],[f24238,f17112])).
fof(f24238,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X91))))),s('type.num.num',X94)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK91(X93,X94,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X92))))) )),
  inference(superposition,[],[f696,f463])).
fof(f24343,plain,(
  ( ! [X90,X88,X87,X89] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK91(X89,X90,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))),X88)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X90))))))))) )),
  inference(forward_demodulation,[],[f24342,f465])).
fof(f24342,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X90)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK91(X89,X90,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))),X88))))) )),
  inference(forward_demodulation,[],[f24237,f17111])).
fof(f24237,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))),s('type.num.num',X90)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK91(X89,X90,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87)))),X88))))) )),
  inference(superposition,[],[f696,f465])).
fof(f24341,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK91(X85,X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X84)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83))),s('type.num.num',X86))))))) )),
  inference(forward_demodulation,[],[f24236,f457])).
fof(f24236,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X83))),s('type.num.num',X86)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK91(X85,X86,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X84))))) )),
  inference(superposition,[],[f696,f457])).
fof(f24337,plain,(
  ( ! [X78,X76,X79,X77,X75] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK91(X78,X79,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76)))),X77)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))))),s('type.num.num',X79))))))) )),
  inference(forward_demodulation,[],[f24234,f605])).
fof(f24234,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X75),s('type.num.num',X76))))),s('type.num.num',X79)))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK91(X78,X79,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76)))),X77))))) )),
  inference(superposition,[],[f696,f605])).
fof(f24336,plain,(
  ( ! [X70,X74,X72,X71,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num',X71))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK91(X73,X74,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num',X71))))),s('type.num.num',X74))))))) )),
  inference(forward_demodulation,[],[f24233,f607])).
fof(f24233,plain,(
  ( ! [X70,X74,X72,X71,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X70),s('type.num.num',X71))))),s('type.num.num',X74)))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK91(X73,X74,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72))))) )),
  inference(superposition,[],[f696,f607])).
fof(f24328,plain,(
  ( ! [X57,X54,X56,X55,X53] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK91(X56,X57,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54))))),s('type.num.num',X57))))))) )),
  inference(forward_demodulation,[],[f24229,f606])).
fof(f24229,plain,(
  ( ! [X57,X54,X56,X55,X53] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X53),s('type.num.num',X54))))),s('type.num.num',X57)))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK91(X56,X57,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55))))) )),
  inference(superposition,[],[f696,f606])).
fof(f24327,plain,(
  ( ! [X52,X50,X48,X51,X49] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),sK91(X51,X52,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.num.num',X52))))))) )),
  inference(forward_demodulation,[],[f24228,f594])).
fof(f24228,plain,(
  ( ! [X52,X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.num.num',X52)))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),sK91(X51,X52,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))),X50))))) )),
  inference(superposition,[],[f696,f594])).
fof(f24323,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK91(X39,X40,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X38)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40))))))))) )),
  inference(forward_demodulation,[],[f24322,f707])).
fof(f24322,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK91(X39,X40,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X38))))) )),
  inference(forward_demodulation,[],[f24225,f17113])).
fof(f24225,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))),s('type.num.num',X40)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK91(X39,X40,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)),X38))))) )),
  inference(superposition,[],[f696,f707])).
fof(f24221,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X20))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17))),s('type.num.num',X21)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),sK91(X20,X21,'const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)),X19))))) )),
  inference(superposition,[],[f696,f592])).
fof(f24213,plain,(
  ( ! [X14,X17,X15,X13,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17)))))) | s('type.num.num',X16) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK91('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X17,X16,X13))))) )),
  inference(superposition,[],[f696,f531])).
fof(f24212,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X12)))))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK91('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X8),X9),s('type.list.list'(X8),X10)),X12,X11,X8))))) )),
  inference(superposition,[],[f696,f530])).
fof(f24210,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK91('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X5,X4,sK0))))) ) | $spl4),
  inference(superposition,[],[f696,f644])).
fof(f24209,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK91('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X3,X2,X0))))) )),
  inference(superposition,[],[f696,f495])).
fof(f24118,plain,(
  ( ! [X308,X310,X309] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X308),s('type.num.num',X309))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X308))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X309)))),X310,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X310),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X308),s('type.num.num',X309))))))))) )),
  inference(forward_demodulation,[],[f24089,f616])).
fof(f24089,plain,(
  ( ! [X308,X310,X309] : (~p(s(bool,happ(s(fun('type.num.num',bool),X310),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X308),s('type.num.num',X309)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X308))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X309))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X308))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X309)))),X310,'type.num.num'))) )),
  inference(superposition,[],[f574,f616])).
fof(f24112,plain,(
  ( ! [X261,X263,X262,X264] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X261),s('type.num.num',X262))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X263),X264)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X263),sK53(X264,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X262)))),X263)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X261),s('type.num.num',X262))))))))) )),
  inference(forward_demodulation,[],[f24069,f616])).
fof(f24069,plain,(
  ( ! [X261,X263,X262,X264] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X263),sK53(X264,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X262)))),X263)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X261),s('type.num.num',X262)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X261))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X262))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X263),X264))))))) )),
  inference(superposition,[],[f6935,f616])).
fof(f24111,plain,(
  ( ! [X257,X259,X260,X258] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X257),s('type.num.num',X258))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X259),X260)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X259),sK55(X260,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X257))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X258)))),X259)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X257),s('type.num.num',X258))))))))) )),
  inference(forward_demodulation,[],[f24068,f616])).
fof(f24068,plain,(
  ( ! [X257,X259,X260,X258] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X259),sK55(X260,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X257))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X258)))),X259)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X257),s('type.num.num',X258)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X257))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X258))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X259),X260))))))) )),
  inference(superposition,[],[f4786,f616])).
fof(f24102,plain,(
  ( ! [X208,X206,X207,X205] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X205),s('type.num.num',X206))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),sK47(X208,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X205))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X206)))),X207)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X205),s('type.num.num',X206))))))))) )),
  inference(forward_demodulation,[],[f24051,f616])).
fof(f24051,plain,(
  ( ! [X208,X206,X207,X205] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X205),s('type.num.num',X206)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X205))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X206))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),sK47(X208,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X205))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X206)))),X207))))) )),
  inference(superposition,[],[f667,f616])).
fof(f24044,plain,(
  ( ! [X182,X183,X181] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X183))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X181),s('type.num.num',X182))))))) | s('type.num.num',X183) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182)))))) )),
  inference(superposition,[],[f622,f616])).
fof(f24096,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f24000,f616])).
fof(f24000,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f616])).
fof(f23999,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f616])).
fof(f23998,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f616])).
fof(f24095,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f23997,f616])).
fof(f23997,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f616])).
fof(f24094,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f23996,f616])).
fof(f23996,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f616])).
fof(f23894,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f616,f471])).
fof(f23843,plain,(
  ( ! [X302,X304,X303] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X302),s('type.num.num',X303))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X302))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303)))),X304,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X304),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X302),s('type.num.num',X303))))))))) )),
  inference(forward_demodulation,[],[f23814,f615])).
fof(f23814,plain,(
  ( ! [X302,X304,X303] : (~p(s(bool,happ(s(fun('type.num.num',bool),X304),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X302),s('type.num.num',X303)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X302))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X302))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303)))),X304,'type.num.num'))) )),
  inference(superposition,[],[f574,f615])).
fof(f23837,plain,(
  ( ! [X255,X257,X256,X258] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X255),s('type.num.num',X256))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X257),X258)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X257),sK53(X258,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X255))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X256)))),X257)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X255),s('type.num.num',X256))))))))) )),
  inference(forward_demodulation,[],[f23794,f615])).
fof(f23794,plain,(
  ( ! [X255,X257,X256,X258] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X257),sK53(X258,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X255))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X256)))),X257)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X255),s('type.num.num',X256)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X255))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X256))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X257),X258))))))) )),
  inference(superposition,[],[f6935,f615])).
fof(f23836,plain,(
  ( ! [X253,X251,X254,X252] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X251),s('type.num.num',X252))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X253),X254)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X253),sK55(X254,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X251))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X252)))),X253)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X251),s('type.num.num',X252))))))))) )),
  inference(forward_demodulation,[],[f23793,f615])).
fof(f23793,plain,(
  ( ! [X253,X251,X254,X252] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X253),sK55(X254,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X251))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X252)))),X253)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X251),s('type.num.num',X252)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X251))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X252))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X253),X254))))))) )),
  inference(superposition,[],[f4786,f615])).
fof(f23827,plain,(
  ( ! [X202,X200,X199,X201] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X199),s('type.num.num',X200))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),sK47(X202,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X199))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X200)))),X201)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X199),s('type.num.num',X200))))))))) )),
  inference(forward_demodulation,[],[f23776,f615])).
fof(f23776,plain,(
  ( ! [X202,X200,X199,X201] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),X202))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X199),s('type.num.num',X200)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X199))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X200))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X201),sK47(X202,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X199))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X200)))),X201))))) )),
  inference(superposition,[],[f667,f615])).
fof(f23769,plain,(
  ( ! [X177,X175,X176] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X177))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X175),s('type.num.num',X176))))))) | s('type.num.num',X177) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X176)))))) )),
  inference(superposition,[],[f622,f615])).
fof(f23821,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f23727,f615])).
fof(f23727,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f615])).
fof(f23726,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f615])).
fof(f23725,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f615])).
fof(f23820,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f23724,f615])).
fof(f23724,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f615])).
fof(f23819,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f23723,f615])).
fof(f23723,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f615])).
fof(f23623,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f615,f471])).
fof(f23581,plain,(
  ( ! [X296,X298,X297] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X296),s('type.num.num',X297))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X296))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297)))),X298,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X298),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X296),s('type.num.num',X297))))))))) )),
  inference(forward_demodulation,[],[f23549,f614])).
fof(f23549,plain,(
  ( ! [X296,X298,X297] : (~p(s(bool,happ(s(fun('type.num.num',bool),X298),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X296),s('type.num.num',X297)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X296))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X296))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X297)))),X298,'type.num.num'))) )),
  inference(superposition,[],[f574,f614])).
fof(f23577,plain,(
  ( ! [X251,X249,X252,X250] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),X252))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X249),s('type.num.num',X250)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),sK53(X252,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X249))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X250)))),X251)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X249),s('type.num.num',X250))))))))) )),
  inference(forward_demodulation,[],[f23576,f4779])).
fof(f23576,plain,(
  ( ! [X251,X249,X252,X250] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X249),s('type.num.num',X250))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),X252)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),sK53(X252,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X249))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X250)))),X251)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X249),s('type.num.num',X250))))))))) )),
  inference(forward_demodulation,[],[f23529,f614])).
fof(f23529,plain,(
  ( ! [X251,X249,X252,X250] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),sK53(X252,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X249))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X250)))),X251)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X249),s('type.num.num',X250)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X249))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X250))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X251),X252))))))) )),
  inference(superposition,[],[f6935,f614])).
fof(f23575,plain,(
  ( ! [X246,X248,X247,X245] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),X248))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X245),s('type.num.num',X246)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),sK55(X248,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X245))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X246)))),X247)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X245),s('type.num.num',X246))))))))) )),
  inference(forward_demodulation,[],[f23574,f4779])).
fof(f23574,plain,(
  ( ! [X246,X248,X247,X245] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X245),s('type.num.num',X246))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),X248)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),sK55(X248,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X245))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X246)))),X247)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X245),s('type.num.num',X246))))))))) )),
  inference(forward_demodulation,[],[f23528,f614])).
fof(f23528,plain,(
  ( ! [X246,X248,X247,X245] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),sK55(X248,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X245))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X246)))),X247)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X245),s('type.num.num',X246)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X245))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X246))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X247),X248))))))) )),
  inference(superposition,[],[f4786,f614])).
fof(f23563,plain,(
  ( ! [X196,X194,X195,X193] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X193),s('type.num.num',X194))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),sK47(X196,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X194)))),X195)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),X196))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X193),s('type.num.num',X194))))))))) )),
  inference(forward_demodulation,[],[f23511,f614])).
fof(f23511,plain,(
  ( ! [X196,X194,X195,X193] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),X196))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X193),s('type.num.num',X194)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X194))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X195),sK47(X196,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X194)))),X195))))) )),
  inference(superposition,[],[f667,f614])).
fof(f23504,plain,(
  ( ! [X171,X169,X170] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X169),s('type.num.num',X170))))))) | s('type.num.num',X171) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X169))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X170)))))) )),
  inference(superposition,[],[f622,f614])).
fof(f23557,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f23464,f614])).
fof(f23464,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f614])).
fof(f23463,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f614])).
fof(f23462,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f614])).
fof(f23556,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f23461,f614])).
fof(f23461,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f614])).
fof(f23555,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f23554,f614])).
fof(f23554,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f23460,f457])).
fof(f23460,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f614])).
fof(f23323,plain,(
  ( ! [X292,X290,X291] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X290),s('type.num.num',X291))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X290))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X291)))),X292,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X292),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X290),s('type.num.num',X291))))))))) )),
  inference(forward_demodulation,[],[f23294,f613])).
fof(f23294,plain,(
  ( ! [X292,X290,X291] : (~p(s(bool,happ(s(fun('type.num.num',bool),X292),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X290),s('type.num.num',X291)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X290))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X291))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X290))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X291)))),X292,'type.num.num'))) )),
  inference(superposition,[],[f574,f613])).
fof(f23317,plain,(
  ( ! [X243,X246,X244,X245] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X243),s('type.num.num',X244))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X245),X246)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X245),sK53(X246,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X243))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X244)))),X245)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X243),s('type.num.num',X244))))))))) )),
  inference(forward_demodulation,[],[f23274,f613])).
fof(f23274,plain,(
  ( ! [X243,X246,X244,X245] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X245),sK53(X246,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X243))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X244)))),X245)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X243),s('type.num.num',X244)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X243))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X244))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X245),X246))))))) )),
  inference(superposition,[],[f6935,f613])).
fof(f23316,plain,(
  ( ! [X241,X239,X242,X240] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X239),s('type.num.num',X240))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X241),X242)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X241),sK55(X242,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X239))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X240)))),X241)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X239),s('type.num.num',X240))))))))) )),
  inference(forward_demodulation,[],[f23273,f613])).
fof(f23273,plain,(
  ( ! [X241,X239,X242,X240] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X241),sK55(X242,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X239))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X240)))),X241)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X239),s('type.num.num',X240)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X239))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X240))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X241),X242))))))) )),
  inference(superposition,[],[f4786,f613])).
fof(f23307,plain,(
  ( ! [X189,X187,X190,X188] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X187),s('type.num.num',X188))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X189),sK47(X190,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X188)))),X189)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X189),X190))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X187),s('type.num.num',X188))))))))) )),
  inference(forward_demodulation,[],[f23256,f613])).
fof(f23256,plain,(
  ( ! [X189,X187,X190,X188] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X189),X190))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X187),s('type.num.num',X188)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X188))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X189),sK47(X190,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X188)))),X189))))) )),
  inference(superposition,[],[f667,f613])).
fof(f23249,plain,(
  ( ! [X165,X163,X164] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X163),s('type.num.num',X164))))))) | s('type.num.num',X165) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X164)))))) )),
  inference(superposition,[],[f622,f613])).
fof(f23301,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f23211,f613])).
fof(f23211,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f613])).
fof(f23210,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f613])).
fof(f23209,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f613])).
fof(f23300,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f23208,f613])).
fof(f23208,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f613])).
fof(f23299,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f23207,f613])).
fof(f23207,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f613])).
fof(f23064,plain,(
  ( ! [X285,X284,X286] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X284),s('type.num.num',X285))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X284))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X285)))),X286,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X286),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X284),s('type.num.num',X285))))))))) )),
  inference(forward_demodulation,[],[f23035,f612])).
fof(f23035,plain,(
  ( ! [X285,X284,X286] : (~p(s(bool,happ(s(fun('type.num.num',bool),X286),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X284),s('type.num.num',X285)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X284))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X285))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X284))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X285)))),X286,'type.num.num'))) )),
  inference(superposition,[],[f574,f612])).
fof(f23058,plain,(
  ( ! [X239,X237,X240,X238] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X237),s('type.num.num',X238))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X239),X240)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X239),sK53(X240,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X237))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X238)))),X239)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X237),s('type.num.num',X238))))))))) )),
  inference(forward_demodulation,[],[f23015,f612])).
fof(f23015,plain,(
  ( ! [X239,X237,X240,X238] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X239),sK53(X240,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X237))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X238)))),X239)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X237),s('type.num.num',X238)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X237))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X238))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X239),X240))))))) )),
  inference(superposition,[],[f6935,f612])).
fof(f23057,plain,(
  ( ! [X235,X233,X236,X234] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X233),s('type.num.num',X234))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X235),X236)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X235),sK55(X236,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X233))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X234)))),X235)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X233),s('type.num.num',X234))))))))) )),
  inference(forward_demodulation,[],[f23014,f612])).
fof(f23014,plain,(
  ( ! [X235,X233,X236,X234] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X235),sK55(X236,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X233))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X234)))),X235)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X233),s('type.num.num',X234)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X233))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X234))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X235),X236))))))) )),
  inference(superposition,[],[f4786,f612])).
fof(f23048,plain,(
  ( ! [X182,X184,X183,X181] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),sK47(X184,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182)))),X183)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),X184))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182))))))))) )),
  inference(forward_demodulation,[],[f22997,f612])).
fof(f22997,plain,(
  ( ! [X182,X184,X183,X181] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),X184))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X183),sK47(X184,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182)))),X183))))) )),
  inference(superposition,[],[f667,f612])).
fof(f22990,plain,(
  ( ! [X158,X159,X157] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X159))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X157),s('type.num.num',X158))))))) | s('type.num.num',X159) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X157))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X158)))))) )),
  inference(superposition,[],[f622,f612])).
fof(f23042,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f22954,f612])).
fof(f22954,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f612])).
fof(f22953,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f612])).
fof(f22952,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f612])).
fof(f23041,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f22951,f612])).
fof(f22951,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f612])).
fof(f23040,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f22950,f612])).
fof(f22950,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f612])).
fof(f22834,plain,(
  ( ! [X280,X279,X278] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X278),s('type.num.num',X279))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X278))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X279)))),X280,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X280),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X278),s('type.num.num',X279))))))))) )),
  inference(forward_demodulation,[],[f22802,f611])).
fof(f22802,plain,(
  ( ! [X280,X279,X278] : (~p(s(bool,happ(s(fun('type.num.num',bool),X280),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X278),s('type.num.num',X279)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X278))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X279))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X278))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X279)))),X280,'type.num.num'))) )),
  inference(superposition,[],[f574,f611])).
fof(f22830,plain,(
  ( ! [X231,X233,X234,X232] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),X234))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X231),s('type.num.num',X232)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),sK53(X234,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X231))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X232)))),X233)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X231),s('type.num.num',X232))))))))) )),
  inference(forward_demodulation,[],[f22829,f4779])).
fof(f22829,plain,(
  ( ! [X231,X233,X234,X232] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X231),s('type.num.num',X232))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),X234)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),sK53(X234,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X231))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X232)))),X233)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X231),s('type.num.num',X232))))))))) )),
  inference(forward_demodulation,[],[f22782,f611])).
fof(f22782,plain,(
  ( ! [X231,X233,X234,X232] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),sK53(X234,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X231))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X232)))),X233)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X231),s('type.num.num',X232)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X231))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X232))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X233),X234))))))) )),
  inference(superposition,[],[f6935,f611])).
fof(f22828,plain,(
  ( ! [X229,X227,X230,X228] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),X230))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X227),s('type.num.num',X228)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),sK55(X230,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X227))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X228)))),X229)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X227),s('type.num.num',X228))))))))) )),
  inference(forward_demodulation,[],[f22827,f4779])).
fof(f22827,plain,(
  ( ! [X229,X227,X230,X228] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X227),s('type.num.num',X228))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),X230)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),sK55(X230,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X227))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X228)))),X229)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X227),s('type.num.num',X228))))))))) )),
  inference(forward_demodulation,[],[f22781,f611])).
fof(f22781,plain,(
  ( ! [X229,X227,X230,X228] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),sK55(X230,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X227))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X228)))),X229)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X227),s('type.num.num',X228)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X227))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X228))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X229),X230))))))) )),
  inference(superposition,[],[f4786,f611])).
fof(f22816,plain,(
  ( ! [X177,X175,X178,X176] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X175),s('type.num.num',X176))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),sK47(X178,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176)))),X177)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X175),s('type.num.num',X176))))))))) )),
  inference(forward_demodulation,[],[f22764,f611])).
fof(f22764,plain,(
  ( ! [X177,X175,X178,X176] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),X178))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X175),s('type.num.num',X176)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X177),sK47(X178,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X176)))),X177))))) )),
  inference(superposition,[],[f667,f611])).
fof(f22757,plain,(
  ( ! [X152,X151,X153] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X153))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X151),s('type.num.num',X152))))))) | s('type.num.num',X153) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X151))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X152)))))) )),
  inference(superposition,[],[f622,f611])).
fof(f22810,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f22723,f611])).
fof(f22723,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f611])).
fof(f22722,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f611])).
fof(f22721,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f611])).
fof(f22809,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f22720,f611])).
fof(f22720,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f611])).
fof(f22808,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f22807,f611])).
fof(f22807,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f22719,f457])).
fof(f22719,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f611])).
fof(f22627,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f611,f471])).
fof(f22578,plain,(
  ( ! [X273,X272,X274] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X272),s('type.num.num',X273))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X273)))),X274,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X274),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X272),s('type.num.num',X273))))))))) )),
  inference(forward_demodulation,[],[f22545,f610])).
fof(f22545,plain,(
  ( ! [X273,X272,X274] : (~p(s(bool,happ(s(fun('type.num.num',bool),X274),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X272),s('type.num.num',X273)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X273))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X272))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X273)))),X274,'type.num.num'))) )),
  inference(superposition,[],[f574,f610])).
fof(f22573,plain,(
  ( ! [X227,X225,X228,X226] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),X228))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X225),s('type.num.num',X226)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),sK53(X228,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X225))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X226)))),X227)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X225),s('type.num.num',X226))))))))) )),
  inference(forward_demodulation,[],[f22572,f4779])).
fof(f22572,plain,(
  ( ! [X227,X225,X228,X226] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X225),s('type.num.num',X226))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),X228)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),sK53(X228,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X225))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X226)))),X227)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X225),s('type.num.num',X226))))))))) )),
  inference(forward_demodulation,[],[f22525,f610])).
fof(f22525,plain,(
  ( ! [X227,X225,X228,X226] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),sK53(X228,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X225))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X226)))),X227)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X225),s('type.num.num',X226)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X225))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X226))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X227),X228))))))) )),
  inference(superposition,[],[f6935,f610])).
fof(f22571,plain,(
  ( ! [X222,X223,X221,X224] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),X224))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X221),s('type.num.num',X222)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),sK55(X224,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X221))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X222)))),X223)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X221),s('type.num.num',X222))))))))) )),
  inference(forward_demodulation,[],[f22570,f4779])).
fof(f22570,plain,(
  ( ! [X222,X223,X221,X224] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X221),s('type.num.num',X222))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),X224)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),sK55(X224,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X221))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X222)))),X223)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X221),s('type.num.num',X222))))))))) )),
  inference(forward_demodulation,[],[f22524,f610])).
fof(f22524,plain,(
  ( ! [X222,X223,X221,X224] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),sK55(X224,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X221))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X222)))),X223)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X221),s('type.num.num',X222)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X221))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X222))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X223),X224))))))) )),
  inference(superposition,[],[f4786,f610])).
fof(f22559,plain,(
  ( ! [X171,X169,X172,X170] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X169),s('type.num.num',X170))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X171),sK47(X172,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X169))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X170)))),X171)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X171),X172))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X169),s('type.num.num',X170))))))))) )),
  inference(forward_demodulation,[],[f22507,f610])).
fof(f22507,plain,(
  ( ! [X171,X169,X172,X170] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X171),X172))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X169),s('type.num.num',X170)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X169))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X170))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X171),sK47(X172,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X169))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X170)))),X171))))) )),
  inference(superposition,[],[f667,f610])).
fof(f22500,plain,(
  ( ! [X146,X147,X145] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X147))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X145),s('type.num.num',X146))))))) | s('type.num.num',X147) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X145))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X146)))))) )),
  inference(superposition,[],[f622,f610])).
fof(f22553,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f22468,f610])).
fof(f22468,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f610])).
fof(f22467,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f610])).
fof(f22466,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f610])).
fof(f22552,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f22465,f610])).
fof(f22465,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f610])).
fof(f22551,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f22550,f610])).
fof(f22550,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f22464,f457])).
fof(f22464,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f610])).
fof(f22341,plain,(
  ( ! [X267,X268,X266] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X266),s('type.num.num',X267))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X266))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X267)))),X268,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X268),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X266),s('type.num.num',X267))))))))) )),
  inference(forward_demodulation,[],[f22309,f609])).
fof(f22309,plain,(
  ( ! [X267,X268,X266] : (~p(s(bool,happ(s(fun('type.num.num',bool),X268),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X266),s('type.num.num',X267)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X266))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X267))))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X266))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X267)))),X268,'type.num.num'))) )),
  inference(superposition,[],[f574,f609])).
fof(f22337,plain,(
  ( ! [X222,X220,X219,X221] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),X222))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X219),s('type.num.num',X220)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),sK53(X222,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X219))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X220)))),X221)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X219),s('type.num.num',X220))))))))) )),
  inference(forward_demodulation,[],[f22336,f4779])).
fof(f22336,plain,(
  ( ! [X222,X220,X219,X221] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X219),s('type.num.num',X220))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),X222)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),sK53(X222,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X219))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X220)))),X221)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X219),s('type.num.num',X220))))))))) )),
  inference(forward_demodulation,[],[f22289,f609])).
fof(f22289,plain,(
  ( ! [X222,X220,X219,X221] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),sK53(X222,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X219))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X220)))),X221)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X219),s('type.num.num',X220)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X219))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X220))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X221),X222))))))) )),
  inference(superposition,[],[f6935,f609])).
fof(f22335,plain,(
  ( ! [X218,X216,X215,X217] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),X218))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X215),s('type.num.num',X216)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),sK55(X218,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X216)))),X217)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X215),s('type.num.num',X216))))))))) )),
  inference(forward_demodulation,[],[f22334,f4779])).
fof(f22334,plain,(
  ( ! [X218,X216,X215,X217] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X215),s('type.num.num',X216))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),X218)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),sK55(X218,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X216)))),X217)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X215),s('type.num.num',X216))))))))) )),
  inference(forward_demodulation,[],[f22288,f609])).
fof(f22288,plain,(
  ( ! [X218,X216,X215,X217] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),sK55(X218,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X216)))),X217)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X215),s('type.num.num',X216)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X216))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X217),X218))))))) )),
  inference(superposition,[],[f4786,f609])).
fof(f22323,plain,(
  ( ! [X165,X163,X166,X164] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X163),s('type.num.num',X164))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),sK47(X166,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X164)))),X165)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X166))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X163),s('type.num.num',X164))))))))) )),
  inference(forward_demodulation,[],[f22271,f609])).
fof(f22271,plain,(
  ( ! [X165,X163,X166,X164] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),X166))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X163),s('type.num.num',X164)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X164))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X165),sK47(X166,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X164)))),X165))))) )),
  inference(superposition,[],[f667,f609])).
fof(f22264,plain,(
  ( ! [X140,X141,X139] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X141))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X139),s('type.num.num',X140))))))) | s('type.num.num',X141) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X139))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X140)))))) )),
  inference(superposition,[],[f622,f609])).
fof(f22317,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48)))))))) )),
  inference(forward_demodulation,[],[f22234,f609])).
fof(f22234,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X47),s('type.num.num',X48))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48)))),X51,X50,X49))))) )),
  inference(superposition,[],[f582,f609])).
fof(f22233,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X42),s('type.num.num',X43))))),s('type.num.num',X46))) | s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),sK90(X46,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43)))),X45,X44))))) )),
  inference(superposition,[],[f582,f609])).
fof(f22232,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f581,f609])).
fof(f22316,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36)))) )),
  inference(forward_demodulation,[],[f22231,f609])).
fof(f22231,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK89(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f581,f609])).
fof(f22315,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29)))))) )),
  inference(forward_demodulation,[],[f22314,f609])).
fof(f22314,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f22230,f457])).
fof(f22230,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f609])).
fof(f22142,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f609,f471])).
fof(f22119,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(subsumption_resolution,[],[f21990,f434])).
fof(f21990,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f636,f471])).
fof(f22107,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X75),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.num.SUC_1'(s('type.num.num',X72)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))))))) )),
  inference(forward_demodulation,[],[f21978,f6799])).
fof(f21978,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X75),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))))))))))) )),
  inference(superposition,[],[f636,f603])).
fof(f21960,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X15))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))))))))) )),
  inference(superposition,[],[f636,f592])).
fof(f21954,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num',X6))))),s('type.num.num',X7)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num',X7))))))) )),
  inference(superposition,[],[f636,f606])).
fof(f22085,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X4))))) )),
  inference(forward_demodulation,[],[f21953,f707])).
fof(f21953,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X4)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num',X4))))))) )),
  inference(superposition,[],[f636,f594])).
fof(f22066,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X75)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))))),s('type.num.num',X75))))) )),
  inference(forward_demodulation,[],[f21940,f707])).
fof(f21940,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))))),s('type.num.num',X75)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))))),s('type.num.num',X75))))))) )),
  inference(superposition,[],[f636,f603])).
fof(f22065,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))))),s('type.num.num',X71))))) )),
  inference(forward_demodulation,[],[f21939,f707])).
fof(f21939,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))))),s('type.num.num',X71)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69))))),s('type.num.num',X71))))))) )),
  inference(superposition,[],[f636,f463])).
fof(f22064,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X67),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X66))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X68)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X67),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))))),s('type.num.num',X68))))) )),
  inference(forward_demodulation,[],[f21938,f707])).
fof(f21938,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X67),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))))),s('type.num.num',X68)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X67),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X66))))),s('type.num.num',X68))))))) )),
  inference(superposition,[],[f636,f465])).
fof(f21922,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12))))),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f636,f592])).
fof(f22017,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.num.SUC_1'(s('type.num.num',X72))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X74),s('type.num.num',X75)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))),s('type.num.num',X74))),s('type.num.num',X75))))) )),
  inference(forward_demodulation,[],[f21905,f6799])).
fof(f21905,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))))),s('type.num.num',X74))),s('type.num.num',X75)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X74),s('type.num.num',X75))))))) )),
  inference(superposition,[],[f636,f603])).
fof(f21887,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12))),s('type.num.num',X14))),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f636,f592])).
fof(f21862,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK93(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK93(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f634,f471])).
fof(f21861,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK93(X0,X1,X2,bool))) )),
  inference(superposition,[],[f634,f471])).
fof(f21649,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))) | s('type.num.num',X19) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK90(X19,'const.num.SUC_1'(s('type.num.num',X18)),X21,X20))))) )),
  inference(superposition,[],[f582,f707])).
fof(f21645,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK90(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f582,f592])).
fof(f21707,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK90('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X141,X140,X139)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X141),s('type.num.num',X138)))) )),
  inference(forward_demodulation,[],[f21643,f531])).
fof(f21643,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X141),s('type.num.num',X138))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK90('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X141,X140,X139))))) )),
  inference(superposition,[],[f582,f531])).
fof(f21706,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num',X132) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK90('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X136,X135,X134)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X136),s('type.num.num',X132)))) )),
  inference(forward_demodulation,[],[f21642,f530])).
fof(f21642,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X136),s('type.num.num',X132))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK90('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X136,X135,X134))))) )),
  inference(superposition,[],[f582,f530])).
fof(f21705,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X131,X130,X129)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128)))))) )),
  inference(forward_demodulation,[],[f21641,f467])).
fof(f21641,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X131,X130,X129))))) )),
  inference(superposition,[],[f582,f467])).
fof(f21704,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X127,X126,X125)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X127),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124)))))) )),
  inference(forward_demodulation,[],[f21640,f466])).
fof(f21640,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X127),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK90('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X127,X126,X125))))) )),
  inference(superposition,[],[f582,f466])).
fof(f21701,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num',X115) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X118,X117,X116)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num',X115)))) )),
  inference(forward_demodulation,[],[f21638,f454])).
fof(f21638,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num',X115))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK90('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X118,X117,X116))))) )),
  inference(superposition,[],[f582,f454])).
fof(f21700,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK90('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X114,X113,X112)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111)))))))) )),
  inference(forward_demodulation,[],[f21637,f459])).
fof(f21637,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK90('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X114,X113,X112))))) )),
  inference(superposition,[],[f582,f459])).
fof(f21699,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK90('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X110,X109,X108)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X110),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107)))))))) )),
  inference(forward_demodulation,[],[f21636,f458])).
fof(f21636,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X110),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK90('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X110,X109,X108))))) )),
  inference(superposition,[],[f582,f458])).
fof(f21694,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK90('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X100,X99,X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97)))))))) )),
  inference(forward_demodulation,[],[f21633,f462])).
fof(f21633,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK90('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X100,X99,X98))))) )),
  inference(superposition,[],[f582,f462])).
fof(f21693,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X93),s('type.num.num','const.num.SUC_1'(s('type.num.num',X92))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X96,X95,X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93)))))))) )),
  inference(forward_demodulation,[],[f21632,f6799])).
fof(f21632,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X96,X95,X94))))) )),
  inference(superposition,[],[f582,f603])).
fof(f21692,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X91,X90,X89)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88)))))))) )),
  inference(forward_demodulation,[],[f21631,f463])).
fof(f21631,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X91,X90,X89))))) )),
  inference(superposition,[],[f582,f463])).
fof(f21691,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X87,X86,X85)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84)))))))) )),
  inference(forward_demodulation,[],[f21630,f465])).
fof(f21630,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X87,X86,X85))))) )),
  inference(superposition,[],[f582,f465])).
fof(f21690,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X83,X82,X81)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))))) )),
  inference(forward_demodulation,[],[f21629,f457])).
fof(f21629,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK90('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X83,X82,X81))))) )),
  inference(superposition,[],[f582,f457])).
fof(f21687,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK90('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X76,X75,X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73)))))))) )),
  inference(forward_demodulation,[],[f21627,f605])).
fof(f21627,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK90('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X76,X75,X74))))) )),
  inference(superposition,[],[f582,f605])).
fof(f21686,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK90('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X71,X70,X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68)))))))) )),
  inference(forward_demodulation,[],[f21626,f607])).
fof(f21626,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK90('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X71,X70,X69))))) )),
  inference(superposition,[],[f582,f607])).
fof(f21679,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK90('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X54,X53,X52)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51)))))))) )),
  inference(forward_demodulation,[],[f21622,f606])).
fof(f21622,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK90('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X54,X53,X52))))) )),
  inference(superposition,[],[f582,f606])).
fof(f21678,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK90('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X49,X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46)))))) )),
  inference(forward_demodulation,[],[f21621,f594])).
fof(f21621,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK90('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X49,X48,X47))))) )),
  inference(superposition,[],[f582,f594])).
fof(f21674,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK90('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X37,X36,X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))) )),
  inference(forward_demodulation,[],[f21618,f707])).
fof(f21618,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK90('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X37,X36,X35))))) )),
  inference(superposition,[],[f582,f707])).
fof(f21614,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK90('const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X18,X17,X16))))) )),
  inference(superposition,[],[f582,f592])).
fof(f21609,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X141))) | s('type.num.num',X141) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK90(X141,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X140,X139))))) )),
  inference(superposition,[],[f582,f531])).
fof(f21608,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X136))) | s('type.num.num',X136) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK90(X136,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X135,X134))))) )),
  inference(superposition,[],[f582,f530])).
fof(f21607,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))),s('type.num.num',X131))) | s('type.num.num',X131) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK90(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X130,X129))))) )),
  inference(superposition,[],[f582,f467])).
fof(f21606,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))),s('type.num.num',X127))) | s('type.num.num',X127) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK90(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125))))) )),
  inference(superposition,[],[f582,f466])).
fof(f21604,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num',X118))) | s('type.num.num',X118) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK90(X118,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116))))) )),
  inference(superposition,[],[f582,f454])).
fof(f21603,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))),s('type.num.num',X114))) | s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK90(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X113,X112))))) )),
  inference(superposition,[],[f582,f459])).
fof(f21602,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))),s('type.num.num',X110))) | s('type.num.num',X110) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK90(X110,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X109,X108))))) )),
  inference(superposition,[],[f582,f458])).
fof(f21599,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))),s('type.num.num',X100))) | s('type.num.num',X100) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK90(X100,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X99,X98))))) )),
  inference(superposition,[],[f582,f462])).
fof(f21661,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))))) | s('type.num.num',X96) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK90(X96,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X95,X94))))) )),
  inference(forward_demodulation,[],[f21598,f17113])).
fof(f21598,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',X96))) | s('type.num.num',X96) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK90(X96,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X95,X94))))) )),
  inference(superposition,[],[f582,f603])).
fof(f21660,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X91))))) | s('type.num.num',X91) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK90(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) )),
  inference(forward_demodulation,[],[f21597,f17112])).
fof(f21597,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))),s('type.num.num',X91))) | s('type.num.num',X91) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK90(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) )),
  inference(superposition,[],[f582,f463])).
fof(f21659,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))) | s('type.num.num',X87) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK90(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X86,X85))))) )),
  inference(forward_demodulation,[],[f21596,f17111])).
fof(f21596,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))),s('type.num.num',X87))) | s('type.num.num',X87) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK90(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X86,X85))))) )),
  inference(superposition,[],[f582,f465])).
fof(f21595,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num',X83))) | s('type.num.num',X83) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK90(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X82,X81))))) )),
  inference(superposition,[],[f582,f457])).
fof(f21593,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))),s('type.num.num',X76))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK90(X76,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X75,X74))))) )),
  inference(superposition,[],[f582,f605])).
fof(f21592,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num',X71))) | s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK90(X71,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X70,X69))))) )),
  inference(superposition,[],[f582,f607])).
fof(f21588,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))),s('type.num.num',X54))) | s('type.num.num',X54) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK90(X54,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52))))) )),
  inference(superposition,[],[f582,f606])).
fof(f21587,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num',X49))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK90(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X48,X47))))) )),
  inference(superposition,[],[f582,f594])).
fof(f21653,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))) | s('type.num.num',X37) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK90(X37,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X36,X35))))) )),
  inference(forward_demodulation,[],[f21584,f17113])).
fof(f21584,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))),s('type.num.num',X37))) | s('type.num.num',X37) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK90(X37,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X36,X35))))) )),
  inference(superposition,[],[f582,f707])).
fof(f21580,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK90(X18,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X17,X16))))) )),
  inference(superposition,[],[f582,f592])).
fof(f21574,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK90(X15,X14,'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X11))))) )),
  inference(superposition,[],[f582,f531])).
fof(f21573,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK90(X10,X9,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)),X6))))) )),
  inference(superposition,[],[f582,f530])).
fof(f21572,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK90(X5,X4,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f582,f644])).
fof(f21571,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK90(X3,X2,'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X0))))) )),
  inference(superposition,[],[f582,f495])).
fof(f21484,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK89(X19,'const.num.SUC_1'(s('type.num.num',X18)),X21,X20))))) )),
  inference(superposition,[],[f581,f707])).
fof(f21480,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK89(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f581,f592])).
fof(f21478,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X141),s('type.num.num',X138))) | s('type.num.num',X141) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK89('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X141,X140,X139))))) )),
  inference(superposition,[],[f581,f531])).
fof(f21477,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X136),s('type.num.num',X132))) | s('type.num.num',X136) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK89('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X136,X135,X134))))) )),
  inference(superposition,[],[f581,f530])).
fof(f21476,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X131),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))))) | s('type.num.num',X131) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X131,X130,X129))))) )),
  inference(superposition,[],[f581,f467])).
fof(f21475,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X127),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))))) | s('type.num.num',X127) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK89('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X127,X126,X125))))) )),
  inference(superposition,[],[f581,f466])).
fof(f21473,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num',X115))) | s('type.num.num',X118) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK89('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X118,X117,X116))))) )),
  inference(superposition,[],[f581,f454])).
fof(f21472,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))))) | s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK89('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X114,X113,X112))))) )),
  inference(superposition,[],[f581,f459])).
fof(f21471,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X110),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))))) | s('type.num.num',X110) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK89('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X110,X109,X108))))) )),
  inference(superposition,[],[f581,f458])).
fof(f21468,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X100),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))))) | s('type.num.num',X100) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK89('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X100,X99,X98))))) )),
  inference(superposition,[],[f581,f462])).
fof(f21467,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))))) | s('type.num.num',X96) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK89('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X96,X95,X94))))) )),
  inference(superposition,[],[f581,f603])).
fof(f21466,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X91),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))))) | s('type.num.num',X91) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK89('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X91,X90,X89))))) )),
  inference(superposition,[],[f581,f463])).
fof(f21465,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))))) | s('type.num.num',X87) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK89('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X87,X86,X85))))) )),
  inference(superposition,[],[f581,f465])).
fof(f21464,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X83),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))))) | s('type.num.num',X83) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK89('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X83,X82,X81))))) )),
  inference(superposition,[],[f581,f457])).
fof(f21462,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK89('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X76,X75,X74))))) )),
  inference(superposition,[],[f581,f605])).
fof(f21461,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))))) | s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK89('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X71,X70,X69))))) )),
  inference(superposition,[],[f581,f607])).
fof(f21457,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))))) | s('type.num.num',X54) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK89('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X54,X53,X52))))) )),
  inference(superposition,[],[f581,f606])).
fof(f21456,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK89('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X49,X48,X47))))) )),
  inference(superposition,[],[f581,f594])).
fof(f21453,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))))) | s('type.num.num',X37) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK89('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X37,X36,X35))))) )),
  inference(superposition,[],[f581,f707])).
fof(f21449,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))))) | s('type.num.num',X18) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK89('const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X18,X17,X16))))) )),
  inference(superposition,[],[f581,f592])).
fof(f21531,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK89(X141,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X140,X139)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X141)))) )),
  inference(forward_demodulation,[],[f21444,f531])).
fof(f21444,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),X140))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X141))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X139),sK89(X141,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X137),s('type.num.num',X138)),X140,X139))))) )),
  inference(superposition,[],[f581,f531])).
fof(f21530,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num',X132) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK89(X136,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X135,X134)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X136)))) )),
  inference(forward_demodulation,[],[f21443,f530])).
fof(f21443,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X136))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),sK89(X136,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X132),s('type.num.num',X133)),X135,X134))))) )),
  inference(superposition,[],[f581,f530])).
fof(f21529,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK89(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X130,X129)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))),s('type.num.num',X131)))) )),
  inference(forward_demodulation,[],[f21442,f467])).
fof(f21442,plain,(
  ( ! [X130,X128,X131,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),X130))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X128))),s('type.num.num',X131))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X129),sK89(X131,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X128))),s('type.num.num','const.arithmetic.ZERO_0')),X130,X129))))) )),
  inference(superposition,[],[f581,f467])).
fof(f21528,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK89(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))),s('type.num.num',X127)))) )),
  inference(forward_demodulation,[],[f21441,f466])).
fof(f21441,plain,(
  ( ! [X127,X125,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),X126))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X124))),s('type.num.num',X127))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X125),sK89(X127,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X124))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125))))) )),
  inference(superposition,[],[f581,f466])).
fof(f21525,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num',X115) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK89(X118,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num',X118)))) )),
  inference(forward_demodulation,[],[f21439,f454])).
fof(f21439,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X117))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num',X118))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),sK89(X118,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X115),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116))))) )),
  inference(superposition,[],[f581,f454])).
fof(f21524,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK89(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X113,X112)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))),s('type.num.num',X114)))) )),
  inference(forward_demodulation,[],[f21438,f459])).
fof(f21438,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X111))))),s('type.num.num',X114))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),sK89(X114,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X111)))),X113,X112))))) )),
  inference(superposition,[],[f581,f459])).
fof(f21523,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK89(X110,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X109,X108)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))),s('type.num.num',X110)))) )),
  inference(forward_demodulation,[],[f21437,f458])).
fof(f21437,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),X109))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X107))))),s('type.num.num',X110))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X108),sK89(X110,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X107)))),X109,X108))))) )),
  inference(superposition,[],[f581,f458])).
fof(f21518,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK89(X100,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X99,X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))),s('type.num.num',X100)))) )),
  inference(forward_demodulation,[],[f21434,f462])).
fof(f21434,plain,(
  ( ! [X99,X97,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X97))))),s('type.num.num',X100))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK89(X100,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X99,X98))))) )),
  inference(superposition,[],[f581,f462])).
fof(f21517,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X93),s('type.num.num','const.num.SUC_1'(s('type.num.num',X92))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK89(X96,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X95,X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96)))))) )),
  inference(forward_demodulation,[],[f21516,f6799])).
fof(f21516,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X96))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK89(X96,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X95,X94))))) )),
  inference(forward_demodulation,[],[f21433,f17113])).
fof(f21433,plain,(
  ( ! [X94,X92,X95,X93,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))),s('type.num.num',X96))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK89(X96,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num',X93)))),X95,X94))))) )),
  inference(superposition,[],[f581,f603])).
fof(f21515,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK89(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X91)))))) )),
  inference(forward_demodulation,[],[f21514,f463])).
fof(f21514,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X91))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK89(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) )),
  inference(forward_demodulation,[],[f21432,f17112])).
fof(f21432,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X90))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X88))))),s('type.num.num',X91))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),sK89(X91,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) )),
  inference(superposition,[],[f581,f463])).
fof(f21513,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK89(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X86,X85)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87)))))) )),
  inference(forward_demodulation,[],[f21512,f465])).
fof(f21512,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X87))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK89(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X86,X85))))) )),
  inference(forward_demodulation,[],[f21431,f17111])).
fof(f21431,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))))),s('type.num.num',X87))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK89(X87,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X86,X85))))) )),
  inference(superposition,[],[f581,f465])).
fof(f21511,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK89(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X82,X81)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num',X83)))) )),
  inference(forward_demodulation,[],[f21430,f457])).
fof(f21430,plain,(
  ( ! [X80,X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))),s('type.num.num',X83))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK89(X83,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))),X82,X81))))) )),
  inference(superposition,[],[f581,f457])).
fof(f21508,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK89(X76,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X75,X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))),s('type.num.num',X76)))) )),
  inference(forward_demodulation,[],[f21428,f605])).
fof(f21428,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X72),s('type.num.num',X73))))),s('type.num.num',X76))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK89(X76,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X73)))),X75,X74))))) )),
  inference(superposition,[],[f581,f605])).
fof(f21507,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK89(X71,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X70,X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num',X71)))) )),
  inference(forward_demodulation,[],[f21427,f607])).
fof(f21427,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X67),s('type.num.num',X68))))),s('type.num.num',X71))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK89(X71,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X70,X69))))) )),
  inference(superposition,[],[f581,f607])).
fof(f21500,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK89(X54,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))),s('type.num.num',X54)))) )),
  inference(forward_demodulation,[],[f21423,f606])).
fof(f21423,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X50),s('type.num.num',X51))))),s('type.num.num',X54))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK89(X54,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52))))) )),
  inference(superposition,[],[f581,f606])).
fof(f21499,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK89(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num',X49)))) )),
  inference(forward_demodulation,[],[f21422,f594])).
fof(f21422,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num',X49))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK89(X49,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X48,X47))))) )),
  inference(superposition,[],[f581,f594])).
fof(f21495,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK89(X37,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X36,X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))) )),
  inference(forward_demodulation,[],[f21494,f707])).
fof(f21494,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK89(X37,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X36,X35))))) )),
  inference(forward_demodulation,[],[f21419,f17113])).
fof(f21419,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))),s('type.num.num',X37))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK89(X37,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))),s('type.num.num',X34)),X36,X35))))) )),
  inference(superposition,[],[f581,f707])).
fof(f21415,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14))),s('type.num.num',X18))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK89(X18,'const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)),X17,X16))))) )),
  inference(superposition,[],[f581,f592])).
fof(f21409,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) | s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK89(X15,X14,'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X11))))) )),
  inference(superposition,[],[f581,f531])).
fof(f21408,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK89(X10,X9,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)),X6))))) )),
  inference(superposition,[],[f581,f530])).
fof(f21407,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK89(X5,X4,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f581,f644])).
fof(f21406,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK89(X3,X2,'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X0))))) )),
  inference(superposition,[],[f581,f495])).
fof(f21369,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X1,X2,X0)))),s('type.num.num',X2)))) )),
  inference(subsumption_resolution,[],[f21331,f434])).
fof(f21331,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X1,X2,X0)))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f6935,f471])).
fof(f21368,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X105),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK53(X107,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)),X106)))),s('type.num.num',X105))))) )),
  inference(forward_demodulation,[],[f21330,f531])).
fof(f21330,plain,(
  ( ! [X107,X105,X106,X104] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK53(X107,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)),X106)))),s('type.num.num',X105)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))))))) )),
  inference(superposition,[],[f6935,f531])).
fof(f21367,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X100),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK53(X103,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101)),X102)))),s('type.num.num',X100))))) )),
  inference(forward_demodulation,[],[f21329,f530])).
fof(f21329,plain,(
  ( ! [X103,X101,X102,X100] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK53(X103,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101)),X102)))),s('type.num.num',X100)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))))))) )),
  inference(superposition,[],[f6935,f530])).
fof(f21366,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK53(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))) )),
  inference(forward_demodulation,[],[f21365,f4779])).
fof(f21365,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK53(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))) )),
  inference(forward_demodulation,[],[f21328,f467])).
fof(f21328,plain,(
  ( ! [X99,X97,X98] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK53(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))))))) )),
  inference(superposition,[],[f6935,f467])).
fof(f21364,plain,(
  ( ! [X94,X95,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),sK53(X96,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0')),X95)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94))))))) )),
  inference(forward_demodulation,[],[f21327,f466])).
fof(f21327,plain,(
  ( ! [X94,X95,X96] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),sK53(X96,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0')),X95)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(superposition,[],[f6935,f466])).
fof(f21362,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK53(X89,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0')),X88)))),s('type.num.num',X87))))) )),
  inference(forward_demodulation,[],[f21325,f454])).
fof(f21325,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK53(X89,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0')),X88)))),s('type.num.num',X87)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))))))) )),
  inference(superposition,[],[f6935,f454])).
fof(f21361,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK53(X86,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))))))))) )),
  inference(forward_demodulation,[],[f21324,f459])).
fof(f21324,plain,(
  ( ! [X85,X86,X84] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK53(X86,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))))))) )),
  inference(superposition,[],[f6935,f459])).
fof(f21360,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK53(X83,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f21323,f458])).
fof(f21323,plain,(
  ( ! [X83,X81,X82] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK53(X83,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))))))) )),
  inference(superposition,[],[f6935,f458])).
fof(f21357,plain,(
  ( ! [X76,X74,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK53(X76,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74)))),X75)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74))))))))) )),
  inference(forward_demodulation,[],[f21320,f462])).
fof(f21320,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK53(X76,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74)))),X75)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76))))))) )),
  inference(superposition,[],[f6935,f462])).
fof(f21356,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK53(X73,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71)))),X72)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))))))) )),
  inference(forward_demodulation,[],[f21319,f6799])).
fof(f21319,plain,(
  ( ! [X70,X72,X71,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK53(X73,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71)))),X72)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))))))) )),
  inference(superposition,[],[f6935,f603])).
fof(f21355,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK53(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X68)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))))))))) )),
  inference(forward_demodulation,[],[f21318,f463])).
fof(f21318,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK53(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X68)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))))))) )),
  inference(superposition,[],[f6935,f463])).
fof(f21354,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK53(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))))))) )),
  inference(forward_demodulation,[],[f21353,f4779])).
fof(f21353,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK53(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))))))) )),
  inference(forward_demodulation,[],[f21317,f465])).
fof(f21317,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK53(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))))))) )),
  inference(superposition,[],[f6935,f465])).
fof(f21352,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK53(X63,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61)))),X62)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61))))))) )),
  inference(forward_demodulation,[],[f21316,f457])).
fof(f21316,plain,(
  ( ! [X61,X62,X63] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK53(X63,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61)))),X62)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))) )),
  inference(superposition,[],[f6935,f457])).
fof(f21351,plain,(
  ( ! [X59,X60] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK53(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f21350,f4779])).
fof(f21350,plain,(
  ( ! [X59,X60] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK53(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f21315,f432])).
fof(f21315,plain,(
  ( ! [X59,X60] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK53(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))))))) )),
  inference(superposition,[],[f6935,f432])).
fof(f21349,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X58)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),sK53(X58,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))))))))) )),
  inference(forward_demodulation,[],[f21314,f605])).
fof(f21314,plain,(
  ( ! [X57,X58,X56,X55] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),sK53(X58,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X58))))))) )),
  inference(superposition,[],[f6935,f605])).
fof(f21348,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK53(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52))))))))) )),
  inference(forward_demodulation,[],[f21313,f607])).
fof(f21313,plain,(
  ( ! [X54,X52,X53,X51] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK53(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))))))) )),
  inference(superposition,[],[f6935,f607])).
fof(f21343,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK53(X41,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39))))))))) )),
  inference(forward_demodulation,[],[f21309,f606])).
fof(f21309,plain,(
  ( ! [X39,X41,X38,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK53(X41,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41))))))) )),
  inference(superposition,[],[f6935,f606])).
fof(f21342,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK53(X37,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35)))),X36)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f21308,f594])).
fof(f21308,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK53(X37,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35)))),X36)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))))))) )),
  inference(superposition,[],[f6935,f594])).
fof(f21339,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK53(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))))))) )),
  inference(forward_demodulation,[],[f21305,f707])).
fof(f21305,plain,(
  ( ! [X28,X26,X27,X25] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK53(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))))))) )),
  inference(superposition,[],[f6935,f707])).
fof(f21301,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK53(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))))))) )),
  inference(superposition,[],[f6935,f592])).
fof(f21260,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X1,X2,X0)))),s('type.num.num',X2)))) )),
  inference(subsumption_resolution,[],[f21222,f434])).
fof(f21222,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X1,X2,X0)))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f4786,f471])).
fof(f21259,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X105),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK55(X107,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)),X106)))),s('type.num.num',X105))))) )),
  inference(forward_demodulation,[],[f21221,f531])).
fof(f21221,plain,(
  ( ! [X107,X105,X106,X104] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK55(X107,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105)),X106)))),s('type.num.num',X105)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X104),s('type.num.num',X105))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))))))) )),
  inference(superposition,[],[f4786,f531])).
fof(f21258,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X100),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK55(X103,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101)),X102)))),s('type.num.num',X100))))) )),
  inference(forward_demodulation,[],[f21220,f530])).
fof(f21220,plain,(
  ( ! [X103,X101,X102,X100] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK55(X103,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101)),X102)))),s('type.num.num',X100)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X100),s('type.num.num',X101))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))))))) )),
  inference(superposition,[],[f4786,f530])).
fof(f21257,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK55(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))) )),
  inference(forward_demodulation,[],[f21256,f4779])).
fof(f21256,plain,(
  ( ! [X99,X97,X98] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK55(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97))))))) )),
  inference(forward_demodulation,[],[f21219,f467])).
fof(f21219,plain,(
  ( ! [X99,X97,X98] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK55(X99,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0')),X98)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X97)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))))))) )),
  inference(superposition,[],[f4786,f467])).
fof(f21255,plain,(
  ( ! [X94,X95,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),sK55(X96,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0')),X95)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94))))))) )),
  inference(forward_demodulation,[],[f21218,f466])).
fof(f21218,plain,(
  ( ! [X94,X95,X96] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),sK55(X96,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0')),X95)))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X94)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X94))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X95),X96))))))) )),
  inference(superposition,[],[f4786,f466])).
fof(f21253,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK55(X89,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0')),X88)))),s('type.num.num',X87))))) )),
  inference(forward_demodulation,[],[f21216,f454])).
fof(f21216,plain,(
  ( ! [X88,X87,X89] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK55(X89,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0')),X88)))),s('type.num.num',X87)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))))))) )),
  inference(superposition,[],[f4786,f454])).
fof(f21252,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK55(X86,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84))))))))) )),
  inference(forward_demodulation,[],[f21215,f459])).
fof(f21215,plain,(
  ( ! [X85,X86,X84] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),sK55(X86,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84)))),X85)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X84)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X84))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))))))) )),
  inference(superposition,[],[f4786,f459])).
fof(f21251,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK55(X83,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f21214,f458])).
fof(f21214,plain,(
  ( ! [X83,X81,X82] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK55(X83,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81)))),X82)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X81)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))))))) )),
  inference(superposition,[],[f4786,f458])).
fof(f21248,plain,(
  ( ! [X76,X74,X75] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK55(X76,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74)))),X75)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74))))))))) )),
  inference(forward_demodulation,[],[f21211,f462])).
fof(f21211,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK55(X76,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74)))),X75)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X74)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76))))))) )),
  inference(superposition,[],[f4786,f462])).
fof(f21247,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X71),s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK55(X73,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71)))),X72)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))))))) )),
  inference(forward_demodulation,[],[f21210,f6799])).
fof(f21210,plain,(
  ( ! [X70,X72,X71,X73] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK55(X73,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71)))),X72)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num',X71))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))))))) )),
  inference(superposition,[],[f4786,f603])).
fof(f21246,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK55(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X68)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))))))))) )),
  inference(forward_demodulation,[],[f21209,f463])).
fof(f21209,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK55(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X68)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X67)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))))))) )),
  inference(superposition,[],[f4786,f463])).
fof(f21245,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK55(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))))))) )),
  inference(forward_demodulation,[],[f21244,f4779])).
fof(f21244,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK55(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64))))))))) )),
  inference(forward_demodulation,[],[f21208,f465])).
fof(f21208,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK55(X66,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64)))),X65)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X64)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))))))) )),
  inference(superposition,[],[f4786,f465])).
fof(f21243,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK55(X63,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61)))),X62)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61))))))) )),
  inference(forward_demodulation,[],[f21207,f457])).
fof(f21207,plain,(
  ( ! [X61,X62,X63] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK55(X63,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61)))),X62)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X61))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))))))) )),
  inference(superposition,[],[f4786,f457])).
fof(f21242,plain,(
  ( ! [X59,X60] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK55(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f21241,f4779])).
fof(f21241,plain,(
  ( ! [X59,X60] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK55(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f21206,f432])).
fof(f21206,plain,(
  ( ! [X59,X60] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK55(X60,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X59)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))))))) )),
  inference(superposition,[],[f4786,f432])).
fof(f21240,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X58)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),sK55(X58,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56))))))))) )),
  inference(forward_demodulation,[],[f21205,f605])).
fof(f21205,plain,(
  ( ! [X57,X58,X56,X55] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),sK55(X58,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X55),s('type.num.num',X56)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X57),X58))))))) )),
  inference(superposition,[],[f4786,f605])).
fof(f21239,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK55(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52))))))))) )),
  inference(forward_demodulation,[],[f21204,f607])).
fof(f21204,plain,(
  ( ! [X54,X52,X53,X51] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK55(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X51),s('type.num.num',X52)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))))))) )),
  inference(superposition,[],[f4786,f607])).
fof(f21234,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK55(X41,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39))))))))) )),
  inference(forward_demodulation,[],[f21200,f606])).
fof(f21200,plain,(
  ( ! [X39,X41,X38,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),sK55(X41,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X38),s('type.num.num',X39)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41))))))) )),
  inference(superposition,[],[f4786,f606])).
fof(f21233,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK55(X37,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35)))),X36)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))))))) )),
  inference(forward_demodulation,[],[f21199,f594])).
fof(f21199,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK55(X37,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35)))),X36)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X35))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))))))) )),
  inference(superposition,[],[f4786,f594])).
fof(f21230,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK55(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))))))) )),
  inference(forward_demodulation,[],[f21196,f707])).
fof(f21196,plain,(
  ( ! [X28,X26,X27,X25] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK55(X28,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))))))) )),
  inference(superposition,[],[f4786,f707])).
fof(f21192,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK55(X13,'const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)),X12)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))))))) )),
  inference(superposition,[],[f4786,f592])).
fof(f20606,plain,(
  ( ! [X132,X130,X133,X131,X129] : (~p(s(bool,X130)) | p(s(bool,happ(s(fun(X131,bool),X132),s(X131,sK88('const.bool.COND_3'(s(bool,'F_0'),s(bool,X129),s(bool,X130)),X132,X131))))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) )),
  inference(superposition,[],[f578,f531])).
fof(f20605,plain,(
  ( ! [X127,X125,X128,X126,X124] : (~p(s(bool,X124)) | p(s(bool,happ(s(fun(X126,bool),X127),s(X126,sK88('const.bool.COND_3'(s(bool,'T_0'),s(bool,X124),s(bool,X125)),X127,X126))))) | ~p(s(bool,happ(s(fun(X126,bool),X127),s(X126,X128))))) )),
  inference(superposition,[],[f578,f530])).
fof(f20604,plain,(
  ( ! [X123,X121,X122,X120] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X120)))) | p(s(bool,happ(s(fun(X121,bool),X122),s(X121,sK88('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X122,X121))))) | ~p(s(bool,happ(s(fun(X121,bool),X122),s(X121,X123))))) )),
  inference(superposition,[],[f578,f456])).
fof(f20603,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X116)))) | p(s(bool,happ(s(fun(X117,bool),X118),s(X117,sK88('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X118,X117))))) | ~p(s(bool,happ(s(fun(X117,bool),X118),s(X117,X119))))) )),
  inference(superposition,[],[f578,f455])).
fof(f20612,plain,(
  ( ! [X114,X115,X113] : (p(s(bool,happ(s(fun(X113,bool),X114),s(X113,sK88('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X114,X113))))) | ~p(s(bool,happ(s(fun(X113,bool),X114),s(X113,X115))))) )),
  inference(subsumption_resolution,[],[f20602,f427])).
fof(f20602,plain,(
  ( ! [X114,X115,X113] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X113,bool),X114),s(X113,sK88('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X114,X113))))) | ~p(s(bool,happ(s(fun(X113,bool),X114),s(X113,X115))))) )),
  inference(superposition,[],[f578,f2018])).
fof(f20601,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X109),s('type.num.num',X108)))) | p(s(bool,happ(s(fun(X110,bool),X111),s(X110,sK88('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X111,X110))))) | ~p(s(bool,happ(s(fun(X110,bool),X111),s(X110,X112))))) )),
  inference(superposition,[],[f578,f598])).
fof(f20599,plain,(
  ( ! [X103,X101,X99,X102,X100] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X100),s('type.num.num',X99)))) | p(s(bool,happ(s(fun(X101,bool),X102),s(X101,sK88('const.arithmetic.>_2'(s('type.num.num',X99),s('type.num.num',X100)),X102,X101))))) | ~p(s(bool,happ(s(fun(X101,bool),X102),s(X101,X103))))) )),
  inference(superposition,[],[f578,f590])).
fof(f20596,plain,(
  ( ! [X90,X88,X87,X91,X89] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num',X88)))) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) )),
  inference(superposition,[],[f578,f600])).
fof(f20595,plain,(
  ( ! [X85,X83,X86,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X82),s('type.num.num',X83)))) | p(s(bool,happ(s(fun(X84,bool),X85),s(X84,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X85,X84))))) | ~p(s(bool,happ(s(fun(X84,bool),X85),s(X84,X86))))) )),
  inference(superposition,[],[f578,f602])).
fof(f20594,plain,(
  ( ! [X80,X78,X81,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X78)))) | p(s(bool,happ(s(fun(X79,bool),X80),s(X79,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X80,X79))))) | ~p(s(bool,happ(s(fun(X79,bool),X80),s(X79,X81))))) )),
  inference(superposition,[],[f578,f596])).
fof(f20593,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X72),s('type.num.num',X73)))) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X73)))),X75,X74))))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) )),
  inference(superposition,[],[f578,f601])).
fof(f20610,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(subsumption_resolution,[],[f20590,f427])).
fof(f20590,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(superposition,[],[f578,f452])).
fof(f20609,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(subsumption_resolution,[],[f20589,f427])).
fof(f20589,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK88('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f578,f453])).
fof(f20586,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num',X45)))) | p(s(bool,happ(s(fun(X47,bool),X48),s(X47,sK88('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X48,X47))))) | ~p(s(bool,happ(s(fun(X47,bool),X48),s(X47,X49))))) )),
  inference(superposition,[],[f578,f714])).
fof(f20585,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num',X41)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK88('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X40))),s('type.num.num',X41)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44))))) )),
  inference(superposition,[],[f578,f593])).
fof(f20584,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X36),s('type.num.num',X35)))) | p(s(bool,happ(s(fun(X37,bool),X38),s(X37,sK88('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X38,X37))))) | ~p(s(bool,happ(s(fun(X37,bool),X38),s(X37,X39))))) )),
  inference(superposition,[],[f578,f706])).
fof(f20581,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22)))) | p(s(bool,happ(s(fun(X24,bool),X25),s(X24,sK88('const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)),X25,X24))))) | ~p(s(bool,happ(s(fun(X24,bool),X25),s(X24,X26))))) )),
  inference(superposition,[],[f578,f591])).
fof(f20580,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X17),s('type.num.num',X18)))) | p(s(bool,happ(s(fun(X19,bool),X20),s(X19,sK88('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))),X20,X19))))) | ~p(s(bool,happ(s(fun(X19,bool),X20),s(X19,X21))))) )),
  inference(superposition,[],[f578,f705])).
fof(f20532,plain,(
  ( ! [X127,X130,X128,X126,X129] : (~p(s(bool,X127)) | p(s(bool,happ(s(fun(X128,bool),X129),s(X128,sK87('const.bool.COND_3'(s(bool,'F_0'),s(bool,X126),s(bool,X127)),X129,X128))))) | ~p(s(bool,happ(s(fun(X128,bool),X129),s(X128,X130))))) )),
  inference(superposition,[],[f576,f531])).
fof(f20531,plain,(
  ( ! [X125,X123,X121,X124,X122] : (~p(s(bool,X121)) | p(s(bool,happ(s(fun(X123,bool),X124),s(X123,sK87('const.bool.COND_3'(s(bool,'T_0'),s(bool,X121),s(bool,X122)),X124,X123))))) | ~p(s(bool,happ(s(fun(X123,bool),X124),s(X123,X125))))) )),
  inference(superposition,[],[f576,f530])).
fof(f20530,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X117)))) | p(s(bool,happ(s(fun(X118,bool),X119),s(X118,sK87('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X117)))),X119,X118))))) | ~p(s(bool,happ(s(fun(X118,bool),X119),s(X118,X120))))) )),
  inference(superposition,[],[f576,f456])).
fof(f20529,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X113)))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK87('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))),X115,X114))))) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116))))) )),
  inference(superposition,[],[f576,f455])).
fof(f20538,plain,(
  ( ! [X111,X112,X110] : (p(s(bool,happ(s(fun(X110,bool),X111),s(X110,sK87('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X111,X110))))) | ~p(s(bool,happ(s(fun(X110,bool),X111),s(X110,X112))))) )),
  inference(subsumption_resolution,[],[f20528,f427])).
fof(f20528,plain,(
  ( ! [X111,X112,X110] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X110,bool),X111),s(X110,sK87('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X111,X110))))) | ~p(s(bool,happ(s(fun(X110,bool),X111),s(X110,X112))))) )),
  inference(superposition,[],[f576,f2018])).
fof(f20527,plain,(
  ( ! [X109,X107,X105,X108,X106] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X106),s('type.num.num',X105)))) | p(s(bool,happ(s(fun(X107,bool),X108),s(X107,sK87('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X105))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106)))),X108,X107))))) | ~p(s(bool,happ(s(fun(X107,bool),X108),s(X107,X109))))) )),
  inference(superposition,[],[f576,f598])).
fof(f20525,plain,(
  ( ! [X99,X97,X100,X98,X96] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X97),s('type.num.num',X96)))) | p(s(bool,happ(s(fun(X98,bool),X99),s(X98,sK87('const.arithmetic.>_2'(s('type.num.num',X96),s('type.num.num',X97)),X99,X98))))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) )),
  inference(superposition,[],[f576,f590])).
fof(f20523,plain,(
  ( ! [X90,X88,X87,X91,X89] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num',X88)))) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) )),
  inference(superposition,[],[f576,f600])).
fof(f20522,plain,(
  ( ! [X85,X83,X86,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X82),s('type.num.num',X83)))) | p(s(bool,happ(s(fun(X84,bool),X85),s(X84,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X82))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X83)))),X85,X84))))) | ~p(s(bool,happ(s(fun(X84,bool),X85),s(X84,X86))))) )),
  inference(superposition,[],[f576,f602])).
fof(f20521,plain,(
  ( ! [X80,X78,X81,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X78)))) | p(s(bool,happ(s(fun(X79,bool),X80),s(X79,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X78)))),X80,X79))))) | ~p(s(bool,happ(s(fun(X79,bool),X80),s(X79,X81))))) )),
  inference(superposition,[],[f576,f596])).
fof(f20520,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X72),s('type.num.num',X73)))) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X73)))),X75,X74))))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) )),
  inference(superposition,[],[f576,f601])).
fof(f20536,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(subsumption_resolution,[],[f20517,f427])).
fof(f20517,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(superposition,[],[f576,f452])).
fof(f20535,plain,(
  ( ! [X59,X57,X60,X58] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(subsumption_resolution,[],[f20516,f427])).
fof(f20516,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK87('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f576,f453])).
fof(f20513,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num',X45)))) | p(s(bool,happ(s(fun(X47,bool),X48),s(X47,sK87('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X46)))),X48,X47))))) | ~p(s(bool,happ(s(fun(X47,bool),X48),s(X47,X49))))) )),
  inference(superposition,[],[f576,f714])).
fof(f20512,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X40),s('type.num.num',X41)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK87('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X40))),s('type.num.num',X41)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44))))) )),
  inference(superposition,[],[f576,f593])).
fof(f20511,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X36),s('type.num.num',X35)))) | p(s(bool,happ(s(fun(X37,bool),X38),s(X37,sK87('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X38,X37))))) | ~p(s(bool,happ(s(fun(X37,bool),X38),s(X37,X39))))) )),
  inference(superposition,[],[f576,f706])).
fof(f20508,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22)))) | p(s(bool,happ(s(fun(X24,bool),X25),s(X24,sK87('const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)),X25,X24))))) | ~p(s(bool,happ(s(fun(X24,bool),X25),s(X24,X26))))) )),
  inference(superposition,[],[f576,f591])).
fof(f20507,plain,(
  ( ! [X21,X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X17),s('type.num.num',X18)))) | p(s(bool,happ(s(fun(X19,bool),X20),s(X19,sK87('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))),X20,X19))))) | ~p(s(bool,happ(s(fun(X19,bool),X20),s(X19,X21))))) )),
  inference(superposition,[],[f576,f705])).
fof(f20470,plain,(
  ( ! [X171,X169,X170,X168] : (s('type.num.num',X171) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X169),s('type.num.num','const.num.SUC_1'(s('type.num.num',X168))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X170),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X168),s('type.num.num','const.num.SUC_1'(s('type.num.num',X169)))))))) | p(s(bool,happ(s(fun('type.num.num',bool),X170),s('type.num.num',X171))))) )),
  inference(forward_demodulation,[],[f20402,f6799])).
fof(f20402,plain,(
  ( ! [X171,X169,X170,X168] : (~p(s(bool,happ(s(fun('type.num.num',bool),X170),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X168),s('type.num.num','const.num.SUC_1'(s('type.num.num',X169)))))))) | p(s(bool,happ(s(fun('type.num.num',bool),X170),s('type.num.num',X171)))) | s('type.num.num',X171) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X168),s('type.num.num',X169)))))) )),
  inference(superposition,[],[f573,f603])).
fof(f20386,plain,(
  ( ! [X118,X116,X117,X115] : (~p(s(bool,happ(s(fun('type.num.num',bool),X117),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X116),s('type.num.num',X115)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X117),s('type.num.num',X118)))) | s('type.num.num',X118) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num',X116)))) )),
  inference(superposition,[],[f573,f592])).
fof(f20440,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,X67) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X64))))) | ~p(s(bool,happ(s(fun(bool,bool),X66),s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num',X65)))))) | p(s(bool,happ(s(fun(bool,bool),X66),s(bool,X67))))) )),
  inference(forward_demodulation,[],[f20370,f4779])).
fof(f20370,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,happ(s(fun(bool,bool),X66),s(bool,'const.prim_rec.<_2'(s('type.num.num',X64),s('type.num.num',X65)))))) | p(s(bool,happ(s(fun(bool,bool),X66),s(bool,X67)))) | s(bool,X67) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65)))))) )),
  inference(superposition,[],[f573,f601])).
fof(f20353,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X13)))) | p(s(bool,happ(s(fun(bool,bool),X14),s(bool,X15)))) | s(bool,'F_0') != s(bool,X15) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f573,f471])).
fof(f20352,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X12)))) | s(bool,X10) != s(bool,X12) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f573,f471])).
fof(f5370,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f5369,f448])).
fof(f5369,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f5352,f593])).
fof(f5352,plain,(
  s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f666,f433])).
fof(f12187,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) )),
  inference(subsumption_resolution,[],[f12138,f427])).
fof(f12138,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) )),
  inference(superposition,[],[f4782,f452])).
fof(f20017,plain,(
  ( ! [X122] : (s('type.num.num',sK1) = s('type.num.num',sK86('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X122,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X122),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f19984,f19762])).
fof(f19984,plain,(
  ( ! [X122] : (~p(s(bool,happ(s(fun('type.num.num',bool),X122),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num',sK86('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X122,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f574,f19762])).
fof(f20000,plain,(
  ( ! [X37,X38] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK47(X38,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X37)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num',sK1))))) ) | $spl6),
  inference(forward_demodulation,[],[f19819,f19762])).
fof(f19819,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK47(X38,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X37))))) ) | $spl6),
  inference(superposition,[],[f667,f19762])).
fof(f19815,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))))) ) | $spl6),
  inference(superposition,[],[f622,f19762])).
fof(f19997,plain,(
  ( ! [X2,X3] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X3,X2)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3)))) ) | $spl6),
  inference(forward_demodulation,[],[f19785,f19762])).
fof(f19785,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0))),X3,X2))))) ) | $spl6),
  inference(superposition,[],[f534,f19762])).
fof(f19767,plain,(
  ( ! [X1] : (s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46(X1,sK47(sK3,sK1,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f534,f19762])).
fof(f19766,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK47(sK3,sK1,sK0),X0,sK0))))) ) | $spl6),
  inference(superposition,[],[f667,f19762])).
fof(f19762,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | $spl6),
  inference(subsumption_resolution,[],[f19712,f427])).
fof(f19712,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | $spl6),
  inference(superposition,[],[f667,f870])).
fof(f19761,plain,(
  ( ! [X103,X101,X102,X100] : (s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK47(X103,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X100),s('type.num.num',X101)),X102)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num',X101))))) )),
  inference(forward_demodulation,[],[f19711,f531])).
fof(f19711,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))),s('type.num.num',X101)))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X100),s('type.num.num',X101))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),sK47(X103,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X100),s('type.num.num',X101)),X102))))) )),
  inference(superposition,[],[f667,f531])).
fof(f19760,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num',X96) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK47(X99,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X96),s('type.num.num',X97)),X98)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num',X96))))) )),
  inference(forward_demodulation,[],[f19710,f530])).
fof(f19710,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))),s('type.num.num',X96)))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X96),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK47(X99,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X96),s('type.num.num',X97)),X98))))) )),
  inference(superposition,[],[f667,f530])).
fof(f19759,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X93))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK47(X95,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.ZERO_0')),X94)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X93))))))) )),
  inference(forward_demodulation,[],[f19709,f467])).
fof(f19709,plain,(
  ( ! [X94,X95,X93] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X93)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK47(X95,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))),s('type.num.num','const.arithmetic.ZERO_0')),X94))))) )),
  inference(superposition,[],[f667,f467])).
fof(f19758,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X90))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK47(X92,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.ZERO_0')),X91)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X90))))))) )),
  inference(forward_demodulation,[],[f19708,f466])).
fof(f19708,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X90)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK47(X92,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.ZERO_0')),X91))))) )),
  inference(superposition,[],[f667,f466])).
fof(f19757,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK47(X89,'const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87)),X88))))) )),
  inference(forward_demodulation,[],[f19756,f589])).
fof(f19756,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK47(X89,'const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87)),X88))))) )),
  inference(subsumption_resolution,[],[f19755,f427])).
fof(f19755,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'T_0')) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK47(X89,'const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87)),X88))))) )),
  inference(forward_demodulation,[],[f19707,f7139])).
fof(f19707,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK47(X89,'const.numeral.iSUB_3'(s(bool,X86),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X87)),X88))))) )),
  inference(superposition,[],[f667,f589])).
fof(f19754,plain,(
  ( ! [X85,X83,X84] : (s('type.num.num',X83) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK47(X85,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X83),s('type.num.num','const.arithmetic.ZERO_0')),X84)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num',X83))))) )),
  inference(forward_demodulation,[],[f19706,f454])).
fof(f19706,plain,(
  ( ! [X85,X83,X84] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))),s('type.num.num',X83)))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X83),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK47(X85,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X83),s('type.num.num','const.arithmetic.ZERO_0')),X84))))) )),
  inference(superposition,[],[f667,f454])).
fof(f19753,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK47(X82,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80))))))))) )),
  inference(forward_demodulation,[],[f19705,f459])).
fof(f19705,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X80)))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),sK47(X82,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X80)))),X81))))) )),
  inference(superposition,[],[f667,f459])).
fof(f19752,plain,(
  ( ! [X78,X79,X77] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X77))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),sK47(X79,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X77))))))))) )),
  inference(forward_demodulation,[],[f19704,f458])).
fof(f19704,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X77)))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),sK47(X79,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X77)))),X78))))) )),
  inference(superposition,[],[f667,f458])).
fof(f19751,plain,(
  ( ! [X76,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK47(X76,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75))))) )),
  inference(forward_demodulation,[],[f19750,f430])).
fof(f19750,plain,(
  ( ! [X76,X75] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK47(X76,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75))))) )),
  inference(subsumption_resolution,[],[f19749,f427])).
fof(f19749,plain,(
  ( ! [X76,X75] : (~p(s(bool,'T_0')) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK47(X76,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75))))) )),
  inference(forward_demodulation,[],[f19703,f7139])).
fof(f19703,plain,(
  ( ! [X76,X75] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),sK47(X76,'const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X75))))) )),
  inference(superposition,[],[f667,f430])).
fof(f19745,plain,(
  ( ! [X70,X72,X71] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X70))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK47(X72,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70)))),X71)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X70))))))))) )),
  inference(forward_demodulation,[],[f19701,f462])).
fof(f19701,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X70)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK47(X72,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70)))),X71))))) )),
  inference(superposition,[],[f667,f462])).
fof(f19744,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num','const.num.SUC_1'(s('type.num.num',X66))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK47(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num',X67)))),X68)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X67))))))))) )),
  inference(forward_demodulation,[],[f19700,f6799])).
fof(f19700,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.num.SUC_1'(s('type.num.num',X67)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num',X67))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK47(X69,'const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num',X67)))),X68))))) )),
  inference(superposition,[],[f667,f603])).
fof(f19743,plain,(
  ( ! [X64,X65,X63] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK47(X65,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X64)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))))))))) )),
  inference(forward_demodulation,[],[f19699,f463])).
fof(f19699,plain,(
  ( ! [X64,X65,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK47(X65,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))),X64))))) )),
  inference(superposition,[],[f667,f463])).
fof(f19742,plain,(
  ( ! [X61,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK47(X62,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X60)))),X61)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))))))))) )),
  inference(forward_demodulation,[],[f19698,f465])).
fof(f19698,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),X62))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X60))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X61),sK47(X62,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X60)))),X61))))) )),
  inference(superposition,[],[f667,f465])).
fof(f19741,plain,(
  ( ! [X59,X57,X58] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),sK47(X59,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X58)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) )),
  inference(forward_demodulation,[],[f19697,f457])).
fof(f19697,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X59))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),sK47(X59,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57)))),X58))))) )),
  inference(superposition,[],[f667,f457])).
fof(f19740,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK47(X56,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X55)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f19696,f432])).
fof(f19696,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK47(X56,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X55))))) )),
  inference(superposition,[],[f667,f432])).
fof(f19739,plain,(
  ( ! [X54,X52,X53,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X51),s('type.num.num',X52))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK47(X54,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X51),s('type.num.num',X52))))))))) )),
  inference(forward_demodulation,[],[f19695,f605])).
fof(f19695,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X51),s('type.num.num',X52)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK47(X54,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X53))))) )),
  inference(superposition,[],[f667,f605])).
fof(f19738,plain,(
  ( ! [X47,X50,X48,X49] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK47(X50,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48)))),X49)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num',X48))))))))) )),
  inference(forward_demodulation,[],[f19694,f607])).
fof(f19694,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X47),s('type.num.num',X48)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK47(X50,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48)))),X49))))) )),
  inference(superposition,[],[f667,f607])).
fof(f19730,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK47(X37,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X36)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35))))))))) )),
  inference(forward_demodulation,[],[f19690,f606])).
fof(f19690,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num',X35)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK47(X37,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X36))))) )),
  inference(superposition,[],[f667,f606])).
fof(f19729,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK47(X33,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))),X32)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f19689,f594])).
fof(f19689,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31)))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK47(X33,'const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))),X32))))) )),
  inference(superposition,[],[f667,f594])).
fof(f19724,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK47(X24,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X23)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))))))) )),
  inference(forward_demodulation,[],[f19686,f707])).
fof(f19686,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK47(X24,'const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X23))))) )),
  inference(superposition,[],[f667,f707])).
fof(f19684,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK47(X16,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X15))))) )),
  inference(superposition,[],[f667,f592])).
fof(f19677,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))),s('type.num.num',X11)))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK47('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X8),X9),s('type.list.list'(X8),X10)),X11,X8))))) )),
  inference(superposition,[],[f667,f531])).
fof(f19676,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.num.num',X7)))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK47('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X7,X4))))) )),
  inference(superposition,[],[f667,f530])).
fof(f19675,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X3)))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X3,sK0))))) ) | $spl4),
  inference(superposition,[],[f667,f644])).
fof(f19674,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK47('const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X2,X0))))) )),
  inference(superposition,[],[f667,f495])).
fof(f19669,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.num.num',X1)))))) ) | $spl1),
  inference(superposition,[],[f16049,f592])).
fof(f19545,plain,(
  ( ! [X528,X530,X529] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X528),s('type.num.num',X529))))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X528))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X529)))),X530,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X530),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X528),s('type.num.num',X529))))))))) )),
  inference(forward_demodulation,[],[f19519,f607])).
fof(f19519,plain,(
  ( ! [X528,X530,X529] : (~p(s(bool,happ(s(fun('type.num.num',bool),X530),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X528),s('type.num.num',X529)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X528))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X529))))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X528))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X529)))),X530,'type.num.num'))) )),
  inference(superposition,[],[f574,f607])).
fof(f19354,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X113),s('type.num.num',X114))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) )),
  inference(superposition,[],[f622,f607])).
fof(f19527,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f19526,f607])).
fof(f19526,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f19326,f463])).
fof(f19326,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f607])).
fof(f19169,plain,(
  ( ! [X520,X522,X521] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X520),s('type.num.num',X521))))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X520))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X521)))),X522,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X522),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X520),s('type.num.num',X521))))))))) )),
  inference(forward_demodulation,[],[f19142,f606])).
fof(f19142,plain,(
  ( ! [X520,X522,X521] : (~p(s(bool,happ(s(fun('type.num.num',bool),X522),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X520),s('type.num.num',X521)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X520))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X521))))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X520))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X521)))),X522,'type.num.num'))) )),
  inference(superposition,[],[f574,f606])).
fof(f18978,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X107),s('type.num.num',X108))))))) | s('type.num.num',X109) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X107))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108)))))) )),
  inference(superposition,[],[f622,f606])).
fof(f19151,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f19150,f606])).
fof(f19150,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f18952,f463])).
fof(f18952,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f606])).
fof(f18798,plain,(
  ( ! [X512,X514,X513] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num',X513))))) = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X512))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X513)))),X514,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X514),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num',X513))))))))) )),
  inference(forward_demodulation,[],[f18770,f605])).
fof(f18770,plain,(
  ( ! [X512,X514,X513] : (~p(s(bool,happ(s(fun('type.num.num',bool),X514),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X512),s('type.num.num',X513)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X512))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X513))))) = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X512))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X513)))),X514,'type.num.num'))) )),
  inference(superposition,[],[f574,f605])).
fof(f18607,plain,(
  ( ! [X103,X101,X102] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X103))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X101),s('type.num.num',X102))))))) | s('type.num.num',X103) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X101))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X102)))))) )),
  inference(superposition,[],[f622,f605])).
fof(f18780,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) )),
  inference(forward_demodulation,[],[f18779,f605])).
fof(f18779,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(forward_demodulation,[],[f18583,f463])).
fof(f18583,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK46('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31,X30))))) )),
  inference(superposition,[],[f534,f605])).
fof(f18496,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f15451,f592])).
fof(f18426,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f15302,f592])).
fof(f18308,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X10))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK46(X11,'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X8),X9),s('type.list.list'(X8),X10)),X8))))) )),
  inference(superposition,[],[f534,f531])).
fof(f18307,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK46(X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f534,f530])).
fof(f18306,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46(X3,'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0))))) ) | $spl4),
  inference(superposition,[],[f534,f644])).
fof(f18305,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X2,'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)),X0))))) )),
  inference(superposition,[],[f534,f495])).
fof(f18303,plain,(
  ( ! [X10,X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK46('const.arithmetic.NUMERAL_1'(s('type.num.num',X8)),X10,X9))))) )),
  inference(superposition,[],[f534,f463])).
fof(f18302,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK46('const.arithmetic.BIT2_1'(s('type.num.num',X5)),X7,X6))))) )),
  inference(superposition,[],[f534,f465])).
fof(f18301,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK46('const.arithmetic.BIT|49|_1'(s('type.num.num',X2)),X4,X3))))) )),
  inference(superposition,[],[f534,f457])).
fof(f18360,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK46('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X88),s('type.num.num',X89)),X91,X90)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X89))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91)))) )),
  inference(forward_demodulation,[],[f18300,f531])).
fof(f18300,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X89))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X88),s('type.num.num',X89))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK46('const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X88),s('type.num.num',X89)),X91,X90))))) )),
  inference(superposition,[],[f534,f531])).
fof(f18359,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num',X84) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK46('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X84),s('type.num.num',X85)),X87,X86)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87)))) )),
  inference(forward_demodulation,[],[f18299,f530])).
fof(f18299,plain,(
  ( ! [X87,X85,X86,X84] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X84))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X84),s('type.num.num',X85))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK46('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X84),s('type.num.num',X85)),X87,X86))))) )),
  inference(superposition,[],[f534,f530])).
fof(f18358,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0')),X83,X82)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83)))) )),
  inference(forward_demodulation,[],[f18357,f467])).
fof(f18357,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0')),X83,X82))))) )),
  inference(forward_demodulation,[],[f18298,f457])).
fof(f18298,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X81))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0')),X83,X82))))) )),
  inference(superposition,[],[f534,f467])).
fof(f18356,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78)))))) )),
  inference(forward_demodulation,[],[f18297,f466])).
fof(f18297,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK46('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X80,X79))))) )),
  inference(superposition,[],[f534,f466])).
fof(f18355,plain,(
  ( ! [X76,X74,X77,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK46('const.numeral.iSUB_3'(s(bool,X74),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75)),X77,X76)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77)))) )),
  inference(forward_demodulation,[],[f18354,f589])).
fof(f18354,plain,(
  ( ! [X76,X74,X77,X75] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X74),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK46('const.numeral.iSUB_3'(s(bool,X74),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75)),X77,X76))))) )),
  inference(forward_demodulation,[],[f18296,f432])).
fof(f18296,plain,(
  ( ! [X76,X74,X77,X75] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X74),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK46('const.numeral.iSUB_3'(s(bool,X74),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X75)),X77,X76))))) )),
  inference(superposition,[],[f534,f589])).
fof(f18353,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X71),s('type.num.num','const.arithmetic.ZERO_0')),X73,X72)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73)))) )),
  inference(forward_demodulation,[],[f18295,f454])).
fof(f18295,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X71),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK46('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X71),s('type.num.num','const.arithmetic.ZERO_0')),X73,X72))))) )),
  inference(superposition,[],[f534,f454])).
fof(f18352,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68)))),X70,X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68)))))) )),
  inference(forward_demodulation,[],[f18351,f459])).
fof(f18351,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68)))),X70,X69))))) )),
  inference(forward_demodulation,[],[f18350,f457])).
fof(f18350,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X68))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68)))),X70,X69))))) )),
  inference(forward_demodulation,[],[f18294,f465])).
fof(f18294,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X68))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X68)))),X70,X69))))) )),
  inference(superposition,[],[f534,f459])).
fof(f18349,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X65))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65)))),X67,X66)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X65)))))))) )),
  inference(forward_demodulation,[],[f18348,f458])).
fof(f18348,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X65))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65)))),X67,X66))))) )),
  inference(forward_demodulation,[],[f18293,f465])).
fof(f18293,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X65))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X65)))),X67,X66))))) )),
  inference(superposition,[],[f534,f458])).
fof(f18347,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X64,X63)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64)))) )),
  inference(forward_demodulation,[],[f18346,f430])).
fof(f18346,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X64,X63))))) )),
  inference(forward_demodulation,[],[f18292,f432])).
fof(f18292,plain,(
  ( ! [X64,X63] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK46('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X64,X63))))) )),
  inference(superposition,[],[f534,f430])).
fof(f18343,plain,(
  ( ! [X59,X60,X58] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK46('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X60,X59)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X58)))))))) )),
  inference(forward_demodulation,[],[f18342,f462])).
fof(f18342,plain,(
  ( ! [X59,X60,X58] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X58))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK46('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X60,X59))))) )),
  inference(forward_demodulation,[],[f18290,f463])).
fof(f18290,plain,(
  ( ! [X59,X60,X58] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X58))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK46('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X60,X59))))) )),
  inference(superposition,[],[f534,f462])).
fof(f18341,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))),X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54)))))))) )),
  inference(forward_demodulation,[],[f18340,f6799])).
fof(f18340,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))),X57,X56))))) )),
  inference(forward_demodulation,[],[f18339,f707])).
fof(f18339,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X55))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))),X57,X56))))) )),
  inference(forward_demodulation,[],[f18289,f6799])).
fof(f18289,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.num.SUC_1'(s('type.num.num',X55))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f534,f603])).
fof(f18338,plain,(
  ( ! [X52,X53,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51)))))))) )),
  inference(forward_demodulation,[],[f18337,f463])).
fof(f18337,plain,(
  ( ! [X52,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52))))) )),
  inference(forward_demodulation,[],[f18288,f463])).
fof(f18288,plain,(
  ( ! [X52,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X51))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))),X53,X52))))) )),
  inference(superposition,[],[f534,f463])).
fof(f18336,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X50,X49)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48)))))) )),
  inference(forward_demodulation,[],[f18335,f465])).
fof(f18335,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X50,X49))))) )),
  inference(forward_demodulation,[],[f18287,f457])).
fof(f18287,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),X50))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X48))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))),X50,X49))))) )),
  inference(superposition,[],[f534,f465])).
fof(f18334,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X47,X46)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),X47))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45)))))) )),
  inference(forward_demodulation,[],[f18333,f457])).
fof(f18333,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),X47))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X47,X46))))) )),
  inference(forward_demodulation,[],[f18286,f465])).
fof(f18286,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),X47))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X46),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X47,X46))))) )),
  inference(superposition,[],[f534,f457])).
fof(f18332,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X44,X43)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) )),
  inference(forward_demodulation,[],[f18331,f432])).
fof(f18331,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X44,X43))))) )),
  inference(forward_demodulation,[],[f18285,f457])).
fof(f18285,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK46('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X44,X43))))) )),
  inference(superposition,[],[f534,f432])).
fof(f18324,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK46('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))),X33,X32)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31)))))) )),
  inference(forward_demodulation,[],[f18281,f594])).
fof(f18281,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X30),s('type.num.num',X31))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK46('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))),X33,X32))))) )),
  inference(superposition,[],[f534,f594])).
fof(f18322,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK46('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X24,X23)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))))) )),
  inference(forward_demodulation,[],[f18321,f707])).
fof(f18321,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK46('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X24,X23))))) )),
  inference(forward_demodulation,[],[f18320,f707])).
fof(f18320,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK46('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X24,X23))))) )),
  inference(forward_demodulation,[],[f18279,f6799])).
fof(f18279,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK46('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))),s('type.num.num',X22)),X24,X23))))) )),
  inference(superposition,[],[f534,f707])).
fof(f18318,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK46('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(forward_demodulation,[],[f18277,f6799])).
fof(f18277,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK46('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f534,f592])).
fof(f18269,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10461,f603])).
fof(f18268,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10461,f463])).
fof(f18267,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10461,f465])).
fof(f18266,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10461,f457])).
fof(f18265,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f10461,f432])).
fof(f18228,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10460,f603])).
fof(f18227,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10460,f463])).
fof(f18226,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10460,f465])).
fof(f18225,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10460,f457])).
fof(f18224,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f10460,f432])).
fof(f18189,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f18186,f434])).
fof(f18186,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X2,X1,X0))))) )),
  inference(superposition,[],[f575,f471])).
fof(f18185,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK86(X0,X1,bool))) )),
  inference(superposition,[],[f575,f471])).
fof(f18188,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,happ(s(fun(X4,bool),X6),s(X4,X7)))) | p(s(bool,happ(s(fun(X4,bool),X6),s(X4,sK86(X7,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X4,bool),X5),s(fun(X4,bool),X6)),X4)))))) )),
  inference(forward_demodulation,[],[f18184,f531])).
fof(f18184,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,happ(s(fun(X4,bool),X6),s(X4,sK86(X7,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X4,bool),X5),s(fun(X4,bool),X6)),X4))))) | ~p(s(bool,happ(s(fun(X4,bool),'const.bool.COND_3'(s(bool,'F_0'),s(fun(X4,bool),X5),s(fun(X4,bool),X6))),s(X4,X7))))) )),
  inference(superposition,[],[f575,f531])).
fof(f18187,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f18183,f530])).
fof(f18183,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f575,f530])).
fof(f18093,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10459,f603])).
fof(f18092,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10459,f463])).
fof(f18091,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10459,f465])).
fof(f18090,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10459,f457])).
fof(f18089,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f10459,f432])).
fof(f18052,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10458,f603])).
fof(f18051,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10458,f463])).
fof(f18050,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10458,f465])).
fof(f18049,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10458,f457])).
fof(f18048,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(superposition,[],[f10458,f432])).
fof(f18013,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f17956,f434])).
fof(f17956,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f4781,f471])).
fof(f18001,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num',X38)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))))))) )),
  inference(forward_demodulation,[],[f17944,f17572])).
fof(f17944,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))))))))) )),
  inference(superposition,[],[f4781,f603])).
fof(f18000,plain,(
  ( ! [X35,X34] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num',X35)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))))))))) )),
  inference(forward_demodulation,[],[f17943,f17572])).
fof(f17943,plain,(
  ( ! [X35,X34] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))))))))) )),
  inference(superposition,[],[f4781,f463])).
fof(f17999,plain,(
  ( ! [X33,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num',X33)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))))))))) )),
  inference(forward_demodulation,[],[f17942,f17572])).
fof(f17942,plain,(
  ( ! [X33,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))))))))) )),
  inference(superposition,[],[f4781,f465])).
fof(f17998,plain,(
  ( ! [X30,X31] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num',X31)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))))))))) )),
  inference(forward_demodulation,[],[f17941,f17572])).
fof(f17941,plain,(
  ( ! [X30,X31] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))))))))) )),
  inference(superposition,[],[f4781,f457])).
fof(f17997,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f17940,f17572])).
fof(f17940,plain,(
  ( ! [X29] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f4781,f432])).
fof(f17931,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) )),
  inference(superposition,[],[f4781,f592])).
fof(f17973,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))),s('type.num.num',X38)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))))))) )),
  inference(forward_demodulation,[],[f17914,f6799])).
fof(f17914,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))))),s('type.num.num',X38))))) )),
  inference(superposition,[],[f4781,f603])).
fof(f17901,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))),s('type.num.num',X10))))) )),
  inference(superposition,[],[f4781,f592])).
fof(f17890,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10287,f603])).
fof(f17889,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10287,f463])).
fof(f17888,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10287,f465])).
fof(f17887,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10287,f457])).
fof(f17848,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10286,f603])).
fof(f17847,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10286,f463])).
fof(f17846,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10286,f465])).
fof(f17845,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10286,f457])).
fof(f17798,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))),s('type.num.num',X38)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))))))) )),
  inference(forward_demodulation,[],[f17741,f17572])).
fof(f17741,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))))))))) )),
  inference(superposition,[],[f4780,f603])).
fof(f17797,plain,(
  ( ! [X35,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num',X35)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34))))))))))) )),
  inference(forward_demodulation,[],[f17740,f17572])).
fof(f17740,plain,(
  ( ! [X35,X34] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))))))))) )),
  inference(superposition,[],[f4780,f463])).
fof(f17796,plain,(
  ( ! [X33,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))),s('type.num.num',X33)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))))))))) )),
  inference(forward_demodulation,[],[f17739,f17572])).
fof(f17739,plain,(
  ( ! [X33,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))))))))) )),
  inference(superposition,[],[f4780,f465])).
fof(f17795,plain,(
  ( ! [X30,X31] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num',X31)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))))))))) )),
  inference(forward_demodulation,[],[f17738,f17572])).
fof(f17738,plain,(
  ( ! [X30,X31] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))))))))) )),
  inference(superposition,[],[f4780,f457])).
fof(f17794,plain,(
  ( ! [X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f17737,f17572])).
fof(f17737,plain,(
  ( ! [X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f4780,f432])).
fof(f17728,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) )),
  inference(superposition,[],[f4780,f592])).
fof(f17770,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))),s('type.num.num',X38)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))))))) )),
  inference(forward_demodulation,[],[f17711,f6799])).
fof(f17711,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num','const.num.SUC_1'(s('type.num.num',X37))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X37))))),s('type.num.num',X38))))) )),
  inference(superposition,[],[f4780,f603])).
fof(f17698,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))),s('type.num.num',X10))))) )),
  inference(superposition,[],[f4780,f592])).
fof(f17688,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10285,f603])).
fof(f17687,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10285,f463])).
fof(f17686,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10285,f465])).
fof(f17685,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10285,f457])).
fof(f17646,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10284,f603])).
fof(f17645,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10284,f463])).
fof(f17644,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))))) ) | $spl1),
  inference(superposition,[],[f10284,f465])).
fof(f17643,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl1),
  inference(superposition,[],[f10284,f457])).
fof(f17607,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f17606,f17572])).
fof(f17606,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f17605,f4764])).
fof(f17605,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f17584,f591])).
fof(f17584,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f714])).
fof(f17574,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X7),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f714,f471])).
fof(f17573,plain,(
  ( ! [X4,X5] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num',X4))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f714,f591])).
fof(f17572,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f714,f593])).
fof(f17571,plain,(
  ( ! [X8,X7,X9] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X9))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f714,f603])).
fof(f17570,plain,(
  ( ! [X6,X5] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f714,f463])).
fof(f17569,plain,(
  ( ! [X4,X3] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f714,f465])).
fof(f17568,plain,(
  ( ! [X2,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f714,f457])).
fof(f17567,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f714,f432])).
fof(f17536,plain,(
  ( ! [X8,X7,X9] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f714,f603])).
fof(f17535,plain,(
  ( ! [X6,X5] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f714,f463])).
fof(f17534,plain,(
  ( ! [X4,X3] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f714,f465])).
fof(f17533,plain,(
  ( ! [X2,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f714,f457])).
fof(f17589,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f17532,f7139])).
fof(f17532,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f714,f432])).
fof(f17384,plain,(
  ( ! [X505,X504,X503] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X503),s('type.num.num','const.num.SUC_1'(s('type.num.num',X504))))) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X503))),s('type.num.num',X504)),X505,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X505),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X503),s('type.num.num','const.num.SUC_1'(s('type.num.num',X504))))))))) )),
  inference(forward_demodulation,[],[f17352,f707])).
fof(f17352,plain,(
  ( ! [X505,X504,X503] : (~p(s(bool,happ(s(fun('type.num.num',bool),X505),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X503),s('type.num.num','const.num.SUC_1'(s('type.num.num',X504)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X503))),s('type.num.num',X504))) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X503))),s('type.num.num',X504)),X505,'type.num.num'))) )),
  inference(superposition,[],[f574,f707])).
fof(f17145,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f707,f592])).
fof(f17113,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))),s('type.num.num',X9)))) )),
  inference(superposition,[],[f707,f603])).
fof(f17112,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f707,f463])).
fof(f17111,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f707,f465])).
fof(f17110,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f707,f457])).
fof(f16991,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f16990,f705])).
fof(f16990,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f16974,f591])).
fof(f16974,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f574,f706])).
fof(f16965,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f706,f471])).
fof(f16644,plain,(
  ( ! [X532,X533,X531] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X532),s('type.num.num','const.num.SUC_1'(s('type.num.num',X531))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X531),s('type.num.num',X532)))),X533,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X533),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X531),s('type.num.num','const.num.SUC_1'(s('type.num.num',X532))))))))) )),
  inference(forward_demodulation,[],[f16624,f6799])).
fof(f16624,plain,(
  ( ! [X532,X533,X531] : (~p(s(bool,happ(s(fun('type.num.num',bool),X533),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X531),s('type.num.num','const.num.SUC_1'(s('type.num.num',X532)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X531),s('type.num.num',X532))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X531),s('type.num.num',X532)))),X533,'type.num.num'))) )),
  inference(superposition,[],[f574,f603])).
fof(f16639,plain,(
  ( ! [X265,X264,X266] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X265),s('type.num.num','const.num.SUC_1'(s('type.num.num',X264))))),s('type.num.num',X266)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X264),s('type.num.num','const.num.SUC_1'(s('type.num.num',X265))))),s('type.num.num',X266))))) )),
  inference(forward_demodulation,[],[f16521,f6799])).
fof(f16521,plain,(
  ( ! [X265,X264,X266] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X264),s('type.num.num','const.num.SUC_1'(s('type.num.num',X265))))),s('type.num.num',X266)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X264),s('type.num.num',X265))))),s('type.num.num',X266))))) )),
  inference(superposition,[],[f4783,f603])).
fof(f16637,plain,(
  ( ! [X259,X260,X258] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num','const.num.SUC_1'(s('type.num.num',X258))))),s('type.num.num',X260)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X258),s('type.num.num','const.num.SUC_1'(s('type.num.num',X259))))),s('type.num.num',X260))))) )),
  inference(forward_demodulation,[],[f16519,f6799])).
fof(f16519,plain,(
  ( ! [X259,X260,X258] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X258),s('type.num.num','const.num.SUC_1'(s('type.num.num',X259))))),s('type.num.num',X260)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X258),s('type.num.num',X259))))),s('type.num.num',X260))))) )),
  inference(superposition,[],[f4782,f603])).
fof(f16635,plain,(
  ( ! [X210,X208,X209] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X210))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X209),s('type.num.num','const.num.SUC_1'(s('type.num.num',X208))))))) | s('type.num.num',X210) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X208),s('type.num.num','const.num.SUC_1'(s('type.num.num',X209)))))) )),
  inference(forward_demodulation,[],[f16495,f6799])).
fof(f16495,plain,(
  ( ! [X210,X208,X209] : (s('type.num.num',X210) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X208),s('type.num.num','const.num.SUC_1'(s('type.num.num',X209))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X210))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X208),s('type.num.num',X209)))))))) )),
  inference(superposition,[],[f623,f603])).
fof(f16633,plain,(
  ( ! [X204,X202,X203] : (s('type.num.num',X204) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X203),s('type.num.num','const.num.SUC_1'(s('type.num.num',X202))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X202),s('type.num.num','const.num.SUC_1'(s('type.num.num',X203)))))))) )),
  inference(forward_demodulation,[],[f16493,f6799])).
fof(f16493,plain,(
  ( ! [X204,X202,X203] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X202),s('type.num.num','const.num.SUC_1'(s('type.num.num',X203))))))) | s('type.num.num',X204) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X202),s('type.num.num',X203)))))) )),
  inference(superposition,[],[f622,f603])).
fof(f16455,plain,(
  ( ! [X103,X105,X104] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X103),s('type.num.num','const.num.SUC_1'(s('type.num.num',X104)))))))))))) ) | $spl1),
  inference(superposition,[],[f10464,f603])).
fof(f16453,plain,(
  ( ! [X99,X97,X98] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X99),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X97),s('type.num.num','const.num.SUC_1'(s('type.num.num',X98)))))))))))) ) | $spl1),
  inference(superposition,[],[f10290,f603])).
fof(f16452,plain,(
  ( ! [X94,X95,X96] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X96),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.num.SUC_1'(s('type.num.num',X95)))))))))))) ) | $spl1),
  inference(superposition,[],[f10288,f603])).
fof(f16438,plain,(
  ( ! [X61,X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))))))))))) ) | $spl1),
  inference(superposition,[],[f6818,f603])).
fof(f16437,plain,(
  ( ! [X57,X58,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num','const.num.SUC_1'(s('type.num.num',X57)))))))))))) ) | $spl1),
  inference(superposition,[],[f6817,f603])).
fof(f16436,plain,(
  ( ! [X54,X55,X53] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.num.SUC_1'(s('type.num.num',X54)))))))))) ) | $spl1),
  inference(superposition,[],[f6816,f603])).
fof(f16435,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num','const.num.SUC_1'(s('type.num.num',X51)))))))))))) ) | $spl1),
  inference(superposition,[],[f6813,f603])).
fof(f16433,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45)))))))))))) ) | $spl1),
  inference(superposition,[],[f6810,f603])).
fof(f16431,plain,(
  ( ! [X39,X40] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40)))))))))) ) | $spl1),
  inference(superposition,[],[f5548,f603])).
fof(f16430,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))))))))))) ) | $spl1),
  inference(superposition,[],[f4045,f603])).
fof(f16429,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))))))))) ) | $spl1),
  inference(superposition,[],[f4044,f603])).
fof(f16428,plain,(
  ( ! [X33,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))))))) ) | $spl1),
  inference(superposition,[],[f3926,f603])).
fof(f16427,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))))))))) ) | $spl1),
  inference(superposition,[],[f3925,f603])).
fof(f16629,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f16350,f6799])).
fof(f16350,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f603,f623])).
fof(f16124,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num',X1)))))) ) | $spl1),
  inference(superposition,[],[f10464,f592])).
fof(f16122,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f10464,f463])).
fof(f16121,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f10464,f465])).
fof(f16120,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f10464,f457])).
fof(f16119,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl1),
  inference(superposition,[],[f10464,f432])).
fof(f16053,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num',X1)))))) ) | $spl1),
  inference(superposition,[],[f10290,f592])).
fof(f16051,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f10290,f463])).
fof(f16050,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f10290,f465])).
fof(f16049,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f10290,f457])).
fof(f15987,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f15977,f4779])).
fof(f15977,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f601])).
fof(f15986,plain,(
  ( ! [X21,X20] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))))) )),
  inference(forward_demodulation,[],[f15976,f4779])).
fof(f15976,plain,(
  ( ! [X21,X20] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) )),
  inference(superposition,[],[f969,f601])).
fof(f15985,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))) )),
  inference(forward_demodulation,[],[f15975,f4779])).
fof(f15975,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f859,f601])).
fof(f15984,plain,(
  ( ! [X17,X15,X16] : (s(bool,X17) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16)))) | ~p(s(bool,X17))) )),
  inference(forward_demodulation,[],[f15974,f4779])).
fof(f15974,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16)))) | ~p(s(bool,X17)) | s(bool,X17) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))) )),
  inference(superposition,[],[f621,f601])).
fof(f15982,plain,(
  ( ! [X10,X11,X9] : (s(bool,X11) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X10)))) | p(s(bool,X11))) )),
  inference(forward_demodulation,[],[f15972,f4779])).
fof(f15972,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X10)))) | p(s(bool,X11)) | s(bool,X11) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f618,f601])).
fof(f15901,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f10288,f463])).
fof(f15900,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f10288,f465])).
fof(f15453,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f6818,f463])).
fof(f15452,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f6818,f465])).
fof(f15451,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f6818,f457])).
fof(f15304,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f6817,f463])).
fof(f15303,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f6817,f465])).
fof(f15302,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f6817,f457])).
fof(f15231,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f6813,f463])).
fof(f15230,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f6813,f465])).
fof(f14938,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))))))) ) | $spl1),
  inference(superposition,[],[f6810,f463])).
fof(f14937,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))))))) ) | $spl1),
  inference(superposition,[],[f6810,f465])).
fof(f13456,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))))),X42,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'T_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f13405,f6061])).
fof(f13405,plain,(
  ( ! [X41,X42] : (~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41))))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))))),X42,bool))) ) | $spl1),
  inference(superposition,[],[f574,f6061])).
fof(f13455,plain,(
  ( ! [X39,X40] : (s(bool,'T_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39)))))),X40,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X40),s(bool,'T_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f13404,f5548])).
fof(f13404,plain,(
  ( ! [X39,X40] : (~p(s(bool,happ(s(fun(bool,bool),X40),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39)))))),X40,bool))) ) | $spl1),
  inference(superposition,[],[f574,f5548])).
fof(f11393,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f5548,f463])).
fof(f11392,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f5548,f465])).
fof(f10815,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))),s('type.num.num',X4)))))) ) | $spl1),
  inference(superposition,[],[f9593,f592])).
fof(f10464,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))))))) ) | $spl1),
  inference(superposition,[],[f6816,f465])).
fof(f10461,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))))))))))) ) | $spl1),
  inference(superposition,[],[f4045,f465])).
fof(f10460,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))))) ) | $spl1),
  inference(superposition,[],[f4044,f465])).
fof(f10459,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))))))))) ) | $spl1),
  inference(superposition,[],[f3926,f465])).
fof(f10458,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))))))) ) | $spl1),
  inference(superposition,[],[f3925,f465])).
fof(f10290,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19)))))))))) ) | $spl1),
  inference(superposition,[],[f6816,f463])).
fof(f10288,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))))))) ) | $spl1),
  inference(superposition,[],[f6808,f463])).
fof(f10287,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))))))))))) ) | $spl1),
  inference(superposition,[],[f4045,f463])).
fof(f10286,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))))) ) | $spl1),
  inference(superposition,[],[f4044,f463])).
fof(f10285,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))))))))) ) | $spl1),
  inference(superposition,[],[f3926,f463])).
fof(f10284,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))))))) ) | $spl1),
  inference(superposition,[],[f3925,f463])).
fof(f10123,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(superposition,[],[f4045,f457])).
fof(f10104,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(superposition,[],[f4044,f457])).
fof(f10103,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f4044,f432])).
fof(f10002,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(superposition,[],[f3926,f457])).
fof(f9984,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(superposition,[],[f3925,f457])).
fof(f9983,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f3925,f432])).
fof(f9593,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f6816,f457])).
fof(f4662,plain,(
  ( ! [X105] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),sK86('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X105,'type.list.list'(sK0))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X105),s('type.list.list'(sK0),sK2))))) ) | $spl4),
  inference(forward_demodulation,[],[f4610,f644])).
fof(f4610,plain,(
  ( ! [X105] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X105),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),sK86('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X105,'type.list.list'(sK0)))) ) | $spl4),
  inference(superposition,[],[f574,f644])).
fof(f4661,plain,(
  ( ! [X103,X102,X104] : (s('type.list.list'(X102),X103) = s('type.list.list'(X102),sK86('const.list.APPEND_2'(s('type.list.list'(X102),'const.list.NIL_0'),s('type.list.list'(X102),X103)),X104,'type.list.list'(X102))) | ~p(s(bool,happ(s(fun('type.list.list'(X102),bool),X104),s('type.list.list'(X102),X103))))) )),
  inference(forward_demodulation,[],[f4609,f495])).
fof(f4609,plain,(
  ( ! [X103,X102,X104] : (~p(s(bool,happ(s(fun('type.list.list'(X102),bool),X104),s('type.list.list'(X102),X103)))) | s('type.list.list'(X102),'const.list.APPEND_2'(s('type.list.list'(X102),'const.list.NIL_0'),s('type.list.list'(X102),X103))) = s('type.list.list'(X102),sK86('const.list.APPEND_2'(s('type.list.list'(X102),'const.list.NIL_0'),s('type.list.list'(X102),X103)),X104,'type.list.list'(X102)))) )),
  inference(superposition,[],[f574,f495])).
fof(f5905,plain,(
  ( ! [X194,X195,X193] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X193),s('type.num.num',X194))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X193))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X194)))),X195,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X195),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X193),s('type.num.num',X194))))))) )),
  inference(forward_demodulation,[],[f5890,f594])).
fof(f5890,plain,(
  ( ! [X194,X195,X193] : (~p(s(bool,happ(s(fun('type.num.num',bool),X195),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X193),s('type.num.num',X194)))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X193))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X194))))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X193))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X194)))),X195,'type.num.num'))) )),
  inference(superposition,[],[f574,f594])).
fof(f6948,plain,(
  ( ! [X285,X283,X284] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num','const.num.SUC_1'(s('type.num.num',X284))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num',X284)))),X285,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X285),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num','const.num.SUC_1'(s('type.num.num',X284))))))))) )),
  inference(forward_demodulation,[],[f6926,f603])).
fof(f6926,plain,(
  ( ! [X285,X283,X284] : (~p(s(bool,happ(s(fun('type.num.num',bool),X285),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num','const.num.SUC_1'(s('type.num.num',X284)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num',X284))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X283),s('type.num.num',X284)))),X285,'type.num.num'))) )),
  inference(superposition,[],[f574,f603])).
fof(f4586,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X56)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57))) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57)),X58,'type.num.num'))) )),
  inference(superposition,[],[f574,f592])).
fof(f4653,plain,(
  ( ! [X87,X86] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X86))))) = s('type.num.num',sK86('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86)))),X87,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X86))))))))) )),
  inference(forward_demodulation,[],[f4601,f462])).
fof(f4601,plain,(
  ( ! [X87,X86] : (~p(s(bool,happ(s(fun('type.num.num',bool),X87),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X86)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))))) = s('type.num.num',sK86('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86)))),X87,'type.num.num'))) )),
  inference(superposition,[],[f574,f462])).
fof(f4651,plain,(
  ( ! [X83,X84] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X83))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83)))),X84,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X84),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X83))))))))) )),
  inference(forward_demodulation,[],[f4599,f463])).
fof(f4599,plain,(
  ( ! [X83,X84] : (~p(s(bool,happ(s(fun('type.num.num',bool),X84),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X83)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83)))),X84,'type.num.num'))) )),
  inference(superposition,[],[f574,f463])).
fof(f4649,plain,(
  ( ! [X80,X79] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X79)))),X80,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79))))))) )),
  inference(forward_demodulation,[],[f4597,f457])).
fof(f4597,plain,(
  ( ! [X80,X79] : (~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X79))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X79)))),X80,'type.num.num'))) )),
  inference(superposition,[],[f574,f457])).
fof(f4650,plain,(
  ( ! [X81,X82] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f4598,f465])).
fof(f4598,plain,(
  ( ! [X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X81)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f574,f465])).
fof(f4648,plain,(
  ( ! [X78] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X78,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X78),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f4596,f432])).
fof(f4596,plain,(
  ( ! [X78] : (~p(s(bool,happ(s(fun('type.num.num',bool),X78),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X78,'type.num.num'))) )),
  inference(superposition,[],[f574,f432])).
fof(f4654,plain,(
  ( ! [X88] : (~p(s(bool,happ(s(fun('type.num.num',bool),X88),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X88,'type.num.num'))) )),
  inference(forward_demodulation,[],[f4602,f430])).
fof(f4602,plain,(
  ( ! [X88] : (~p(s(bool,happ(s(fun('type.num.num',bool),X88),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')),X88,'type.num.num'))) )),
  inference(superposition,[],[f574,f430])).
fof(f4658,plain,(
  ( ! [X97,X95,X96] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,X95),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X96)),X97,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X97),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f4606,f589])).
fof(f4606,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,happ(s(fun('type.num.num',bool),X97),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X95),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X96))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,X95),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X96)),X97,'type.num.num'))) )),
  inference(superposition,[],[f574,f589])).
fof(f4657,plain,(
  ( ! [X94,X93] : (s('type.num.num',X93) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X93),s('type.num.num','const.arithmetic.ZERO_0')),X94,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X94),s('type.num.num',X93))))) )),
  inference(forward_demodulation,[],[f4605,f454])).
fof(f4605,plain,(
  ( ! [X94,X93] : (~p(s(bool,happ(s(fun('type.num.num',bool),X94),s('type.num.num',X93)))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X93),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X93),s('type.num.num','const.arithmetic.ZERO_0')),X94,'type.num.num'))) )),
  inference(superposition,[],[f574,f454])).
fof(f4624,plain,(
  ( ! [X31,X32] : (s(bool,'T_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4571,f453])).
fof(f4571,plain,(
  ( ! [X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))),X32,bool))) )),
  inference(superposition,[],[f574,f453])).
fof(f4623,plain,(
  ( ! [X30,X29] : (s(bool,'T_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4570,f452])).
fof(f4570,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))),X30,bool))) )),
  inference(superposition,[],[f574,f452])).
fof(f4618,plain,(
  ( ! [X19] : (s(bool,'T_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)),X19,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X19),s(bool,'T_0'))))) ) | $spl6),
  inference(forward_demodulation,[],[f4565,f870])).
fof(f4565,plain,(
  ( ! [X19] : (~p(s(bool,happ(s(fun(bool,bool),X19),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)),X19,bool))) ) | $spl6),
  inference(superposition,[],[f574,f870])).
fof(f4612,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,sK86('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f4557,f530])).
fof(f4557,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2))) = s(X0,sK86('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0))) )),
  inference(superposition,[],[f574,f530])).
fof(f4555,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X3) = s(X0,sK86(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f574,f530])).
fof(f575,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f404])).
fof(f404,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK86(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK86(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK86])],[f403])).
fof(f403,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f402])).
fof(f402,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f252])).
fof(f252,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f79])).
fof(f79,axiom,(
  ! [X6] : ! [X25,X28] : (? [X7] : (s(X6,X7) = s(X6,X28) & p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X25),s(X6,X28)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.bool.UNWIND_THM2')).
fof(f574,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK86(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f404])).
fof(f573,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f404])).
fof(f456,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X18] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X18))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|32')).
fof(f4634,plain,(
  ( ! [X47,X48] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X47))) = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X47))))))) )),
  inference(forward_demodulation,[],[f4580,f456])).
fof(f4580,plain,(
  ( ! [X47,X48] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X47)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))))) = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,bool))) )),
  inference(superposition,[],[f574,f456])).
fof(f455,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X18] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|33')).
fof(f4631,plain,(
  ( ! [X43,X44] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43))) = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43))))))) )),
  inference(forward_demodulation,[],[f4577,f455])).
fof(f4577,plain,(
  ( ! [X43,X44] : (~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43))))) = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,bool))) )),
  inference(superposition,[],[f574,f455])).
fof(f6945,plain,(
  ( ! [X271,X270,X272] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num',X271))),s('type.num.num',X272)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X272),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num','const.num.SUC_1'(s('type.num.num',X271))))))))) )),
  inference(forward_demodulation,[],[f6921,f4764])).
fof(f6921,plain,(
  ( ! [X271,X270,X272] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X272),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num','const.num.SUC_1'(s('type.num.num',X271)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X272),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num',X271))))))))) )),
  inference(superposition,[],[f4782,f603])).
fof(f6947,plain,(
  ( ! [X277,X276,X278] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num',X277))),s('type.num.num',X278)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X278),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num','const.num.SUC_1'(s('type.num.num',X277))))))))) )),
  inference(forward_demodulation,[],[f6923,f4764])).
fof(f6923,plain,(
  ( ! [X277,X276,X278] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X278),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num','const.num.SUC_1'(s('type.num.num',X277)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X278),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num',X277))))))))) )),
  inference(superposition,[],[f4783,f603])).
fof(f4973,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num',X34)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))))))))) )),
  inference(forward_demodulation,[],[f4909,f4764])).
fof(f4909,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X34),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))))))) )),
  inference(superposition,[],[f4782,f463])).
fof(f5191,plain,(
  ( ! [X33,X34] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num',X34)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))))))))) )),
  inference(forward_demodulation,[],[f5106,f4764])).
fof(f5106,plain,(
  ( ! [X33,X34] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X34),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))))))) )),
  inference(superposition,[],[f4783,f463])).
fof(f4972,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num',X32)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) )),
  inference(forward_demodulation,[],[f4908,f4764])).
fof(f4908,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))))))) )),
  inference(superposition,[],[f4782,f465])).
fof(f5190,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num',X32)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) )),
  inference(forward_demodulation,[],[f5105,f4764])).
fof(f5105,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))))))) )),
  inference(superposition,[],[f4783,f465])).
fof(f4969,plain,(
  ( ! [X28] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f4906,f4764])).
fof(f4906,plain,(
  ( ! [X28] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f4782,f432])).
fof(f5187,plain,(
  ( ! [X28] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f5103,f4764])).
fof(f5103,plain,(
  ( ! [X28] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f4783,f432])).
fof(f4785,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f4764,f713])).
fof(f6643,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f6633,f602])).
fof(f6633,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f602])).
fof(f6488,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f6478,f601])).
fof(f6478,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f601])).
fof(f6332,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f6318,f600])).
fof(f6318,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f600])).
fof(f6213,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f6201,f598])).
fof(f6201,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f574,f598])).
fof(f6022,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))))))) )),
  inference(forward_demodulation,[],[f6012,f596])).
fof(f6012,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X24,bool))) )),
  inference(superposition,[],[f574,f596])).
fof(f4794,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f4774,f593])).
fof(f4774,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f574,f593])).
fof(f4628,plain,(
  ( ! [X39,X37,X38] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num',X37))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num',X37),s('type.num.num',X38)),X39,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X39),s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num',X37))))))) )),
  inference(forward_demodulation,[],[f4574,f590])).
fof(f4574,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,happ(s(fun(bool,bool),X39),s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num',X37)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X37),s('type.num.num',X38))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num',X37),s('type.num.num',X38)),X39,bool))) )),
  inference(superposition,[],[f574,f590])).
fof(f601,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X18,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|3')).
fof(f600,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f273])).
fof(f273,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X18,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|22')).
fof(f598,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X18,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X18))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|25')).
fof(f596,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X18,X19] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|4')).
fof(f6801,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f593,f603])).
fof(f4734,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f593,f463])).
fof(f4733,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f593,f465])).
fof(f4731,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f593,f432])).
fof(f4867,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) )),
  inference(superposition,[],[f4782,f592])).
fof(f5064,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) )),
  inference(superposition,[],[f4783,f592])).
fof(f6624,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) )),
  inference(superposition,[],[f4783,f602])).
fof(f6625,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) )),
  inference(superposition,[],[f4782,f602])).
fof(f4780,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f4779,f624])).
fof(f4781,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(backward_demodulation,[],[f4779,f625])).
fof(f6469,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) )),
  inference(superposition,[],[f4783,f601])).
fof(f6470,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) )),
  inference(superposition,[],[f4782,f601])).
fof(f4986,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) )),
  inference(subsumption_resolution,[],[f4924,f427])).
fof(f4924,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))))) )),
  inference(superposition,[],[f4782,f453])).
fof(f559,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK64(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK65(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK66(X2,X1,X0)),s('type.list.list'(X0),sK63(X2,X1,X0))))))))) )),
  inference(cnf_transformation,[],[f389])).
fof(f389,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK63(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK64(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK65(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK66(X2,X1,X0)),s('type.list.list'(X0),sK63(X2,X1,X0)))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK63,sK64,sK65,sK66])],[f388])).
fof(f388,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X7,X8,X9,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X7))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f387])).
fof(f387,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(nnf_transformation,[],[f243])).
fof(f243,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(flattening,[],[f242])).
fof(f242,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9)))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_3|split|9')).
fof(f562,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK68(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK69(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK70(X2,X1,X0)),s('type.list.list'(X0),sK67(X2,X1,X0))))))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK67(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK68(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK69(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK70(X2,X1,X0)),s('type.list.list'(X0),sK67(X2,X1,X0)))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK67,sK68,sK69,sK70])],[f391])).
fof(f391,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | ? [X7,X8,X9,X10] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),X7))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(rectify,[],[f390])).
fof(f390,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))))) & (! [X3,X4,X5,X6] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f245])).
fof(f245,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(flattening,[],[f244])).
fof(f244,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5,X6] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) <=> ? [X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X9)))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_3|split|7')).
fof(f704,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK92(X3,X2,X1,X0)))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f689,f591])).
fof(f689,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK92(X3,X2,X1,X0)))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(backward_demodulation,[],[f591,f586])).
fof(f685,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK67(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(backward_demodulation,[],[f591,f561])).
fof(f684,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK63(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(backward_demodulation,[],[f591,f558])).
fof(f4786,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(backward_demodulation,[],[f4764,f711])).
fof(f6935,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(forward_demodulation,[],[f6932,f4764])).
fof(f6932,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(backward_demodulation,[],[f6798,f680])).
fof(f701,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(forward_demodulation,[],[f677,f591])).
fof(f677,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(backward_demodulation,[],[f591,f588])).
fof(f673,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) )),
  inference(backward_demodulation,[],[f591,f563])).
fof(f672,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3)))))))) )),
  inference(backward_demodulation,[],[f591,f560])).
fof(f668,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1)))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47(X2,X1,X0)),s('type.list.list'(X0),sK48(X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f591,f538])).
fof(f4896,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) )),
  inference(superposition,[],[f4782,f592])).
fof(f5093,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) )),
  inference(superposition,[],[f4783,f592])).
fof(f4954,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))))))) )),
  inference(forward_demodulation,[],[f4953,f467])).
fof(f4953,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))))) )),
  inference(forward_demodulation,[],[f4889,f4779])).
fof(f4889,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))))) )),
  inference(superposition,[],[f4782,f467])).
fof(f5151,plain,(
  ( ! [X50,X51] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))))))) )),
  inference(forward_demodulation,[],[f5150,f467])).
fof(f5150,plain,(
  ( ! [X50,X51] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))))) )),
  inference(forward_demodulation,[],[f5086,f4779])).
fof(f5086,plain,(
  ( ! [X50,X51] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X51))))) )),
  inference(superposition,[],[f4783,f467])).
fof(f7148,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f7134,f705])).
fof(f7134,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f574,f705])).
fof(f5212,plain,(
  ( ! [X6,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num',X6)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X6)))) )),
  inference(subsumption_resolution,[],[f5123,f434])).
fof(f5123,plain,(
  ( ! [X6,X5] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num',X6)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X6)))) )),
  inference(superposition,[],[f4783,f471])).
fof(f4620,plain,(
  ( ! [X24,X23,X22] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f4567,f591])).
fof(f4567,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)),X24,bool))) )),
  inference(superposition,[],[f574,f591])).
fof(f706,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f599,f591])).
fof(f599,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X18,X19] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|28')).
fof(f4656,plain,(
  ( ! [X92,X91] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X91))))) = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X91)))),X92,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X92),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X91))))))))) )),
  inference(forward_demodulation,[],[f4604,f459])).
fof(f4604,plain,(
  ( ! [X92,X91] : (~p(s(bool,happ(s(fun('type.num.num',bool),X92),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X91)))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X91))))) = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X91)))),X92,'type.num.num'))) )),
  inference(superposition,[],[f574,f459])).
fof(f702,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK71(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f686,f591])).
fof(f686,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK71(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(backward_demodulation,[],[f591,f564])).
fof(f700,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) )),
  inference(forward_demodulation,[],[f675,f591])).
fof(f675,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) )),
  inference(backward_demodulation,[],[f591,f569])).
fof(f699,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) )),
  inference(forward_demodulation,[],[f674,f591])).
fof(f674,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) )),
  inference(backward_demodulation,[],[f591,f566])).
fof(f694,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK72(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK73(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK74(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK75(X2,X1,X0)),s('type.list.list'(X0),sK71(X2,X1,X0))))))))))) )),
  inference(backward_demodulation,[],[f591,f565])).
fof(f688,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(backward_demodulation,[],[f591,f570])).
fof(f571,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK83(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK85(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0))))))))))) )),
  inference(cnf_transformation,[],[f401])).
fof(f401,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK82(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK83(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK84(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK85(X2,X1,X0)),s('type.list.list'(X0),sK81(X2,X1,X0)))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK81,sK82,sK83,sK84,sK85])],[f400])).
fof(f400,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | ? [X8,X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(rectify,[],[f399])).
fof(f399,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f251])).
fof(f251,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f250])).
fof(f250,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))))) <=> ? [X9,X10,X11,X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|7')).
fof(f507,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f333])).
fof(f4655,plain,(
  ( ! [X90,X89] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X89))))) = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X89))))))))) )),
  inference(forward_demodulation,[],[f4603,f458])).
fof(f4603,plain,(
  ( ! [X90,X89] : (~p(s(bool,happ(s(fun('type.num.num',bool),X90),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X89)))))))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))))) = s('type.num.num',sK86('const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90,'type.num.num'))) )),
  inference(superposition,[],[f574,f458])).
fof(f7126,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f705,f471])).
fof(f6623,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f602,f471])).
fof(f6468,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f601,f471])).
fof(f6308,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f600,f471])).
fof(f6192,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f598,f471])).
fof(f6002,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f596,f471])).
fof(f4765,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5)))) )),
  inference(superposition,[],[f593,f471])).
fof(f4660,plain,(
  ( ! [X101,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))))))) )),
  inference(forward_demodulation,[],[f4608,f467])).
fof(f4608,plain,(
  ( ! [X101,X100] : (~p(s(bool,happ(s(fun('type.num.num',bool),X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101,'type.num.num'))) )),
  inference(superposition,[],[f574,f467])).
fof(f4659,plain,(
  ( ! [X99,X98] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X98))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.ZERO_0')),X99,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X99),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X98))))))) )),
  inference(forward_demodulation,[],[f4607,f466])).
fof(f4607,plain,(
  ( ! [X99,X98] : (~p(s(bool,happ(s(fun('type.num.num',bool),X99),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X98)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.ZERO_0')),X99,'type.num.num'))) )),
  inference(superposition,[],[f574,f466])).
fof(f4621,plain,(
  ( ! [X26,X25] : (s(bool,'F_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')),X26,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f4568,f441])).
fof(f4568,plain,(
  ( ! [X26,X25] : (~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')),X26,bool))) )),
  inference(superposition,[],[f574,f441])).
fof(f4613,plain,(
  ( ! [X6,X4,X7,X5] : (s(X4,X6) = s(X4,sK86('const.bool.COND_3'(s(bool,'F_0'),s(X4,X5),s(X4,X6)),X7,X4)) | ~p(s(bool,happ(s(fun(X4,bool),X7),s(X4,X6))))) )),
  inference(forward_demodulation,[],[f4558,f531])).
fof(f4558,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,happ(s(fun(X4,bool),X7),s(X4,X6)))) | s(X4,'const.bool.COND_3'(s(bool,'F_0'),s(X4,X5),s(X4,X6))) = s(X4,sK86('const.bool.COND_3'(s(bool,'F_0'),s(X4,X5),s(X4,X6)),X7,X4))) )),
  inference(superposition,[],[f574,f531])).
fof(f4560,plain,(
  ( ! [X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X10)))) | s(bool,'F_0') = s(bool,sK86('F_0',X11,bool)) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f574,f471])).
fof(f4559,plain,(
  ( ! [X8,X9] : (~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0')))) | s(bool,X8) = s(bool,sK86(X8,X9,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f574,f471])).
fof(f4556,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,happ(s(fun(X4,bool),X6),s(X4,X7)))) | s(X4,X7) = s(X4,sK86(X7,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X4,bool),X5),s(fun(X4,bool),X6)),X4))) )),
  inference(superposition,[],[f574,f531])).
fof(f3118,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f591,f471])).
fof(f3018,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f590,f471])).
fof(f1765,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f531,f471])).
fof(f1667,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f530,f471])).
fof(f1539,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f456,f471])).
fof(f1514,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f455,f471])).
fof(f969,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,'F_0') = s(bool,X10)) )),
  inference(forward_demodulation,[],[f968,f441])).
fof(f968,plain,(
  ( ! [X10,X9] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f931,f434])).
fof(f931,plain,(
  ( ! [X10,X9] : (p(s(bool,'F_0')) | p(s(bool,X10)) | s(bool,X10) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f618,f441])).
fof(f918,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f641,f618])).
fof(f441,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f109])).
fof(f109,axiom,(
  ! [X18] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|2')).
fof(f466,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X18] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X18))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|2')).
fof(f467,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|7')).
fof(f609,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f95])).
fof(f95,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|4')).
fof(f610,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f96])).
fof(f96,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|5')).
fof(f611,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f89])).
fof(f89,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|11')).
fof(f615,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f288])).
fof(f288,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X18,X19] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|9')).
fof(f616,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f289])).
fof(f289,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f99])).
fof(f99,axiom,(
  ! [X18,X19] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|6')).
fof(f3540,plain,(
  ( ! [X52,X53,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))) | s('type.num.num',X53) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X51),s('type.num.num',X52)))) )),
  inference(superposition,[],[f622,f531])).
fof(f4148,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X43))))) | s('type.num.num',X44) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f466])).
fof(f4267,plain,(
  ( ! [X45,X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))))) | s('type.num.num',X45) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f467])).
fof(f458,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f92])).
fof(f92,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X18))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iDUB_removal|split|0')).
fof(f4082,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f466,f471])).
fof(f459,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f88])).
fof(f88,axiom,(
  ! [X18] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iDUB_removal|split|1')).
fof(f613,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X18,X19] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|10')).
fof(f612,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f97])).
fof(f97,axiom,(
  ! [X18,X19] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|3')).
fof(f3488,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3189,f622])).
fof(f3888,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f2860,f457])).
fof(f3924,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f3064,f457])).
fof(f4397,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3136,f622])).
fof(f5911,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5057,f622])).
fof(f534,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK46(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f365])).
fof(f535,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK45(X2,X1,X0)),s('type.list.list'(X0),sK46(X2,X1,X0)))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f365])).
fof(f540,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK50(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f371])).
fof(f371,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK50(X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X2,X1,X0)),s('type.list.list'(X0),sK50(X2,X1,X0)))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK49,sK50])],[f370])).
fof(f370,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | ? [X5,X6] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))),
  inference(rectify,[],[f369])).
fof(f369,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) | ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))))) & (! [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f231])).
fof(f231,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f230])).
fof(f230,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) <=> ? [X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X8,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))))) <=> ? [X23,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X9)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.LENGTH_EQ_NUM_compute|split|2')).
fof(f541,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK49(X2,X1,X0)),s('type.list.list'(X0),sK50(X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f371])).
fof(f542,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f371])).
fof(f544,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK51(X2,X1,X0)),s('type.list.list'(X0),sK52(X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f374])).
fof(f581,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK89(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f411])).
fof(f582,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK90(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f411])).
fof(f583,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK89(X3,X2,X1,X0)),s('type.list.list'(X0),sK90(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f411])).
fof(f654,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) )),
  inference(forward_demodulation,[],[f545,f433])).
fof(f545,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f374])).
fof(f3395,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(superposition,[],[f498,f495])).
fof(f3397,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)))) )),
  inference(superposition,[],[f498,f530])).
fof(f870,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f861,f434])).
fof(f861,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(superposition,[],[f723,f471])).
fof(f461,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X18] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|9')).
fof(f614,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|8')).
fof(f2298,plain,(
  ( ! [X21] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) ) | $spl1),
  inference(subsumption_resolution,[],[f2297,f434])).
fof(f2297,plain,(
  ( ! [X21] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) ) | $spl1),
  inference(forward_demodulation,[],[f2283,f1564])).
fof(f2283,plain,(
  ( ! [X21] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X21)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) )),
  inference(superposition,[],[f478,f458])).
fof(f3524,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))))) )),
  inference(superposition,[],[f622,f461])).
fof(f3529,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))))) )),
  inference(superposition,[],[f622,f457])).
fof(f4199,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f467,f471])).
fof(f5764,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f594,f457])).
fof(f5798,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f594,f457])).
fof(f2145,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(subsumption_resolution,[],[f2144,f434])).
fof(f2144,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(forward_demodulation,[],[f2096,f951])).
fof(f2096,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f478,f433])).
fof(f2702,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f2675,f432])).
fof(f3062,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f2908,f432])).
fof(f3066,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3062,f473])).
fof(f3188,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(superposition,[],[f2861,f432])).
fof(f3487,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3188,f622])).
fof(f3588,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(forward_demodulation,[],[f3498,f432])).
fof(f3498,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(unit_resulting_resolution,[],[f2162,f622])).
fof(f3887,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f2860,f432])).
fof(f3923,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f3064,f432])).
fof(f4343,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3066,f622])).
fof(f4553,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(forward_demodulation,[],[f4552,f1964])).
fof(f4552,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3887,f622])).
fof(f4700,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(forward_demodulation,[],[f4699,f1964])).
fof(f4699,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3923,f622])).
fof(f5056,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(superposition,[],[f3190,f432])).
fof(f5763,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f594,f432])).
fof(f5908,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f5056,f622])).
fof(f6240,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f5650,f859])).
fof(f7014,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl1),
  inference(superposition,[],[f6805,f432])).
fof(f7025,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f7014,f622])).
fof(f7058,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f7014,f592])).
fof(f3889,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f2860,f465])).
fof(f3925,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f3064,f465])).
fof(f3927,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f3895,f1964])).
fof(f3895,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3064,f622])).
fof(f5026,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3190,f622])).
fof(f5058,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f3190,f465])).
fof(f6025,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5246,f622])).
fof(f4861,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f4831,f1964])).
fof(f4831,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f4043,f622])).
fof(f3890,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f2860,f463])).
fof(f3926,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f3064,f463])).
fof(f4046,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f4014,f1964])).
fof(f4014,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3065,f622])).
fof(f5059,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f3190,f463])).
fof(f5215,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3191,f622])).
fof(f6812,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))))))) ) | $spl1),
  inference(superposition,[],[f2859,f603])).
fof(f6813,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))))))))) ) | $spl1),
  inference(superposition,[],[f2860,f603])).
fof(f6817,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X35),s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))))))) ) | $spl1),
  inference(superposition,[],[f3064,f603])).
fof(f6819,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.num.SUC_1'(s('type.num.num',X40)))))))))) ) | $spl1),
  inference(superposition,[],[f3190,f603])).
fof(f2859,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f2629,f465])).
fof(f2860,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f2675,f465])).
fof(f3064,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f2908,f465])).
fof(f3190,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f2861,f465])).
fof(f3489,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2861,f622])).
fof(f3660,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f2678,f465])).
fof(f3695,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f2704,f465])).
fof(f4044,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f3065,f465])).
fof(f4990,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2859,f622])).
fof(f5247,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f3191,f465])).
fof(f5765,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f594,f465])).
fof(f5799,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f594,f465])).
fof(f7016,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) ) | $spl1),
  inference(superposition,[],[f6805,f465])).
fof(f464,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X18] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|10')).
fof(f2403,plain,(
  ( ! [X22] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) ) | $spl1),
  inference(subsumption_resolution,[],[f2402,f434])).
fof(f2402,plain,(
  ( ! [X22] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) ) | $spl1),
  inference(forward_demodulation,[],[f2386,f1564])).
fof(f2386,plain,(
  ( ! [X22] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f478,f459])).
fof(f2703,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f2675,f457])).
fof(f2779,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2703,f473])).
fof(f2831,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f2629,f457])).
fof(f3063,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f2908,f457])).
fof(f3189,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f2861,f457])).
fof(f3492,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2831,f622])).
fof(f3525,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f622,f464])).
fof(f3587,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(forward_demodulation,[],[f3499,f457])).
fof(f3499,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2164,f622])).
fof(f3694,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f2704,f457])).
fof(f4043,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f3065,f457])).
fof(f4052,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3587,f622])).
fof(f4310,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2779,f622])).
fof(f4548,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f4518,f1964])).
fof(f4518,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3694,f622])).
fof(f5246,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f3191,f457])).
fof(f6061,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5462,f859])).
fof(f7015,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) ) | $spl1),
  inference(superposition,[],[f6805,f457])).
fof(f605,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|5')).
fof(f606,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|8')).
fof(f607,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f280])).
fof(f280,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X18),s('type.num.num',X19))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|12')).
fof(f608,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f281])).
fof(f281,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X18,X19] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|2')).
fof(f623,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f415])).
fof(f1902,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f440])).
fof(f1904,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f439])).
fof(f1913,plain,(
  ( ! [X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f473,f454])).
fof(f1915,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X12),s('type.num.num',X13)))) )),
  inference(superposition,[],[f473,f530])).
fof(f3516,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) )),
  inference(superposition,[],[f622,f436])).
fof(f3517,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f622,f440])).
fof(f3518,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))) )),
  inference(superposition,[],[f622,f592])).
fof(f3520,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12)))) )),
  inference(superposition,[],[f622,f437])).
fof(f3521,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f622,f439])).
fof(f3522,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16)))) )),
  inference(superposition,[],[f622,f445])).
fof(f3523,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f622,f647])).
fof(f3526,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X24),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f622,f443])).
fof(f3527,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26)))) )),
  inference(superposition,[],[f622,f451])).
fof(f3537,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))) | s('type.num.num',X44) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f622,f454])).
fof(f3539,plain,(
  ( ! [X50,X48,X49] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))) | s('type.num.num',X50) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X48),s('type.num.num',X49)))) )),
  inference(superposition,[],[f622,f530])).
fof(f3756,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f623,f592])).
fof(f5766,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f594,f463])).
fof(f5800,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f594,f463])).
fof(f5845,plain,(
  ( ! [X94,X95,X96] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X94),s('type.num.num',X95))))) | s('type.num.num',X96) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X94))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X95)))))) )),
  inference(superposition,[],[f622,f594])).
fof(f3630,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2678,f622])).
fof(f4430,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3497,f622])).
fof(f4193,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1),
  inference(forward_demodulation,[],[f4191,f433])).
fof(f4191,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3588,f622])).
fof(f3495,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2629,f622])).
fof(f3661,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f2678,f463])).
fof(f3696,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f2704,f463])).
fof(f4045,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f3065,f463])).
fof(f5248,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f3191,f463])).
fof(f3739,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f592,f623])).
fof(f6809,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))))))) ) | $spl1),
  inference(superposition,[],[f2678,f603])).
fof(f6810,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))))))) ) | $spl1),
  inference(superposition,[],[f2704,f603])).
fof(f6818,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.num.SUC_1'(s('type.num.num',X38)))))))))) ) | $spl1),
  inference(superposition,[],[f3065,f603])).
fof(f6820,plain,(
  ( ! [X41,X42] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.num.SUC_1'(s('type.num.num',X42)))))))))) ) | $spl1),
  inference(superposition,[],[f3191,f603])).
fof(f6821,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num','const.num.SUC_1'(s('type.num.num',X44)))))))) ) | $spl1),
  inference(superposition,[],[f3497,f603])).
fof(f3497,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2174,f622])).
fof(f4192,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(superposition,[],[f3588,f433])).
fof(f5832,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60)))))) )),
  inference(superposition,[],[f473,f594])).
fof(f2678,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2675,f473])).
fof(f2704,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f2675,f463])).
fof(f3065,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) ) | $spl1),
  inference(superposition,[],[f2908,f463])).
fof(f3191,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) ) | $spl1),
  inference(superposition,[],[f2861,f463])).
fof(f5548,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5385,f859])).
fof(f7017,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))) ) | $spl1),
  inference(superposition,[],[f6805,f463])).
fof(f3278,plain,(
  ( ! [X52,X53] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X52))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num',X53)))) )),
  inference(superposition,[],[f473,f592])).
fof(f3279,plain,(
  ( ! [X54,X55] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num',X54))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))))) )),
  inference(superposition,[],[f474,f592])).
fof(f6799,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f603,f592])).
fof(f6802,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f594,f603])).
fof(f6803,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) )),
  inference(superposition,[],[f594,f603])).
fof(f6806,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))))))) ) | $spl1),
  inference(superposition,[],[f2629,f603])).
fof(f6808,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))) ) | $spl1),
  inference(superposition,[],[f2675,f603])).
fof(f6814,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))))) ) | $spl1),
  inference(superposition,[],[f2861,f603])).
fof(f6816,plain,(
  ( ! [X33,X34] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num','const.num.SUC_1'(s('type.num.num',X34)))))))) ) | $spl1),
  inference(superposition,[],[f2908,f603])).
fof(f7018,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) ) | $spl1),
  inference(superposition,[],[f6805,f603])).
fof(f2629,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f2174,f463])).
fof(f2675,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25)))))) ) | $spl1),
  inference(subsumption_resolution,[],[f2654,f2629])).
fof(f2654,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))))) )),
  inference(superposition,[],[f474,f463])).
fof(f2861,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) ) | $spl1),
  inference(superposition,[],[f2174,f465])).
fof(f2908,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))) ) | $spl1),
  inference(subsumption_resolution,[],[f2888,f2629])).
fof(f2888,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29)))))))) )),
  inference(superposition,[],[f474,f465])).
fof(f6805,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))) ) | $spl1),
  inference(superposition,[],[f2174,f603])).
fof(f6811,plain,(
  ( ! [X24,X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.num.SUC_1'(s('type.num.num',X24)))))) ) | $spl1),
  inference(superposition,[],[f2804,f603])).
fof(f7020,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X1)))) ) | $spl1),
  inference(superposition,[],[f6805,f592])).
fof(f2474,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f461,f433])).
fof(f4387,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f4373,f453])).
fof(f4373,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f468,f433])).
fof(f4509,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f4493,f453])).
fof(f4493,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f469,f433])).
fof(f5622,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1),
  inference(unit_resulting_resolution,[],[f5616,f859])).
fof(f2590,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f2550,f431])).
fof(f2550,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f462,f1964])).
fof(f580,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f256])).
fof(f256,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6] : ! [X16,X17,X23] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X16))),s('type.list.list'(X6),X17)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.APPEND|split|1')).
fof(f7139,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f7125,f444])).
fof(f7125,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f705,f1964])).
fof(f7124,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f705,f433])).
fof(f7023,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f7014,f477])).
fof(f6815,plain,(
  ( ! [X31,X32] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))))))) ) | $spl1),
  inference(superposition,[],[f2862,f603])).
fof(f6807,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))))))) ) | $spl1),
  inference(superposition,[],[f2630,f603])).
fof(f6804,plain,(
  ( ! [X10,X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))))) ) | $spl1),
  inference(superposition,[],[f951,f603])).
fof(f6698,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f6687,f2862])).
fof(f6687,plain,(
  ( ! [X15,X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))),X16,bool))) ) | $spl1),
  inference(superposition,[],[f574,f2862])).
fof(f6677,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f2862,f463])).
fof(f6676,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f2862,f465])).
fof(f6562,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f6552,f2630])).
fof(f6552,plain,(
  ( ! [X15,X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))),X16,bool))) ) | $spl1),
  inference(superposition,[],[f574,f2630])).
fof(f6542,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f2630,f463])).
fof(f6541,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl1),
  inference(superposition,[],[f2630,f465])).
fof(f6338,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5661,f859])).
fof(f6306,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f600,f433])).
fof(f6323,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f6274,f4779])).
fof(f6274,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f600,f433])).
fof(f6234,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X4,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f6224,f5622])).
fof(f6224,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X4,bool))) ) | $spl1),
  inference(superposition,[],[f574,f5622])).
fof(f6207,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f6189,f4779])).
fof(f6189,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f598,f433])).
fof(f6157,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f598,f433])).
fof(f6023,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5246,f477])).
fof(f5909,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5057,f477])).
fof(f5906,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f5056,f477])).
fof(f5661,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3404,f4783])).
fof(f5666,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f3404,f618])).
fof(f5667,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3404,f3404,f618])).
fof(f5650,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3394,f4783])).
fof(f5655,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f3394,f618])).
fof(f5581,plain,(
  ( ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))))) ) | $spl1),
  inference(superposition,[],[f5385,f463])).
fof(f5580,plain,(
  ( ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) ) | $spl1),
  inference(superposition,[],[f5385,f465])).
fof(f5616,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl1),
  inference(forward_demodulation,[],[f5578,f433])).
fof(f5578,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(superposition,[],[f5385,f432])).
fof(f5462,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5378,f4783])).
fof(f5467,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f5378,f618])).
fof(f5468,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5378,f5378,f618])).
fof(f5424,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))))) ) | $spl1),
  inference(superposition,[],[f5377,f463])).
fof(f5423,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) ) | $spl1),
  inference(superposition,[],[f5377,f465])).
fof(f5385,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5377,f4783])).
fof(f5390,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f5377,f618])).
fof(f5391,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f5377,f5377,f618])).
fof(f5384,plain,(
  ( ! [X12,X13] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.num.|48|_0')),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))))))) )),
  inference(forward_demodulation,[],[f5364,f666])).
fof(f5364,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.num.|48|_0')),X13,bool))) )),
  inference(superposition,[],[f574,f666])).
fof(f5355,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f666,f471])).
fof(f5378,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(backward_demodulation,[],[f5354,f4308])).
fof(f5377,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(backward_demodulation,[],[f5354,f3628])).
fof(f5354,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f666,f591])).
fof(f5371,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f5353,f449])).
fof(f5353,plain,(
  s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f666,f1964])).
fof(f5256,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f434,f3366,f618])).
fof(f5257,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3366,f3366,f618])).
fof(f5213,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3191,f477])).
fof(f5122,plain,(
  ( ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))))) )),
  inference(superposition,[],[f4783,f468])).
fof(f5199,plain,(
  ( ! [X38] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f5198,f430])).
fof(f5198,plain,(
  ( ! [X38] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(subsumption_resolution,[],[f5197,f434])).
fof(f5197,plain,(
  ( ! [X38] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f5109,f441])).
fof(f5109,plain,(
  ( ! [X38] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f4783,f430])).
fof(f5140,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) )),
  inference(forward_demodulation,[],[f5139,f465])).
fof(f5139,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) )),
  inference(forward_demodulation,[],[f5076,f4779])).
fof(f5076,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f4783,f465])).
fof(f5137,plain,(
  ( ! [X28] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f5136,f432])).
fof(f5136,plain,(
  ( ! [X28] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) )),
  inference(forward_demodulation,[],[f5074,f4779])).
fof(f5074,plain,(
  ( ! [X28] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) )),
  inference(superposition,[],[f4783,f432])).
fof(f5057,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(superposition,[],[f3190,f457])).
fof(f5024,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3190,f477])).
fof(f4988,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2859,f477])).
fof(f4925,plain,(
  ( ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))))) )),
  inference(superposition,[],[f4782,f468])).
fof(f4985,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))))) )),
  inference(subsumption_resolution,[],[f4923,f427])).
fof(f4923,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))))) )),
  inference(superposition,[],[f4782,f452])).
fof(f4943,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) )),
  inference(forward_demodulation,[],[f4942,f465])).
fof(f4942,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) )),
  inference(forward_demodulation,[],[f4879,f4779])).
fof(f4879,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) )),
  inference(superposition,[],[f4782,f465])).
fof(f4940,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f4939,f432])).
fof(f4939,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) )),
  inference(forward_demodulation,[],[f4877,f4779])).
fof(f4877,plain,(
  ( ! [X28] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) )),
  inference(superposition,[],[f4782,f432])).
fof(f4827,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f4797,f1964])).
fof(f4797,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3924,f622])).
fof(f4695,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f4665,f1964])).
fof(f4665,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3888,f622])).
fof(f4652,plain,(
  ( ! [X85] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X85,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X85),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4600,f431])).
fof(f4600,plain,(
  ( ! [X85] : (~p(s(bool,happ(s(fun('type.num.num',bool),X85),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X85,'type.num.num'))) )),
  inference(superposition,[],[f574,f431])).
fof(f4647,plain,(
  ( ! [X76,X77] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76)),X77,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4595,f451])).
fof(f4595,plain,(
  ( ! [X76,X77] : (~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76))) = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X76)),X77,'type.num.num'))) )),
  inference(superposition,[],[f574,f451])).
fof(f4646,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0')),X75,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X75),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4594,f443])).
fof(f4594,plain,(
  ( ! [X74,X75] : (~p(s(bool,happ(s(fun('type.num.num',bool),X75),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0')),X75,'type.num.num'))) )),
  inference(superposition,[],[f574,f443])).
fof(f4645,plain,(
  ( ! [X72,X73] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))))),X73,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X73),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4593,f464])).
fof(f4593,plain,(
  ( ! [X72,X73] : (~p(s(bool,happ(s(fun('type.num.num',bool),X73),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72))))))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X72)))))),X73,'type.num.num'))) )),
  inference(superposition,[],[f574,f464])).
fof(f4644,plain,(
  ( ! [X70,X71] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X70)))))),X71,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4592,f461])).
fof(f4592,plain,(
  ( ! [X70,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X70))))))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X70)))))),X71,'type.num.num'))) )),
  inference(superposition,[],[f574,f461])).
fof(f4643,plain,(
  ( ! [X68,X69] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X69),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f4591,f647])).
fof(f4591,plain,(
  ( ! [X68,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X69),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69,'type.num.num'))) )),
  inference(superposition,[],[f574,f647])).
fof(f4642,plain,(
  ( ! [X66,X67] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num',X66),s('type.num.num',X66)),X67,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X67),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4590,f445])).
fof(f4590,plain,(
  ( ! [X66,X67] : (~p(s(bool,happ(s(fun('type.num.num',bool),X67),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X66),s('type.num.num',X66))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num',X66),s('type.num.num',X66)),X67,'type.num.num'))) )),
  inference(superposition,[],[f574,f445])).
fof(f4641,plain,(
  ( ! [X64,X65] : (s('type.num.num',X64) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num',X64),s('type.num.num','const.num.|48|_0')),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num',X64))))) )),
  inference(forward_demodulation,[],[f4589,f439])).
fof(f4589,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num',X64)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X64),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num',X64),s('type.num.num','const.num.|48|_0')),X65,'type.num.num'))) )),
  inference(superposition,[],[f574,f439])).
fof(f4640,plain,(
  ( ! [X62,X63] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4588,f437])).
fof(f4588,plain,(
  ( ! [X62,X63] : (~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62))) = s('type.num.num',sK86('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63,'type.num.num'))) )),
  inference(superposition,[],[f574,f437])).
fof(f4639,plain,(
  ( ! [X54,X55] : (s('type.num.num',X54) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.num.|48|_0')),X55,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X55),s('type.num.num',X54))))) )),
  inference(forward_demodulation,[],[f4585,f440])).
fof(f4585,plain,(
  ( ! [X54,X55] : (~p(s(bool,happ(s(fun('type.num.num',bool),X55),s('type.num.num',X54)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num','const.num.|48|_0')),X55,'type.num.num'))) )),
  inference(superposition,[],[f574,f440])).
fof(f4638,plain,(
  ( ! [X52,X53] : (s('type.num.num',X52) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52)),X53,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num',X52))))) )),
  inference(forward_demodulation,[],[f4584,f436])).
fof(f4584,plain,(
  ( ! [X52,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X53),s('type.num.num',X52)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52))) = s('type.num.num',sK86('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X52)),X53,'type.num.num'))) )),
  inference(superposition,[],[f574,f436])).
fof(f4637,plain,(
  ( ! [X51] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK86('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X51,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X51),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f4583,f1964])).
fof(f4583,plain,(
  ( ! [X51] : (~p(s(bool,happ(s(fun('type.num.num',bool),X51),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK86('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X51,'type.num.num'))) )),
  inference(superposition,[],[f574,f1964])).
fof(f4636,plain,(
  ( ! [X50] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK86('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X50,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f4582,f433])).
fof(f4582,plain,(
  ( ! [X50] : (~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK86('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X50,'type.num.num'))) )),
  inference(superposition,[],[f574,f433])).
fof(f4635,plain,(
  ( ! [X49] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X49,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X49),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f4581,f2017])).
fof(f4581,plain,(
  ( ! [X49] : (~p(s(bool,happ(s(fun(bool,bool),X49),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X49,bool))) ) | $spl1),
  inference(superposition,[],[f574,f2017])).
fof(f4633,plain,(
  ( ! [X46] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X46,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f4579,f950])).
fof(f4579,plain,(
  ( ! [X46] : (~p(s(bool,happ(s(fun(bool,bool),X46),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X46,bool))) ) | $spl1),
  inference(superposition,[],[f574,f950])).
fof(f4632,plain,(
  ( ! [X45] : (s(bool,'T_0') = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X45),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4578,f2018])).
fof(f4578,plain,(
  ( ! [X45] : (~p(s(bool,happ(s(fun(bool,bool),X45),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,bool))) )),
  inference(superposition,[],[f574,f2018])).
fof(f4630,plain,(
  ( ! [X42] : (s(bool,'T_0') = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X42,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4576,f872])).
fof(f4576,plain,(
  ( ! [X42] : (~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X42,bool))) )),
  inference(superposition,[],[f574,f872])).
fof(f4629,plain,(
  ( ! [X41,X40] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.num.|48|_0')),X41,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X41),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40))))))) )),
  inference(forward_demodulation,[],[f4575,f469])).
fof(f4575,plain,(
  ( ! [X41,X40] : (~p(s(bool,happ(s(fun(bool,bool),X41),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.num.|48|_0')),X41,bool))) )),
  inference(superposition,[],[f574,f469])).
fof(f4627,plain,(
  ( ! [X35,X36] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)),X36,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f4626,f448])).
fof(f4626,plain,(
  ( ! [X35,X36] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)),X36,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f4573,f590])).
fof(f4573,plain,(
  ( ! [X35,X36] : (~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,'F_0')))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35))) = s(bool,sK86('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)),X36,bool))) )),
  inference(superposition,[],[f574,f446])).
fof(f4625,plain,(
  ( ! [X33,X34] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))),X34,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X34),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33))))))) )),
  inference(forward_demodulation,[],[f4572,f468])).
fof(f4572,plain,(
  ( ! [X33,X34] : (~p(s(bool,happ(s(fun(bool,bool),X34),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))),X34,bool))) )),
  inference(superposition,[],[f574,f468])).
fof(f4622,plain,(
  ( ! [X28,X27] : (s(bool,'F_0') = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f4569,f448])).
fof(f4569,plain,(
  ( ! [X28,X27] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28,bool))) )),
  inference(superposition,[],[f574,f448])).
fof(f4619,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4566,f449])).
fof(f4566,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20))) = s(bool,sK86('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)),X21,bool))) )),
  inference(superposition,[],[f574,f449])).
fof(f4617,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f4564,f1564])).
fof(f4564,plain,(
  ( ! [X17,X18] : (~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))),X18,bool))) ) | $spl1),
  inference(superposition,[],[f574,f1564])).
fof(f4616,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f4563,f952])).
fof(f4563,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,bool))) ) | $spl1),
  inference(superposition,[],[f574,f952])).
fof(f4615,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))),X15,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'F_0'))))) ) | $spl1),
  inference(forward_demodulation,[],[f4562,f951])).
fof(f4562,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'F_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))),X15,bool))) ) | $spl1),
  inference(superposition,[],[f574,f951])).
fof(f4614,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f4561,f444])).
fof(f4561,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0'))) = s(bool,sK86('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')),X13,bool))) )),
  inference(superposition,[],[f574,f444])).
fof(f4496,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f469,f471])).
fof(f4395,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3136,f477])).
fof(f4375,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f468,f471])).
fof(f4341,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3066,f477])).
fof(f4308,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2779,f477])).
fof(f4256,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f473,f467])).
fof(f4137,plain,(
  ( ! [X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X25))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f473,f466])).
fof(f3933,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) )),
  inference(superposition,[],[f716,f592])).
fof(f3628,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2678,f477])).
fof(f3616,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))) | s('type.num.num',X47) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X45),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) )),
  inference(forward_demodulation,[],[f3538,f1964])).
fof(f3538,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))) | s('type.num.num',X47) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X45),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)))) )),
  inference(superposition,[],[f622,f589])).
fof(f3586,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(forward_demodulation,[],[f3501,f458])).
fof(f3501,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2298,f622])).
fof(f3585,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(forward_demodulation,[],[f3502,f459])).
fof(f3502,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2403,f622])).
fof(f3404,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3189,f477])).
fof(f3398,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X7))) | s('type.list.list'(X5),'const.list.NIL_0') = s('type.list.list'(X5),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)))) )),
  inference(superposition,[],[f498,f531])).
fof(f3394,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f3188,f477])).
fof(f3366,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2831,f477])).
fof(f3281,plain,(
  ( ! [X59,X58] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X59),s('type.num.num',X58)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X59)))) )),
  inference(superposition,[],[f478,f592])).
fof(f3280,plain,(
  ( ! [X57,X56] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X56)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57)))) )),
  inference(superposition,[],[f477,f592])).
fof(f3136,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f3063,f473])).
fof(f2938,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f2804,f457])).
fof(f2862,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) ) | $spl1),
  inference(superposition,[],[f951,f465])).
fof(f2804,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f2629,f474])).
fof(f2630,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl1),
  inference(superposition,[],[f951,f463])).
fof(f2237,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f2145,f474])).
fof(f2177,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) )),
  inference(subsumption_resolution,[],[f2118,f434])).
fof(f2118,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) )),
  inference(superposition,[],[f478,f471])).
fof(f2176,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | $spl1),
  inference(subsumption_resolution,[],[f2116,f434])).
fof(f2116,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | $spl1),
  inference(superposition,[],[f478,f1564])).
fof(f2175,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(subsumption_resolution,[],[f2115,f434])).
fof(f2115,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(superposition,[],[f478,f952])).
fof(f2174,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(subsumption_resolution,[],[f2114,f434])).
fof(f2114,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f478,f951])).
fof(f2164,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) ) | $spl1),
  inference(subsumption_resolution,[],[f2163,f434])).
fof(f2163,plain,(
  ( ! [X8] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) ) | $spl1),
  inference(forward_demodulation,[],[f2107,f1564])).
fof(f2107,plain,(
  ( ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f478,f457])).
fof(f2162,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(subsumption_resolution,[],[f2161,f434])).
fof(f2161,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(forward_demodulation,[],[f2106,f952])).
fof(f2106,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f478,f432])).
fof(f2156,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl1),
  inference(subsumption_resolution,[],[f2155,f434])).
fof(f2155,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl1),
  inference(forward_demodulation,[],[f2103,f951])).
fof(f2103,plain,(
  ( ! [X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f478,f647])).
fof(f2018,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1988,f872])).
fof(f1988,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f455,f1964])).
fof(f2017,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl1),
  inference(forward_demodulation,[],[f1987,f950])).
fof(f1987,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f456,f1964])).
fof(f1916,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X14),s('type.num.num',X15)))) )),
  inference(superposition,[],[f473,f531])).
fof(f1910,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f473,f457])).
fof(f1699,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f531,f471])).
fof(f1564,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(superposition,[],[f951,f457])).
fof(f1538,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f456,f433])).
fof(f1513,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f455,f433])).
fof(f446,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X18] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|23')).
fof(f448,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X18] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|20')).
fof(f950,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(backward_demodulation,[],[f918,f919])).
fof(f951,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(backward_demodulation,[],[f950,f948])).
fof(f952,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(backward_demodulation,[],[f950,f947])).
fof(f716,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f715,f591])).
fof(f715,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f627,f591])).
fof(f627,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f418])).
fof(f418,plain,(
  ! [X0,X1] : (((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f417])).
fof(f417,plain,(
  ! [X0,X1] : (((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))),
  inference(nnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f125])).
fof(f125,axiom,(
  ! [X22,X19] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0'))))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X19)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.arithmetic_2|48|5_prove_ltb')).
fof(f635,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f423])).
fof(f670,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) )),
  inference(backward_demodulation,[],[f591,f554])).
fof(f671,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) )),
  inference(backward_demodulation,[],[f591,f557])).
fof(f678,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3)))) )),
  inference(backward_demodulation,[],[f591,f656])).
fof(f680,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(backward_demodulation,[],[f591,f658])).
fof(f682,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(backward_demodulation,[],[f591,f552])).
fof(f553,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK58(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK59(X2,X1,X0)),s('type.list.list'(X0),sK57(X2,X1,X0)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f383])).
fof(f383,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK58(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK59(X2,X1,X0)),s('type.list.list'(X0),sK57(X2,X1,X0)))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK57,sK58,sK59])],[f382])).
fof(f382,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X6))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f381])).
fof(f381,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f239])).
fof(f239,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))))),
  inference(flattening,[],[f238])).
fof(f238,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ? [X9,X10,X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),X9)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_2|split|9')).
fof(f683,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK60(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(backward_demodulation,[],[f591,f555])).
fof(f556,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK61(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK62(X2,X1,X0)),s('type.list.list'(X0),sK60(X2,X1,X0)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f386])).
fof(f386,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK60(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK61(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK62(X2,X1,X0)),s('type.list.list'(X0),sK60(X2,X1,X0)))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK60,sK61,sK62])],[f385])).
fof(f385,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X6))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(rectify,[],[f384])).
fof(f384,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3))))))) & (! [X3,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f241])).
fof(f241,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))))),
  inference(flattening,[],[f240])).
fof(f240,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) <=> ? [X3,X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3)))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))))) <=> ? [X9,X10,X11] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),X9)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_2|split|7')).
fof(f713,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f710,f436])).
fof(f710,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0))))) )),
  inference(backward_demodulation,[],[f707,f660])).
fof(f711,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f708,f436])).
fof(f708,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(backward_demodulation,[],[f707,f681])).
fof(f666,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f591,f470])).
fof(f477,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X18] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X18))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|30')).
fof(f478,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f315])).
fof(f504,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|2')).
fof(f505,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f330])).
fof(f624,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f416])).
fof(f416,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f294])).
fof(f294,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f293])).
fof(f293,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X18,X19] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_lt|split|5')).
fof(f625,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f416])).
fof(f650,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(forward_demodulation,[],[f513,f433])).
fof(f513,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f338])).
fof(f469,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X18] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|24')).
fof(f948,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(backward_demodulation,[],[f947,f945])).
fof(f947,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(backward_demodulation,[],[f919,f921])).
fof(f919,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f435,f641,f618])).
fof(f945,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl1),
  inference(forward_demodulation,[],[f920,f921])).
fof(f920,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f698,f641,f618])).
fof(f921,plain,(
  s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f854,f641,f618])).
fof(f872,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f866,f434])).
fof(f866,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f429,f471])).
fof(f854,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(superposition,[],[f698,f432])).
fof(f723,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f646,f591])).
fof(f634,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK93(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK93(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f421])).
fof(f421,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK93(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK93(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK93])],[f309])).
fof(f309,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f303])).
fof(f303,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f302])).
fof(f302,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9',aHL_EXT)).
fof(f621,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f308])).
fof(f698,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(backward_demodulation,[],[f591,f494])).
fof(f681,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0)))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1))))))) )),
  inference(backward_demodulation,[],[f591,f661])).
fof(f589,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f98])).
fof(f98,axiom,(
  ! [X7,X31] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X31),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.iSUB_THM|split|0')).
fof(f586,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK92(X3,X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f414])).
fof(f588,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5)))))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f414])).
fof(f570,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK81(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f401])).
fof(f572,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f401])).
fof(f569,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f398])).
fof(f564,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK71(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f395])).
fof(f395,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK71(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK72(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK73(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK74(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK75(X2,X1,X0)),s('type.list.list'(X0),sK71(X2,X1,X0)))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK71,sK72,sK73,sK74,sK75])],[f394])).
fof(f394,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X8,X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f393])).
fof(f393,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f247])).
fof(f247,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f246])).
fof(f246,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|6')).
fof(f565,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK72(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK73(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK74(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK75(X2,X1,X0)),s('type.list.list'(X0),sK71(X2,X1,X0)))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f395])).
fof(f566,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f395])).
fof(f561,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK67(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f563,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f558,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK63(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f389])).
fof(f560,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X3))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f389])).
fof(f555,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK60(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f386])).
fof(f557,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f386])).
fof(f552,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK57(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f383])).
fof(f554,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X3))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f383])).
fof(f661,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f549,f433])).
fof(f549,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK55(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f380])).
fof(f660,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1)))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f550,f433])).
fof(f550,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK56(X2,X1,X0)),s('type.list.list'(X0),sK55(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f380])).
fof(f658,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0)))))))) )),
  inference(forward_demodulation,[],[f546,f433])).
fof(f546,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK53(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f377])).
fof(f656,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(forward_demodulation,[],[f548,f433])).
fof(f548,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f377])).
fof(f538,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK47(X2,X1,X0)),s('type.list.list'(X0),sK48(X2,X1,X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f368])).
fof(f525,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) )),
  inference(cnf_transformation,[],[f356])).
fof(f521,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X2)))))))))) )),
  inference(cnf_transformation,[],[f350])).
fof(f649,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(forward_demodulation,[],[f510,f433])).
fof(f510,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f337])).
fof(f337,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f201])).
fof(f201,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|1')).
fof(f648,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(forward_demodulation,[],[f511,f433])).
fof(f511,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f337])).
fof(f502,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f329])).
fof(f329,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f193])).
fof(f193,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X6] : ! [X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.num.|48|_0')))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_COMPARE_|49||split|3')).
fof(f503,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.num.|48|_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f329])).
fof(f495,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f185])).
fof(f185,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X8)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.list.APPEND|split|0')).
fof(f494,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f183])).
fof(f183,plain,(
  ! [X0] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f133])).
fof(f133,axiom,(
  ! [X18] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.NOT_SUC_LESS_EQ_|48|')).
fof(f470,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X18] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|27')).
fof(f454,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f101])).
fof(f101,axiom,(
  ! [X18] : s('type.num.num',X18) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_22_prove_ltb|split|1')).
fof(f451,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X18] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.MULT|split|0')).
fof(f449,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X18] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|26')).
fof(f445,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X27] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X27),s('type.num.num',X27)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f444,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X18] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|29')).
fof(f443,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X18] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|4')).
fof(f435,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f49])).
fof(f49,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|34')).
fof(f429,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.numeral.numeral_distrib|split|35')).
fof(f47921,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl120)),
  inference(global_subsumption,[],[f45391,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47920,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl114)),
  inference(global_subsumption,[],[f45386,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47919,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl113)),
  inference(global_subsumption,[],[f45385,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47918,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl109)),
  inference(global_subsumption,[],[f45381,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47917,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f641,f47913])).
fof(f47916,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f921,f945,f919,f947,f948,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f952,f951,f950,f448,f446,f1513,f1538,f1564,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2017,f2018,f2156,f2162,f2164,f2174,f2175,f2176,f2177,f2237,f2630,f2804,f2862,f2938,f3136,f3280,f3281,f3366,f3394,f3396,f3398,f3404,f3441,f3585,f3586,f3613,f3616,f3628,f3933,f4137,f4256,f4308,f4341,f4375,f4395,f4496,f4614,f4615,f4616,f4617,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4633,f4635,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4695,f4787,f4788,f4827,f4940,f4943,f4985,f4925,f4988,f5024,f5057,f5137,f5140,f5199,f5122,f5213,f5257,f5256,f5371,f5354,f5377,f5378,f5355,f5384,f5391,f5390,f5385,f5423,f5424,f5468,f5467,f5462,f5616,f5580,f5581,f5655,f5650,f5667,f5666,f5661,f5906,f5909,f6023,f6157,f6207,f6234,f6323,f6306,f6338,f6541,f6542,f6562,f6676,f6677,f6698,f6804,f6807,f6815,f7023,f7091,f7124,f7139,f580,f2590,f5622,f4509,f4387,f2474,f7020,f6811,f6805,f2908,f2861,f2675,f2629,f647,f594,f6798,f7018,f6816,f6814,f6808,f6806,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f7017,f5548,f3191,f3065,f2704,f2678,f5832,f4192,f3497,f6821,f6820,f6818,f6810,f6809,f3739,f5248,f4045,f3696,f3661,f3495,f4193,f4430,f3630,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f7015,f6061,f5246,f4548,f4310,f4052,f4043,f3694,f3587,f3525,f3492,f3189,f3063,f2831,f2779,f2703,f2403,f464,f452,f7016,f5799,f5765,f5247,f4990,f4044,f3695,f3660,f3489,f3190,f3064,f2860,f2859,f465,f6819,f6817,f6813,f6812,f5215,f5059,f4046,f3926,f3890,f4861,f6025,f5058,f5026,f3927,f3925,f3889,f7058,f7025,f7014,f6240,f5908,f5797,f5763,f5056,f4700,f4553,f4343,f3923,f3887,f3588,f3541,f3487,f3188,f3066,f3062,f2702,f2549,f2145,f433,f432,f5798,f5764,f4199,f3529,f3524,f2298,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f5911,f4397,f3924,f3888,f3488,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f918,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f9593,f9983,f9984,f10002,f10103,f10104,f10123,f10284,f10285,f10286,f10287,f10288,f10290,f10458,f10459,f10460,f10461,f10464,f10815,f11392,f11393,f13455,f13456,f14937,f14938,f15230,f15231,f15302,f15303,f15304,f15451,f15452,f15453,f15900,f15901,f15982,f15984,f15985,f15986,f15987,f16049,f16050,f16051,f16053,f16119,f16120,f16121,f16122,f16124,f16629,f16427,f16428,f16429,f16430,f16431,f16433,f16435,f16436,f16437,f16438,f16452,f16453,f16455,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17643,f17644,f17645,f17646,f17685,f17686,f17687,f17688,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17845,f17846,f17847,f17848,f17887,f17888,f17889,f17890,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18048,f18049,f18050,f18051,f18052,f18089,f18090,f18091,f18092,f18093,f18187,f18188,f18185,f18189,f18224,f18225,f18226,f18227,f18228,f18265,f18266,f18267,f18268,f18269,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18426,f18496,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19669,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f47913,f641])).
fof(f47915,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f641,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724,f47913])).
fof(f45724,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f644,f20218])).
fof(f45742,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X28),s('type.list.list'(sK0),X29))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X28),s('type.list.list'(sK0),X29))))))),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f45741,f580])).
fof(f45741,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X28),s('type.list.list'(sK0),X29))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),X28))),s('type.list.list'(sK0),X29)))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f45730,f27732])).
fof(f45730,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X28),s('type.list.list'(sK0),X29))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),X28))),s('type.list.list'(sK0),X29)))))))))))) ) | $spl2),
  inference(superposition,[],[f20218,f580])).
fof(f20218,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f642,f591])).
fof(f24710,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK45(X0,X1,sK0)),s('type.list.list'(sK0),sK46(X0,X1,sK0)))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1)))) ) | $spl2),
  inference(superposition,[],[f20218,f535])).
fof(f26503,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK49(X0,X1,sK0)),s('type.list.list'(sK0),sK50(X0,X1,sK0)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl2),
  inference(superposition,[],[f20218,f541])).
fof(f26653,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK51(X0,X1,sK0)),s('type.list.list'(sK0),sK52(X0,X1,sK0)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl2),
  inference(superposition,[],[f20218,f544])).
fof(f28141,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK89(X0,X1,X2,sK0)),s('type.list.list'(sK0),sK90(X0,X1,X2,sK0)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl2),
  inference(superposition,[],[f20218,f583])).
fof(f47914,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724,f47913])).
fof(f47912,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl109)),
  inference(global_subsumption,[],[f45381,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47911,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl113)),
  inference(global_subsumption,[],[f45385,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47910,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl114)),
  inference(global_subsumption,[],[f45386,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47909,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl120)),
  inference(global_subsumption,[],[f45391,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47908,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl123)),
  inference(global_subsumption,[],[f45392,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47907,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f723,f854,f855,f859,f872,f869,f964,f965,f468,f469,f650,f651,f625,f624,f617,f505,f504,f478,f477,f666,f711,f713,f652,f653,f556,f683,f553,f682,f657,f680,f517,f516,f712,f678,f671,f670,f635,f720,f718,f716,f448,f446,f1513,f1538,f1699,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3280,f3281,f3396,f3398,f3441,f3613,f3616,f3933,f4137,f4256,f4375,f4496,f4614,f4619,f4622,f4625,f4627,f4629,f4630,f4632,f4636,f4637,f4638,f4639,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4652,f4787,f4788,f4940,f4943,f4985,f4925,f5137,f5140,f5199,f5122,f5371,f5354,f5355,f5384,f6157,f6207,f6323,f6306,f7091,f7124,f7139,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f870,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534,f612,f613,f459,f4082,f458,f4267,f4148,f3540,f616,f615,f611,f610,f609,f531,f467,f466,f434,f441,f969,f1514,f1539,f1667,f1765,f3018,f3118,f4556,f4559,f4560,f4613,f4621,f4659,f4660,f4765,f6002,f6192,f6308,f6468,f6623,f7126,f4655,f506,f507,f508,f526,f527,f571,f688,f692,f694,f695,f699,f700,f702,f703,f4656,f591,f705,f706,f714,f4620,f4782,f4783,f5212,f7148,f5151,f4954,f4779,f5093,f4896,f636,f4764,f667,f668,f669,f672,f673,f701,f4784,f6935,f4786,f684,f685,f704,f518,f519,f562,f697,f696,f559,f4986,f6470,f6469,f4781,f4780,f6625,f6624,f5064,f4867,f4731,f4733,f4734,f6801,f593,f590,f596,f598,f600,f601,f602,f4628,f4794,f6022,f6213,f6332,f6488,f6643,f6936,f4785,f5187,f4969,f5190,f4972,f5191,f4973,f6947,f6945,f662,f522,f523,f4631,f455,f4634,f456,f573,f574,f575,f576,f578,f4555,f4612,f4618,f4623,f4624,f4657,f4658,f4654,f4648,f4650,f4649,f4651,f4653,f4586,f6948,f5905,f4661,f4662,f15982,f15984,f15985,f15986,f15987,f16629,f16633,f16635,f16637,f16639,f16644,f16965,f16991,f17110,f17111,f17112,f17113,f17145,f17384,f17589,f17533,f17534,f17535,f17536,f17567,f17568,f17569,f17570,f17571,f17572,f17573,f17574,f17607,f17698,f17770,f17728,f17794,f17795,f17796,f17797,f17798,f17901,f17973,f17931,f17997,f17998,f17999,f18000,f18001,f18013,f18187,f18188,f18185,f18189,f18318,f18322,f18324,f18332,f18334,f18336,f18338,f18341,f18343,f18347,f18349,f18352,f18353,f18355,f18356,f18358,f18359,f18360,f18301,f18302,f18303,f18305,f18306,f18307,f18308,f18780,f18607,f18798,f19151,f18978,f19169,f19527,f19354,f19545,f19674,f19675,f19676,f19677,f19684,f19724,f19729,f19730,f19738,f19739,f19740,f19741,f19742,f19743,f19744,f19745,f19751,f19752,f19753,f19754,f19757,f19758,f19759,f19760,f19761,f19762,f19766,f19767,f19997,f19815,f20000,f20017,f12187,f5370,f20352,f20353,f20440,f20386,f20470,f20507,f20508,f20511,f20512,f20513,f20535,f20536,f20520,f20521,f20522,f20523,f20525,f20527,f20538,f20529,f20530,f20531,f20532,f20580,f20581,f20584,f20585,f20586,f20609,f20610,f20593,f20594,f20595,f20596,f20599,f20601,f20612,f20603,f20604,f20605,f20606,f21192,f21230,f21233,f21234,f21239,f21240,f21242,f21243,f21245,f21246,f21247,f21248,f21251,f21252,f21253,f21255,f21257,f21258,f21259,f21260,f21301,f21339,f21342,f21343,f21348,f21349,f21351,f21352,f21354,f21355,f21356,f21357,f21360,f21361,f21362,f21364,f21366,f21367,f21368,f21369,f21406,f21407,f21408,f21409,f21415,f21495,f21499,f21500,f21507,f21508,f21511,f21513,f21515,f21517,f21518,f21523,f21524,f21525,f21528,f21529,f21530,f21531,f21449,f21453,f21456,f21457,f21461,f21462,f21464,f21465,f21466,f21467,f21468,f21471,f21472,f21473,f21475,f21476,f21477,f21478,f21480,f21484,f21571,f21572,f21573,f21574,f21580,f21653,f21587,f21588,f21592,f21593,f21595,f21659,f21660,f21661,f21599,f21602,f21603,f21604,f21606,f21607,f21608,f21609,f21614,f21674,f21678,f21679,f21686,f21687,f21690,f21691,f21692,f21693,f21694,f21699,f21700,f21701,f21704,f21705,f21706,f21707,f21645,f21649,f21861,f21862,f21887,f22017,f21922,f22064,f22065,f22066,f22085,f21954,f21960,f22107,f22119,f22142,f22315,f22316,f22232,f22233,f22317,f22264,f22323,f22335,f22337,f22341,f22551,f22552,f22466,f22467,f22553,f22500,f22559,f22571,f22573,f22578,f22627,f22808,f22809,f22721,f22722,f22810,f22757,f22816,f22828,f22830,f22834,f23040,f23041,f22952,f22953,f23042,f22990,f23048,f23057,f23058,f23064,f23299,f23300,f23209,f23210,f23301,f23249,f23307,f23316,f23317,f23323,f23555,f23556,f23462,f23463,f23557,f23504,f23563,f23575,f23577,f23581,f23623,f23819,f23820,f23725,f23726,f23821,f23769,f23827,f23836,f23837,f23843,f23894,f24094,f24095,f23998,f23999,f24096,f24044,f24102,f24111,f24112,f24118,f24209,f24210,f24212,f24213,f24221,f24323,f24327,f24328,f24336,f24337,f24341,f24343,f24345,f24347,f24348,f24353,f24354,f24355,f24356,f24357,f24358,f24359,f24362,f24363,f24364,f24365,f24366,f24367,f24368,f24369,f24264,f24268,f24271,f24272,f24276,f24277,f24279,f24280,f24281,f24282,f24283,f24286,f24287,f24288,f24289,f24290,f24291,f24292,f24294,f24295,f24296,f24297,f24298,f24299,f24300,f24301,f24303,f24307,f24614,f24613,f24709,f24712,f24713,f24714,f24715,f24716,f24725,f24726,f25009,f25013,f25018,f25019,f25023,f25024,f25062,f25026,f25063,f25028,f25029,f25030,f25032,f25033,f25034,f25035,f25064,f25037,f25038,f25065,f25040,f25041,f25066,f25067,f25044,f25068,f25046,f25047,f25048,f25069,f25070,f25052,f25072,f25073,f25338,f25342,f25347,f25348,f25352,f25353,f25393,f25356,f25394,f25358,f25359,f25360,f25362,f25363,f25364,f25365,f25395,f25367,f25368,f25396,f25370,f25371,f25397,f25398,f25374,f25399,f25376,f25377,f25378,f25400,f25401,f25383,f25404,f25405,f25670,f25671,f25675,f25676,f25677,f25685,f25738,f25749,f25750,f25758,f25759,f25766,f25767,f25768,f25769,f25770,f25771,f25778,f25779,f25780,f25781,f25782,f25783,f25784,f25788,f25789,f25790,f25791,f25792,f25793,f25794,f25795,f25803,f25802,f26018,f26019,f25963,f26023,f26024,f25973,f25977,f25982,f25983,f25987,f25988,f25991,f25992,f25993,f25994,f25995,f25996,f26046,f25999,f26000,f26001,f26002,f26003,f26004,f26005,f26048,f26007,f26008,f26009,f26010,f26011,f26012,f26013,f26014,f26170,f26171,f26175,f26176,f26177,f26185,f26287,f26194,f26195,f26199,f26200,f26204,f26299,f26300,f26301,f26208,f26211,f26212,f26213,f26214,f26215,f26216,f26217,f26219,f26220,f26221,f26222,f26223,f26224,f26225,f26226,f26232,f26320,f26331,f26332,f26342,f26343,f26354,f26355,f26356,f26357,f26358,f26365,f26366,f26367,f26368,f26369,f26370,f26371,f26375,f26376,f26377,f26378,f26379,f26380,f26381,f26382,f26275,f26279,f26502,f26505,f26506,f26507,f26508,f26509,f26510,f26511,f26512,f26513,f26514,f26523,f26524,f26652,f26655,f26656,f26657,f26658,f26659,f26660,f26661,f26662,f26663,f26664,f26673,f26674,f26914,f26871,f26872,f26873,f26887,f26888,f26889,f26890,f26891,f26916,f26893,f26894,f26917,f26918,f26925,f26949,f26950,f27028,f27029,f27032,f27033,f27732,f27734,f27735,f27736,f27737,f27738,f27739,f27740,f27741,f27749,f27750,f27838,f27679,f27882,f27902,f27723,f27724,f27725,f27730,f28143,f28144,f28145,f28148,f28149,f28150,f28151,f28152,f28153,f28154,f28155,f28171,f28172,f28286,f28247,f28397,f28398,f28399,f28405,f28259,f28417,f28418,f28419,f28423,f28283,f28284,f29915,f29846,f29851,f29852,f29853,f29865,f29969,f30704,f30706,f30582,f30707,f30587,f30588,f30589,f30711,f30712,f30601,f30719,f30611,f30612,f30616,f30617,f30621,f30732,f30734,f30735,f30626,f30629,f30630,f30631,f30632,f30633,f30634,f30635,f30637,f30638,f30639,f30640,f30641,f30642,f30644,f30645,f30652,f30656,f30662,f30663,f30667,f30668,f30672,f30673,f30675,f30676,f30677,f30680,f30681,f30682,f30683,f30684,f30685,f30686,f30688,f30689,f30690,f30691,f30692,f30693,f30695,f30696,f30698,f30702,f31028,f31101,f31030,f31031,f31035,f31036,f31037,f31038,f31039,f31049,f31123,f31144,f31172,f31176,f31187,f31196,f31197,f31198,f31200,f31202,f31204,f31206,f31210,f31211,f31213,f31215,f31217,f31219,f31224,f31225,f31095,f31229,f31492,f31565,f31494,f31495,f31499,f31500,f31501,f31502,f31503,f31513,f31590,f31615,f31650,f31651,f31660,f31672,f31673,f31674,f31675,f31676,f31677,f31678,f31683,f31684,f31685,f31686,f31687,f31688,f31692,f31693,f31562,f32176,f32251,f32178,f32179,f32183,f32184,f32185,f32186,f32187,f32197,f32274,f32298,f32337,f32338,f32347,f32358,f32359,f32360,f32361,f32362,f32363,f32364,f32369,f32370,f32371,f32372,f32373,f32374,f32377,f32378,f32248,f32417,f32492,f32419,f32420,f32424,f32425,f32426,f32427,f32428,f32438,f32515,f32539,f32578,f32579,f32588,f32599,f32600,f32601,f32602,f32603,f32604,f32605,f32610,f32611,f32612,f32613,f32614,f32615,f32618,f32619,f32489,f33255,f33332,f33257,f33258,f33262,f33263,f33264,f33265,f33266,f33276,f33355,f33378,f33410,f33415,f33431,f33440,f33441,f33442,f33444,f33446,f33448,f33450,f33454,f33455,f33457,f33459,f33461,f33463,f33467,f33468,f33326,f33473,f35421,f35346,f35351,f35352,f35353,f35367,f35491,f36017,f36028,f36003,f36004,f36005,f36006,f36041,f37740,f38219,f37702,f37703,f37704,f37707,f37712,f37713,f37714,f37717,f37723,f37724,f37725,f37728,f37734,f38551,f37736,f37737,f39153,f38730,f38731,f38732,f38735,f39691,f39692,f39693,f39725,f39696,f39740,f39935,f39918,f39919,f39920,f39948,f39923,f39966,f40824,f40825,f40826,f40837,f40839,f40829,f40849,f40850,f41024,f41025,f41026,f40993,f41033,f41034,f41035,f41039,f41003,f41051,f41052,f41053,f41014,f41062,f41022,f41023,f41176,f41177,f41178,f41187,f41189,f41181,f41192,f41193,f41313,f41314,f41315,f41324,f41326,f41318,f41329,f41330,f41454,f41455,f41456,f41467,f41470,f41459,f41477,f41478,f41689,f41690,f41691,f41702,f41704,f41694,f41714,f41715,f41885,f41886,f41887,f41898,f41901,f41890,f41908,f41909,f42031,f42032,f42033,f42044,f42046,f42036,f42056,f42057,f42184,f42185,f42186,f42251,f42253,f42189,f42259,f42260,f42200,f42269,f42212,f42221,f42291,f42298,f42228,f42229,f42230,f42302,f42303,f42304,f42305,f42236,f42237,f42307,f42308,f42309,f42310,f42243,f42244,f42245,f42314,f42504,f42505,f42506,f42570,f42572,f42509,f42576,f42577,f42520,f42524,f42532,f42541,f42542,f42544,f42548,f42549,f42550,f42551,f42552,f42553,f42554,f42556,f42557,f42558,f42559,f42560,f42561,f42563,f42564,f42567,f42804,f42805,f42806,f42870,f42809,f42820,f42957,f42964,f43275,f43276,f43277,f43341,f43280,f43291,f43426,f43582,f43583,f43584,f43648,f43587,f43598,f43734,f43955,f43956,f43957,f44021,f43960,f43971,f44110,f44119,f44305,f644,f28141,f26653,f26503,f24710,f20218,f44390,f44385,f44428,f44498,f44563,f44596,f44329,f44721,f44722,f44631,f44630,f44629,f44746,f44747,f44753,f44757,f44759,f44761,f44651,f44653,f44764,f44765,f44659,f44660,f44770,f44665,f44771,f44672,f44673,f44674,f44785,f44676,f44786,f44683,f44684,f44685,f44805,f44806,f44818,f45114,f45117,f45122,f45139,f45191,f45229,f45230,f44897,f44898,f44899,f44900,f44903,f44904,f44906,f44907,f44908,f44909,f44912,f44914,f44915,f44916,f44917,f44918,f44919,f44920,f44921,f45291,f45293,f44956,f45295,f45296,f44959,f44960,f45297,f45007,f45303,f45015,f45307,f45309,f45311,f45312,f45022,f45023,f45024,f45317,f45318,f45029,f45319,f45049,f45052,f45112,f45111,f44328,f45358,f45367,f45368,f44923,f44922,f44913,f44911,f44910,f44905,f44902,f44901,f44896,f44895,f44894,f44893,f44892,f44891,f45742,f45772,f45773,f45774,f45838,f45839,f45841,f45778,f45846,f45847,f45788,f45792,f45800,f45809,f45810,f45812,f45816,f45817,f45818,f45819,f45820,f45821,f45822,f45824,f45825,f45826,f45827,f45828,f45829,f45831,f45832,f45835,f45917,f45918,f45919,f45983,f45984,f45986,f45923,f45989,f45990,f45933,f45937,f45945,f45954,f45955,f45957,f45961,f45962,f45963,f45964,f45965,f45966,f45967,f45969,f45970,f45971,f45972,f45973,f45974,f45976,f45977,f45980,f46053,f46054,f46055,f46120,f46121,f46123,f46059,f46128,f46129,f46069,f46139,f46081,f46090,f46162,f46171,f46097,f46098,f46099,f46175,f46176,f46177,f46178,f46105,f46106,f46180,f46181,f46182,f46183,f46112,f46113,f46114,f46188,f47094,f47089,f47132,f47202,f47033,f47032,f47031,f47030,f45724])).
fof(f47835,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl148),
  inference(cnf_transformation,[],[f47835_D])).
fof(f47835_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f45381,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl109),
  inference(cnf_transformation,[],[f45381_D])).
fof(f45381_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f47437,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f692,f46665])).
fof(f46665,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f45436,f667])).
fof(f45436,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK76(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f703])).
fof(f47833,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl146),
  inference(cnf_transformation,[],[f47833_D])).
fof(f47833_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f45385,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | $spl113),
  inference(cnf_transformation,[],[f45385_D])).
fof(f45385_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f47429,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f662,f46665])).
fof(f47829,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),X12)))))))))) ) | $spl142),
  inference(cnf_transformation,[],[f47829_D])).
fof(f47829_D,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),X12)))))))))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f45380,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl108),
  inference(cnf_transformation,[],[f45380_D])).
fof(f45380_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f47419,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),X17)))))))))) ) | $spl0),
  inference(superposition,[],[f527,f46665])).
fof(f47831,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl144),
  inference(cnf_transformation,[],[f47831_D])).
fof(f47831_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f47418,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f526,f46665])).
fof(f45384,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | $spl112),
  inference(cnf_transformation,[],[f45384_D])).
fof(f45384_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f47417,plain,(
  ( ! [X12,X10,X8,X11,X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),X12)))))))))) ) | $spl0),
  inference(superposition,[],[f523,f46665])).
fof(f47828,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl140),
  inference(cnf_transformation,[],[f47828_D])).
fof(f47828_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f47416,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))))) | $spl0),
  inference(superposition,[],[f522,f46665])).
fof(f47826,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X7)))))))) ) | $spl138),
  inference(cnf_transformation,[],[f47826_D])).
fof(f47826_D,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X7)))))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f45393,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl122),
  inference(cnf_transformation,[],[f45393_D])).
fof(f45393_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f47415,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),X7)))))))) ) | $spl0),
  inference(superposition,[],[f519,f46665])).
fof(f47825,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))) | $spl136),
  inference(cnf_transformation,[],[f47825_D])).
fof(f47825_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f45392,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl123),
  inference(cnf_transformation,[],[f45392_D])).
fof(f45392_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f47414,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)))))))) | $spl0),
  inference(superposition,[],[f518,f46665])).
fof(f47823,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl134),
  inference(cnf_transformation,[],[f47823_D])).
fof(f47823_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f47821,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl133),
  inference(cnf_transformation,[],[f47821_D])).
fof(f47821_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f47413,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl0),
  inference(superposition,[],[f508,f46665])).
fof(f47819,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl130),
  inference(cnf_transformation,[],[f47819_D])).
fof(f47819_D,plain,(
  s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f47412,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK47(sK76(sK2,sK1,sK0),sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl0),
  inference(superposition,[],[f506,f46665])).
fof(f47815,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0))))))))))) ) | $spl126),
  inference(cnf_transformation,[],[f47815_D])).
fof(f47815_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0))))))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f47817,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | $spl129),
  inference(cnf_transformation,[],[f47817_D])).
fof(f47817_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) <=> ~$spl129),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl129])])).
fof(f47411,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK76(sK2,sK1,sK0),sK1,sK0))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f20218,f46665])).
fof(f46045,plain,(
  $false | ($spl16 | $spl72 | $spl90)),
  inference(subsumption_resolution,[],[f46044,f20042])).
fof(f20042,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))) ) | $spl16),
  inference(subsumption_resolution,[],[f20041,f434])).
fof(f20041,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))) ) | $spl16),
  inference(forward_demodulation,[],[f20032,f441])).
fof(f20032,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))) ) | $spl16),
  inference(superposition,[],[f8565,f8273])).
fof(f46044,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK16(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))) | ($spl72 | $spl90)),
  inference(forward_demodulation,[],[f35809,f35787])).
fof(f46043,plain,(
  $false | ($spl16 | $spl89 | $spl95)),
  inference(subsumption_resolution,[],[f46042,f45908])).
fof(f45908,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl89),
  inference(unit_resulting_resolution,[],[f35806,f4783])).
fof(f46042,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | ($spl16 | $spl95)),
  inference(forward_demodulation,[],[f46036,f8525])).
fof(f8525,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5354,f8213])).
fof(f46036,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))))) | ($spl16 | $spl95)),
  inference(unit_resulting_resolution,[],[f35855,f8533])).
fof(f8533,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f8532,f8213])).
fof(f8532,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f477,f8213])).
fof(f45916,plain,(
  $false | ($spl16 | $spl75 | $spl89)),
  inference(subsumption_resolution,[],[f45908,f44820])).
fof(f44820,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | ($spl16 | $spl75)),
  inference(unit_resulting_resolution,[],[f44622,f8536])).
fof(f8536,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl16),
  inference(forward_demodulation,[],[f504,f8213])).
fof(f44622,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK16(sK2,sK0)) | ($spl16 | $spl75)),
  inference(unit_resulting_resolution,[],[f35789,f8226])).
fof(f45903,plain,(
  $false | ($spl83 | $spl89)),
  inference(subsumption_resolution,[],[f45895,f35806])).
fof(f45895,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl83),
  inference(unit_resulting_resolution,[],[f35801,f4783])).
fof(f45395,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK3,sK1,sK0),sK0)))))))) | $spl124),
  inference(cnf_transformation,[],[f45395_D])).
fof(f45395_D,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK3,sK1,sK0),sK0)))))))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f44891,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK21(sK47(sK3,sK1,sK0),sK0)))))))) | $spl6),
  inference(superposition,[],[f518,f44328])).
fof(f45391,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X3)))))))) ) | $spl120),
  inference(cnf_transformation,[],[f45391_D])).
fof(f45391_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X3)))))))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f44892,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),X3)))))))) ) | $spl6),
  inference(superposition,[],[f519,f44328])).
fof(f45390,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl118),
  inference(cnf_transformation,[],[f45390_D])).
fof(f45390_D,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK3,sK1,sK0),sK0)))))))))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f44893,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK30(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl6),
  inference(superposition,[],[f522,f44328])).
fof(f45386,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),X13)))))))))) ) | $spl114),
  inference(cnf_transformation,[],[f45386_D])).
fof(f45386_D,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),X13)))))))))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f44894,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X8)))))))))) ) | $spl6),
  inference(superposition,[],[f523,f44328])).
fof(f45388,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl116),
  inference(cnf_transformation,[],[f45388_D])).
fof(f45388_D,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK3,sK1,sK0),sK0)))))))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f44895,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK41(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK42(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK43(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK44(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK40(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl6),
  inference(superposition,[],[f526,f44328])).
fof(f44896,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),X13)))))))))) ) | $spl6),
  inference(superposition,[],[f527,f44328])).
fof(f45383,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl110),
  inference(cnf_transformation,[],[f45383_D])).
fof(f45383_D,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK3,sK1,sK0),sK0)))))))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f44905,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK37(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK38(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK39(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK35(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl6),
  inference(superposition,[],[f662,f44328])).
fof(f45379,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl106),
  inference(cnf_transformation,[],[f45379_D])).
fof(f45379_D,plain,(
  s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK3,sK1,sK0),sK0)))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f44913,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK25(sK47(sK3,sK1,sK0),sK0)))))))))) | $spl6),
  inference(superposition,[],[f692,f44328])).
fof(f45352,plain,(
  $false | ($spl6 | $spl16 | $spl47 | $spl52)),
  inference(subsumption_resolution,[],[f45351,f19996])).
fof(f45351,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK1) | ($spl6 | $spl16 | $spl52)),
  inference(backward_demodulation,[],[f45350,f44328])).
fof(f45350,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | ($spl6 | $spl16 | $spl52)),
  inference(subsumption_resolution,[],[f45080,f45327])).
fof(f45327,plain,(
  ( ! [X243] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X243),s('type.num.num',sK1))))) ) | ($spl6 | $spl52)),
  inference(forward_demodulation,[],[f45326,f44328])).
fof(f45326,plain,(
  ( ! [X243] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X243),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | ($spl6 | $spl52)),
  inference(subsumption_resolution,[],[f45047,f45283])).
fof(f45283,plain,(
  ( ! [X66] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X66),s('type.num.num',sK1))))) ) | ($spl6 | $spl52)),
  inference(subsumption_resolution,[],[f44922,f20043])).
fof(f45047,plain,(
  ( ! [X243] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X243),s('type.num.num',sK1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X243),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))))))) ) | $spl6),
  inference(superposition,[],[f4783,f44328])).
fof(f45080,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | ($spl6 | $spl16)),
  inference(superposition,[],[f8533,f44328])).
fof(f45286,plain,(
  $false | ($spl6 | $spl16 | $spl52 | $spl59)),
  inference(subsumption_resolution,[],[f45285,f427])).
fof(f45285,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl16 | $spl52 | $spl59)),
  inference(forward_demodulation,[],[f45284,f21879])).
fof(f21879,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl59),
  inference(unit_resulting_resolution,[],[f21872,f859])).
fof(f21872,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl59),
  inference(forward_demodulation,[],[f21864,f4779])).
fof(f21864,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | $spl59),
  inference(unit_resulting_resolution,[],[f21824,f4783])).
fof(f45284,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl6 | $spl16 | $spl52)),
  inference(subsumption_resolution,[],[f44930,f20043])).
fof(f44930,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK47(sK3,sK1,sK0),sK0)),s('type.list.list'(sK0),sK18(sK47(sK3,sK1,sK0),sK0)))))) | ($spl6 | $spl16)),
  inference(superposition,[],[f8520,f44328])).
fof(f44749,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl101),
  inference(cnf_transformation,[],[f44749_D])).
fof(f44749_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f44755,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl104),
  inference(cnf_transformation,[],[f44755_D])).
fof(f44755_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f44753,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(forward_demodulation,[],[f44644,f644])).
fof(f44644,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl4),
  inference(superposition,[],[f508,f644])).
fof(f44751,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl102),
  inference(cnf_transformation,[],[f44751_D])).
fof(f44751_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f44747,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl4),
  inference(forward_demodulation,[],[f44642,f644])).
fof(f44642,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))))))) | $spl4),
  inference(superposition,[],[f506,f644])).
fof(f44307,plain,(
  $false | ($spl4 | $spl16 | $spl38)),
  inference(subsumption_resolution,[],[f44306,f20042])).
fof(f44306,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | ($spl4 | $spl16 | $spl38)),
  inference(forward_demodulation,[],[f644,f36641])).
fof(f36641,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK2) | ($spl16 | $spl38)),
  inference(unit_resulting_resolution,[],[f36528,f8225])).
fof(f36528,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ($spl16 | $spl38)),
  inference(forward_demodulation,[],[f3401,f8213])).
fof(f3401,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl38),
  inference(cnf_transformation,[],[f3401_D])).
fof(f3401_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f44304,plain,(
  $false | ($spl16 | $spl36)),
  inference(subsumption_resolution,[],[f3400,f20042])).
fof(f44300,plain,(
  $false | ($spl76 | $spl86)),
  inference(subsumption_resolution,[],[f35795,f35805])).
fof(f44299,plain,(
  $false | ($spl16 | $spl38 | $spl78)),
  inference(subsumption_resolution,[],[f44298,f434])).
fof(f44298,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl38 | $spl78)),
  inference(forward_demodulation,[],[f44297,f441])).
fof(f44297,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl16 | $spl38 | $spl78)),
  inference(forward_demodulation,[],[f44296,f8273])).
fof(f44296,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ($spl16 | $spl38 | $spl78)),
  inference(forward_demodulation,[],[f35796,f36641])).
fof(f44295,plain,(
  $false | ($spl16 | $spl38 | $spl85)),
  inference(subsumption_resolution,[],[f44294,f427])).
fof(f44294,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl38 | $spl85)),
  inference(forward_demodulation,[],[f44293,f7139])).
fof(f44293,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl16 | $spl38 | $spl85)),
  inference(forward_demodulation,[],[f44292,f8273])).
fof(f44292,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0')))))) | ($spl16 | $spl38 | $spl85)),
  inference(forward_demodulation,[],[f35804,f36641])).
fof(f44232,plain,(
  $false | ($spl0 | $spl11 | $spl16 | $spl38)),
  inference(subsumption_resolution,[],[f44230,f876])).
fof(f44230,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl16 | $spl38)),
  inference(backward_demodulation,[],[f44173,f40819])).
fof(f40819,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16 | $spl38)),
  inference(unit_resulting_resolution,[],[f434,f36529,f618])).
fof(f36529,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl0 | $spl16 | $spl38)),
  inference(backward_demodulation,[],[f36528,f20269])).
fof(f20269,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f640,f4782])).
fof(f44173,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | ($spl16 | $spl38)),
  inference(unit_resulting_resolution,[],[f42803,f859])).
fof(f42803,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | ($spl16 | $spl38)),
  inference(forward_demodulation,[],[f42802,f457])).
fof(f42802,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) ) | ($spl16 | $spl38)),
  inference(forward_demodulation,[],[f42742,f463])).
fof(f42742,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) ) | ($spl16 | $spl38)),
  inference(superposition,[],[f42317,f707])).
fof(f42317,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | ($spl16 | $spl38)),
  inference(unit_resulting_resolution,[],[f42256,f4783])).
fof(f42256,plain,(
  ( ! [X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | ($spl16 | $spl38)),
  inference(subsumption_resolution,[],[f42255,f20042])).
fof(f42255,plain,(
  ( ! [X25] : (s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66(sK2,X25,sK0)),s('type.list.list'(sK0),sK63(sK2,X25,sK0)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | ($spl16 | $spl38)),
  inference(forward_demodulation,[],[f42254,f36641])).
fof(f42254,plain,(
  ( ! [X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66(sK2,X25,sK0)),s('type.list.list'(sK0),sK63(sK2,X25,sK0))))))))) ) | ($spl16 | $spl38)),
  inference(forward_demodulation,[],[f42190,f8273])).
fof(f42190,plain,(
  ( ! [X25] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK64(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK65(sK2,X25,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK66(sK2,X25,sK0)),s('type.list.list'(sK0),sK63(sK2,X25,sK0))))))))) ) | ($spl16 | $spl38)),
  inference(superposition,[],[f559,f36641])).
fof(f36370,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X9)))))))) ) | $spl96),
  inference(cnf_transformation,[],[f36370_D])).
fof(f36370_D,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X9)))))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f36372,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl98),
  inference(cnf_transformation,[],[f36372_D])).
fof(f36372_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f36158,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X9)))))))) ) | ($spl16 | $spl39)),
  inference(superposition,[],[f519,f27764])).
fof(f27764,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f27763,f457])).
fof(f27763,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))) ) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f27668,f531])).
fof(f27668,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))) ) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f19763,f531,f536])).
fof(f19763,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl16 | $spl39)),
  inference(subsumption_resolution,[],[f19713,f427])).
fof(f19713,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl16 | $spl39)),
  inference(superposition,[],[f667,f18120])).
fof(f18120,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f18107,f859])).
fof(f18107,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f18096,f4783])).
fof(f18096,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl16 | $spl39)),
  inference(unit_resulting_resolution,[],[f3435,f8554])).
fof(f3435,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | $spl39),
  inference(unit_resulting_resolution,[],[f3402,f499])).
fof(f35853,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)))) | $spl92),
  inference(cnf_transformation,[],[f35853_D])).
fof(f35853_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f35855,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | $spl95),
  inference(cnf_transformation,[],[f35855_D])).
fof(f35855_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f35707,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8223,f31259])).
fof(f31259,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f27828,f534])).
fof(f27828,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f27632,f531])).
fof(f27632,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))))) ) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f531,f24161,f536])).
fof(f24161,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0)))) | ($spl4 | $spl16)),
  inference(subsumption_resolution,[],[f24149,f427])).
fof(f24149,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK2,sK0)),s('type.list.list'(sK0),sK16(sK2,sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8566,f20488])).
fof(f20488,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f20024,f859])).
fof(f20024,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f644,f8565])).
fof(f35809,plain,(
  s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK16(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))) | $spl90),
  inference(cnf_transformation,[],[f35809_D])).
fof(f35809_D,plain,(
  s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK16(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f35806,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl89),
  inference(cnf_transformation,[],[f35806_D])).
fof(f35806_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f35590,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK16(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8566,f31259])).
fof(f35805,plain,(
  ( ! [X41,X40] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),X41))) != s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))) ) | $spl86),
  inference(cnf_transformation,[],[f35805_D])).
fof(f35805_D,plain,(
  ( ! [X41,X40] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),X41))) != s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f35807,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl88),
  inference(cnf_transformation,[],[f35807_D])).
fof(f35807_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f35589,plain,(
  ( ! [X41,X40] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),X41))) != s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f8565,f31259])).
fof(f35787,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) | $spl72),
  inference(cnf_transformation,[],[f35787_D])).
fof(f35787_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f35804,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl85),
  inference(cnf_transformation,[],[f35804_D])).
fof(f35804_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f35802,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f35588,f31440])).
fof(f31440,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X2)))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f31268,f591])).
fof(f31268,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X2)))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f593,f27828])).
fof(f35588,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) | ($spl4 | $spl16)),
  inference(superposition,[],[f8554,f31259])).
fof(f35801,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | $spl83),
  inference(cnf_transformation,[],[f35801_D])).
fof(f35801_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f35587,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) | ($spl4 | $spl16)),
  inference(superposition,[],[f8536,f31259])).
fof(f35799,plain,(
  ( ! [X39,X37,X38] : (s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),X39)))))) ) | $spl80),
  inference(cnf_transformation,[],[f35799_D])).
fof(f35799_D,plain,(
  ( ! [X39,X37,X38] : (s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),X39)))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f35796,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl78),
  inference(cnf_transformation,[],[f35796_D])).
fof(f35796_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f35798,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),X39)))))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f35586,f31442])).
fof(f31442,plain,(
  ( ! [X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X7)))) ) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f31273,f593])).
fof(f31273,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f714,f27828])).
fof(f35586,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),X39)))))) ) | ($spl4 | $spl16)),
  inference(superposition,[],[f8521,f31259])).
fof(f35795,plain,(
  s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK18(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))))) | $spl76),
  inference(cnf_transformation,[],[f35795_D])).
fof(f35795_D,plain,(
  s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK18(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f35797,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl79),
  inference(cnf_transformation,[],[f35797_D])).
fof(f35797_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f35793,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK18(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f35585,f31442])).
fof(f35585,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)),s('type.list.list'(sK0),sK18(sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0),sK0)))))) | ($spl4 | $spl16)),
  inference(superposition,[],[f8520,f31259])).
fof(f35789,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) | $spl75),
  inference(cnf_transformation,[],[f35789_D])).
fof(f35789_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f35581,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0)) | ($spl4 | $spl16)),
  inference(superposition,[],[f8225,f31259])).
fof(f35772,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))))))))))) ) | $spl68),
  inference(cnf_transformation,[],[f35772_D])).
fof(f35772_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))))))))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f35774,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | $spl71),
  inference(cnf_transformation,[],[f35774_D])).
fof(f35774_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f35771,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))))))))))) ) | ($spl2 | $spl4 | $spl16)),
  inference(forward_demodulation,[],[f35561,f31442])).
fof(f35561,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0)))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK46('const.list.LENGTH_1'(s('type.list.list'(sK0),sK16(sK2,sK0))),sK2,sK0))))))))))) ) | ($spl2 | $spl4 | $spl16)),
  inference(superposition,[],[f20218,f31259])).
fof(f28084,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) | $spl64),
  inference(cnf_transformation,[],[f28084_D])).
fof(f28084_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f28086,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | $spl67),
  inference(cnf_transformation,[],[f28086_D])).
fof(f28086_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f27914,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) | ($spl2 | $spl4 | $spl16)),
  inference(superposition,[],[f20218,f27602])).
fof(f27602,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f27573,f667])).
fof(f27573,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f644,f8521])).
fof(f21827,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) | $spl60),
  inference(cnf_transformation,[],[f21827_D])).
fof(f21827_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f21829,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl63),
  inference(cnf_transformation,[],[f21829_D])).
fof(f21829_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f21825,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) | ($spl16 | $spl39)),
  inference(forward_demodulation,[],[f21725,f4779])).
fof(f21725,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0)) | ($spl16 | $spl39)),
  inference(superposition,[],[f8554,f19763])).
fof(f21822,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) | $spl56),
  inference(cnf_transformation,[],[f21822_D])).
fof(f21822_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f21824,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | $spl59),
  inference(cnf_transformation,[],[f21824_D])).
fof(f21824_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f21718,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK47(sK2,'const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')),sK0))))))))))) ) | ($spl2 | $spl16 | $spl39)),
  inference(superposition,[],[f20218,f19763])).
fof(f20043,plain,(
  ( ! [X4,X3] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X4)))) ) | $spl52),
  inference(cnf_transformation,[],[f20043_D])).
fof(f20043_D,plain,(
  ( ! [X4,X3] : (s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X4)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f20045,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) | $spl54),
  inference(cnf_transformation,[],[f20045_D])).
fof(f20045_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f20033,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),X4)))) ) | ($spl6 | $spl16)),
  inference(superposition,[],[f8565,f19762])).
fof(f20010,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | $spl48),
  inference(cnf_transformation,[],[f20010_D])).
fof(f20010_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f20012,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | $spl51),
  inference(cnf_transformation,[],[f20012_D])).
fof(f20012_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f19880,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK47(sK3,sK1,sK0)))) | ($spl6 | $spl16)),
  inference(superposition,[],[f8223,f19762])).
fof(f19990,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) | $spl40),
  inference(cnf_transformation,[],[f19990_D])).
fof(f19990_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f19996,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK1) | $spl47),
  inference(cnf_transformation,[],[f19996_D])).
fof(f19996_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK1) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f19770,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK1) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) | ($spl6 | $spl16)),
  inference(superposition,[],[f8225,f19762])).
fof(f19994,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) | $spl45),
  inference(cnf_transformation,[],[f19994_D])).
fof(f19994_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f19769,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) | ($spl6 | $spl16)),
  inference(superposition,[],[f8536,f19762])).
fof(f19992,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl43),
  inference(cnf_transformation,[],[f19992_D])).
fof(f19992_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f19768,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK47(sK3,sK1,sK0)) | ($spl6 | $spl16)),
  inference(superposition,[],[f8554,f19762])).
fof(f8214,plain,(
  $false | ($spl4 | $spl8 | $spl16)),
  inference(subsumption_resolution,[],[f8213,f8050])).
fof(f8050,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8049,f7920])).
fof(f7920,plain,(
  ~p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f7919,f426,f425,f424,f427,f429,f430,f431,f435,f436,f437,f439,f440,f443,f444,f445,f449,f451,f454,f470,f471,f474,f473,f494,f495,f499,f498,f503,f502,f648,f649,f521,f520,f525,f524,f530,f539,f538,f537,f656,f658,f659,f660,f661,f554,f552,f557,f555,f560,f558,f563,f561,f566,f565,f564,f569,f568,f567,f572,f570,f588,f587,f586,f585,f589,f679,f681,f698,f595,f621,f618,f634,f854,f855,f859,f872,f869,f964,f965,f508,f507,f506,f612,f613,f459,f458,f575,f574,f573,f578,f576,f456,f455,f523,f522,f662,f468,f469,f650,f651,f625,f624,f617,f602,f601,f600,f598,f596,f590,f593,f505,f504,f478,f477,f666,f711,f713,f652,f653,f562,f685,f571,f702,f688,f694,f556,f683,f704,f696,f697,f559,f684,f703,f695,f553,f682,f657,f680,f519,f518,f527,f526,f692,f517,f516,f712,f701,f700,f699,f678,f673,f672,f671,f670,f669,f668,f667,f636,f635,f720,f718,f716,f714,f706,f705,f591,f969,f616,f615,f611,f610,f609,f531,f467,f466,f448,f446,f441,f434,f1513,f1514,f1538,f1539,f1667,f1699,f1765,f1903,f1905,f1906,f1907,f1908,f1910,f1911,f1916,f1917,f1964,f2018,f2177,f3018,f3118,f3280,f3281,f3398,f3441,f3613,f3616,f3540,f3933,f4082,f4137,f4148,f4256,f4267,f4375,f4496,f4555,f4556,f4612,f4613,f4559,f4560,f4614,f4619,f4620,f4621,f4622,f4623,f4624,f4625,f4627,f4628,f4629,f4630,f4631,f4632,f4634,f4636,f4637,f4638,f4639,f4586,f4640,f4641,f4642,f4643,f4644,f4645,f4646,f4647,f4648,f4649,f4650,f4651,f4652,f4653,f4654,f4655,f4656,f4657,f4658,f4659,f4660,f4661,f4731,f4779,f4780,f4781,f4733,f4734,f4764,f4782,f4783,f4784,f4785,f4786,f4787,f4788,f4765,f4794,f4867,f4940,f4943,f4954,f4896,f4969,f4972,f4973,f4985,f4986,f4925,f5064,f5137,f5140,f5151,f5093,f5187,f5190,f5191,f5199,f5122,f5212,f5370,f5371,f5354,f5355,f5384,f5905,f6002,f6022,f6157,f6207,f6192,f6213,f6323,f6306,f6308,f6332,f6468,f6469,f6470,f6488,f6623,f6624,f6625,f6643,f6935,f6936,f6801,f6945,f6947,f6948,f7091,f7124,f7139,f7126,f7148,f580,f2590,f4509,f4387,f2474,f647,f594,f6798,f707,f6803,f6802,f6799,f3279,f3278,f603,f592,f5832,f3739,f5845,f5800,f5766,f3756,f3539,f3537,f3532,f3527,f3526,f3523,f3522,f3521,f3520,f3518,f3517,f3516,f1915,f1913,f1904,f1902,f1901,f623,f622,f608,f607,f606,f605,f463,f462,f2671,f3525,f464,f452,f5799,f5765,f465,f5797,f5763,f3541,f2549,f433,f432,f5798,f5764,f4199,f3529,f3524,f614,f461,f457,f453,f3397,f3395,f655,f654,f584,f583,f582,f581,f544,f542,f541,f540,f536,f535,f534])).
fof(f7919,plain,(
  ( ! [X105] : (~p(s(bool,'F_0')) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),sK86('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),X105,'type.list.list'(sK0)))) ) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f4662,f874])).
fof(f8049,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl8),
  inference(forward_demodulation,[],[f478,f874])).
fof(f8212,plain,(
  $false | ($spl4 | $spl8 | $spl18)),
  inference(subsumption_resolution,[],[f1920,f8050])).
fof(f1920,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl18),
  inference(cnf_transformation,[],[f1920_D])).
fof(f1920_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f8211,plain,(
  $false | ($spl4 | $spl8 | $spl20)),
  inference(subsumption_resolution,[],[f8210,f8050])).
fof(f8210,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl20),
  inference(backward_demodulation,[],[f1922,f445])).
fof(f8209,plain,(
  $false | ($spl4 | $spl8 | $spl26)),
  inference(subsumption_resolution,[],[f8208,f8050])).
fof(f8208,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl26),
  inference(backward_demodulation,[],[f1926,f443])).
fof(f8207,plain,(
  $false | ($spl4 | $spl8 | $spl28)),
  inference(subsumption_resolution,[],[f8206,f8050])).
fof(f8206,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl28),
  inference(backward_demodulation,[],[f1927,f451])).
fof(f8205,plain,(
  $false | ($spl4 | $spl8 | $spl30)),
  inference(subsumption_resolution,[],[f8204,f8050])).
fof(f8204,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl30),
  inference(backward_demodulation,[],[f1930,f431])).
fof(f8203,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8202,f427])).
fof(f8202,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8201,f7139])).
fof(f8201,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f2035,f8050])).
fof(f2035,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f477,f430])).
fof(f8200,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8199,f427])).
fof(f8199,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8198,f7139])).
fof(f8198,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f2037,f8050])).
fof(f2037,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X10),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) )),
  inference(superposition,[],[f477,f589])).
fof(f8197,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8196,f7920])).
fof(f8196,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f8195,f874])).
fof(f8195,plain,(
  ( ! [X38] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(subsumption_resolution,[],[f8194,f427])).
fof(f8194,plain,(
  ( ! [X38] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3949,f7139])).
fof(f3949,plain,(
  ( ! [X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X38),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f716,f430])).
fof(f8193,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8192,f7920])).
fof(f8192,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f8191,f874])).
fof(f8191,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X47),s('type.num.num','const.numeral.iSUB_3'(s(bool,X45),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))))) )),
  inference(subsumption_resolution,[],[f8190,f427])).
fof(f8190,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X47),s('type.num.num','const.numeral.iSUB_3'(s(bool,X45),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))))) )),
  inference(forward_demodulation,[],[f3953,f7139])).
fof(f3953,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X47),s('type.num.num','const.numeral.iSUB_3'(s(bool,X45),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46))))))) )),
  inference(superposition,[],[f716,f589])).
fof(f8189,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8188,f8050])).
fof(f8188,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl8),
  inference(backward_demodulation,[],[f531,f8029])).
fof(f8029,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.|48|_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f617,f874])).
fof(f8149,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8148,f7920])).
fof(f8148,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8147,f874])).
fof(f8147,plain,(
  ( ! [X50,X51] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8146,f7920])).
fof(f8146,plain,(
  ( ! [X50,X51] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5151,f874])).
fof(f8141,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8140,f7920])).
fof(f8140,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8139,f874])).
fof(f8139,plain,(
  ( ! [X28] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8138,f7920])).
fof(f8138,plain,(
  ( ! [X28] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5137,f874])).
fof(f8136,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8135,f7920])).
fof(f8135,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8134,f874])).
fof(f8134,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8133,f7920])).
fof(f8133,plain,(
  ( ! [X31,X32] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5140,f874])).
fof(f8131,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8130,f7920])).
fof(f8130,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8129,f874])).
fof(f8129,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8128,f7920])).
fof(f8128,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5093,f874])).
fof(f8071,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8070,f7920])).
fof(f8070,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8069,f874])).
fof(f8069,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8068,f7920])).
fof(f8068,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(forward_demodulation,[],[f6469,f874])).
fof(f8067,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8066,f7920])).
fof(f8066,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8065,f874])).
fof(f8065,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8064,f7920])).
fof(f8064,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl8),
  inference(forward_demodulation,[],[f4781,f874])).
fof(f8061,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8060,f7920])).
fof(f8060,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8059,f874])).
fof(f8059,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8058,f7920])).
fof(f8058,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(forward_demodulation,[],[f6624,f874])).
fof(f8057,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8056,f7920])).
fof(f8056,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8055,f874])).
fof(f8055,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8054,f7920])).
fof(f8054,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X8))))) ) | $spl8),
  inference(forward_demodulation,[],[f5064,f874])).
fof(f8015,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8014,f7920])).
fof(f8014,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8013,f874])).
fof(f8013,plain,(
  ( ! [X28] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8012,f7920])).
fof(f8012,plain,(
  ( ! [X28] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5187,f874])).
fof(f8010,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8009,f7920])).
fof(f8009,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8008,f874])).
fof(f8008,plain,(
  ( ! [X31,X32] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8007,f7920])).
fof(f8007,plain,(
  ( ! [X31,X32] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5190,f874])).
fof(f8005,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8004,f7920])).
fof(f8004,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f8003,f874])).
fof(f8003,plain,(
  ( ! [X33,X34] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f8002,f7920])).
fof(f8002,plain,(
  ( ! [X33,X34] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X33))))))))) ) | $spl8),
  inference(forward_demodulation,[],[f5191,f874])).
fof(f8000,plain,(
  $false | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f7999,f7920])).
fof(f7999,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl8)),
  inference(forward_demodulation,[],[f7998,f874])).
fof(f7998,plain,(
  ( ! [X277,X276,X278] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X278),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num','const.num.SUC_1'(s('type.num.num',X277))))))))) ) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f7997,f7920])).
fof(f7997,plain,(
  ( ! [X277,X276,X278] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X278),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X276),s('type.num.num','const.num.SUC_1'(s('type.num.num',X277))))))))) ) | $spl8),
  inference(forward_demodulation,[],[f6947,f874])).
fof(f7987,plain,(
  $false | ($spl1 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f7986,f7920])).
fof(f7986,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl8)),
  inference(forward_demodulation,[],[f5580,f874])).
fof(f7985,plain,(
  $false | ($spl1 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f7984,f7920])).
fof(f7984,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl8)),
  inference(forward_demodulation,[],[f5581,f874])).
fof(f7894,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7893,f427])).
fof(f7893,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7892,f7270])).
fof(f7270,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,X10)) ) | $spl19),
  inference(subsumption_resolution,[],[f7165,f859])).
fof(f7165,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,X10) | p(s(bool,X10))) ) | $spl19),
  inference(backward_demodulation,[],[f7141,f969])).
fof(f7141,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl19),
  inference(backward_demodulation,[],[f7139,f2521])).
fof(f2521,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(unit_resulting_resolution,[],[f434,f2021,f618])).
fof(f2021,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl19),
  inference(unit_resulting_resolution,[],[f1943,f477])).
fof(f1943,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | $spl19),
  inference(unit_resulting_resolution,[],[f1921,f474])).
fof(f7892,plain,(
  ( ! [X271,X270,X272] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num',X271))),s('type.num.num',X272))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7389,f427])).
fof(f7389,plain,(
  ( ! [X271,X270,X272] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X270),s('type.num.num',X271))),s('type.num.num',X272))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f6945])).
fof(f7891,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7890,f427])).
fof(f7890,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7889,f7270])).
fof(f7889,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num',X34))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7387,f427])).
fof(f7387,plain,(
  ( ! [X33,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num',X34))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4973])).
fof(f7888,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7887,f427])).
fof(f7887,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7886,f7270])).
fof(f7886,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num',X32))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7385,f427])).
fof(f7385,plain,(
  ( ! [X31,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))),s('type.num.num',X32))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4972])).
fof(f7885,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7884,f427])).
fof(f7884,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7883,f7270])).
fof(f7883,plain,(
  ( ! [X28] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7383,f427])).
fof(f7383,plain,(
  ( ! [X28] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4969])).
fof(f7878,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7358,f427])).
fof(f7358,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f7023])).
fof(f7877,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7355,f427])).
fof(f7355,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f6023])).
fof(f7876,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7354,f427])).
fof(f7354,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f7264])).
fof(f7264,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7255,f5909])).
fof(f7255,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl19),
  inference(forward_demodulation,[],[f7231,f7234])).
fof(f7234,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl19),
  inference(forward_demodulation,[],[f7227,f7226])).
fof(f7226,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))) ) | $spl19),
  inference(forward_demodulation,[],[f7153,f454])).
fof(f7153,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(backward_demodulation,[],[f7141,f466])).
fof(f7227,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl19),
  inference(backward_demodulation,[],[f7226,f458])).
fof(f7231,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl19),
  inference(backward_demodulation,[],[f7226,f459])).
fof(f7875,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7353,f427])).
fof(f7353,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f5906])).
fof(f7874,plain,(
  $false | ($spl19 | $spl39)),
  inference(subsumption_resolution,[],[f7869,f3441])).
fof(f7869,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl19 | $spl39)),
  inference(backward_demodulation,[],[f7844,f3402])).
fof(f7844,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl19),
  inference(subsumption_resolution,[],[f7351,f427])).
fof(f7351,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f504])).
fof(f7843,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7721,f7519])).
fof(f7519,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl19),
  inference(subsumption_resolution,[],[f7349,f427])).
fof(f7349,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f477])).
fof(f7721,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7020])).
fof(f7842,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7720,f7829])).
fof(f7829,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl19),
  inference(subsumption_resolution,[],[f7651,f7519])).
fof(f7651,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl19),
  inference(backward_demodulation,[],[f7519,f622])).
fof(f7720,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6811])).
fof(f7841,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7719,f7519])).
fof(f7719,plain,(
  ( ! [X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6805])).
fof(f7840,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7717,f7519])).
fof(f7717,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f2861])).
fof(f7839,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7711,f7519])).
fof(f7711,plain,(
  ( ! [X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7018])).
fof(f7838,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7709,f7519])).
fof(f7709,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6814])).
fof(f7837,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7698,f7519])).
fof(f7698,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7017])).
fof(f7836,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7696,f7519])).
fof(f7696,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3191])).
fof(f7835,plain,(
  $false | ($spl19 | $spl35)),
  inference(subsumption_resolution,[],[f7690,f7519])).
fof(f7690,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl19 | $spl35)),
  inference(backward_demodulation,[],[f7519,f3500])).
fof(f3500,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl35),
  inference(unit_resulting_resolution,[],[f1934,f622])).
fof(f7834,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7689,f7519])).
fof(f7689,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3497])).
fof(f7833,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7687,f7519])).
fof(f7687,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6820])).
fof(f7832,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7682,f7519])).
fof(f7682,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5248])).
fof(f7831,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7676,f7519])).
fof(f7676,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4193])).
fof(f7830,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7675,f7519])).
fof(f7675,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4430])).
fof(f7821,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7643,f7519])).
fof(f7643,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7015])).
fof(f7820,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7641,f7519])).
fof(f7641,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5246])).
fof(f7819,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7640,f7519])).
fof(f7640,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4548])).
fof(f7812,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7632,f7519])).
fof(f7632,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3189])).
fof(f7811,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7629,f7519])).
fof(f7629,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f2779])).
fof(f7810,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7627,f7519])).
fof(f7627,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f2403])).
fof(f7809,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7623,f7519])).
fof(f7623,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7016])).
fof(f7806,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7620,f7519])).
fof(f7620,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5247])).
fof(f7802,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7616,f7519])).
fof(f7616,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3660])).
fof(f7801,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7614,f7519])).
fof(f7614,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3190])).
fof(f7800,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7609,f7519])).
fof(f7609,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6819])).
fof(f7799,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7604,f7519])).
fof(f7604,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5059])).
fof(f7798,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7598,f7519])).
fof(f7598,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5058])).
fof(f7797,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7592,f7519])).
fof(f7592,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7058])).
fof(f7795,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7590,f7519])).
fof(f7590,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7014])).
fof(f7790,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7585,f7519])).
fof(f7585,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5056])).
fof(f7789,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7584,f7519])).
fof(f7584,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4700])).
fof(f7788,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7583,f7519])).
fof(f7583,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4553])).
fof(f7783,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7576,f7519])).
fof(f7576,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3188])).
fof(f7782,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7575,f7519])).
fof(f7575,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3066])).
fof(f7779,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7567,f7519])).
fof(f7567,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7263])).
fof(f7263,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7255,f5057])).
fof(f7778,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7566,f7519])).
fof(f7566,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7261])).
fof(f7261,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7255,f4695])).
fof(f7774,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7562,f7519])).
fof(f7562,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f7256])).
fof(f7256,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7255,f3136])).
fof(f7763,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7548,f7519])).
fof(f7548,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f2298])).
fof(f7762,plain,(
  $false | ($spl19 | $spl25)),
  inference(subsumption_resolution,[],[f7761,f7519])).
fof(f7761,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) ) | ($spl19 | $spl25)),
  inference(subsumption_resolution,[],[f7546,f2525])).
fof(f2525,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl25),
  inference(unit_resulting_resolution,[],[f1925,f474])).
fof(f7546,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))) ) | $spl19),
  inference(backward_demodulation,[],[f7519,f1910])).
fof(f7743,plain,(
  $false | ($spl19 | $spl39)),
  inference(trivial_inequality_removal,[],[f7540])).
fof(f7540,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl19 | $spl39)),
  inference(backward_demodulation,[],[f7519,f6407])).
fof(f6407,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f3485,f622])).
fof(f3485,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl39),
  inference(unit_resulting_resolution,[],[f3402,f622])).
fof(f7742,plain,(
  $false | ($spl19 | $spl39)),
  inference(trivial_inequality_removal,[],[f7541])).
fof(f7541,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl19 | $spl39)),
  inference(backward_demodulation,[],[f7519,f3485])).
fof(f7741,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7579])).
fof(f7579,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3588])).
fof(f7740,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7597])).
fof(f7597,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5026])).
fof(f7739,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7599])).
fof(f7599,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f6025])).
fof(f7738,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7605])).
fof(f7605,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f5215])).
fof(f7737,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7615])).
fof(f7615,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3489])).
fof(f7736,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7635])).
fof(f7635,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f3587])).
fof(f7735,plain,(
  $false | ($spl1 | $spl19)),
  inference(trivial_inequality_removal,[],[f7638])).
fof(f7638,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7519,f4052])).
fof(f7518,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7517,f427])).
fof(f7517,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7516,f7270])).
fof(f7516,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7348,f427])).
fof(f7348,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4867])).
fof(f7515,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7514,f427])).
fof(f7514,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7513,f7270])).
fof(f7513,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7345,f427])).
fof(f7345,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f6625])).
fof(f7512,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7511,f427])).
fof(f7511,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7510,f7270])).
fof(f7510,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7344,f427])).
fof(f7344,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4780])).
fof(f7509,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7508,f427])).
fof(f7508,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7507,f7270])).
fof(f7507,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7341,f427])).
fof(f7341,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f6470])).
fof(f7506,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7339,f427])).
fof(f7339,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f5424])).
fof(f7505,plain,(
  $false | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f7338,f427])).
fof(f7338,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl19)),
  inference(backward_demodulation,[],[f7270,f5423])).
fof(f7504,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7337,f427])).
fof(f7337,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(backward_demodulation,[],[f7270,f4985])).
fof(f7503,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7336,f427])).
fof(f7336,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(backward_demodulation,[],[f7270,f4986])).
fof(f7466,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7465,f427])).
fof(f7465,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7464,f7270])).
fof(f7464,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7292,f427])).
fof(f7292,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4896])).
fof(f7463,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7462,f427])).
fof(f7462,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7461,f7270])).
fof(f7461,plain,(
  ( ! [X31,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7290,f427])).
fof(f7290,plain,(
  ( ! [X31,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X31))))),s('type.num.num',X32))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4943])).
fof(f7460,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7459,f427])).
fof(f7459,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7458,f7270])).
fof(f7458,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7288,f427])).
fof(f7288,plain,(
  ( ! [X28] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X28))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4940])).
fof(f7457,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7456,f427])).
fof(f7456,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7455,f7270])).
fof(f7455,plain,(
  ( ! [X50,X51] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7283,f427])).
fof(f7283,plain,(
  ( ! [X50,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))),s('type.num.num',X51))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4954])).
fof(f7454,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7453,f427])).
fof(f7453,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(forward_demodulation,[],[f7452,f7270])).
fof(f7452,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl19),
  inference(subsumption_resolution,[],[f7277,f427])).
fof(f7277,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl19),
  inference(backward_demodulation,[],[f7270,f4782])).
fof(f7225,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f7149,f427])).
fof(f7149,plain,(
  ~p(s(bool,'T_0')) | $spl19),
  inference(backward_demodulation,[],[f7141,f434])).
fof(f7142,plain,(
  $false | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f7141,f876])).
fof(f3400,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl36),
  inference(cnf_transformation,[],[f3400_D])).
fof(f3400_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3402,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl39),
  inference(cnf_transformation,[],[f3402_D])).
fof(f3402_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f3396,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl4),
  inference(superposition,[],[f498,f644])).
fof(f1932,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl32),
  inference(cnf_transformation,[],[f1932_D])).
fof(f1932_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1934,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl35),
  inference(cnf_transformation,[],[f1934_D])).
fof(f1934_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f1917,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f473,f433])).
fof(f1930,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl30),
  inference(cnf_transformation,[],[f1930_D])).
fof(f1930_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1921,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl19),
  inference(cnf_transformation,[],[f1921_D])).
fof(f1921_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f1911,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f473,f431])).
fof(f1927,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) ) | $spl28),
  inference(cnf_transformation,[],[f1927_D])).
fof(f1927_D,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1908,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) )),
  inference(superposition,[],[f473,f451])).
fof(f1926,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f1926_D])).
fof(f1926_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1907,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f443])).
fof(f1923,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f1923_D])).
fof(f1923_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1925,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl25),
  inference(cnf_transformation,[],[f1925_D])).
fof(f1925_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f1906,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f473,f647])).
fof(f1922,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num',X4)))) ) | $spl20),
  inference(cnf_transformation,[],[f1922_D])).
fof(f1922_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num',X4)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1905,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num',X4)))) )),
  inference(superposition,[],[f473,f445])).
fof(f1919,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) | $spl16),
  inference(cnf_transformation,[],[f1919_D])).
fof(f1919_D,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1903,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) )),
  inference(superposition,[],[f473,f437])).
fof(f1264,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1263,f427])).
fof(f1263,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f1262,f966])).
fof(f1262,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f1061,f427])).
fof(f1061,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(backward_demodulation,[],[f966,f624])).
fof(f1092,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1091,f427])).
fof(f1091,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f1090,f966])).
fof(f1090,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f1002,f427])).
fof(f1002,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(backward_demodulation,[],[f966,f718])).
fof(f1077,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f980,f427])).
fof(f980,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f966,f434])).
fof(f967,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) | $spl14),
  inference(cnf_transformation,[],[f967_D])).
fof(f967_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f965,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f927,f859])).
fof(f927,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f618,f471])).
fof(f874,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f874_D])).
fof(f874_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f876,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f876_D])).
fof(f876_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f869,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f471])).
fof(f640,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl0),
  inference(cnf_transformation,[],[f640_D])).
fof(f640_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f646,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl6),
  inference(cnf_transformation,[],[f646_D])).
fof(f646_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f424,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f312])).
fof(f312,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7])],[f311])).
fof(f311,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X8,X9,X10,X11,X12] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(rectify,[],[f310])).
fof(f310,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(nnf_transformation,[],[f305])).
fof(f305,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <~> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X9,X10,X11,X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X9,X10,X11,X12,X13] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|9','thm.quantHeuristics.LIST_LENGTH_4|split|9')).
fof(f644,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl4),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f425,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f312])).
fof(f641,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f642,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl2),
  inference(cnf_transformation,[],[f642_D])).
fof(f642_D,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f426,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f312])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1031
% Passive clauses: 12018
% Generated clauses: 138408
% Final active clauses: 451
% Final passive clauses: 4018
% Input formulas: 133
% Initial clauses: 214
% Discarded non-redundant clauses: 4009
% 
% Duplicate literals: 325
% Trivial inequalities: 196
% Fw subsumption resolutions: 2423
% Fw demodulations: 58347
% Bw demodulations: 3118
% Condensations: 431
% Global subsumptions: 20
% 
% Simple tautologies: 222
% Equational tautologies: 327
% Forward subsumptions: 62063
% Fw demodulations to eq. taut.: 1316
% Bw demodulations to eq. taut.: 16
% 
% Unit resulting resolution: 13365
% Factoring: 1
% Forward superposition: 27954
% Backward superposition: 30579
% Self superposition: 146
% Equality factoring: 30
% Equality resolution: 18
% 
% Split clauses: 116
% Split components: 232
% SAT solver clauses: 12406
% SAT solver unit clauses: 377
% SAT solver binary clauses: 3051
% 
% Sat splits: 116
% Sat splitting refutations: 134
% 
% Memory used [KB]: 106949
% Time elapsed: 6.594 s
% ------------------------------
% ------------------------------
% Success in time 7.91 s
