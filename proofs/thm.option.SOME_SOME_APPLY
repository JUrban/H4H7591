Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1628,plain,(
  $false),
  inference(subsumption_resolution,[],[f1627,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X6] : ! [X9,X8] : s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X6,X7),X9),s(X6,X8))))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8)))))),
  file('thm.option.SOME_SOME_APPLY','thm.option.OPTION_MAP_DEF|split|0')).
fof(f1627,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK3),s(sK1,sK2))))) != s('type.option.option'(sK0),'const.option.OPTION_MAP_2'(s(fun(sK1,sK0),sK3),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK2)))))),
  inference(superposition,[],[f37,f49])).
fof(f49,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X2))),s('type.option.option'(X1),X3)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : ! [X9,X8] : s('type.option.option'(X6),'const.option.OPTION_MAP_2'(s(fun(X7,X6),X9),s('type.option.option'(X7),X8))) = s('type.option.option'(X6),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X7,X6)),'const.option.SOME_1'(s(fun(X7,X6),X9))),s('type.option.option'(X7),X8)))),
  file('thm.option.SOME_SOME_APPLY','thm.option.OPTION_APPLY_def|split|1')).
fof(f37,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK3),s(sK1,sK2))))) != s('type.option.option'(sK0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK1,sK0)),'const.option.SOME_1'(s(fun(sK1,sK0),sK3))),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK2)))))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK3),s(sK1,sK2))))) != s('type.option.option'(sK0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(sK1,sK0)),'const.option.SOME_1'(s(fun(sK1,sK0),sK3))),s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))))) != s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X3))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2)))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X3))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2)))))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))))) = s('type.option.option'(X0),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X1,X0)),'const.option.SOME_1'(s(fun(X1,X0),X3))),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X9),s(X7,X8))))) = s('type.option.option'(X6),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X7,X6)),'const.option.SOME_1'(s(fun(X7,X6),X9))),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X9),s(X7,X8))))) = s('type.option.option'(X6),'const.option.OPTION_APPLY_2'(s('type.option.option'(fun(X7,X6)),'const.option.SOME_1'(s(fun(X7,X6),X9))),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X8)))))),
  file('thm.option.SOME_SOME_APPLY','thm.option.SOME_SOME_APPLY')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 330
% Generated clauses: 1488
% Final active clauses: 25
% Final passive clauses: 172
% Input formulas: 12
% Initial clauses: 14
% 
% Duplicate literals: 219
% Trivial inequalities: 37
% Fw subsumption resolutions: 121
% Fw demodulations: 3
% Bw demodulations: 3
% 
% Simple tautologies: 37
% Equational tautologies: 39
% Forward subsumptions: 555
% 
% Binary resolution: 7
% Forward superposition: 421
% Backward superposition: 414
% Self superposition: 125
% Equality factoring: 102
% Equality resolution: 11
% 
% Split clauses: 87
% Split components: 174
% SAT solver clauses: 167
% SAT solver unit clauses: 3
% SAT solver binary clauses: 51
% 
% Sat splits: 87
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 157
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1279
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.044 s
