Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.prelim
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.prelim
% SZS output start Proof for thm.prelim
fof(f554,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f553,f148,f231,f157,f234,f192,f233,f238])).
fof(f238,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f238_D])).
fof(f238_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f233,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f192,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.prelim.ordering_eq_dec|split|10','thm.numeral.numeral_eq|split|1')).
fof(f234,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f234_D])).
fof(f234_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f157,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.prelim.ordering_eq_dec|split|10',aHL_FALSITY)).
fof(f231,plain,(
  s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') | $spl0),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f148,plain,(
  p(s(bool,'F_0')) | s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0')),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  (s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') | p(s(bool,'F_0'))) & (s('type.prelim.ordering','const.prelim.EQUAL_0') != s('type.prelim.ordering','const.prelim.LESS_0') | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') <~> p(s(bool,'F_0'))),
  inference(ennf_transformation,[],[f6])).
fof(f6,negated_conjecture,(
  ~(s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') <=> p(s(bool,'F_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  s('type.prelim.ordering','const.prelim.EQUAL_0') = s('type.prelim.ordering','const.prelim.LESS_0') <=> p(s(bool,'F_0'))),
  file('thm.prelim.ordering_eq_dec|split|10','thm.prelim.ordering_eq_dec|split|10')).
fof(f553,plain,(
  $false | ($spl0 | $spl10)),
  inference(subsumption_resolution,[],[f543,f238])).
fof(f543,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl0),
  inference(trivial_inequality_removal,[],[f542])).
fof(f542,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl0),
  inference(superposition,[],[f196,f438])).
fof(f438,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl0),
  inference(forward_demodulation,[],[f155,f241])).
fof(f241,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.EQUAL_0'))) | $spl0),
  inference(forward_demodulation,[],[f153,f231])).
fof(f153,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.LESS_0')))),
  inference(cnf_transformation,[],[f57])).
fof(f57,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.LESS_0')))),
  file('thm.prelim.ordering_eq_dec|split|10','thm.prelim.ordering2num_thm|split|0')).
fof(f155,plain,(
  s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.EQUAL_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f58])).
fof(f58,axiom,(
  s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.EQUAL_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.prelim.ordering_eq_dec|split|10','thm.prelim.ordering2num_thm|split|1')).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X10] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X10))),
  file('thm.prelim.ordering_eq_dec|split|10','thm.numeral.numeral_distrib|split|17')).
% SZS output end Proof for thm.prelim
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 36
% Passive clauses: 90
% Generated clauses: 400
% Final active clauses: 34
% Final passive clauses: 44
% Input formulas: 62
% Initial clauses: 82
% 
% Duplicate literals: 1
% Trivial inequalities: 7
% Fw subsumption resolutions: 6
% Fw demodulations: 29
% Bw demodulations: 2
% 
% Simple tautologies: 6
% Equational tautologies: 4
% Forward subsumptions: 251
% 
% Binary resolution: 7
% Forward superposition: 108
% Backward superposition: 142
% Self superposition: 8
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 17
% SAT solver unit clauses: 1
% SAT solver binary clauses: 15
% SAT solver learnt clauses: 1
% 
% Sat splits: 14
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 1
% 
% Memory used [KB]: 895
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
