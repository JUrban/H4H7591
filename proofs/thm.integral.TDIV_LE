Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f11019,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f11017,f276,f470])).
fof(f470,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f470_D])).
fof(f470_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f276,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integral.TDIV_LE',aHL_FALSITY)).
fof(f11017,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f11016,f470])).
fof(f11016,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f10948,f497])).
fof(f497,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK15)))),
  inference(resolution,[],[f291,f269])).
fof(f269,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))))),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK12),s(fun('type.num.num','type.realax.real'),sK13)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f122])).
fof(f122,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X0),s(fun('type.num.num','type.realax.real'),X1)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))))),
  inference(ennf_transformation,[],[f49])).
fof(f49,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X0),s(fun('type.num.num','type.realax.real'),X1)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X6),s(fun('type.num.num','type.realax.real'),X7)))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))))),
  file('thm.integral.TDIV_LE','thm.integral.TDIV_LE')).
fof(f291,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.integral.TDIV_LE','thm.bool.EQ_CLAUSES|split|2')).
fof(f10948,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))))),
  inference(resolution,[],[f6650,f383])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X22,X8,X9] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s(fun('type.num.num','type.realax.real'),X22)))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X9)))))),
  file('thm.integral.TDIV_LE','thm.transc.DIVISION_LE')).
fof(f6650,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))),s(fun('type.num.num','type.realax.real'),sK12))))),
  inference(resolution,[],[f458,f268])).
fof(f268,plain,(
  p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK14),s('type.realax.real',sK15))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),sK12),s(fun('type.num.num','type.realax.real'),sK13))))))),
  inference(cnf_transformation,[],[f163])).
fof(f458,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2))))) )),
  inference(cnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & ! [X5] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X5))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X5)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X5))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))))))))) & (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) | (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',sK37(X3,X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',sK37(X3,X2,X1,X0))))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',sK37(X3,X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK37(X3,X2,X1,X0)))))))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37])],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & ! [X5] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X5))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X5)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X5))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))))))))) & (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) | ? [X4] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3))))))))),
  inference(rectify,[],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & ! [X4] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))))) & (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) | ? [X4] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3))))))))),
  inference(flattening,[],[f264])).
fof(f264,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) | (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & ! [X4] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))))) & ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) | ? [X4] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))) | p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3))))))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X2),s(fun('type.num.num','type.realax.real'),X3)))))) <=> (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & ! [X4] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X3),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X8,X9,X22,X7] : (p(s(bool,'const.transc.tdiv_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s('type.pair.prod'(fun('type.num.num','type.realax.real'),fun('type.num.num','type.realax.real')),'const.pair.,_2'(s(fun('type.num.num','type.realax.real'),X22),s(fun('type.num.num','type.realax.real'),X7)))))) <=> (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X8),s('type.realax.real',X9))),s(fun('type.num.num','type.realax.real'),X22)))) & ! [X23] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num',X23))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X23)))))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X23))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))))))))))),
  file('thm.integral.TDIV_LE','thm.transc.tdiv')).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 663
% Passive clauses: 4082
% Generated clauses: 10719
% Final active clauses: 659
% Final passive clauses: 3248
% Input formulas: 47
% Initial clauses: 194
% 
% Duplicate literals: 148
% Trivial inequalities: 48
% Fw subsumption resolutions: 1104
% Fw demodulations: 727
% Bw demodulations: 3
% 
% Simple tautologies: 197
% Equational tautologies: 21
% Forward subsumptions: 4231
% 
% Binary resolution: 4938
% Factoring: 526
% Forward superposition: 964
% Backward superposition: 1934
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 251
% Split components: 503
% SAT solver clauses: 339
% SAT solver unit clauses: 8
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 1
% 
% Sat splits: 251
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 338
% TWLsolver calls for satisfiability: 225
% 
% Memory used [KB]: 5373
% Time elapsed: 0.241 s
% ------------------------------
% ------------------------------
% Success in time 0.255 s
