Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.indexedLists
% (85226)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 109
% Passive clauses: 3354
% Generated clauses: 15535
% Final active clauses: 100
% Final passive clauses: 3000
% Input formulas: 17
% Initial clauses: 58
% 
% Duplicate literals: 773
% Trivial inequalities: 182
% Fw subsumption resolutions: 2516
% Fw demodulations: 1065
% Bw demodulations: 3
% 
% Simple tautologies: 296
% Equational tautologies: 79
% Forward subsumptions: 5904
% 
% Binary resolution: 430
% Factoring: 6
% Forward superposition: 5994
% Backward superposition: 3887
% Self superposition: 252
% Equality factoring: 194
% Equality resolution: 17
% 
% Split clauses: 543
% Split components: 1090
% SAT solver clauses: 1533
% SAT solver unit clauses: 7
% SAT solver binary clauses: 178
% 
% Sat splits: 543
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1532
% TWLsolver calls for satisfiability: 213
% 
% Memory used [KB]: 8443
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.indexedLists
% (85242)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 45
% Passive clauses: 156
% Generated clauses: 5296
% Final active clauses: 39
% Final passive clauses: 97
% Input formulas: 17
% Initial clauses: 58
% 
% Duplicate literals: 1054
% Trivial inequalities: 44
% Fw subsumption resolutions: 197
% Fw demodulations: 25
% Bw demodulations: 16
% Condensations: 1559
% Global subsumptions: 4
% 
% Simple tautologies: 132
% Equational tautologies: 69
% Forward subsumptions: 1344
% 
% Binary resolution: 57
% Factoring: 1
% Forward superposition: 795
% Backward superposition: 1167
% Self superposition: 220
% Equality factoring: 200
% Equality resolution: 8
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 333
% SAT solver unit clauses: 52
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 8
% 
% Sat splits: 27
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 317
% TWLsolver calls for satisfiability: 324
% 
% Memory used [KB]: 3965
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.indexedLists
% (85255)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 333
% Passive clauses: 2995
% Generated clauses: 98693
% Final active clauses: 119
% Final passive clauses: 677
% Input formulas: 17
% Initial clauses: 58
% Discarded non-redundant clauses: 2460
% 
% Duplicate literals: 8110
% Trivial inequalities: 864
% Fw subsumption resolutions: 9890
% Fw demodulations: 8259
% Bw demodulations: 1409
% Condensations: 14933
% Global subsumptions: 58
% 
% Simple tautologies: 1063
% Equational tautologies: 913
% Forward subsumptions: 50996
% Fw demodulations to eq. taut.: 18
% Bw demodulations to eq. taut.: 43
% 
% Unit resulting resolution: 2503
% Factoring: 1
% Forward superposition: 26013
% Backward superposition: 23113
% Self superposition: 702
% Equality factoring: 498
% Equality resolution: 41
% 
% Split clauses: 413
% Split components: 833
% SAT solver clauses: 3928
% SAT solver unit clauses: 11
% SAT solver binary clauses: 89
% 
% Sat splits: 413
% Sat splitting refutations: 47
% 
% Memory used [KB]: 48741
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.indexedLists
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.indexedLists
% SZS output start Proof for thm.indexedLists
fof(f6693,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f6692])).
fof(f6692,plain,(
  s('type.list.list'(sK2),'const.list.NIL_0') != s('type.list.list'(sK2),'const.list.NIL_0') | s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),'const.list.NIL_0')),
  inference(resolution,[],[f6679,f127])).
fof(f127,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP0(X0,X1,X2,X3,X4,X5) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X4) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X5)) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~sP0(X0,X1,X2,X3,X4,X5) | (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X5) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X4)) | (s('type.list.list'(X1),X5) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),sK8(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK6(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X1),'const.list.NIL_0'))))) & s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK9(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK7(X5,X4,X3,X2,X1,X0)),s('type.list.list'(X0),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.num.num',fun(X1,fun(X0,bool))),X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK8(X5,X4,X3,X2,X1,X0)))))),s(X1,sK6(X5,X4,X3,X2,X1,X0)))),s(X0,sK7(X5,X4,X3,X2,X1,X0))))) & p(s(bool,happ(s(fun('type.list.list'(X0),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X0),bool)),X2),s('type.list.list'(X1),sK8(X5,X4,X3,X2,X1,X0)))),s('type.list.list'(X0),sK9(X5,X4,X3,X2,X1,X0))))))) & (((s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X5) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X4)) & ! [X6,X7,X8,X9] : (s('type.list.list'(X1),X5) != s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X8),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),'const.list.NIL_0'))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.num.num',fun(X1,fun(X0,bool))),X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X8))))),s(X1,X6))),s(X0,X7)))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X0),bool)),X2),s('type.list.list'(X1),X8))),s('type.list.list'(X0),X9)))))) | sP0(X0,X1,X2,X3,X4,X5)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9])],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~sP0(X0,X1,X2,X3,X4,X5) | (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X5) & s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X4)) | ? [X10,X11,X12,X13] : (s('type.list.list'(X1),X5) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X12),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X10),s('type.list.list'(X1),'const.list.NIL_0'))))) & s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.num.num',fun(X1,fun(X0,bool))),X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X12))))),s(X1,X10))),s(X0,X11)))) & p(s(bool,happ(s(fun('type.list.list'(X0),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X0),bool)),X2),s('type.list.list'(X1),X12))),s('type.list.list'(X0),X13)))))) & (((s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X5) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X4)) & ! [X6,X7,X8,X9] : (s('type.list.list'(X1),X5) != s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X8),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),'const.list.NIL_0'))))) | s('type.list.list'(X0),X4) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.num.num',fun(X1,fun(X0,bool))),X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X8))))),s(X1,X6))),s(X0,X7)))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X0),bool)),X2),s('type.list.list'(X1),X8))),s('type.list.list'(X0),X9)))))) | sP0(X0,X1,X2,X3,X4,X5)))),
  inference(rectify,[],[f71])).
fof(f71,plain,(
  ! [X1,X0,X5,X2,X7,X6] : ((~sP0(X1,X0,X5,X2,X7,X6) | (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) & (((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X6) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X7)) & ! [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.list.list'(X1),X7) != s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) | sP0(X1,X0,X5,X2,X7,X6)))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X1,X0,X5,X2,X7,X6] : ((~sP0(X1,X0,X5,X2,X7,X6) | ((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11))))))) & (((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X6) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X7)) & ! [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) | s('type.list.list'(X1),X7) != s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) | sP0(X1,X0,X5,X2,X7,X6)))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X1,X0,X5,X2,X7,X6] : (sP0(X1,X0,X5,X2,X7,X6) <=> ((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f6679,plain,(
  ~sP0(sK2,sK1,sK12('const.list.NIL_0','const.list.NIL_0',sK3,sK2,sK1),sK3,'const.list.NIL_0','const.list.NIL_0')),
  inference(subsumption_resolution,[],[f6678,f116])).
fof(f116,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.indexedLists.LIST_RELi_rules|split|0',aHL_FALSITY)).
fof(f6678,plain,(
  p(s(bool,'F_0')) | ~sP0(sK2,sK1,sK12('const.list.NIL_0','const.list.NIL_0',sK3,sK2,sK1),sK3,'const.list.NIL_0','const.list.NIL_0')),
  inference(forward_demodulation,[],[f6606,f186])).
fof(f186,plain,(
  s(bool,'F_0') = s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(sK1,fun(sK2,bool))),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))),
  inference(subsumption_resolution,[],[f178,f117])).
fof(f117,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.indexedLists.LIST_RELi_rules|split|0','thm.bool.TRUTH')).
fof(f178,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(sK1,fun(sK2,bool))),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))),
  inference(superposition,[],[f78,f133])).
fof(f133,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.indexedLists.LIST_RELi_rules|split|0',aHL_BOOL_CASES)).
fof(f78,plain,(
  ~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(sK1,fun(sK2,bool))),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0'))))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(sK1,fun(sK2,bool))),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3])],[f39])).
fof(f39,plain,(
  ? [X0,X1,X2] : ~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2] : p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : ! [X2] : p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X6,fun(X7,bool))),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X6,fun(X7,bool))),X8),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))))),
  file('thm.indexedLists.LIST_RELi_rules|split|0','thm.indexedLists.LIST_RELi_rules|split|0')).
fof(f6606,plain,(
  p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(sK1,fun(sK2,bool))),sK3),s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK2),'const.list.NIL_0')))) | ~sP0(sK2,sK1,sK12('const.list.NIL_0','const.list.NIL_0',sK3,sK2,sK1),sK3,'const.list.NIL_0','const.list.NIL_0')),
  inference(resolution,[],[f137,f131])).
fof(f131,plain,(
  ( ! [X6,X4,X2,X0,X7,X3,X1] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),sK12(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7)))) | ~sP0(X1,X0,sK12(X4,X3,X2,X1,X0),X2,X7,X6)) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ! [X8] : ((sP0(X1,X0,X8,X2,sK11(X8,X4,X3,X2,X1,X0),sK10(X8,X4,X3,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X8),s('type.list.list'(X0),sK10(X8,X4,X3,X2,X1,X0)))),s('type.list.list'(X1),sK11(X8,X4,X3,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X8),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))))) & ((! [X6,X7] : (~sP0(X1,X0,sK12(X4,X3,X2,X1,X0),X2,X7,X6) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),sK12(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),sK12(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))) | p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ! [X8] : (? [X9,X10] : (sP0(X1,X0,X8,X2,X10,X9) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X8),s('type.list.list'(X0),X9))),s('type.list.list'(X1),X10))))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X8),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))))) & (? [X5] : (! [X6,X7] : (~sP0(X1,X0,X5,X2,X7,X6) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))) | p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(rectify,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ! [X5] : (? [X6,X7] : (sP0(X1,X0,X5,X2,X7,X6) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4)))))) & (? [X5] : (! [X6,X7] : (~sP0(X1,X0,X5,X2,X7,X6) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))) | p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> ! [X5] : (? [X6,X7] : (sP0(X1,X0,X5,X2,X7,X6) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))))),
  inference(definition_folding,[],[f53,f55])).
fof(f53,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> ! [X5] : (? [X6,X7] : (((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) & ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) | p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> ! [X5] : (! [X6,X7] : (((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> ! [X5] : (! [X6,X7] : (((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X6) & s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X7)) | ? [X8,X9,X10,X11] : (s('type.list.list'(X0),X6) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))) & s('type.list.list'(X1),X7) = s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),happ(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X10))))),s(X0,X8))),s(X1,X9)))) & p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X10))),s('type.list.list'(X1),X11)))))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X6))),s('type.list.list'(X1),X7))))) => p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),X5),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7] : ! [X5,X18,X19] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X6,fun(X7,bool))),X5),s('type.list.list'(X6),X18),s('type.list.list'(X7),X19)))) <=> ! [X20] : (! [X21,X22] : (((s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X21) & s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X22)) | ? [X23,X24,X25,X26] : (s('type.list.list'(X6),X21) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X25),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.NIL_0'))))) & s('type.list.list'(X7),X22) = s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X26),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X24),s('type.list.list'(X7),'const.list.NIL_0'))))) & p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),happ(s(fun('type.num.num',fun(X6,fun(X7,bool))),X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X25))))),s(X6,X23))),s(X7,X24)))) & p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X6),fun('type.list.list'(X7),bool)),X20),s('type.list.list'(X6),X25))),s('type.list.list'(X7),X26)))))) => p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X6),fun('type.list.list'(X7),bool)),X20),s('type.list.list'(X6),X21))),s('type.list.list'(X7),X22))))) => p(s(bool,happ(s(fun('type.list.list'(X7),bool),happ(s(fun('type.list.list'(X6),fun('type.list.list'(X7),bool)),X20),s('type.list.list'(X6),X18))),s('type.list.list'(X7),X19))))))),
  file('thm.indexedLists.LIST_RELi_rules|split|0','thm.indexedLists.LIST_RELi_def')).
fof(f137,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK2),bool),happ(s(fun('type.list.list'(sK1),fun('type.list.list'(sK2),bool)),sK12('const.list.NIL_0','const.list.NIL_0',sK3,sK2,sK1)),s('type.list.list'(sK1),'const.list.NIL_0'))),s('type.list.list'(sK2),'const.list.NIL_0'))))),
  inference(resolution,[],[f78,f132])).
fof(f132,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.indexedLists.LIST_RELi_3'(s(fun('type.num.num',fun(X0,fun(X1,bool))),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'(X1),bool),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X1),bool)),sK12(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f76])).
% SZS output end Proof for thm.indexedLists
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 78
% Passive clauses: 2402
% Generated clauses: 6434
% Final active clauses: 52
% Final passive clauses: 2274
% Input formulas: 17
% Initial clauses: 58
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 384
% Trivial inequalities: 48
% Fw subsumption resolutions: 846
% Fw demodulations: 39
% Bw demodulations: 21
% 
% Simple tautologies: 220
% Equational tautologies: 47
% Forward subsumptions: 2283
% 
% Binary resolution: 625
% Factoring: 1
% Forward superposition: 2428
% Backward superposition: 1744
% Self superposition: 114
% Equality factoring: 92
% Equality resolution: 5
% 
% Split clauses: 196
% Split components: 392
% SAT solver clauses: 213
% SAT solver unit clauses: 14
% SAT solver binary clauses: 85
% 
% Sat splits: 196
% Sat splitting refutations: 15
% 
% Memory used [KB]: 6524
% Time elapsed: 0.239 s
% ------------------------------
% ------------------------------
% Success in time 11.947 s
