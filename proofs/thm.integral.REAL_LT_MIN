Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integral
% (73615)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 757
% Passive clauses: 7807
% Generated clauses: 25103
% Final active clauses: 499
% Final passive clauses: 4444
% Input formulas: 44
% Initial clauses: 179
% 
% Duplicate literals: 596
% Trivial inequalities: 31
% Fw subsumption resolutions: 2114
% Fw demodulations: 1042
% Bw demodulations: 48
% 
% Simple tautologies: 257
% Equational tautologies: 128
% Forward subsumptions: 11070
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 12223
% Factoring: 1011
% Forward superposition: 2506
% Backward superposition: 4110
% Self superposition: 39
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 1382
% Split components: 2781
% SAT solver clauses: 1991
% SAT solver unit clauses: 12
% SAT solver binary clauses: 166
% SAT solver learnt clauses: 7
% SAT solver learnt literals: 14
% 
% Sat splits: 1382
% Sat splitting refutations: 23
% 
% TWLsolver clauses: 1975
% TWLsolver calls for satisfiability: 431
% 
% Memory used [KB]: 9083
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integral
% (73636)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 395
% Passive clauses: 2365
% Generated clauses: 13922
% Final active clauses: 309
% Final passive clauses: 1953
% Input formulas: 44
% Initial clauses: 179
% 
% Duplicate literals: 387
% Trivial inequalities: 49
% Fw subsumption resolutions: 1008
% Fw demodulations: 737
% Bw demodulations: 20
% Condensations: 641
% Global subsumptions: 14
% 
% Simple tautologies: 282
% Equational tautologies: 18
% Forward subsumptions: 5133
% 
% Binary resolution: 2786
% Factoring: 89
% Forward superposition: 2640
% Backward superposition: 2565
% Self superposition: 49
% Equality factoring: 30
% Equality resolution: 8
% 
% Split clauses: 255
% Split components: 519
% SAT solver clauses: 3246
% SAT solver unit clauses: 178
% SAT solver binary clauses: 88
% SAT solver learnt clauses: 29
% SAT solver learnt literals: 12
% 
% Sat splits: 255
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 3189
% TWLsolver calls for satisfiability: 1698
% 
% Memory used [KB]: 12665
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f33918,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f236,f427,f425,f423,f235,f426,f234,f424,f422,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f3040,f2958,f3042,f2962,f3044,f2965,f3046,f2968,f3048,f2971,f3050,f2974,f3052,f2977,f3054,f2980,f3056,f2983,f3058,f2986,f3060,f2989,f3062,f2992,f3064,f2995,f3066,f2998,f3068,f3001,f3070,f3004,f3191,f3192,f3193,f3194,f3195,f3196,f3197,f3198,f3199,f3200,f3201,f3202,f3203,f3204,f3205,f3207,f3209,f3210,f3211,f3212,f3213,f3214,f3215,f3216,f3217,f3218,f3219,f3220,f3221,f3222,f3223,f3224,f3225,f3226,f3227,f3228,f3229,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3239,f3240,f3241,f3242,f3243,f3244,f3245,f3246,f3247,f3248,f3249,f3250,f3251,f3252,f3253,f3254,f3255,f3256,f3257,f3258,f3259,f3260,f3261,f3264,f3270,f5141,f5144,f5142,f5237,f5240,f5238,f5331,f5334,f5332,f5410,f5413,f5411,f5492,f5495,f5493,f5553,f5556,f5554,f5585,f5588,f5586,f5649,f5652,f5650,f6357,f6360,f6359,f6358,f6399,f6402,f6400,f6444,f6447,f6445,f6669,f6672,f6670,f6712,f6715,f6713,f6757,f6760,f6758,f6806,f6809,f6807,f6846,f6849,f6847,f6881,f6884,f6882,f6923,f6926,f6924,f6995,f6998,f6996,f7037,f7040,f7038,f7079,f7082,f7080,f7129,f7132,f7130,f7172,f7175,f7173,f7207,f7210,f7208,f7322,f7325,f7323,f7407,f7487,f7408,f7488,f7409,f7489,f7410,f7490,f7411,f7491,f7412,f7492,f7413,f7493,f7414,f7494,f7415,f7495,f7763,f7765,f7766,f7767,f7768,f7769,f7770,f7771,f7772,f7773,f7774,f7775,f7776,f7777,f7778,f7779,f7780,f7781,f7794,f8210,f8211,f8222,f8223,f8229,f8241,f8244,f8245,f8246,f8247,f8248,f8249,f8250,f8251,f8252,f8253,f8254,f8256,f8258,f8260,f8262,f8265,f8268,f8271,f8273,f8275,f8276,f8277,f8278,f8279,f8282,f8285,f8287,f8290,f8310,f8316,f13016,f13019,f13017,f13069,f13072,f13070,f13122,f13125,f13123,f13173,f13176,f13174,f13202,f13203,f13210,f13207,f13204,f13205,f13213,f13206,f13215,f13208,f13212,f13290,f13291,f13303,f13301,f21484,f21488,f21490,f21492,f21494,f7486,f21495,f21498,f21501,f21504,f21866,f21867,f21869,f21870,f21872,f21874,f21875,f21876,f21877,f21878,f21879,f21880,f21881,f21882,f21883,f21884,f21885,f21886,f21887,f21888,f21889,f21890,f21891,f21892,f21894,f21896,f21898,f21900,f21902,f21904,f21905,f21906,f21907,f21908,f21909,f21910,f21912,f21913,f21918,f21919,f21924,f21925,f21926,f21927,f21928,f21929,f21932,f21933,f21935,f21936,f21937,f21938,f21942,f21944,f21949,f21952,f21953,f21954,f21955,f21956,f21957,f21958,f21959,f21960,f21961,f21962,f21963,f21964,f21965,f21966,f21967,f21968,f21971,f21972,f21973,f21974,f21975,f21976,f21977,f21978,f21983,f21984,f21985,f21986,f21987,f21988,f21989,f21990,f21991,f21992,f21993,f21994,f21999,f22002,f22003,f22004,f22005,f22006,f22007,f22008,f22009,f22010,f22011,f22012,f22013,f22014,f22015,f22016,f22017,f22018,f22019,f22020,f22021,f22022,f22023,f22024,f22025,f22026,f22027,f22028,f22031,f22032,f22037,f22038,f22039,f22040,f22041,f22042,f22043,f22044,f22047,f22048,f22049,f22050,f22051,f22052,f22053,f22054,f22055,f22056,f22057,f22058,f22059,f22061,f22063,f22065,f22068,f22071,f22074,f22077,f22066,f22079,f22069,f22081,f22083,f22085,f22087,f22089,f22091,f22093,f22095,f22072,f22097,f22099,f2959,f22075,f33908,f33914])).
fof(f33914,plain,(
  $false | ($spl3 | $spl4 | $spl93)),
  inference(subsumption_resolution,[],[f33913,f428])).
fof(f428,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f240,f237])).
fof(f237,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integral.REAL_LT_MIN',aHL_TRUTH)).
fof(f240,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.integral.REAL_LT_MIN','thm.bool.NOT_CLAUSES|split|1')).
fof(f33913,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl4 | $spl93)),
  inference(forward_demodulation,[],[f33912,f21508])).
fof(f21508,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f260])).
fof(f260,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.integral.REAL_LT_MIN','thm.bool.EQ_CLAUSES|split|2')).
fof(f33912,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ($spl4 | $spl93)),
  inference(subsumption_resolution,[],[f33894,f237])).
fof(f33894,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ($spl4 | $spl93)),
  inference(superposition,[],[f23693,f24879])).
fof(f24879,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl93),
  inference(unit_resulting_resolution,[],[f237,f24719,f290])).
fof(f290,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.integral.REAL_LT_MIN','thm.bool.IMP_ANTISYM_AX')).
fof(f24719,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl93),
  inference(unit_resulting_resolution,[],[f7485,f1325])).
fof(f1325,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(subsumption_resolution,[],[f1320,f428])).
fof(f1320,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f320,f245])).
fof(f245,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integral.REAL_LT_MIN',aHL_BOOL_CASES)).
fof(f320,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) & (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))),
  inference(nnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) <=> p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) <=> p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) <=> p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',X6)))))),
  file('thm.integral.REAL_LT_MIN','thm.real.REAL_NOT_LE')).
fof(f7485,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl93),
  inference(cnf_transformation,[],[f7485_D])).
fof(f7485_D,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f23693,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X0)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0))))) ) | $spl4),
  inference(subsumption_resolution,[],[f23557,f237])).
fof(f23557,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X0)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0))))) ) | $spl4),
  inference(superposition,[],[f331,f22111])).
fof(f22111,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f237,f426,f290])).
fof(f331,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6,X7,X8] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X7),s('type.realax.real',X8))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X8)))))),
  file('thm.integral.REAL_LT_MIN','thm.realax.REAL_LT_TRANS')).
fof(f33908,plain,(
  $false | ($spl3 | $spl4 | $spl93)),
  inference(subsumption_resolution,[],[f33907,f428])).
fof(f33907,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl4 | $spl93)),
  inference(forward_demodulation,[],[f33906,f21508])).
fof(f33906,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ($spl3 | $spl4 | $spl93)),
  inference(forward_demodulation,[],[f33905,f26462])).
fof(f26462,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl3),
  inference(forward_demodulation,[],[f26307,f282])).
fof(f282,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X9) = s(X12,'const.bool.COND_3'(s(bool,'T_0'),s(X12,X9),s(X12,X10)))),
  file('thm.integral.REAL_LT_MIN','thm.bool.COND_CLAUSES|split|0')).
fof(f26307,plain,(
  s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl3),
  inference(superposition,[],[f286,f21505])).
fof(f21505,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f1325])).
fof(f286,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X0),s('type.realax.real',X1)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6,X7] : s('type.realax.real','const.real.min_2'(s('type.realax.real',X6),s('type.realax.real',X7))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s('type.realax.real',X6),s('type.realax.real',X7)))),
  file('thm.integral.REAL_LT_MIN','thm.real.min_def')).
fof(f33905,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))))) | ($spl3 | $spl4 | $spl93)),
  inference(subsumption_resolution,[],[f33904,f237])).
fof(f33904,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))))) | ($spl3 | $spl4 | $spl93)),
  inference(forward_demodulation,[],[f33889,f24879])).
fof(f33889,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))))) | ($spl3 | $spl4)),
  inference(superposition,[],[f23693,f26462])).
fof(f22075,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) | $spl146),
  inference(cnf_transformation,[],[f22075_D])).
fof(f22075_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f2959,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f2959_D])).
fof(f2959_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f22099,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22098])).
fof(f22098,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f11743,f756])).
fof(f756,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f751,f428])).
fof(f751,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f287,f245])).
fof(f287,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f126])).
fof(f11743,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f908,f696])).
fof(f696,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f245,f245])).
fof(f908,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f315,f283])).
fof(f283,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X10) = s(X12,'const.bool.COND_3'(s(bool,'F_0'),s(X12,X9),s(X12,X10)))),
  file('thm.integral.REAL_LT_MIN','thm.bool.COND_CLAUSES|split|1')).
fof(f315,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f188])).
fof(f188,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f187])).
fof(f187,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f22097,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22096])).
fof(f22096,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f11742,f756])).
fof(f11742,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f908,f696])).
fof(f22072,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) ) | $spl144),
  inference(cnf_transformation,[],[f22072_D])).
fof(f22072_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f22095,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22094])).
fof(f22094,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f11697,f756])).
fof(f11697,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f907,f696])).
fof(f907,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,X26)) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,X26)),X27)) )),
  inference(superposition,[],[f312,f283])).
fof(f312,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f189])).
fof(f22093,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22092])).
fof(f22092,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f11696,f756])).
fof(f11696,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f907,f696])).
fof(f22091,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22090])).
fof(f22090,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f5042,f756])).
fof(f5042,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f908,f696])).
fof(f22089,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22088])).
fof(f22088,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f5041,f756])).
fof(f5041,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f908,f696])).
fof(f22087,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22086])).
fof(f22086,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f4950,f756])).
fof(f4950,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f907,f696])).
fof(f22085,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22084])).
fof(f22084,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f4949,f756])).
fof(f4949,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f907,f696])).
fof(f22083,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22082])).
fof(f22082,plain,(
  ( ! [X210,X208,X211,X209] : (p(s(bool,X209)) | sP1(X209,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X210),s(bool,'T_0'))) | s(bool,X208) = s(bool,X211) | s(bool,'T_0') = s(bool,X211)) )),
  inference(subsumption_resolution,[],[f2628,f756])).
fof(f2628,plain,(
  ( ! [X210,X208,X211,X209] : (~p(s(bool,X208)) | p(s(bool,X209)) | sP1(X209,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X210),s(bool,'T_0'))) | s(bool,X208) = s(bool,X211) | s(bool,'T_0') = s(bool,X211)) )),
  inference(superposition,[],[f908,f696])).
fof(f22081,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22080])).
fof(f22080,plain,(
  ( ! [X206,X204,X207,X205] : (p(s(bool,X205)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X206),s(bool,'T_0')),X205) | s(bool,X204) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) )),
  inference(subsumption_resolution,[],[f2627,f756])).
fof(f2627,plain,(
  ( ! [X206,X204,X207,X205] : (~p(s(bool,X204)) | p(s(bool,X205)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X206),s(bool,'T_0')),X205) | s(bool,X204) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f907,f696])).
fof(f22069,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | $spl142),
  inference(cnf_transformation,[],[f22069_D])).
fof(f22069_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f22079,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) )),
  inference(condensation,[],[f22078])).
fof(f22078,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1(X169,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170))) | s(bool,X168) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) )),
  inference(subsumption_resolution,[],[f2616,f756])).
fof(f2616,plain,(
  ( ! [X171,X169,X170,X168] : (~p(s(bool,X168)) | p(s(bool,X169)) | sP1(X169,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170))) | s(bool,X168) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) )),
  inference(superposition,[],[f856,f696])).
fof(f856,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X28)) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f315,f282])).
fof(f22066,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X1)) ) | $spl140),
  inference(cnf_transformation,[],[f22066_D])).
fof(f22066_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X1)) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f22077,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X1)) )),
  inference(condensation,[],[f22076])).
fof(f22076,plain,(
  ( ! [X167,X165,X166,X164] : (p(s(bool,X165)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X166)),X165) | s(bool,X164) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(subsumption_resolution,[],[f2615,f756])).
fof(f2615,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,X164)) | p(s(bool,X165)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X166)),X165) | s(bool,X164) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f855,f696])).
fof(f855,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27)) )),
  inference(superposition,[],[f312,f282])).
fof(f22074,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f22073])).
fof(f22073,plain,(
  ( ! [X210,X208,X211,X209] : (p(s(bool,X209)) | sP1(X209,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X210),s(bool,'T_0'))) | s(bool,X208) = s(bool,X211) | s(bool,'T_0') = s(bool,X211)) )),
  inference(subsumption_resolution,[],[f2468,f756])).
fof(f2468,plain,(
  ( ! [X210,X208,X211,X209] : (~p(s(bool,X208)) | p(s(bool,X209)) | sP1(X209,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X210),s(bool,'T_0'))) | s(bool,X208) = s(bool,X211) | s(bool,'T_0') = s(bool,X211)) )),
  inference(superposition,[],[f908,f696])).
fof(f22071,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f22070])).
fof(f22070,plain,(
  ( ! [X206,X204,X207,X205] : (p(s(bool,X205)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X206),s(bool,'T_0')),X205) | s(bool,X204) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) )),
  inference(subsumption_resolution,[],[f2467,f756])).
fof(f2467,plain,(
  ( ! [X206,X204,X207,X205] : (~p(s(bool,X204)) | p(s(bool,X205)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X206),s(bool,'T_0')),X205) | s(bool,X204) = s(bool,X207) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f907,f696])).
fof(f22068,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) )),
  inference(condensation,[],[f22067])).
fof(f22067,plain,(
  ( ! [X171,X169,X170,X168] : (p(s(bool,X169)) | sP1(X169,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170))) | s(bool,X168) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) )),
  inference(subsumption_resolution,[],[f2456,f756])).
fof(f2456,plain,(
  ( ! [X171,X169,X170,X168] : (~p(s(bool,X168)) | p(s(bool,X169)) | sP1(X169,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170))) | s(bool,X168) = s(bool,X171) | s(bool,'T_0') = s(bool,X171)) )),
  inference(superposition,[],[f856,f696])).
fof(f22065,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X1)) )),
  inference(condensation,[],[f22064])).
fof(f22064,plain,(
  ( ! [X167,X165,X166,X164] : (p(s(bool,X165)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X166)),X165) | s(bool,X164) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(subsumption_resolution,[],[f2455,f756])).
fof(f2455,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,X164)) | p(s(bool,X165)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X166)),X165) | s(bool,X164) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f855,f696])).
fof(f22063,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508,f21507,f21506,f21505,f22060,f22062])).
fof(f22062,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X1)) ) | $spl3),
  inference(subsumption_resolution,[],[f21853,f237])).
fof(f21853,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X1)) ) | $spl3),
  inference(superposition,[],[f425,f696])).
fof(f22060,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(subsumption_resolution,[],[f21852,f237])).
fof(f21852,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f425,f696])).
fof(f21506,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f320])).
fof(f21507,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f255])).
fof(f21509,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f287])).
fof(f21511,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f287])).
fof(f21513,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f310])).
fof(f21514,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f310])).
fof(f21515,plain,(
  ~sP1('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f310])).
fof(f21516,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f310])).
fof(f21517,plain,(
  sP1('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f312])).
fof(f21518,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f315])).
fof(f21519,plain,(
  ~sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f342])).
fof(f21522,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f450,f446,f439,f425,f344])).
fof(f21523,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f450,f443,f439,f425,f344])).
fof(f21528,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f453,f446,f436,f425,f345])).
fof(f21530,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f453,f446,f439,f425,f345])).
fof(f21539,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f348])).
fof(f21540,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f349])).
fof(f21546,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f352])).
fof(f21547,plain,(
  ( ! [X0,X1] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f353])).
fof(f21548,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f354])).
fof(f21549,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f354])).
fof(f21550,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f354])).
fof(f21551,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f354])).
fof(f21554,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f354])).
fof(f21555,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f354])).
fof(f21556,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f354])).
fof(f21557,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f354])).
fof(f21560,plain,(
  ~sP2('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f354])).
fof(f21561,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f354])).
fof(f21562,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f354])).
fof(f21563,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f354])).
fof(f21566,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f425,f358])).
fof(f21568,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f425,f358])).
fof(f21571,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f282,f425,f361])).
fof(f21572,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f283,f425,f361])).
fof(f21575,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f282,f425,f361])).
fof(f21576,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f283,f425,f361])).
fof(f21578,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f363])).
fof(f21583,plain,(
  ( ! [X0] : (~sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f364])).
fof(f21593,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f371])).
fof(f21594,plain,(
  ( ! [X0,X1] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f372])).
fof(f21595,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f373])).
fof(f21596,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f373])).
fof(f21599,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f373])).
fof(f21600,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f373])).
fof(f21601,plain,(
  ( ! [X0] : (sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f374])).
fof(f21602,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f374])).
fof(f21605,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f374])).
fof(f21606,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f374])).
fof(f21608,plain,(
  ( ! [X0] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f379])).
fof(f21609,plain,(
  ( ! [X0] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f380])).
fof(f21621,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f472,f425,f385])).
fof(f21622,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f472,f425,f385])).
fof(f21628,plain,(
  sP9('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f472,f425,f385])).
fof(f21629,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f472,f425,f385])).
fof(f21644,plain,(
  ( ! [X0,X1] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f389])).
fof(f21645,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f390])).
fof(f21646,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f390])).
fof(f21647,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f390])).
fof(f21648,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f390])).
fof(f21650,plain,(
  sP9('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f390])).
fof(f21651,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f390])).
fof(f21652,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f390])).
fof(f21653,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f390])).
fof(f21655,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f428,f425,f390])).
fof(f21656,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f428,f425,f390])).
fof(f21657,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f425,f390])).
fof(f21658,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f425,f390])).
fof(f21665,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f396])).
fof(f21666,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f396])).
fof(f21667,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f396])).
fof(f21668,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f396])).
fof(f21672,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f397])).
fof(f21683,plain,(
  sP11('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f237,f479,f425,f402])).
fof(f21694,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f404])).
fof(f21695,plain,(
  ( ! [X0,X1] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f406])).
fof(f21696,plain,(
  sP11('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f407])).
fof(f21697,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f407])).
fof(f21700,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f407])).
fof(f21701,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f407])).
fof(f21708,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f462,f425,f415])).
fof(f21710,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | $spl3),
  inference(unit_resulting_resolution,[],[f464,f425,f415])).
fof(f21712,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f429])).
fof(f21713,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f429])).
fof(f21719,plain,(
  ~sP0('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f425,f429])).
fof(f21720,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f425,f429])).
fof(f21726,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f425,f756])).
fof(f21728,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f855])).
fof(f21729,plain,(
  ( ! [X0] : (sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f856])).
fof(f21730,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f859])).
fof(f21731,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f907])).
fof(f21732,plain,(
  ( ! [X0] : (sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f908])).
fof(f21733,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f911])).
fof(f21734,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f954])).
fof(f21738,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f955])).
fof(f21742,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f979])).
fof(f21745,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f980])).
fof(f21748,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1034])).
fof(f21751,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1035])).
fof(f21754,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1070])).
fof(f21755,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1071])).
fof(f21756,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f428,f425,f1130])).
fof(f21757,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f425,f1130])).
fof(f21759,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f1130])).
fof(f21760,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f1130])).
fof(f21762,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f1131])).
fof(f21763,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f1131])).
fof(f21765,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f428,f425,f1131])).
fof(f21766,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f425,f1131])).
fof(f21768,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f428,f425,f1176])).
fof(f21769,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f425,f1176])).
fof(f21771,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f1176])).
fof(f21772,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f1176])).
fof(f21774,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f428,f237,f425,f1177])).
fof(f21775,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f425,f237,f425,f1177])).
fof(f21777,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f428,f425,f1177])).
fof(f21778,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f425,f425,f1177])).
fof(f21780,plain,(
  ( ! [X0] : (~sP10('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1247])).
fof(f21783,plain,(
  ( ! [X0] : (~sP10('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1248])).
fof(f21786,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1295])).
fof(f21788,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | $spl3),
  inference(unit_resulting_resolution,[],[f237,f237,f425,f1296])).
fof(f21500,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X5)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X4)),X5) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f11692,f237])).
fof(f11692,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X4)),X5) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f907,f696])).
fof(f21499,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X5)) | sP1(X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X4))) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f11738,f237])).
fof(f11738,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X4))) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f908,f696])).
fof(f8938,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f290])).
fof(f8940,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f296])).
fof(f8941,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f297])).
fof(f8942,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f311])).
fof(f8944,plain,(
  ~sP1('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f311])).
fof(f8945,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f311])).
fof(f8946,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f312])).
fof(f8947,plain,(
  sP1('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f315])).
fof(f8950,plain,(
  ~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f342])).
fof(f8951,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f342])).
fof(f8953,plain,(
  sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f453,f443,f436,f422,f343])).
fof(f8957,plain,(
  ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f346])).
fof(f8962,plain,(
  ~sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f346])).
fof(f8963,plain,(
  ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f346])).
fof(f8967,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f347])).
fof(f8968,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f350])).
fof(f8973,plain,(
  ~sP3('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f350])).
fof(f8974,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f350])).
fof(f8978,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f351])).
fof(f8979,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f355])).
fof(f8980,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f356])).
fof(f8981,plain,(
  ( ! [X0,X1] : (sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f357])).
fof(f8983,plain,(
  ( ! [X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f282,f422,f359])).
fof(f8985,plain,(
  ( ! [X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f282,f422,f359])).
fof(f8986,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f481,f422,f360])).
fof(f8987,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f481,f422,f360])).
fof(f8988,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f363])).
fof(f8989,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f364])).
fof(f9000,plain,(
  ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f369])).
fof(f9005,plain,(
  ~sP6('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f369])).
fof(f9006,plain,(
  ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f369])).
fof(f9010,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f370])).
fof(f9011,plain,(
  sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f237,f422,f375])).
fof(f9016,plain,(
  sP7('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f237,f422,f375])).
fof(f9018,plain,(
  sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f422,f375])).
fof(f9021,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f237,f422,f375])).
fof(f9022,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f422,f237,f422,f375])).
fof(f9023,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f422,f375])).
fof(f9024,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f422,f375])).
fof(f9025,plain,(
  ~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f378])).
fof(f9028,plain,(
  ~sP7('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f378])).
fof(f9029,plain,(
  ~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f378])).
fof(f9031,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f379])).
fof(f9036,plain,(
  ( ! [X0] : (~sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f380])).
fof(f9045,plain,(
  ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f428,f428,f422,f386])).
fof(f9050,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f387])).
fof(f9051,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f388])).
fof(f9056,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f391])).
fof(f9061,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f392])).
fof(f9062,plain,(
  ~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f428,f428,f422,f393])).
fof(f9063,plain,(
  ( ! [X0] : (~sP11('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f397])).
fof(f9080,plain,(
  ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f428,f237,f422,f403])).
fof(f9085,plain,(
  ~sP10('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f237,f422,f403])).
fof(f9086,plain,(
  ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f422,f403])).
fof(f9090,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f405])).
fof(f9091,plain,(
  sP11('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f428,f422,f407])).
fof(f9098,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f409])).
fof(f9099,plain,(
  ~sP11('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f410])).
fof(f9103,plain,(
  ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f410])).
fof(f9104,plain,(
  ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f410])).
fof(f9105,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f474,f422,f413])).
fof(f9106,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f476,f422,f413])).
fof(f9108,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f466,f422,f414])).
fof(f9110,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f469,f422,f414])).
fof(f9121,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f857])).
fof(f9125,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f858])).
fof(f9130,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f860])).
fof(f9137,plain,(
  ( ! [X0] : (~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f954])).
fof(f9149,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f979])).
fof(f9161,plain,(
  ( ! [X0] : (~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1034])).
fof(f9171,plain,(
  ( ! [X0] : (~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1070])).
fof(f9185,plain,(
  ( ! [X0] : (~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f237,f422,f1247])).
fof(f9194,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1295])).
fof(f21486,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',sK13)))) | s(bool,X2) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(subsumption_resolution,[],[f21472,f237])).
fof(f21472,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',sK13)))) | s(bool,X2) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10037,f696])).
fof(f21468,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X10),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X8),s('type.realax.real',X9),s('type.realax.real',X10))),s('type.realax.real',sK13)))) | s(bool,'T_0') = s(bool,X8)) ) | $spl92),
  inference(superposition,[],[f10037,f882])).
fof(f21465,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X3),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.realax.real',sK13)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) ) | $spl92),
  inference(superposition,[],[f10037,f1480])).
fof(f21448,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5569,f696])).
fof(f21434,plain,(
  ( ! [X17,X18,X16] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X16)),X17,'F_0') | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f5569,f696])).
fof(f21422,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f5569,f245])).
fof(f21336,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'T_0',X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5537,f696])).
fof(f21322,plain,(
  ( ! [X17,X18,X16] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X16)),'T_0',X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f5537,f696])).
fof(f21310,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'T_0',X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f5537,f245])).
fof(f21211,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5476,f696])).
fof(f21197,plain,(
  ( ! [X17,X18,X16] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X16)),X17,'T_0') | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f5476,f696])).
fof(f21185,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,'T_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f5476,f245])).
fof(f21078,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'T_0',X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5394,f696])).
fof(f21040,plain,(
  ( ! [X2,X0,X1] : (~sP10('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f18656,f696])).
fof(f21000,plain,(
  ( ! [X2,X0,X1] : (~sP11('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f18547,f696])).
fof(f20960,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5315,f696])).
fof(f20923,plain,(
  ( ! [X2,X0,X1] : (~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f18280,f696])).
fof(f20910,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f18223,f245])).
fof(f20898,plain,(
  ( ! [X14] : (~sP2('const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X14)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X14)) ) | $spl92),
  inference(superposition,[],[f18223,f245])).
fof(f20852,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'T_0',X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5221,f696])).
fof(f20813,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f18119,f245])).
fof(f20807,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f18119,f696])).
fof(f20789,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f18065,f696])).
fof(f20775,plain,(
  ( ! [X10,X11] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f18065,f696])).
fof(f20763,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f18065,f245])).
fof(f20725,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5125,f696])).
fof(f20686,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f17936,f696])).
fof(f20668,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl92),
  inference(superposition,[],[f13099,f696])).
fof(f20654,plain,(
  ( ! [X17,X18,X16] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X16)),X17,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl92),
  inference(superposition,[],[f13099,f696])).
fof(f20642,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f13099,f245])).
fof(f20632,plain,(
  ( ! [X45,X43,X46,X44] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1898,f882])).
fof(f20627,plain,(
  ( ! [X33,X34,X32] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,X33)) )),
  inference(superposition,[],[f1898,f896])).
fof(f20626,plain,(
  ( ! [X30,X31,X29] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30))) | s(bool,'F_0') = s(bool,X29)) )),
  inference(superposition,[],[f1898,f844])).
fof(f20621,plain,(
  ( ! [X23,X22] : (sP4('T_0','const.bool.COND_3'(s(bool,X22),s(bool,X23),s(bool,X22)),'F_0') | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f1898,f245])).
fof(f20616,plain,(
  ( ! [X10,X8,X9] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X9)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1898,f696])).
fof(f20614,plain,(
  ( ! [X4,X2,X3] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1898,f696])).
fof(f20587,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1898,f245])).
fof(f20503,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X0)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1855,f245])).
fof(f20491,plain,(
  ( ! [X14] : (~sP2('const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X14)),'F_0','F_0') | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1855,f245])).
fof(f20397,plain,(
  ( ! [X2,X0,X1] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1852,f696])).
fof(f20383,plain,(
  ( ! [X10,X11] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'F_0') | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1852,f696])).
fof(f20371,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1852,f245])).
fof(f20265,plain,(
  ( ! [X45,X43,X46,X44] : (sP4('T_0','const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1811,f882])).
fof(f20264,plain,(
  ( ! [X41,X42,X40] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X41)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)))) )),
  inference(superposition,[],[f1811,f283])).
fof(f20260,plain,(
  ( ! [X33,X34,X32] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X33)) )),
  inference(superposition,[],[f1811,f896])).
fof(f20259,plain,(
  ( ! [X30,X31,X29] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X29)) )),
  inference(superposition,[],[f1811,f844])).
fof(f20252,plain,(
  ( ! [X17,X18,X16] : (sP4('T_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X17),s(bool,X16))) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f1811,f696])).
fof(f20249,plain,(
  ( ! [X10,X8,X9] : (sP4('T_0',X8,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X9))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1811,f696])).
fof(f20247,plain,(
  ( ! [X4,X2,X3] : (sP4('T_0',X2,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0'))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1811,f696])).
fof(f20220,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1811,f245])).
fof(f20113,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'T_0','F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1775,f696])).
fof(f20099,plain,(
  ( ! [X10,X11] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'T_0','F_0') | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1775,f696])).
fof(f20087,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'T_0','F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1775,f245])).
fof(f20000,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1773,f245])).
fof(f19988,plain,(
  ( ! [X14] : (~sP2('F_0','const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X14)),'F_0') | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1773,f245])).
fof(f19859,plain,(
  ( ! [X45,X43,X46,X44] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X45),s(bool,X46)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1741,f882])).
fof(f19858,plain,(
  ( ! [X41,X42,X40] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X41)))) )),
  inference(superposition,[],[f1741,f283])).
fof(f19854,plain,(
  ( ! [X33,X34,X32] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X34)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,X33)) )),
  inference(superposition,[],[f1741,f896])).
fof(f19853,plain,(
  ( ! [X30,X31,X29] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30))) | s(bool,'F_0') = s(bool,X29)) )),
  inference(superposition,[],[f1741,f844])).
fof(f19848,plain,(
  ( ! [X23,X22] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),'F_0') | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f1741,f245])).
fof(f19843,plain,(
  ( ! [X10,X8,X9] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1741,f696])).
fof(f19841,plain,(
  ( ! [X4,X2,X3] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1741,f696])).
fof(f19834,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1741,f696])).
fof(f19728,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1706,f245])).
fof(f19722,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'F_0','F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1706,f696])).
fof(f19705,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f17063,f696])).
fof(f19691,plain,(
  ( ! [X10,X11] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f17063,f696])).
fof(f19679,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f17063,f245])).
fof(f19665,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f16971,f696])).
fof(f19651,plain,(
  ( ! [X10,X11] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f16971,f696])).
fof(f19639,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f16971,f245])).
fof(f19605,plain,(
  ( ! [X2,X0,X1] : (~sP3('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1703,f696])).
fof(f19568,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f16885,f696])).
fof(f19534,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f16807,f696])).
fof(f19493,plain,(
  ( ! [X45,X43,X46,X44] : (sP4('T_0','const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X45),s(bool,X46))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1671,f882])).
fof(f19492,plain,(
  ( ! [X41,X42,X40] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X41)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)))) )),
  inference(superposition,[],[f1671,f283])).
fof(f19491,plain,(
  ( ! [X39,X37,X38] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X39)))) )),
  inference(superposition,[],[f1671,f282])).
fof(f19488,plain,(
  ( ! [X33,X34,X32] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X34))) | s(bool,'F_0') = s(bool,X33)) )),
  inference(superposition,[],[f1671,f896])).
fof(f19487,plain,(
  ( ! [X30,X31,X29] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31))) | s(bool,'F_0') = s(bool,X29)) )),
  inference(superposition,[],[f1671,f844])).
fof(f19480,plain,(
  ( ! [X17,X18,X16] : (sP4('T_0','T_0','const.bool.COND_3'(s(bool,X16),s(bool,X16),s(bool,X17))) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f1671,f696])).
fof(f19477,plain,(
  ( ! [X10,X8,X9] : (sP4('T_0',X8,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1671,f696])).
fof(f19475,plain,(
  ( ! [X4,X2,X3] : (sP4('T_0',X2,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1671,f696])).
fof(f19468,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1671,f696])).
fof(f19343,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'T_0','F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1637,f696])).
fof(f19223,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1635,f245])).
fof(f19217,plain,(
  ( ! [X2,X0,X1] : (~sP2('F_0','const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1635,f696])).
fof(f18660,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10623,f696])).
fof(f18656,plain,(
  ( ! [X0] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10623,f861])).
fof(f18611,plain,(
  ( ! [X43,X41,X44,X42] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X41),s(bool,X42),s(bool,X43))) | s(bool,'T_0') = s(bool,X41)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11228,f882])).
fof(f18586,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11228,f696])).
fof(f18548,plain,(
  ( ! [X2,X0,X1] : (~sP10('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10617,f696])).
fof(f18547,plain,(
  ( ! [X0] : (~sP11('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10617,f398])).
fof(f18512,plain,(
  ( ! [X2,X0,X1] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10587,f696])).
fof(f18467,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X2))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11225,f696])).
fof(f18430,plain,(
  ( ! [X2,X0,X1] : (~sP6('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10581,f696])).
fof(f18392,plain,(
  ( ! [X2,X0,X1] : (~sP3('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10575,f696])).
fof(f18343,plain,(
  ( ! [X43,X41,X44,X42] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),'F_0') | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X41),s(bool,X42),s(bool,X43))) | s(bool,'T_0') = s(bool,X41)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11169,f882])).
fof(f18318,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),'F_0') | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11169,f696])).
fof(f18281,plain,(
  ( ! [X2,X0,X1] : (~sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f10569,f696])).
fof(f18280,plain,(
  ( ! [X0] : (~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10569,f341])).
fof(f18270,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) ) | $spl92),
  inference(superposition,[],[f10401,f882])).
fof(f18266,plain,(
  ( ! [X35] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,'T_0')))) ) | $spl92),
  inference(superposition,[],[f10401,f7486])).
fof(f18265,plain,(
  ( ! [X33,X34,X32] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X33)) ) | $spl92),
  inference(superposition,[],[f10401,f896])).
fof(f18264,plain,(
  ( ! [X30,X31,X29] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X29)) ) | $spl92),
  inference(superposition,[],[f10401,f844])).
fof(f18259,plain,(
  ( ! [X23,X22] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,X22),s(bool,X23),s(bool,X22))) | s(bool,'T_0') = s(bool,X22)) ) | $spl92),
  inference(superposition,[],[f10401,f245])).
fof(f18257,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X17),s(bool,X16))) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl92),
  inference(superposition,[],[f10401,f696])).
fof(f18254,plain,(
  ( ! [X10,X8,X9] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X8,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X9))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl92),
  inference(superposition,[],[f10401,f696])).
fof(f18252,plain,(
  ( ! [X4,X2,X3] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0'))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl92),
  inference(superposition,[],[f10401,f696])).
fof(f18225,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f10401,f245])).
fof(f18223,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f448,f10359,f10401,f344])).
fof(f18178,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11166,f696])).
fof(f18146,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X45),s(bool,X46))) | s(bool,'T_0') = s(bool,X43)) ) | $spl92),
  inference(superposition,[],[f10400,f882])).
fof(f18142,plain,(
  ( ! [X35] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X35)))) ) | $spl92),
  inference(superposition,[],[f10400,f7486])).
fof(f18141,plain,(
  ( ! [X33,X34,X32] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X34))) | s(bool,'F_0') = s(bool,X33)) ) | $spl92),
  inference(superposition,[],[f10400,f896])).
fof(f18140,plain,(
  ( ! [X30,X31,X29] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31))) | s(bool,'F_0') = s(bool,X29)) ) | $spl92),
  inference(superposition,[],[f10400,f844])).
fof(f18135,plain,(
  ( ! [X23,X22] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23))) | s(bool,'T_0') = s(bool,X22)) ) | $spl92),
  inference(superposition,[],[f10400,f245])).
fof(f18133,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X16),s(bool,X16),s(bool,X17))) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl92),
  inference(superposition,[],[f10400,f696])).
fof(f18130,plain,(
  ( ! [X10,X8,X9] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X8,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl92),
  inference(superposition,[],[f10400,f696])).
fof(f18128,plain,(
  ( ! [X4,X2,X3] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl92),
  inference(superposition,[],[f10400,f696])).
fof(f18121,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl92),
  inference(superposition,[],[f10400,f696])).
fof(f18119,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f448,f10359,f10400,f344])).
fof(f18112,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) ) | $spl92),
  inference(superposition,[],[f10397,f882])).
fof(f18111,plain,(
  ( ! [X41,X42,X40] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X41)))) ) | $spl92),
  inference(superposition,[],[f10397,f283])).
fof(f18110,plain,(
  ( ! [X39,X37,X38] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X37)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)))) ) | $spl92),
  inference(superposition,[],[f10397,f282])).
fof(f18108,plain,(
  ( ! [X35] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f10397,f7486])).
fof(f18107,plain,(
  ( ! [X33,X34,X32] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,X33)) ) | $spl92),
  inference(superposition,[],[f10397,f896])).
fof(f18106,plain,(
  ( ! [X30,X31,X29] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30))) | s(bool,'F_0') = s(bool,X29)) ) | $spl92),
  inference(superposition,[],[f10397,f844])).
fof(f18101,plain,(
  ( ! [X23,X22] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X22),s(bool,X23),s(bool,X22)),'F_0') | s(bool,'T_0') = s(bool,X22)) ) | $spl92),
  inference(superposition,[],[f10397,f245])).
fof(f18099,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X17),s(bool,X16)),'T_0') | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl92),
  inference(superposition,[],[f10397,f696])).
fof(f18096,plain,(
  ( ! [X10,X8,X9] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X9)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl92),
  inference(superposition,[],[f10397,f696])).
fof(f18094,plain,(
  ( ! [X4,X2,X3] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl92),
  inference(superposition,[],[f10397,f696])).
fof(f18067,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f10397,f245])).
fof(f18065,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f10359,f10397,f343])).
fof(f17963,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X45),s(bool,X46)),'const.bool.COND_3'(s(bool,X43),s(bool,X44),s(bool,X45))) | s(bool,'T_0') = s(bool,X43)) ) | $spl92),
  inference(superposition,[],[f10396,f882])).
fof(f17962,plain,(
  ( ! [X41,X42,X40] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X41)))) ) | $spl92),
  inference(superposition,[],[f10396,f283])).
fof(f17961,plain,(
  ( ! [X39,X37,X38] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X39)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)))) ) | $spl92),
  inference(superposition,[],[f10396,f282])).
fof(f17959,plain,(
  ( ! [X35] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X35)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f10396,f7486])).
fof(f17958,plain,(
  ( ! [X33,X34,X32] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X34)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,X33)) ) | $spl92),
  inference(superposition,[],[f10396,f896])).
fof(f17957,plain,(
  ( ! [X30,X31,X29] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30))) | s(bool,'F_0') = s(bool,X29)) ) | $spl92),
  inference(superposition,[],[f10396,f844])).
fof(f17952,plain,(
  ( ! [X23,X22] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),'F_0') | s(bool,'T_0') = s(bool,X22)) ) | $spl92),
  inference(superposition,[],[f10396,f245])).
fof(f17950,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X16),s(bool,X16),s(bool,X17)),'T_0') | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl92),
  inference(superposition,[],[f10396,f696])).
fof(f17947,plain,(
  ( ! [X10,X8,X9] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl92),
  inference(superposition,[],[f10396,f696])).
fof(f17945,plain,(
  ( ! [X4,X2,X3] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl92),
  inference(superposition,[],[f10396,f696])).
fof(f17938,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl92),
  inference(superposition,[],[f10396,f696])).
fof(f17936,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f10359,f10396,f343])).
fof(f17902,plain,(
  ( ! [X2,X0,X1] : (~sP10('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f14396,f696])).
fof(f17817,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f14353,f696])).
fof(f17782,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f14217,f696])).
fof(f17092,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f11514,f696])).
fof(f17078,plain,(
  ( ! [X10,X11] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f11514,f696])).
fof(f17066,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f11514,f245])).
fof(f17063,plain,(
  ( ! [X0] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f11514,f341])).
fof(f17040,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f11463,f696])).
fof(f17026,plain,(
  ( ! [X10,X11] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f11463,f696])).
fof(f17014,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f11463,f245])).
fof(f17000,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f11410,f696])).
fof(f16986,plain,(
  ( ! [X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f11410,f696])).
fof(f16974,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f11410,f245])).
fof(f16971,plain,(
  ( ! [X0] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f11410,f341])).
fof(f16948,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f11353,f696])).
fof(f16934,plain,(
  ( ! [X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) ) | $spl92),
  inference(superposition,[],[f11353,f696])).
fof(f16922,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f11353,f245])).
fof(f16888,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f9988,f696])).
fof(f16885,plain,(
  ( ! [X0] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f9988,f341])).
fof(f16844,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f9986,f696])).
fof(f16810,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f9984,f696])).
fof(f16807,plain,(
  ( ! [X0] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f9984,f341])).
fof(f16766,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl92),
  inference(superposition,[],[f9982,f696])).
fof(f16474,plain,(
  ( ! [X2,X0,X1] : (sP1('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f2128,f696])).
fof(f16460,plain,(
  ( ! [X10,X11] : (sP1('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10))) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f2128,f696])).
fof(f16448,plain,(
  ( ! [X0,X1] : (sP1('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2128,f245])).
fof(f16420,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f2104,f696])).
fof(f16406,plain,(
  ( ! [X10,X11] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X10)),'F_0') | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f2104,f696])).
fof(f16394,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2104,f245])).
fof(f16348,plain,(
  ( ! [X2,X0,X1] : (sP1('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f2079,f696])).
fof(f16304,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f2052,f696])).
fof(f16251,plain,(
  ( ! [X2,X0,X1] : (sP0('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2004,f245])).
fof(f16202,plain,(
  ( ! [X2,X0,X1] : (sP0(X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1976,f245])).
fof(f16150,plain,(
  ( ! [X2,X0,X3,X1] : (sP0('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1948,f696])).
fof(f16108,plain,(
  ( ! [X2,X0,X3,X1] : (sP0(X1,'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1928,f696])).
fof(f15958,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f15953,f402])).
fof(f15953,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f10156])).
fof(f15908,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f15861,f398])).
fof(f15861,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f237,f10153])).
fof(f15816,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f15771,f381])).
fof(f15771,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10149])).
fof(f15759,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f15746,f362])).
fof(f15746,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f10147])).
fof(f15029,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f15017,f341])).
fof(f15017,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f10145])).
fof(f14626,plain,(
  ( ! [X39,X41,X42,X40] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.bool.COND_3'(s(bool,X39),s(bool,X40),s(bool,X41))) | s(bool,'T_0') = s(bool,X39)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f882])).
fof(f14625,plain,(
  ( ! [X37,X38,X36] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X36),s(bool,X37)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f283])).
fof(f14622,plain,(
  ( ! [X31] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f7486])).
fof(f14621,plain,(
  ( ! [X30,X28,X29] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29))) | s(bool,'F_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f896])).
fof(f14620,plain,(
  ( ! [X26,X27,X25] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f844])).
fof(f14616,plain,(
  ( ! [X21,X20] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21)),'F_0') | s(bool,'T_0') = s(bool,X20)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f245])).
fof(f14613,plain,(
  ( ! [X12,X13] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13)),X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f245])).
fof(f14611,plain,(
  ( ! [X6,X8,X7] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f696])).
fof(f14609,plain,(
  ( ! [X2,X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f696])).
fof(f14603,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11212,f696])).
fof(f14568,plain,(
  ( ! [X39,X41,X42,X40] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X39),s(bool,X40),s(bool,X41)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42))) | s(bool,'T_0') = s(bool,X39)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f882])).
fof(f14567,plain,(
  ( ! [X37,X38,X36] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X36),s(bool,X37)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f283])).
fof(f14566,plain,(
  ( ! [X35,X33,X34] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X33),s(bool,X34)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X33),s(bool,X35)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f282])).
fof(f14564,plain,(
  ( ! [X31] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f7486])).
fof(f14563,plain,(
  ( ! [X30,X28,X29] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30))) | s(bool,'F_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f896])).
fof(f14562,plain,(
  ( ! [X26,X27,X25] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f844])).
fof(f14556,plain,(
  ( ! [X14,X15,X16] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f696])).
fof(f14555,plain,(
  ( ! [X12,X13] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13))) | s(bool,'T_0') = s(bool,X12)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f245])).
fof(f14553,plain,(
  ( ! [X6,X8,X7] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X6,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f696])).
fof(f14551,plain,(
  ( ! [X2,X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f696])).
fof(f14545,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f11153,f696])).
fof(f14400,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10130,f696])).
fof(f14396,plain,(
  ( ! [X0] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f237,f10130,f861])).
fof(f14354,plain,(
  ( ! [X2,X0,X1] : (~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10128,f696])).
fof(f14353,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10128,f398])).
fof(f14312,plain,(
  ( ! [X2,X0,X1] : (~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10126,f696])).
fof(f14265,plain,(
  ( ! [X2,X0,X1] : (~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10124,f696])).
fof(f14218,plain,(
  ( ! [X2,X0,X1] : (~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10120,f696])).
fof(f14217,plain,(
  ( ! [X0] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10120,f341])).
fof(f14176,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10119,f696])).
fof(f14138,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10118,f696])).
fof(f14079,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10117,f696])).
fof(f13862,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f10359,f10398,f343])).
fof(f13774,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10385,f339])).
fof(f13768,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10384,f339])).
fof(f13726,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10376,f339])).
fof(f13305,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK15(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f13304])).
fof(f13304,plain,(
  ( ! [X10,X8,X11,X9] : (s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f13297,f245])).
fof(f13297,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X11) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1546,f696])).
fof(f13170,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,X75)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X76),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75)))),X77,X78) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X76),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75)))),X77,X78) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f914,f882])).
fof(f13171,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13153,f237])).
fof(f13153,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f914,f696])).
fof(f13119,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,X75)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X76),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75)))),X77,X78) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X76),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75)))),X77,X78) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f913,f882])).
fof(f13120,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13102,f237])).
fof(f13102,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f913,f696])).
fof(f13099,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10532,f913])).
fof(f13066,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,X75)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75))),s(bool,X76)),X77,X78) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75))),s(bool,X76)),X77,X78) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f862,f882])).
fof(f13067,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13049,f237])).
fof(f13049,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f862,f696])).
fof(f13013,plain,(
  ( ! [X78,X76,X74,X77,X75,X73] : (~p(s(bool,X75)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75))),s(bool,X76)),X77,X78) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X73),s(bool,X74),s(bool,X75))),s(bool,X76)),X77,X78) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f861,f882])).
fof(f13014,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f12996,f237])).
fof(f12996,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f861,f696])).
fof(f12931,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(subsumption_resolution,[],[f12926,f237])).
fof(f12926,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f1296,f7486])).
fof(f12907,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X57,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X58)))) ) | $spl92),
  inference(subsumption_resolution,[],[f12899,f237])).
fof(f12899,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X57,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X58)))) ) | $spl92),
  inference(superposition,[],[f1248,f7486])).
fof(f12770,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)))) ) | $spl92),
  inference(subsumption_resolution,[],[f12763,f237])).
fof(f12763,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)))) ) | $spl92),
  inference(superposition,[],[f1071,f7486])).
fof(f12732,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(subsumption_resolution,[],[f12724,f237])).
fof(f12724,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(superposition,[],[f1035,f7486])).
fof(f12695,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(subsumption_resolution,[],[f12687,f237])).
fof(f12687,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(superposition,[],[f980,f7486])).
fof(f12660,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(subsumption_resolution,[],[f12652,f237])).
fof(f12652,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl92),
  inference(superposition,[],[f955,f7486])).
fof(f12347,plain,(
  ( ! [X325,X327,X326] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X325),s(bool,X326)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X327))) | s(bool,'F_0') = s(bool,X326)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f896])).
fof(f12345,plain,(
  ( ! [X321,X320,X319] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X321)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X319),s(bool,X320))) | s(bool,'F_0') = s(bool,X320)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f896])).
fof(f12208,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0',X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10155])).
fof(f12138,plain,(
  ( ! [X321,X320,X319] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X319),s(bool,X320)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X321))) | s(bool,'F_0') = s(bool,X319)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f844])).
fof(f12136,plain,(
  ( ! [X313,X315,X314] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X315)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X313),s(bool,X314))) | s(bool,'F_0') = s(bool,X313)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f844])).
fof(f12003,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X0,'F_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10154])).
fof(f11997,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X49)) ) | $spl92),
  inference(subsumption_resolution,[],[f11993,f237])).
fof(f11993,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X49)) ) | $spl92),
  inference(superposition,[],[f912,f7486])).
fof(f11980,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0',X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10151])).
fof(f11952,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X0,'T_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10150])).
fof(f11834,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X46)) ) | $spl92),
  inference(subsumption_resolution,[],[f11830,f237])).
fof(f11830,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X46)) ) | $spl92),
  inference(superposition,[],[f910,f7486])).
fof(f11775,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),X46,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(subsumption_resolution,[],[f11771,f237])).
fof(f11771,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),X46,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f909,f7486])).
fof(f11759,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10144])).
fof(f11735,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10143])).
fof(f11514,plain,(
  ( ! [X23] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')))) ) | $spl92),
  inference(superposition,[],[f881,f7486])).
fof(f11463,plain,(
  ( ! [X23] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')))) ) | $spl92),
  inference(superposition,[],[f880,f7486])).
fof(f11410,plain,(
  ( ! [X23] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f879,f7486])).
fof(f11353,plain,(
  ( ! [X23] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f878,f7486])).
fof(f11233,plain,(
  ( ! [X30,X33,X31,X32] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X30),s(bool,X31),s(bool,X32)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X32),s(bool,X33))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f882])).
fof(f11232,plain,(
  ( ! [X28,X29,X27] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X28)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f283])).
fof(f11230,plain,(
  ( ! [X23] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f7486])).
fof(f11228,plain,(
  ( ! [X21,X20] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21))) | s(bool,'T_0') = s(bool,X20)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f245])).
fof(f11226,plain,(
  ( ! [X14,X15,X16] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f696])).
fof(f11225,plain,(
  ( ! [X12,X13] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13))) | s(bool,'T_0') = s(bool,X12)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f245])).
fof(f11223,plain,(
  ( ! [X6,X8,X7] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X6,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f696])).
fof(f11221,plain,(
  ( ! [X2,X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f696])).
fof(f11215,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10067,f696])).
fof(f11212,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10067,f341])).
fof(f11174,plain,(
  ( ! [X30,X33,X31,X32] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,X30),s(bool,X31),s(bool,X32))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f882])).
fof(f11173,plain,(
  ( ! [X28,X29,X27] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X28)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f283])).
fof(f11172,plain,(
  ( ! [X26,X24,X25] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X26)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X25)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f282])).
fof(f11171,plain,(
  ( ! [X23] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f7486])).
fof(f11169,plain,(
  ( ! [X21,X20] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21)),'F_0') | s(bool,'T_0') = s(bool,X20)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f245])).
fof(f11167,plain,(
  ( ! [X14,X15,X16] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15)),'T_0') | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f696])).
fof(f11166,plain,(
  ( ! [X12,X13] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13)),X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f245])).
fof(f11164,plain,(
  ( ! [X6,X8,X7] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f696])).
fof(f11162,plain,(
  ( ! [X2,X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f696])).
fof(f11156,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f10065,f696])).
fof(f11153,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10065,f341])).
fof(f10923,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10059,f340])).
fof(f10906,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(unit_resulting_resolution,[],[f10055,f341])).
fof(f10878,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10383,f339])).
fof(f10872,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10375,f339])).
fof(f10867,plain,(
  ~sP5('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10367,f339])).
fof(f10842,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f441,f10366,f343])).
fof(f10844,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f10359,f10366,f343])).
fof(f10825,plain,(
  sP5('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f453,f441,f10365,f345])).
fof(f10809,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10360,f340])).
fof(f10788,plain,(
  sP5('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f450,f448,f10358,f344])).
fof(f10783,plain,(
  ~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10353,f341])).
fof(f10717,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(subsumption_resolution,[],[f10644,f237])).
fof(f10644,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl92),
  inference(superposition,[],[f10135,f696])).
fof(f10323,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f255])).
fof(f10329,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f310])).
fof(f10331,plain,(
  ~sP1('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f310])).
fof(f10332,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f310])).
fof(f10335,plain,(
  ~sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f342])).
fof(f10339,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f450,f443,f439,f10135,f344])).
fof(f10353,plain,(
  ~sP4('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f346])).
fof(f10358,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f348])).
fof(f10359,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f349])).
fof(f10360,plain,(
  ~sP3('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f350])).
fof(f10365,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f352])).
fof(f10366,plain,(
  ( ! [X0,X1] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f353])).
fof(f10367,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f354])).
fof(f10375,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f354])).
fof(f10376,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f428,f10135,f354])).
fof(f10383,plain,(
  ~sP2('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f354])).
fof(f10384,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f428,f10135,f354])).
fof(f10385,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f10135,f354])).
fof(f10386,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f10135,f354])).
fof(f10391,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f481,f10135,f358])).
fof(f10393,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f481,f10135,f358])).
fof(f10396,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f282,f10135,f361])).
fof(f10397,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f283,f10135,f361])).
fof(f10398,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f7486,f10135,f361])).
fof(f10400,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f282,f10135,f361])).
fof(f10401,plain,(
  ( ! [X0,X1] : (~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f283,f10135,f361])).
fof(f10402,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f7486,f10135,f361])).
fof(f10403,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f363])).
fof(f10407,plain,(
  ( ! [X0] : (~sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f364])).
fof(f10411,plain,(
  ~sP6('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f369])).
fof(f10416,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f371])).
fof(f10417,plain,(
  ( ! [X0,X1] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f372])).
fof(f10418,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f373])).
fof(f10424,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f373])).
fof(f10425,plain,(
  ( ! [X0] : (sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f374])).
fof(f10431,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f374])).
fof(f10432,plain,(
  ~sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f378])).
fof(f10433,plain,(
  ( ! [X0] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f379])).
fof(f10434,plain,(
  ( ! [X0] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f380])).
fof(f10467,plain,(
  ~sP8('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f10135,f386])).
fof(f10473,plain,(
  ~sP8('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f237,f10135,f386])).
fof(f10474,plain,(
  ~sP8('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f237,f10135,f386])).
fof(f10479,plain,(
  ( ! [X0,X1] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f389])).
fof(f10480,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f390])).
fof(f10486,plain,(
  sP9('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f390])).
fof(f10488,plain,(
  sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f10135,f390])).
fof(f10492,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f428,f10135,f390])).
fof(f10493,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f428,f10135,f390])).
fof(f10494,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f10135,f390])).
fof(f10495,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f10135,f390])).
fof(f10496,plain,(
  ~sP9('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f237,f10135,f393])).
fof(f10500,plain,(
  ~sP9('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f428,f10135,f393])).
fof(f10501,plain,(
  ~sP9('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f10135,f393])).
fof(f10504,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f396])).
fof(f10506,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f396])).
fof(f10507,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f396])).
fof(f10512,plain,(
  ( ! [X0] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f10135,f397])).
fof(f10527,plain,(
  ~sP10('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f403])).
fof(f10532,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f404])).
fof(f10533,plain,(
  ( ! [X0,X1] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f406])).
fof(f10534,plain,(
  sP11('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f237,f10135,f407])).
fof(f10538,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f237,f10135,f407])).
fof(f10539,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f237,f10135,f407])).
fof(f10544,plain,(
  ~sP11('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f410])).
fof(f10547,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f462,f10135,f415])).
fof(f10549,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0',X0)) ) | $spl92),
  inference(unit_resulting_resolution,[],[f464,f10135,f415])).
fof(f10551,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f429])).
fof(f10556,plain,(
  ~sP0('F_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f10135,f429])).
fof(f10557,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl92),
  inference(unit_resulting_resolution,[],[f10135,f10135,f429])).
fof(f10569,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f954])).
fof(f10575,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f979])).
fof(f10581,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f1034])).
fof(f10587,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f1070])).
fof(f10617,plain,(
  ( ! [X0] : (~sP10('T_0','const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f1247])).
fof(f10623,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0')) ) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f237,f10135,f1295])).
fof(f10306,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f453,f441,f9944,f345])).
fof(f10297,plain,(
  sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f9943,f341])).
fof(f10292,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0','F_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f456,f441,f9942,f343])).
fof(f10181,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(subsumption_resolution,[],[f10006,f237])).
fof(f10006,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,'T_0')) | ~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f1295,f7486])).
fof(f10180,plain,(
  ( ! [X90,X88,X89] : (p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl92),
  inference(subsumption_resolution,[],[f10005,f237])).
fof(f10005,plain,(
  ( ! [X90,X88,X89] : (~p(s(bool,'T_0')) | p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl92),
  inference(superposition,[],[f1247,f7486])).
fof(f10175,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl92),
  inference(subsumption_resolution,[],[f10002,f237])).
fof(f10002,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl92),
  inference(superposition,[],[f1070,f7486])).
fof(f10174,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl92),
  inference(subsumption_resolution,[],[f10001,f237])).
fof(f10001,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl92),
  inference(superposition,[],[f1034,f7486])).
fof(f10173,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl92),
  inference(subsumption_resolution,[],[f10000,f237])).
fof(f10000,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl92),
  inference(superposition,[],[f979,f7486])).
fof(f10172,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl92),
  inference(subsumption_resolution,[],[f9999,f237])).
fof(f9999,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'T_0')) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl92),
  inference(superposition,[],[f954,f7486])).
fof(f10171,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X66)) ) | $spl92),
  inference(subsumption_resolution,[],[f9997,f237])).
fof(f9997,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X66)) ) | $spl92),
  inference(superposition,[],[f860,f7486])).
fof(f10168,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X60)) ) | $spl92),
  inference(subsumption_resolution,[],[f9995,f237])).
fof(f9995,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X60)) ) | $spl92),
  inference(superposition,[],[f858,f7486])).
fof(f10167,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(subsumption_resolution,[],[f9994,f237])).
fof(f9994,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f857,f7486])).
fof(f9988,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | $spl92),
  inference(superposition,[],[f833,f7486])).
fof(f9986,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | $spl92),
  inference(superposition,[],[f832,f7486])).
fof(f9984,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f831,f7486])).
fof(f9982,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f830,f7486])).
fof(f10158,plain,(
  ( ! [X35,X34] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35)) ) | $spl92),
  inference(subsumption_resolution,[],[f9978,f237])).
fof(f9978,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35)) ) | $spl92),
  inference(superposition,[],[f414,f7486])).
fof(f10157,plain,(
  ( ! [X33,X32] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33)) ) | $spl92),
  inference(subsumption_resolution,[],[f9977,f237])).
fof(f9977,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33)) ) | $spl92),
  inference(superposition,[],[f413,f7486])).
fof(f10156,plain,(
  ( ! [X30,X31] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X31,X30) | p(s(bool,X31)) | ~p(s(bool,X30))) ) | $spl92),
  inference(subsumption_resolution,[],[f9976,f237])).
fof(f9976,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X31,X30)) ) | $spl92),
  inference(superposition,[],[f410,f7486])).
fof(f10155,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X28,X29) | ~p(s(bool,X28))) ) | $spl92),
  inference(subsumption_resolution,[],[f9975,f237])).
fof(f9975,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X28,X29)) ) | $spl92),
  inference(superposition,[],[f409,f7486])).
fof(f10154,plain,(
  ( ! [X26,X27] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X27,X26) | p(s(bool,X26))) ) | $spl92),
  inference(subsumption_resolution,[],[f9974,f237])).
fof(f9974,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X27,X26)) ) | $spl92),
  inference(superposition,[],[f408,f7486])).
fof(f10153,plain,(
  ( ! [X24,X25] : (~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | ~p(s(bool,X25)) | p(s(bool,X24))) ) | $spl92),
  inference(subsumption_resolution,[],[f9973,f237])).
fof(f9973,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f403,f7486])).
fof(f10152,plain,(
  ( ! [X23,X22] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X23,X22) | p(s(bool,X23)) | p(s(bool,X22))) ) | $spl92),
  inference(subsumption_resolution,[],[f9972,f237])).
fof(f9972,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X23,X22)) ) | $spl92),
  inference(superposition,[],[f393,f7486])).
fof(f10151,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X20,X21) | ~p(s(bool,X20))) ) | $spl92),
  inference(subsumption_resolution,[],[f9971,f237])).
fof(f9971,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X20,X21)) ) | $spl92),
  inference(superposition,[],[f392,f7486])).
fof(f10150,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X19,X18) | ~p(s(bool,X18))) ) | $spl92),
  inference(subsumption_resolution,[],[f9970,f237])).
fof(f9970,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X19,X18)) ) | $spl92),
  inference(superposition,[],[f391,f7486])).
fof(f10149,plain,(
  ( ! [X17,X16] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X16,X17) | p(s(bool,X17)) | p(s(bool,X16))) ) | $spl92),
  inference(subsumption_resolution,[],[f9969,f237])).
fof(f9969,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X16,X17)) ) | $spl92),
  inference(superposition,[],[f386,f7486])).
fof(f10148,plain,(
  ( ! [X14,X15] : (~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | p(s(bool,X15)) | ~p(s(bool,X14))) ) | $spl92),
  inference(subsumption_resolution,[],[f9968,f237])).
fof(f9968,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f378,f7486])).
fof(f10147,plain,(
  ( ! [X12,X13] : (~sP6(X12,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X13) | p(s(bool,X13)) | ~p(s(bool,X12))) ) | $spl92),
  inference(subsumption_resolution,[],[f9967,f237])).
fof(f9967,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X13)) ) | $spl92),
  inference(superposition,[],[f369,f7486])).
fof(f10146,plain,(
  ( ! [X10,X11] : (~sP3(X10,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X11) | p(s(bool,X11)) | ~p(s(bool,X10))) ) | $spl92),
  inference(subsumption_resolution,[],[f9966,f237])).
fof(f9966,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X11)) ) | $spl92),
  inference(superposition,[],[f350,f7486])).
fof(f10145,plain,(
  ( ! [X8,X9] : (~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X9) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | $spl92),
  inference(subsumption_resolution,[],[f9965,f237])).
fof(f9965,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X9)) ) | $spl92),
  inference(superposition,[],[f346,f7486])).
fof(f10144,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | p(s(bool,X7))) ) | $spl92),
  inference(subsumption_resolution,[],[f9964,f237])).
fof(f9964,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f315,f7486])).
fof(f10143,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X6) | p(s(bool,X6))) ) | $spl92),
  inference(subsumption_resolution,[],[f9963,f237])).
fof(f9963,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X6)) ) | $spl92),
  inference(superposition,[],[f312,f7486])).
fof(f10142,plain,(
  ( ! [X5] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X5)) ) | $spl92),
  inference(subsumption_resolution,[],[f9962,f237])).
fof(f9962,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X5)) ) | $spl92),
  inference(superposition,[],[f297,f7486])).
fof(f10141,plain,(
  ( ! [X4] : (sP0(X4,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(subsumption_resolution,[],[f9961,f237])).
fof(f9961,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(X4,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl92),
  inference(superposition,[],[f296,f7486])).
fof(f10135,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl92),
  inference(subsumption_resolution,[],[f9951,f237])).
fof(f9951,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl92),
  inference(superposition,[],[f321,f7486])).
fof(f10130,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9194])).
fof(f10128,plain,(
  ( ! [X0] : (~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9185])).
fof(f10126,plain,(
  ( ! [X0] : (~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9171])).
fof(f10124,plain,(
  ( ! [X0] : (~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9161])).
fof(f10120,plain,(
  ( ! [X0] : (~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9137])).
fof(f10119,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9130])).
fof(f10118,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9125])).
fof(f10117,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9121])).
fof(f10106,plain,(
  ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9104])).
fof(f10102,plain,(
  sP11('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9091])).
fof(f10100,plain,(
  ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9086])).
fof(f10097,plain,(
  ( ! [X0] : (~sP11('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9063])).
fof(f10090,plain,(
  ( ! [X0] : (~sP9('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9036])).
fof(f10089,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9031])).
fof(f10088,plain,(
  ~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9029])).
fof(f10086,plain,(
  ~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9025])).
fof(f10081,plain,(
  sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9018])).
fof(f10080,plain,(
  sP7('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9016])).
fof(f10079,plain,(
  sP7('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9011])).
fof(f10077,plain,(
  ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9006])).
fof(f10075,plain,(
  ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f9000])).
fof(f10071,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8989])).
fof(f10070,plain,(
  ( ! [X0] : (~sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8988])).
fof(f10069,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8987])).
fof(f10068,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8986])).
fof(f10067,plain,(
  ( ! [X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8985])).
fof(f10065,plain,(
  ( ! [X0,X1] : (sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8983])).
fof(f10059,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8974])).
fof(f10055,plain,(
  ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8963])).
fof(f10053,plain,(
  ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8957])).
fof(f10048,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8951])).
fof(f10047,plain,(
  ~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8950])).
fof(f10044,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8945])).
fof(f10043,plain,(
  ~sP1('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8944])).
fof(f10042,plain,(
  ~sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f10038,f8942])).
fof(f10038,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(forward_demodulation,[],[f9950,f282])).
fof(f9950,plain,(
  s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(superposition,[],[f286,f7486])).
fof(f10037,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK13))))) ) | $spl92),
  inference(subsumption_resolution,[],[f9949,f237])).
fof(f9949,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK13)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK12))))) ) | $spl92),
  inference(superposition,[],[f332,f7486])).
fof(f9942,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f428,f7486,f361])).
fof(f9943,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0') | $spl92),
  inference(unit_resulting_resolution,[],[f237,f7486,f359])).
fof(f9944,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f428,f7486,f361])).
fof(f9945,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(unit_resulting_resolution,[],[f237,f7486,f359])).
fof(f9115,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f853])).
fof(f9116,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f854])).
fof(f9117,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f855])).
fof(f9118,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f856])).
fof(f9119,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),X1,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f857])).
fof(f9122,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f857])).
fof(f9123,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'T_0',X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f858])).
fof(f9126,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f858])).
fof(f9127,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),X1,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f859])).
fof(f9128,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'T_0',X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f422,f860])).
fof(f9131,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f422,f860])).
fof(f9132,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f954])).
fof(f9138,plain,(
  ( ! [X0] : (~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f954])).
fof(f9144,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f979])).
fof(f9150,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f979])).
fof(f9156,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1034])).
fof(f9162,plain,(
  ( ! [X0] : (~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f1034])).
fof(f9168,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1070])).
fof(f9172,plain,(
  ( ! [X0] : (~sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f1070])).
fof(f9174,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0','F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f428,f422,f1130])).
fof(f9179,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0','F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f428,f422,f1176])).
fof(f9180,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f237,f422,f1247])).
fof(f9186,plain,(
  ( ! [X0] : (~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f428,f422,f422,f1247])).
fof(f9192,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0','T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f237,f428,f422,f1295])).
fof(f9195,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f422,f428,f422,f1295])).
fof(f1546,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK15(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f330,f245])).
fof(f2564,plain,(
  ( ! [X273,X275,X276,X274] : (s(bool,'T_0') != s(bool,f(s(X273,sK15(X274,X275,bool,X273)))) | s(fun(X273,bool),X274) = s(fun(X273,bool),X275) | s(bool,X276) = s(bool,g(s(X273,sK15(X274,X275,bool,X273)))) | s(bool,'T_0') = s(bool,X276)) )),
  inference(superposition,[],[f330,f696])).
fof(f2311,plain,(
  ( ! [X280,X279,X281,X278] : (s(bool,X281) != s(bool,f(s(X278,sK15(X279,X280,bool,X278)))) | s(fun(X278,bool),X279) = s(fun(X278,bool),X280) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,g(s(X278,sK15(X279,X280,bool,X278))))) )),
  inference(superposition,[],[f330,f696])).
fof(f7468,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X68),s('type.realax.real',X69)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X70),s('type.realax.real',X69)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X70),s('type.realax.real','const.real.min_2'(s('type.realax.real',X67),s('type.realax.real',X68)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X67),s('type.realax.real',X68)))) )),
  inference(superposition,[],[f332,f1480])).
fof(f7467,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X65),s('type.realax.real',X64)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X66),s('type.realax.real','const.real.min_2'(s('type.realax.real',X63),s('type.realax.real',X64)))))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X66),s('type.realax.real',X65)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X63),s('type.realax.real',X64)))) )),
  inference(superposition,[],[f332,f1480])).
fof(f7463,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X50),s('type.realax.real',X51)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X51),s('type.realax.real','const.real.min_2'(s('type.realax.real',X49),s('type.realax.real',X50)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X49),s('type.realax.real',X50)))) )),
  inference(superposition,[],[f321,f1480])).
fof(f7461,plain,(
  ( ! [X45,X43,X44] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X44),s('type.realax.real',X45)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X45),s('type.realax.real','const.real.min_2'(s('type.realax.real',X43),s('type.realax.real',X44)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X43),s('type.realax.real',X44)))) )),
  inference(superposition,[],[f320,f1480])).
fof(f6062,plain,(
  ( ! [X453,X455,X452,X454,X456] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X454),s('type.realax.real',X455)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X456),s('type.realax.real',X455)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X456),s('type.realax.real','const.bool.COND_3'(s(bool,X452),s('type.realax.real',X453),s('type.realax.real',X454)))))) | s(bool,'T_0') = s(bool,X452)) )),
  inference(superposition,[],[f332,f882])).
fof(f6061,plain,(
  ( ! [X447,X449,X451,X448,X450] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X450),s('type.realax.real',X449)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X451),s('type.realax.real','const.bool.COND_3'(s(bool,X447),s('type.realax.real',X448),s('type.realax.real',X449)))))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X451),s('type.realax.real',X450)))) | s(bool,'T_0') = s(bool,X447)) )),
  inference(superposition,[],[f332,f882])).
fof(f6057,plain,(
  ( ! [X430,X432,X429,X431] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X431),s('type.realax.real',X432)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X432),s('type.realax.real','const.bool.COND_3'(s(bool,X429),s('type.realax.real',X430),s('type.realax.real',X431)))))) | s(bool,'T_0') = s(bool,X429)) )),
  inference(superposition,[],[f321,f882])).
fof(f6055,plain,(
  ( ! [X422,X424,X421,X423] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X423),s('type.realax.real',X424)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X424),s('type.realax.real','const.bool.COND_3'(s(bool,X421),s('type.realax.real',X422),s('type.realax.real',X423)))))) | s(bool,'T_0') = s(bool,X421)) )),
  inference(superposition,[],[f320,f882])).
fof(f7466,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X61),s('type.realax.real',X60)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X59),s('type.realax.real',X60))),s('type.realax.real',X62)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X61),s('type.realax.real',X62)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X59),s('type.realax.real',X60)))) )),
  inference(superposition,[],[f331,f1480])).
fof(f7465,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X56),s('type.realax.real',X57)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X57),s('type.realax.real',X58)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X55),s('type.realax.real',X56))),s('type.realax.real',X58)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X55),s('type.realax.real',X56)))) )),
  inference(superposition,[],[f331,f1480])).
fof(f7464,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X54),s('type.realax.real',X53)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X52),s('type.realax.real',X53))),s('type.realax.real',X54)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X52),s('type.realax.real',X53)))) )),
  inference(superposition,[],[f321,f1480])).
fof(f7462,plain,(
  ( ! [X47,X48,X46] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X48),s('type.realax.real',X47)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X46),s('type.realax.real',X47))),s('type.realax.real',X48)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X46),s('type.realax.real',X47)))) )),
  inference(superposition,[],[f320,f1480])).
fof(f6060,plain,(
  ( ! [X445,X443,X444,X446,X442] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X445),s('type.realax.real',X444)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X442),s('type.realax.real',X443),s('type.realax.real',X444))),s('type.realax.real',X446)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X445),s('type.realax.real',X446)))) | s(bool,'T_0') = s(bool,X442)) )),
  inference(superposition,[],[f331,f882])).
fof(f6059,plain,(
  ( ! [X441,X438,X440,X437,X439] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X439),s('type.realax.real',X440)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X440),s('type.realax.real',X441)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X437),s('type.realax.real',X438),s('type.realax.real',X439))),s('type.realax.real',X441)))) | s(bool,'T_0') = s(bool,X437)) )),
  inference(superposition,[],[f331,f882])).
fof(f6058,plain,(
  ( ! [X436,X434,X433,X435] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X436),s('type.realax.real',X435)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X433),s('type.realax.real',X434),s('type.realax.real',X435))),s('type.realax.real',X436)))) | s(bool,'T_0') = s(bool,X433)) )),
  inference(superposition,[],[f321,f882])).
fof(f6056,plain,(
  ( ! [X428,X426,X425,X427] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X428),s('type.realax.real',X427)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X425),s('type.realax.real',X426),s('type.realax.real',X427))),s('type.realax.real',X428)))) | s(bool,'T_0') = s(bool,X425)) )),
  inference(superposition,[],[f320,f882])).
fof(f5952,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X7) | p(s(bool,'const.bool.COND_3'(s(bool,X5),s(bool,X6),s(bool,X7)))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f255,f882])).
fof(f5953,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X10)) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X8),s(bool,X9),s(bool,X10))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f256,f882])).
fof(f5954,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X13)) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,X11),s(bool,X12),s(bool,X13))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f259,f882])).
fof(f5955,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X16)) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X14),s(bool,X15),s(bool,X16))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f260,f882])).
fof(f5956,plain,(
  ( ! [X19,X17,X20,X18] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,X17),s(bool,X18),s(bool,X19))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f287,f882])).
fof(f5958,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) = s(bool,'const.bool.COND_3'(s(bool,X25),s(bool,X26),s(bool,X27))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f290,f882])).
fof(f5981,plain,(
  ( ! [X134,X132,X133,X131] : (p(s(bool,X133)) | s(bool,X134) = s(bool,'const.bool.COND_3'(s(bool,X131),s(bool,X132),s(bool,X133))) | s(bool,'T_0') = s(bool,X134) | s(bool,'T_0') = s(bool,X131)) )),
  inference(superposition,[],[f756,f882])).
fof(f5992,plain,(
  ( ! [X177,X175,X178,X176,X179] : (~p(s(bool,X177)) | sP0(X178,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X175),s(bool,X176),s(bool,X177))),s(bool,X179))) | s(bool,'T_0') = s(bool,X175)) )),
  inference(superposition,[],[f853,f882])).
fof(f5993,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,X182)) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X180),s(bool,X181),s(bool,X182))),s(bool,X183)),X184) | s(bool,'T_0') = s(bool,X180)) )),
  inference(superposition,[],[f854,f882])).
fof(f5994,plain,(
  ( ! [X189,X187,X185,X188,X186] : (~p(s(bool,X187)) | p(s(bool,X188)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X185),s(bool,X186),s(bool,X187))),s(bool,X189)),X188) | s(bool,'T_0') = s(bool,X185)) )),
  inference(superposition,[],[f855,f882])).
fof(f5995,plain,(
  ( ! [X191,X194,X192,X190,X193] : (~p(s(bool,X192)) | p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X190),s(bool,X191),s(bool,X192))),s(bool,X194))) | s(bool,'T_0') = s(bool,X190)) )),
  inference(superposition,[],[f856,f882])).
fof(f5998,plain,(
  ( ! [X212,X210,X208,X211,X209,X207] : (~p(s(bool,X209)) | p(s(bool,X210)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X207),s(bool,X208),s(bool,X209))),s(bool,X211)),X212,X210) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f859,f882])).
fof(f6008,plain,(
  ( ! [X255,X253,X251,X254,X252] : (~p(s(bool,X253)) | sP0(X254,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X255),s(bool,'const.bool.COND_3'(s(bool,X251),s(bool,X252),s(bool,X253))))) | s(bool,'T_0') = s(bool,X251)) )),
  inference(superposition,[],[f905,f882])).
fof(f6009,plain,(
  ( ! [X257,X259,X260,X256,X258] : (~p(s(bool,X258)) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X259),s(bool,'const.bool.COND_3'(s(bool,X256),s(bool,X257),s(bool,X258)))),X260) | s(bool,'T_0') = s(bool,X256)) )),
  inference(superposition,[],[f906,f882])).
fof(f6010,plain,(
  ( ! [X261,X263,X265,X262,X264] : (~p(s(bool,X263)) | p(s(bool,X264)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X265),s(bool,'const.bool.COND_3'(s(bool,X261),s(bool,X262),s(bool,X263)))),X264) | s(bool,'T_0') = s(bool,X261)) )),
  inference(superposition,[],[f907,f882])).
fof(f6011,plain,(
  ( ! [X269,X267,X268,X270,X266] : (~p(s(bool,X268)) | p(s(bool,X269)) | sP1(X269,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X270),s(bool,'const.bool.COND_3'(s(bool,X266),s(bool,X267),s(bool,X268))))) | s(bool,'T_0') = s(bool,X266)) )),
  inference(superposition,[],[f908,f882])).
fof(f6014,plain,(
  ( ! [X288,X285,X287,X283,X284,X286] : (~p(s(bool,X285)) | p(s(bool,X286)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X287),s(bool,'const.bool.COND_3'(s(bool,X283),s(bool,X284),s(bool,X285)))),X288,X286) | s(bool,'T_0') = s(bool,X283)) )),
  inference(superposition,[],[f911,f882])).
fof(f6916,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | p(s(bool,X74)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X75)),X73,X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1130,f882])).
fof(f6988,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | p(s(bool,X74)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X73,X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1131,f882])).
fof(f7034,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | p(s(bool,X74)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X75)),X74,X73) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1176,f882])).
fof(f7076,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | p(s(bool,X74)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X74,X73) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1177,f882])).
fof(f6337,plain,(
  ( ! [X12,X10,X11,X9] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X11),s('type.realax.real',X12)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real','const.bool.COND_3'(s(bool,X9),s('type.realax.real',X10),s('type.realax.real',X11))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1325,f882])).
fof(f7470,plain,(
  ( ! [X76,X74,X75] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X75),s('type.realax.real',X76)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X76),s('type.realax.real','const.real.min_2'(s('type.realax.real',X74),s('type.realax.real',X75))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X74),s('type.realax.real',X75)))) )),
  inference(superposition,[],[f1325,f1480])).
fof(f7469,plain,(
  ( ! [X72,X71,X73] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X73),s('type.realax.real',X72)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X71),s('type.realax.real',X72))),s('type.realax.real',X73))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X71),s('type.realax.real',X72)))) )),
  inference(superposition,[],[f1325,f1480])).
fof(f6341,plain,(
  ( ! [X12,X10,X11,X9] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X12),s('type.realax.real',X11)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X9),s('type.realax.real',X10),s('type.realax.real',X11))),s('type.realax.real',X12))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1325,f882])).
fof(f259,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f164])).
fof(f844,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f282,f245])).
fof(f878,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f428,f283,f361])).
fof(f879,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f237,f283,f359])).
fof(f880,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f428,f283,f361])).
fof(f881,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f237,f283,f359])).
fof(f896,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f283,f245])).
fof(f905,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X20)) | sP0(X21,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f296,f283])).
fof(f906,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X23)) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X22),s(bool,X23)),X24)) )),
  inference(superposition,[],[f297,f283])).
fof(f909,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | ~p(s(bool,X32)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34,X33)) )),
  inference(superposition,[],[f391,f283])).
fof(f910,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | ~p(s(bool,X36)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X37,X38)) )),
  inference(superposition,[],[f392,f283])).
fof(f911,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42,X41)) )),
  inference(superposition,[],[f408,f283])).
fof(f912,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X44)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44)),X45,X46)) )),
  inference(superposition,[],[f409,f283])).
fof(f913,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50)) )),
  inference(superposition,[],[f413,f283])).
fof(f914,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54)) )),
  inference(superposition,[],[f414,f283])).
fof(f955,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP4(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f346,f283])).
fof(f980,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP3(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f350,f283])).
fof(f1035,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP6(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f369,f283])).
fof(f1071,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP7(X17,X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)))) )),
  inference(superposition,[],[f378,f283])).
fof(f1131,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X16,X17)) )),
  inference(superposition,[],[f386,f283])).
fof(f1177,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17,X16)) )),
  inference(superposition,[],[f393,f283])).
fof(f1248,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X17)) | p(s(bool,X16)) | ~p(s(bool,X15)) | ~sP10(X17,X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)))) )),
  inference(superposition,[],[f403,f283])).
fof(f1296,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17,X16)) )),
  inference(superposition,[],[f410,f283])).
fof(f1545,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,X2,bool))) )),
  inference(superposition,[],[f330,f245])).
fof(f1635,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f446,f439,f830,f345])).
fof(f1644,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6)),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f830,f245])).
fof(f1646,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f830,f283])).
fof(f1678,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6)),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f831,f245])).
fof(f1680,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f831,f283])).
fof(f1706,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f448,f441,f832,f344])).
fof(f1713,plain,(
  ( ! [X6,X5] : (~sP5('F_0',X5,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f832,f245])).
fof(f1715,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) )),
  inference(superposition,[],[f832,f283])).
fof(f1748,plain,(
  ( ! [X6,X5] : (sP5('T_0',X5,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f833,f245])).
fof(f1750,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) )),
  inference(superposition,[],[f833,f283])).
fof(f1773,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f446,f439,f878,f345])).
fof(f1775,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f456,f441,f878,f343])).
fof(f1791,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0')),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f878,f245])).
fof(f1793,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f878,f283])).
fof(f1811,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f879,f341])).
fof(f1827,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0')),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f879,f245])).
fof(f1829,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f879,f283])).
fof(f1852,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f453,f436,f880,f345])).
fof(f1855,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f448,f441,f880,f344])).
fof(f1871,plain,(
  ( ! [X6,X5] : (~sP5('F_0',X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f880,f245])).
fof(f1898,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f881,f341])).
fof(f1914,plain,(
  ( ! [X6,X5] : (sP5('T_0',X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f881,f245])).
fof(f1976,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f237,f905])).
fof(f2004,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f237,f906])).
fof(f2104,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f907])).
fof(f2128,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f237,f428,f908])).
fof(f2182,plain,(
  ( ! [X28,X26,X27] : (s(bool,X27) = s(bool,X28) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X27)))) )),
  inference(superposition,[],[f696,f283])).
fof(f2208,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,X19) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X18),s(bool,X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f696,f283])).
fof(f2262,plain,(
  ( ! [X134,X135,X133] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X135),s(bool,X134)),X133) | s(bool,'T_0') = s(bool,X134) | s(bool,'T_0') = s(bool,X133)) )),
  inference(superposition,[],[f878,f696])).
fof(f2264,plain,(
  ( ! [X140,X141,X139] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X141),s(bool,X140)),X139) | s(bool,'T_0') = s(bool,X140) | s(bool,'T_0') = s(bool,X139)) )),
  inference(superposition,[],[f879,f696])).
fof(f2265,plain,(
  ( ! [X144,X142,X143] : (~sP5('F_0',X142,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X144),s(bool,X143))) | s(bool,'T_0') = s(bool,X143) | s(bool,'T_0') = s(bool,X142)) )),
  inference(superposition,[],[f880,f696])).
fof(f2267,plain,(
  ( ! [X149,X150,X148] : (sP5('T_0',X148,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X150),s(bool,X149))) | s(bool,'T_0') = s(bool,X149) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f881,f696])).
fof(f2458,plain,(
  ( ! [X177,X175,X176] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X176),s(bool,X175)),'T_0') | s(bool,X175) = s(bool,X177) | s(bool,'T_0') = s(bool,X177)) )),
  inference(superposition,[],[f878,f696])).
fof(f2460,plain,(
  ( ! [X182,X183,X181] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X182),s(bool,X181)),'T_0') | s(bool,X181) = s(bool,X183) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f879,f696])).
fof(f2461,plain,(
  ( ! [X185,X186,X184] : (~sP5('F_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X185),s(bool,X184))) | s(bool,X184) = s(bool,X186) | s(bool,'T_0') = s(bool,X186)) )),
  inference(superposition,[],[f880,f696])).
fof(f2463,plain,(
  ( ! [X191,X192,X190] : (sP5('T_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X191),s(bool,X190))) | s(bool,X190) = s(bool,X192) | s(bool,'T_0') = s(bool,X192)) )),
  inference(superposition,[],[f881,f696])).
fof(f2517,plain,(
  ( ! [X134,X135,X133] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X134),s(bool,'T_0')),X133) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) )),
  inference(superposition,[],[f878,f696])).
fof(f2519,plain,(
  ( ! [X140,X141,X139] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X140),s(bool,'T_0')),X139) | s(bool,X139) = s(bool,X141) | s(bool,'T_0') = s(bool,X141)) )),
  inference(superposition,[],[f879,f696])).
fof(f2520,plain,(
  ( ! [X144,X142,X143] : (~sP5('F_0',X142,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X143),s(bool,'T_0'))) | s(bool,X142) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(superposition,[],[f880,f696])).
fof(f2522,plain,(
  ( ! [X149,X150,X148] : (sP5('T_0',X148,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X149),s(bool,'T_0'))) | s(bool,X148) = s(bool,X150) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f881,f696])).
fof(f3029,plain,(
  ( ! [X156,X154,X157,X155] : (sP0(X155,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X156),s(bool,X154))) | s(bool,X154) = s(bool,X157) | s(bool,'T_0') = s(bool,X157)) )),
  inference(subsumption_resolution,[],[f2524,f237])).
fof(f2524,plain,(
  ( ! [X156,X154,X157,X155] : (~p(s(bool,'T_0')) | sP0(X155,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X156),s(bool,X154))) | s(bool,X154) = s(bool,X157) | s(bool,'T_0') = s(bool,X157)) )),
  inference(superposition,[],[f905,f696])).
fof(f3030,plain,(
  ( ! [X158,X161,X159,X160] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X159),s(bool,X158)),X160) | s(bool,X158) = s(bool,X161) | s(bool,'T_0') = s(bool,X161)) )),
  inference(subsumption_resolution,[],[f2525,f237])).
fof(f2525,plain,(
  ( ! [X158,X161,X159,X160] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X159),s(bool,X158)),X160) | s(bool,X158) = s(bool,X161) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f906,f696])).
fof(f5138,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),X56,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)))) )),
  inference(superposition,[],[f857,f283])).
fof(f5234,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f858,f283])).
fof(f5407,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f860,f283])).
fof(f5476,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f237,f909])).
fof(f5488,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),X51,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f909,f282])).
fof(f5489,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),X56,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)))) )),
  inference(superposition,[],[f909,f283])).
fof(f5490,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5477,f237])).
fof(f5477,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f909,f696])).
fof(f5537,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f910])).
fof(f5549,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f910,f282])).
fof(f5550,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f910,f283])).
fof(f5551,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5538,f237])).
fof(f5538,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f910,f696])).
fof(f5569,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f911])).
fof(f5583,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X0)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5570,f237])).
fof(f5570,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X0)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f911,f696])).
fof(f5633,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f912])).
fof(f5645,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f912,f282])).
fof(f5646,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f912,f283])).
fof(f5647,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5634,f237])).
fof(f5634,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f912,f696])).
fof(f5666,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f844,f696])).
fof(f5684,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X30))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f844,f282])).
fof(f5685,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f844,f283])).
fof(f5733,plain,(
  ( ! [X101,X102,X100] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X100),s(bool,X101))) | s(bool,'F_0') = s(bool,X100)) )),
  inference(superposition,[],[f830,f844])).
fof(f5735,plain,(
  ( ! [X107,X108,X106] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X108)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X106),s(bool,X107))) | s(bool,'F_0') = s(bool,X106)) )),
  inference(superposition,[],[f831,f844])).
fof(f5737,plain,(
  ( ! [X114,X112,X113] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X112),s(bool,X113)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X114))) | s(bool,'F_0') = s(bool,X112)) )),
  inference(superposition,[],[f832,f844])).
fof(f5739,plain,(
  ( ! [X118,X120,X119] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X120))) | s(bool,'F_0') = s(bool,X118)) )),
  inference(superposition,[],[f833,f844])).
fof(f5750,plain,(
  ( ! [X165,X163,X164] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X165),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164))) | s(bool,'F_0') = s(bool,X163)) )),
  inference(superposition,[],[f878,f844])).
fof(f5752,plain,(
  ( ! [X171,X169,X170] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X171),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,X169)) )),
  inference(superposition,[],[f879,f844])).
fof(f5753,plain,(
  ( ! [X173,X174,X172] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X172),s(bool,X173)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X174),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X172)) )),
  inference(superposition,[],[f880,f844])).
fof(f5755,plain,(
  ( ! [X180,X178,X179] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X178),s(bool,X179)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X180),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X178)) )),
  inference(superposition,[],[f881,f844])).
fof(f5834,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f5707,f237])).
fof(f5707,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(superposition,[],[f259,f844])).
fof(f5836,plain,(
  ( ! [X18,X16] : (s(bool,X16) = s(bool,X18) | ~p(s(bool,X18)) | s(bool,'F_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f5835,f282])).
fof(f5835,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f5711,f237])).
fof(f5711,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(superposition,[],[f290,f844])).
fof(f5837,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | s(bool,'F_0') = s(bool,X19)) )),
  inference(subsumption_resolution,[],[f5712,f237])).
fof(f5712,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | s(bool,'F_0') = s(bool,X19)) )),
  inference(superposition,[],[f296,f844])).
fof(f5838,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f5713,f237])).
fof(f5713,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(superposition,[],[f297,f844])).
fof(f5839,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | s(bool,'F_0') = s(bool,X25)) )),
  inference(subsumption_resolution,[],[f5714,f237])).
fof(f5714,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | s(bool,'F_0') = s(bool,X25)) )),
  inference(superposition,[],[f312,f844])).
fof(f5840,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | s(bool,'F_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5715,f237])).
fof(f5715,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | s(bool,'F_0') = s(bool,X28)) )),
  inference(superposition,[],[f315,f844])).
fof(f5841,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f5716,f237])).
fof(f5716,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X31)) )),
  inference(superposition,[],[f346,f844])).
fof(f5842,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f5717,f237])).
fof(f5717,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X35)) )),
  inference(superposition,[],[f350,f844])).
fof(f5843,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f5718,f237])).
fof(f5718,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X39)) )),
  inference(superposition,[],[f369,f844])).
fof(f5844,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X43)) )),
  inference(subsumption_resolution,[],[f5719,f237])).
fof(f5719,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X43)) )),
  inference(superposition,[],[f378,f844])).
fof(f5845,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f5720,f237])).
fof(f5720,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f386,f844])).
fof(f5846,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f5721,f237])).
fof(f5721,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X51)) )),
  inference(superposition,[],[f391,f844])).
fof(f5847,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X55)) )),
  inference(subsumption_resolution,[],[f5722,f237])).
fof(f5722,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X55)) )),
  inference(superposition,[],[f392,f844])).
fof(f5848,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f5723,f237])).
fof(f5723,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X59)) )),
  inference(superposition,[],[f393,f844])).
fof(f5849,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X63)) )),
  inference(subsumption_resolution,[],[f5724,f237])).
fof(f5724,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X63)) )),
  inference(superposition,[],[f403,f844])).
fof(f5850,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X69)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X68)),X70,X69) | s(bool,'F_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f5725,f237])).
fof(f5725,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X69)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X68)),X70,X69) | s(bool,'F_0') = s(bool,X67)) )),
  inference(superposition,[],[f408,f844])).
fof(f5851,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X71)) )),
  inference(subsumption_resolution,[],[f5726,f237])).
fof(f5726,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X71)) )),
  inference(superposition,[],[f409,f844])).
fof(f5852,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f5727,f237])).
fof(f5727,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X75)) )),
  inference(superposition,[],[f410,f844])).
fof(f5853,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X79)) )),
  inference(subsumption_resolution,[],[f5728,f237])).
fof(f5728,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X79)) )),
  inference(superposition,[],[f413,f844])).
fof(f5854,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X83)) )),
  inference(subsumption_resolution,[],[f5729,f237])).
fof(f5729,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X83)) )),
  inference(superposition,[],[f414,f844])).
fof(f5863,plain,(
  ( ! [X144,X142,X140,X143,X141] : (~p(s(bool,X142)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X142),s(bool,X143)),X144,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X140),s(bool,X141))) | s(bool,'F_0') = s(bool,X140)) )),
  inference(subsumption_resolution,[],[f5745,f237])).
fof(f5745,plain,(
  ( ! [X144,X142,X140,X143,X141] : (~p(s(bool,'T_0')) | ~p(s(bool,X142)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X142),s(bool,X143)),X144,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X140),s(bool,X141))) | s(bool,'F_0') = s(bool,X140)) )),
  inference(superposition,[],[f857,f844])).
fof(f5864,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,X147)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X147),s(bool,X148)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),X149) | s(bool,'F_0') = s(bool,X145)) )),
  inference(subsumption_resolution,[],[f5746,f237])).
fof(f5746,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,'T_0')) | ~p(s(bool,X147)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X147),s(bool,X148)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),X149) | s(bool,'F_0') = s(bool,X145)) )),
  inference(superposition,[],[f858,f844])).
fof(f5867,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X157)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X157),s(bool,X158)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X159) | s(bool,'F_0') = s(bool,X155)) )),
  inference(subsumption_resolution,[],[f5748,f237])).
fof(f5748,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,'T_0')) | ~p(s(bool,X157)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X157),s(bool,X158)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X159) | s(bool,'F_0') = s(bool,X155)) )),
  inference(superposition,[],[f860,f844])).
fof(f5869,plain,(
  ( ! [X187,X186,X184] : (sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,X184))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(forward_demodulation,[],[f5868,f282])).
fof(f5868,plain,(
  ( ! [X187,X185,X186,X184] : (sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X184),s(bool,X185))))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(subsumption_resolution,[],[f5757,f237])).
fof(f5757,plain,(
  ( ! [X187,X185,X186,X184] : (~p(s(bool,'T_0')) | sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X184),s(bool,X185))))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(superposition,[],[f905,f844])).
fof(f5871,plain,(
  ( ! [X191,X190,X188] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,X188)),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(forward_demodulation,[],[f5870,f282])).
fof(f5870,plain,(
  ( ! [X191,X189,X190,X188] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X188),s(bool,X189)))),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(subsumption_resolution,[],[f5758,f237])).
fof(f5758,plain,(
  ( ! [X191,X189,X190,X188] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X188),s(bool,X189)))),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(superposition,[],[f906,f844])).
fof(f5873,plain,(
  ( ! [X194,X192,X195] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,X192)),X194) | p(s(bool,X194)) | s(bool,'F_0') = s(bool,X192)) )),
  inference(forward_demodulation,[],[f5872,f282])).
fof(f5872,plain,(
  ( ! [X194,X192,X195,X193] : (p(s(bool,X194)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X192),s(bool,X193)))),X194) | s(bool,'F_0') = s(bool,X192)) )),
  inference(subsumption_resolution,[],[f5759,f237])).
fof(f5759,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,'T_0')) | p(s(bool,X194)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X192),s(bool,X193)))),X194) | s(bool,'F_0') = s(bool,X192)) )),
  inference(superposition,[],[f907,f844])).
fof(f5875,plain,(
  ( ! [X198,X196,X199] : (sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,X196))) | p(s(bool,X198)) | s(bool,'F_0') = s(bool,X196)) )),
  inference(forward_demodulation,[],[f5874,f282])).
fof(f5874,plain,(
  ( ! [X198,X196,X199,X197] : (p(s(bool,X198)) | sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X196),s(bool,X197))))) | s(bool,'F_0') = s(bool,X196)) )),
  inference(subsumption_resolution,[],[f5760,f237])).
fof(f5760,plain,(
  ( ! [X198,X196,X199,X197] : (~p(s(bool,'T_0')) | p(s(bool,X198)) | sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X196),s(bool,X197))))) | s(bool,'F_0') = s(bool,X196)) )),
  inference(superposition,[],[f908,f844])).
fof(f5876,plain,(
  ( ! [X204,X202,X200,X203,X201] : (~p(s(bool,X202)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X203),s(bool,X202)),X204,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X200),s(bool,X201))) | s(bool,'F_0') = s(bool,X200)) )),
  inference(subsumption_resolution,[],[f5761,f237])).
fof(f5761,plain,(
  ( ! [X204,X202,X200,X203,X201] : (~p(s(bool,'T_0')) | ~p(s(bool,X202)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X203),s(bool,X202)),X204,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X200),s(bool,X201))) | s(bool,'F_0') = s(bool,X200)) )),
  inference(superposition,[],[f909,f844])).
fof(f5877,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,X207)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X208),s(bool,X207)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X205),s(bool,X206)),X209) | s(bool,'F_0') = s(bool,X205)) )),
  inference(subsumption_resolution,[],[f5762,f237])).
fof(f5762,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,'T_0')) | ~p(s(bool,X207)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X208),s(bool,X207)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X205),s(bool,X206)),X209) | s(bool,'F_0') = s(bool,X205)) )),
  inference(superposition,[],[f910,f844])).
fof(f5879,plain,(
  ( ! [X212,X210,X213,X214] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,X210)),X214,X212) | p(s(bool,X212)) | s(bool,'F_0') = s(bool,X210)) )),
  inference(forward_demodulation,[],[f5878,f282])).
fof(f5878,plain,(
  ( ! [X212,X210,X213,X211,X214] : (p(s(bool,X212)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X210),s(bool,X211)))),X214,X212) | s(bool,'F_0') = s(bool,X210)) )),
  inference(subsumption_resolution,[],[f5763,f237])).
fof(f5763,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'T_0')) | p(s(bool,X212)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X210),s(bool,X211)))),X214,X212) | s(bool,'F_0') = s(bool,X210)) )),
  inference(superposition,[],[f911,f844])).
fof(f5880,plain,(
  ( ! [X218,X216,X215,X219,X217] : (~p(s(bool,X217)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X218),s(bool,X217)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X215),s(bool,X216)),X219) | s(bool,'F_0') = s(bool,X215)) )),
  inference(subsumption_resolution,[],[f5764,f237])).
fof(f5764,plain,(
  ( ! [X218,X216,X215,X219,X217] : (~p(s(bool,'T_0')) | ~p(s(bool,X217)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X218),s(bool,X217)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X215),s(bool,X216)),X219) | s(bool,'F_0') = s(bool,X215)) )),
  inference(superposition,[],[f912,f844])).
fof(f5908,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(X57,X58) = s(X57,'const.bool.COND_3'(s(bool,X56),s(X57,X59),s(X57,X58))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)))) )),
  inference(superposition,[],[f882,f283])).
fof(f5947,plain,(
  ( ! [X19,X20,X18] : (s(bool,'F_0') = s(bool,X20) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X18),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f882,f245])).
fof(f5990,plain,(
  ( ! [X167,X169,X170,X168] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X167),s(bool,X168),s(bool,X169))) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f844,f882])).
fof(f6001,plain,(
  ( ! [X225,X223,X226,X224] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X225)),'const.bool.COND_3'(s(bool,X223),s(bool,X224),s(bool,X225))) | s(bool,'T_0') = s(bool,X223)) )),
  inference(superposition,[],[f878,f882])).
fof(f6003,plain,(
  ( ! [X231,X233,X234,X232] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X234),s(bool,X233)),'const.bool.COND_3'(s(bool,X231),s(bool,X232),s(bool,X233))) | s(bool,'T_0') = s(bool,X231)) )),
  inference(superposition,[],[f879,f882])).
fof(f6004,plain,(
  ( ! [X237,X235,X238,X236] : (~sP5('F_0','const.bool.COND_3'(s(bool,X235),s(bool,X236),s(bool,X237)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X238),s(bool,X237))) | s(bool,'T_0') = s(bool,X235)) )),
  inference(superposition,[],[f880,f882])).
fof(f6006,plain,(
  ( ! [X243,X246,X244,X245] : (sP5('T_0','const.bool.COND_3'(s(bool,X243),s(bool,X244),s(bool,X245)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X246),s(bool,X245))) | s(bool,'T_0') = s(bool,X243)) )),
  inference(superposition,[],[f881,f882])).
fof(f6012,plain,(
  ( ! [X271,X273,X275,X276,X272,X274] : (~p(s(bool,X273)) | ~p(s(bool,X274)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X275),s(bool,X274)),X276,'const.bool.COND_3'(s(bool,X271),s(bool,X272),s(bool,X273))) | s(bool,'T_0') = s(bool,X271)) )),
  inference(superposition,[],[f909,f882])).
fof(f6013,plain,(
  ( ! [X280,X282,X277,X279,X281,X278] : (~p(s(bool,X279)) | ~p(s(bool,X280)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X281),s(bool,X280)),'const.bool.COND_3'(s(bool,X277),s(bool,X278),s(bool,X279)),X282) | s(bool,'T_0') = s(bool,X277)) )),
  inference(superposition,[],[f910,f882])).
fof(f6015,plain,(
  ( ! [X292,X294,X290,X293,X289,X291] : (~p(s(bool,X291)) | ~p(s(bool,X292)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X293),s(bool,X292)),'const.bool.COND_3'(s(bool,X289),s(bool,X290),s(bool,X291)),X294) | s(bool,'T_0') = s(bool,X289)) )),
  inference(superposition,[],[f912,f882])).
fof(f6113,plain,(
  ( ! [X14,X15,X16] : (s(bool,X14) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15))) | s(bool,'F_0') = s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f896,f696])).
fof(f6137,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X33),s(bool,X31))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f896,f282])).
fof(f6138,plain,(
  ( ! [X35,X36,X34] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X36),s(bool,X35))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,X35)))) )),
  inference(superposition,[],[f896,f283])).
fof(f6139,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X37),s(bool,X38),s(bool,X39))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f896,f882])).
fof(f6174,plain,(
  ( ! [X101,X102,X100] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X101))) | s(bool,'F_0') = s(bool,X101)) )),
  inference(superposition,[],[f830,f896])).
fof(f6176,plain,(
  ( ! [X107,X108,X106] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X108)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X106),s(bool,X107))) | s(bool,'F_0') = s(bool,X107)) )),
  inference(superposition,[],[f831,f896])).
fof(f6178,plain,(
  ( ! [X114,X112,X113] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X112),s(bool,X113)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X114))) | s(bool,'F_0') = s(bool,X113)) )),
  inference(superposition,[],[f832,f896])).
fof(f6180,plain,(
  ( ! [X118,X120,X119] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X118),s(bool,X119)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X120))) | s(bool,'F_0') = s(bool,X119)) )),
  inference(superposition,[],[f833,f896])).
fof(f6193,plain,(
  ( ! [X171,X169,X170] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X171),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,X170)) )),
  inference(superposition,[],[f878,f896])).
fof(f6195,plain,(
  ( ! [X177,X175,X176] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X177),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X175),s(bool,X176))) | s(bool,'F_0') = s(bool,X176)) )),
  inference(superposition,[],[f879,f896])).
fof(f6196,plain,(
  ( ! [X180,X178,X179] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X178),s(bool,X179)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X180),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X179)) )),
  inference(superposition,[],[f880,f896])).
fof(f6198,plain,(
  ( ! [X185,X186,X184] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X184),s(bool,X185)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X186),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X185)) )),
  inference(superposition,[],[f881,f896])).
fof(f6280,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f6148,f237])).
fof(f6148,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(superposition,[],[f259,f896])).
fof(f6283,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f6157,f237])).
fof(f6157,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X32)) )),
  inference(superposition,[],[f346,f896])).
fof(f6284,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f6158,f237])).
fof(f6158,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X36)) )),
  inference(superposition,[],[f350,f896])).
fof(f6285,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6159,f237])).
fof(f6159,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X40)) )),
  inference(superposition,[],[f369,f896])).
fof(f6286,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f6160,f237])).
fof(f6160,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f378,f896])).
fof(f6287,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f6161,f237])).
fof(f6161,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X48)) )),
  inference(superposition,[],[f386,f896])).
fof(f6288,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f6162,f237])).
fof(f6162,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f391,f896])).
fof(f6289,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f6163,f237])).
fof(f6163,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X56)) )),
  inference(superposition,[],[f392,f896])).
fof(f6290,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f6164,f237])).
fof(f6164,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X60)) )),
  inference(superposition,[],[f393,f896])).
fof(f6291,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f6165,f237])).
fof(f6165,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X64)) )),
  inference(superposition,[],[f403,f896])).
fof(f6292,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f6167,f237])).
fof(f6167,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X72)) )),
  inference(superposition,[],[f409,f896])).
fof(f6293,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f6168,f237])).
fof(f6168,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X76)) )),
  inference(superposition,[],[f410,f896])).
fof(f6294,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f6169,f237])).
fof(f6169,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X80)) )),
  inference(superposition,[],[f413,f896])).
fof(f6295,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f6170,f237])).
fof(f6170,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(superposition,[],[f414,f896])).
fof(f6304,plain,(
  ( ! [X146,X149,X147,X150,X148] : (~p(s(bool,X148)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X148),s(bool,X149)),X150,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X146),s(bool,X147))) | s(bool,'F_0') = s(bool,X147)) )),
  inference(subsumption_resolution,[],[f6188,f237])).
fof(f6188,plain,(
  ( ! [X146,X149,X147,X150,X148] : (~p(s(bool,'T_0')) | ~p(s(bool,X148)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X148),s(bool,X149)),X150,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X146),s(bool,X147))) | s(bool,'F_0') = s(bool,X147)) )),
  inference(superposition,[],[f857,f896])).
fof(f6305,plain,(
  ( ! [X154,X152,X151,X155,X153] : (~p(s(bool,X153)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X151),s(bool,X152)),X155) | s(bool,'F_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f6189,f237])).
fof(f6189,plain,(
  ( ! [X154,X152,X151,X155,X153] : (~p(s(bool,'T_0')) | ~p(s(bool,X153)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X151),s(bool,X152)),X155) | s(bool,'F_0') = s(bool,X152)) )),
  inference(superposition,[],[f858,f896])).
fof(f6308,plain,(
  ( ! [X165,X163,X161,X164,X162] : (~p(s(bool,X163)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X161),s(bool,X162)),X165) | s(bool,'F_0') = s(bool,X162)) )),
  inference(subsumption_resolution,[],[f6191,f237])).
fof(f6191,plain,(
  ( ! [X165,X163,X161,X164,X162] : (~p(s(bool,'T_0')) | ~p(s(bool,X163)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X161),s(bool,X162)),X165) | s(bool,'F_0') = s(bool,X162)) )),
  inference(superposition,[],[f860,f896])).
fof(f6317,plain,(
  ( ! [X212,X215,X213,X211,X214] : (~p(s(bool,X213)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X214),s(bool,X213)),X215,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X211),s(bool,X212))) | s(bool,'F_0') = s(bool,X212)) )),
  inference(subsumption_resolution,[],[f6205,f237])).
fof(f6205,plain,(
  ( ! [X212,X215,X213,X211,X214] : (~p(s(bool,'T_0')) | ~p(s(bool,X213)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X214),s(bool,X213)),X215,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X211),s(bool,X212))) | s(bool,'F_0') = s(bool,X212)) )),
  inference(superposition,[],[f909,f896])).
fof(f6318,plain,(
  ( ! [X218,X216,X220,X219,X217] : (~p(s(bool,X218)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X219),s(bool,X218)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X216),s(bool,X217)),X220) | s(bool,'F_0') = s(bool,X217)) )),
  inference(subsumption_resolution,[],[f6206,f237])).
fof(f6206,plain,(
  ( ! [X218,X216,X220,X219,X217] : (~p(s(bool,'T_0')) | ~p(s(bool,X218)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X219),s(bool,X218)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X216),s(bool,X217)),X220) | s(bool,'F_0') = s(bool,X217)) )),
  inference(superposition,[],[f910,f896])).
fof(f6321,plain,(
  ( ! [X229,X227,X230,X228,X226] : (~p(s(bool,X228)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X229),s(bool,X228)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X227)),X230) | s(bool,'F_0') = s(bool,X227)) )),
  inference(subsumption_resolution,[],[f6208,f237])).
fof(f6208,plain,(
  ( ! [X229,X227,X230,X228,X226] : (~p(s(bool,'T_0')) | ~p(s(bool,X228)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X229),s(bool,X228)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X227)),X230) | s(bool,'F_0') = s(bool,X227)) )),
  inference(superposition,[],[f912,f896])).
fof(f6392,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)),X65)) )),
  inference(superposition,[],[f954,f283])).
fof(f6405,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6389,f237])).
fof(f6389,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f954,f844])).
fof(f6406,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6390,f237])).
fof(f6390,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f954,f896])).
fof(f6417,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f955])).
fof(f6436,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)),X60)) )),
  inference(superposition,[],[f955,f282])).
fof(f6437,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)),X65)) )),
  inference(superposition,[],[f955,f283])).
fof(f6438,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f955,f882])).
fof(f6442,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6423,f237])).
fof(f6423,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f955,f696])).
fof(f6450,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6434,f237])).
fof(f6434,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f955,f844])).
fof(f6451,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6435,f237])).
fof(f6435,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f955,f896])).
fof(f6662,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X69)),X68)) )),
  inference(superposition,[],[f979,f283])).
fof(f6675,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6658,f237])).
fof(f6658,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f979,f844])).
fof(f6676,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6659,f237])).
fof(f6659,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f979,f896])).
fof(f6704,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X64),s(bool,X62)),X63)) )),
  inference(superposition,[],[f980,f282])).
fof(f6705,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X69),s(bool,X67)),X68)) )),
  inference(superposition,[],[f980,f283])).
fof(f6706,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X73)),X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f980,f882])).
fof(f6710,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6690,f237])).
fof(f6690,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f980,f696])).
fof(f6718,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6701,f237])).
fof(f6701,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f980,f844])).
fof(f6719,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6702,f237])).
fof(f6702,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f980,f896])).
fof(f6750,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X69)),X68)) )),
  inference(superposition,[],[f1034,f283])).
fof(f6763,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6746,f237])).
fof(f6746,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1034,f844])).
fof(f6764,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6747,f237])).
fof(f6747,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1034,f896])).
fof(f6778,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1035])).
fof(f6798,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X64),s(bool,X62)),X63)) )),
  inference(superposition,[],[f1035,f282])).
fof(f6799,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X69),s(bool,X67)),X68)) )),
  inference(superposition,[],[f1035,f283])).
fof(f6800,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP6('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X73)),X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1035,f882])).
fof(f6804,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6784,f237])).
fof(f6784,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1035,f696])).
fof(f6812,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6795,f237])).
fof(f6795,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1035,f844])).
fof(f6813,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6796,f237])).
fof(f6796,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1035,f896])).
fof(f6841,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP7(X68,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X69)))) )),
  inference(superposition,[],[f1070,f283])).
fof(f6852,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6837,f237])).
fof(f6837,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1070,f844])).
fof(f6853,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6838,f237])).
fof(f6838,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1070,f896])).
fof(f6858,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1071])).
fof(f6875,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP7(X63,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X64),s(bool,X62)))) )),
  inference(superposition,[],[f1071,f282])).
fof(f6876,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP7(X68,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X69),s(bool,X67)))) )),
  inference(superposition,[],[f1071,f283])).
fof(f6877,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP7(X74,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X73))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1071,f882])).
fof(f6879,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6861,f237])).
fof(f6861,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1071,f696])).
fof(f6887,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6872,f237])).
fof(f6872,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1071,f844])).
fof(f6888,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6873,f237])).
fof(f6873,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1071,f896])).
fof(f6965,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f428,f1131])).
fof(f6993,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6972,f237])).
fof(f6972,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1131,f696])).
fof(f7059,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f428,f1177])).
fof(f7077,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7060,f237])).
fof(f7060,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1177,f696])).
fof(f7122,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~p(s(bool,X68)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),X67,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X68),s(bool,X69)))) )),
  inference(superposition,[],[f1247,f283])).
fof(f7135,plain,(
  ( ! [X47,X50,X48,X51,X49] : (p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7118,f237])).
fof(f7118,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1247,f844])).
fof(f7136,plain,(
  ( ! [X54,X52,X56,X55,X53] : (p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f7119,f237])).
fof(f7119,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1247,f896])).
fof(f7144,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f237,f237,f428,f1248])).
fof(f7164,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | p(s(bool,X62)) | ~p(s(bool,X63)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),X62,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X64),s(bool,X63)))) )),
  inference(superposition,[],[f1248,f282])).
fof(f7165,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~p(s(bool,X68)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)),X67,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X69),s(bool,X68)))) )),
  inference(superposition,[],[f1248,f283])).
fof(f7166,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | ~p(s(bool,X74)) | ~sP10('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),X73,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X74))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1248,f882])).
fof(f7170,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7150,f237])).
fof(f7150,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1248,f696])).
fof(f7178,plain,(
  ( ! [X47,X50,X48,X51,X49] : (p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X50))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7161,f237])).
fof(f7161,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X50))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1248,f844])).
fof(f7179,plain,(
  ( ! [X54,X52,X56,X55,X53] : (p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X55))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f7162,f237])).
fof(f7162,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X55))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1248,f896])).
fof(f7203,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X69)),X68,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)))) )),
  inference(superposition,[],[f1295,f283])).
fof(f7213,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7199,f237])).
fof(f7199,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1295,f844])).
fof(f7214,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f7200,f237])).
fof(f7200,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1295,f896])).
fof(f7302,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1296])).
fof(f7317,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X64),s(bool,X62)),X63,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)))) )),
  inference(superposition,[],[f1296,f282])).
fof(f7318,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X66)) | ~p(s(bool,X67)) | p(s(bool,X68)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X69),s(bool,X67)),X68,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X65),s(bool,X66)))) )),
  inference(superposition,[],[f1296,f283])).
fof(f7319,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X73)),X74,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1296,f882])).
fof(f7320,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7303,f237])).
fof(f7303,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1296,f696])).
fof(f7328,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7314,f237])).
fof(f7314,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1296,f844])).
fof(f7329,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f7315,f237])).
fof(f7315,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1296,f896])).
fof(f321,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) )),
  inference(cnf_transformation,[],[f191])).
fof(f332,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X7,X8] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X8)))))),
  file('thm.integral.REAL_LT_MIN','thm.real.REAL_LTE_TRANS')).
fof(f3031,plain,(
  ( ! [X243,X241,X244,X242] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X242),s('type.realax.real',X243)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X241),s('type.realax.real',X243)))) | s(bool,X244) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X241),s('type.realax.real',X242))) | s(bool,'T_0') = s(bool,X244)) )),
  inference(subsumption_resolution,[],[f2555,f237])).
fof(f2555,plain,(
  ( ! [X243,X241,X244,X242] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X242),s('type.realax.real',X243)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X241),s('type.realax.real',X243)))) | s(bool,X244) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X241),s('type.realax.real',X242))) | s(bool,'T_0') = s(bool,X244)) )),
  inference(superposition,[],[f331,f696])).
fof(f3032,plain,(
  ( ! [X246,X248,X247,X245] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X247),s('type.realax.real',X246)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X247),s('type.realax.real',X245)))) | s(bool,X248) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X245),s('type.realax.real',X246))) | s(bool,'T_0') = s(bool,X248)) )),
  inference(subsumption_resolution,[],[f2556,f237])).
fof(f2556,plain,(
  ( ! [X246,X248,X247,X245] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X247),s('type.realax.real',X246)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X247),s('type.realax.real',X245)))) | s(bool,X248) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X245),s('type.realax.real',X246))) | s(bool,'T_0') = s(bool,X248)) )),
  inference(superposition,[],[f332,f696])).
fof(f3034,plain,(
  ( ! [X253,X254,X252] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X253),s('type.realax.real',X252)))) | s(bool,X254) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X252),s('type.realax.real',X253))) | s(bool,'T_0') = s(bool,X254)) )),
  inference(subsumption_resolution,[],[f2558,f237])).
fof(f2558,plain,(
  ( ! [X253,X254,X252] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X253),s('type.realax.real',X252)))) | s(bool,X254) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X252),s('type.realax.real',X253))) | s(bool,'T_0') = s(bool,X254)) )),
  inference(superposition,[],[f321,f696])).
fof(f6361,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X12))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) )),
  inference(subsumption_resolution,[],[f6349,f428])).
fof(f6349,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X12))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) )),
  inference(superposition,[],[f1325,f245])).
fof(f1480,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(forward_demodulation,[],[f1465,f283])).
fof(f1465,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'F_0'),s('type.realax.real',X0),s('type.realax.real',X1))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f286,f245])).
fof(f2304,plain,(
  ( ! [X255,X253,X254] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X253),s('type.realax.real',X254))) = s('type.realax.real','const.bool.COND_3'(s(bool,X255),s('type.realax.real',X253),s('type.realax.real',X254))) | s(bool,'T_0') = s(bool,X255) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X253),s('type.realax.real',X254)))) )),
  inference(superposition,[],[f286,f696])).
fof(f3033,plain,(
  ( ! [X251,X249,X250] : (s('type.realax.real',X249) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X249),s('type.realax.real',X250))) | s(bool,X251) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X249),s('type.realax.real',X250))) | s(bool,'T_0') = s(bool,X251)) )),
  inference(forward_demodulation,[],[f2557,f282])).
fof(f2557,plain,(
  ( ! [X251,X249,X250] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X249),s('type.realax.real',X250))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X249),s('type.realax.real',X250))) | s(bool,X251) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X249),s('type.realax.real',X250))) | s(bool,'T_0') = s(bool,X251)) )),
  inference(superposition,[],[f286,f696])).
fof(f7398,plain,(
  ( ! [X4,X5,X3] : (s('type.realax.real',X5) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X4),s('type.realax.real',X5))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',X3),s('type.realax.real',X4))),s('type.realax.real',X5))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X3),s('type.realax.real',X4)))) )),
  inference(superposition,[],[f1480,f1480])).
fof(f7403,plain,(
  ( ! [X4,X5,X3] : (s('type.realax.real',X4) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X5),s('type.realax.real',X4))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X5),s('type.realax.real','const.real.min_2'(s('type.realax.real',X3),s('type.realax.real',X4))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X3),s('type.realax.real',X4)))) )),
  inference(superposition,[],[f1480,f1480])).
fof(f7406,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.realax.real',X14) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X15),s('type.realax.real',X14))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X15),s('type.realax.real','const.bool.COND_3'(s(bool,X12),s('type.realax.real',X13),s('type.realax.real',X14))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1480,f882])).
fof(f7401,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.realax.real',X15) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X14),s('type.realax.real',X15))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X12),s('type.realax.real',X13),s('type.realax.real',X14))),s('type.realax.real',X15))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1480,f882])).
fof(f7204,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1295,f882])).
fof(f7202,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X62),s(bool,X64)),X63,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)))) )),
  inference(superposition,[],[f1295,f282])).
fof(f7205,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7188,f237])).
fof(f7188,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1295,f696])).
fof(f7187,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1295])).
fof(f7123,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | ~p(s(bool,X74)) | ~sP10('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),X73,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X74),s(bool,X75))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1247,f882])).
fof(f7121,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | p(s(bool,X62)) | ~p(s(bool,X63)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),X62,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64)))) )),
  inference(superposition,[],[f1247,f282])).
fof(f7127,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7107,f237])).
fof(f7107,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1247,f696])).
fof(f7101,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f237,f237,f428,f1247])).
fof(f7035,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f7018,f237])).
fof(f7018,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1176,f696])).
fof(f7017,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f428,f1176])).
fof(f6921,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6900,f237])).
fof(f6900,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1130,f696])).
fof(f6893,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f428,f1130])).
fof(f6842,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP7(X74,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1070,f882])).
fof(f6840,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP7(X63,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X62),s(bool,X64)))) )),
  inference(superposition,[],[f1070,f282])).
fof(f6844,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6826,f237])).
fof(f6826,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1070,f696])).
fof(f6823,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1070])).
fof(f6751,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP6('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1034,f882])).
fof(f6749,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X62),s(bool,X64)),X63)) )),
  inference(superposition,[],[f1034,f282])).
fof(f6755,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6735,f237])).
fof(f6735,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1034,f696])).
fof(f6729,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f1034])).
fof(f6663,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f979,f882])).
fof(f6661,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X60)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X62),s(bool,X64)),X63)) )),
  inference(superposition,[],[f979,f282])).
fof(f6667,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6647,f237])).
fof(f6647,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f979,f696])).
fof(f6393,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f954,f882])).
fof(f6391,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)),X60)) )),
  inference(superposition,[],[f954,f282])).
fof(f6397,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6378,f237])).
fof(f6378,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f954,f696])).
fof(f6372,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f954])).
fof(f5999,plain,(
  ( ! [X218,X216,X215,X213,X217,X214] : (~p(s(bool,X215)) | ~p(s(bool,X216)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X216),s(bool,X217)),'const.bool.COND_3'(s(bool,X213),s(bool,X214),s(bool,X215)),X218) | s(bool,'T_0') = s(bool,X213)) )),
  inference(superposition,[],[f860,f882])).
fof(f5997,plain,(
  ( ! [X206,X204,X202,X205,X203,X201] : (~p(s(bool,X203)) | ~p(s(bool,X204)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X204),s(bool,X205)),'const.bool.COND_3'(s(bool,X201),s(bool,X202),s(bool,X203)),X206) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f858,f882])).
fof(f5996,plain,(
  ( ! [X198,X196,X200,X199,X197,X195] : (~p(s(bool,X197)) | ~p(s(bool,X198)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X198),s(bool,X199)),X200,'const.bool.COND_3'(s(bool,X195),s(bool,X196),s(bool,X197))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f857,f882])).
fof(f5988,plain,(
  ( ! [X161,X159,X162,X160] : (sP5('T_0','const.bool.COND_3'(s(bool,X159),s(bool,X160),s(bool,X161)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X161),s(bool,X162))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(superposition,[],[f833,f882])).
fof(f5986,plain,(
  ( ! [X154,X152,X151,X153] : (~sP5('F_0','const.bool.COND_3'(s(bool,X151),s(bool,X152),s(bool,X153)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154))) | s(bool,'T_0') = s(bool,X151)) )),
  inference(superposition,[],[f832,f882])).
fof(f5984,plain,(
  ( ! [X146,X144,X145,X143] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),'const.bool.COND_3'(s(bool,X143),s(bool,X144),s(bool,X145))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(superposition,[],[f831,f882])).
fof(f5982,plain,(
  ( ! [X138,X136,X135,X137] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X137),s(bool,X138)),'const.bool.COND_3'(s(bool,X135),s(bool,X136),s(bool,X137))) | s(bool,'T_0') = s(bool,X135)) )),
  inference(superposition,[],[f830,f882])).
fof(f5976,plain,(
  ( ! [X111,X114,X112,X110,X113] : (~p(s(bool,X112)) | ~sP8('const.bool.COND_3'(s(bool,X110),s(bool,X111),s(bool,X112)),X113,X114) | sP9('const.bool.COND_3'(s(bool,X110),s(bool,X111),s(bool,X112)),X113,X114) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f414,f882])).
fof(f5975,plain,(
  ( ! [X109,X107,X105,X108,X106] : (~p(s(bool,X107)) | ~sP10('const.bool.COND_3'(s(bool,X105),s(bool,X106),s(bool,X107)),X108,X109) | sP11('const.bool.COND_3'(s(bool,X105),s(bool,X106),s(bool,X107)),X108,X109) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f413,f882])).
fof(f5974,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,X102)) | ~p(s(bool,X103)) | p(s(bool,X104)) | ~sP11('const.bool.COND_3'(s(bool,X100),s(bool,X101),s(bool,X102)),X104,X103) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f410,f882])).
fof(f5973,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP11('const.bool.COND_3'(s(bool,X95),s(bool,X96),s(bool,X97)),X98,X99) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f409,f882])).
fof(f5972,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,X92)) | p(s(bool,X93)) | sP11('const.bool.COND_3'(s(bool,X90),s(bool,X91),s(bool,X92)),X94,X93) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f408,f882])).
fof(f5971,plain,(
  ( ! [X88,X87,X85,X89,X86] : (~p(s(bool,X87)) | p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10(X89,X88,'const.bool.COND_3'(s(bool,X85),s(bool,X86),s(bool,X87))) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f403,f882])).
fof(f5970,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,X82)) | p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('const.bool.COND_3'(s(bool,X80),s(bool,X81),s(bool,X82)),X84,X83) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f393,f882])).
fof(f5969,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | sP9('const.bool.COND_3'(s(bool,X75),s(bool,X76),s(bool,X77)),X78,X79) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f392,f882])).
fof(f5968,plain,(
  ( ! [X70,X74,X72,X71,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | sP9('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),X74,X73) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f391,f882])).
fof(f5967,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X67)) | p(s(bool,X68)) | p(s(bool,X69)) | ~sP8('const.bool.COND_3'(s(bool,X65),s(bool,X66),s(bool,X67)),X68,X69) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f386,f882])).
fof(f5966,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP7(X64,X63,'const.bool.COND_3'(s(bool,X60),s(bool,X61),s(bool,X62))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f378,f882])).
fof(f5965,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,X57)) | ~p(s(bool,X58)) | p(s(bool,X59)) | ~sP6(X58,'const.bool.COND_3'(s(bool,X55),s(bool,X56),s(bool,X57)),X59) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f369,f882])).
fof(f5964,plain,(
  ( ! [X54,X52,X50,X53,X51] : (~p(s(bool,X52)) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP3(X53,'const.bool.COND_3'(s(bool,X50),s(bool,X51),s(bool,X52)),X54) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f350,f882])).
fof(f5963,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | p(s(bool,X49)) | ~sP4(X48,'const.bool.COND_3'(s(bool,X45),s(bool,X46),s(bool,X47)),X49) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f346,f882])).
fof(f5962,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | sP1(X44,'const.bool.COND_3'(s(bool,X41),s(bool,X42),s(bool,X43))) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f315,f882])).
fof(f5961,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | sP1('const.bool.COND_3'(s(bool,X37),s(bool,X38),s(bool,X39)),X40) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f312,f882])).
fof(f5960,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,X35)) | sP0('const.bool.COND_3'(s(bool,X33),s(bool,X34),s(bool,X35)),X36) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f297,f882])).
fof(f5959,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,X31)) | sP0(X32,'const.bool.COND_3'(s(bool,X29),s(bool,X30),s(bool,X31))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f296,f882])).
fof(f5945,plain,(
  ( ! [X12,X10,X13,X11] : (s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X10),s(bool,X11),s(bool,X12))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f882,f696])).
fof(f5943,plain,(
  ( ! [X4,X2,X5,X3] : (s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X2) | s(bool,X5) = s(bool,'const.bool.COND_3'(s(bool,X2),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f882,f696])).
fof(f5909,plain,(
  ( ! [X61,X64,X62,X60,X65,X63] : (s(X63,X64) = s(X63,'const.bool.COND_3'(s(bool,X62),s(X63,X65),s(X63,X64))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X60),s(bool,X61),s(bool,X62))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f882,f882])).
fof(f5907,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(X52,X53) = s(X52,'const.bool.COND_3'(s(bool,X50),s(X52,X54),s(X52,X53))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51)))) )),
  inference(superposition,[],[f882,f282])).
fof(f5406,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f860,f282])).
fof(f5408,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5395,f237])).
fof(f5395,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f860,f696])).
fof(f5394,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f860])).
fof(f5329,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X2)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5316,f237])).
fof(f5316,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X2)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f859,f696])).
fof(f5315,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f859])).
fof(f5233,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f858,f282])).
fof(f5235,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5222,f237])).
fof(f5222,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f858,f696])).
fof(f5221,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f858])).
fof(f5137,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),X51,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f857,f282])).
fof(f5139,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5126,f237])).
fof(f5126,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f857,f696])).
fof(f5125,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f237,f857])).
fof(f2567,plain,(
  ( ! [X285,X283,X284,X286] : (s(X285,f(s(bool,'T_0'))) != s(X285,g(s(bool,'T_0'))) | s(fun(bool,X285),X283) = s(fun(bool,X285),X284) | s(bool,X286) = s(bool,sK15(X283,X284,X285,bool)) | s(bool,'T_0') = s(bool,X286)) )),
  inference(superposition,[],[f330,f696])).
fof(f3028,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,X127)) | sP1(X127,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X126),s(bool,X128))) | s(bool,X126) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) )),
  inference(subsumption_resolution,[],[f2515,f237])).
fof(f2515,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'T_0')) | p(s(bool,X127)) | sP1(X127,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X126),s(bool,X128))) | s(bool,X126) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f856,f696])).
fof(f3027,plain,(
  ( ! [X125,X123,X124,X122] : (p(s(bool,X123)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X122),s(bool,X124)),X123) | s(bool,X122) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(subsumption_resolution,[],[f2514,f237])).
fof(f2514,plain,(
  ( ! [X125,X123,X124,X122] : (~p(s(bool,'T_0')) | p(s(bool,X123)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X122),s(bool,X124)),X123) | s(bool,X122) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f855,f696])).
fof(f3026,plain,(
  ( ! [X121,X118,X120,X119] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),X120) | s(bool,X118) = s(bool,X121) | s(bool,'T_0') = s(bool,X121)) )),
  inference(subsumption_resolution,[],[f2513,f237])).
fof(f2513,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),X120) | s(bool,X118) = s(bool,X121) | s(bool,'T_0') = s(bool,X121)) )),
  inference(superposition,[],[f854,f696])).
fof(f3025,plain,(
  ( ! [X116,X114,X117,X115] : (sP0(X115,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X114),s(bool,X116))) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f2512,f237])).
fof(f2512,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'T_0')) | sP0(X115,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X114),s(bool,X116))) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f853,f696])).
fof(f2510,plain,(
  ( ! [X109,X110,X108] : (sP5('T_0',X108,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X109))) | s(bool,X108) = s(bool,X110) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f833,f696])).
fof(f2508,plain,(
  ( ! [X103,X102,X104] : (~sP5('F_0',X102,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X103))) | s(bool,X102) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f832,f696])).
fof(f2506,plain,(
  ( ! [X97,X98,X96] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X97)),X96) | s(bool,X96) = s(bool,X98) | s(bool,'T_0') = s(bool,X98)) )),
  inference(superposition,[],[f831,f696])).
fof(f2504,plain,(
  ( ! [X92,X90,X91] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X91)),X90) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f830,f696])).
fof(f3024,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8(X83,X84,X85) | sP9(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f2502,f237])).
fof(f2502,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8(X83,X84,X85) | sP9(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f414,f696])).
fof(f3023,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10(X79,X80,X81) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f2501,f237])).
fof(f2501,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10(X79,X80,X81) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f413,f696])).
fof(f3022,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f2500,f237])).
fof(f2500,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f410,f696])).
fof(f3021,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X72)) | sP11(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f2499,f237])).
fof(f2499,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X72)) | sP11(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f409,f696])).
fof(f3020,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | sP11(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f2498,f237])).
fof(f2498,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | sP11(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f408,f696])).
fof(f3019,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f2497,f237])).
fof(f2497,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f403,f696])).
fof(f3018,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f2496,f237])).
fof(f2496,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f393,f696])).
fof(f3017,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X56)) | sP9(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f2495,f237])).
fof(f2495,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP9(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f392,f696])).
fof(f3016,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | sP9(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f2494,f237])).
fof(f2494,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | sP9(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f391,f696])).
fof(f3015,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X48)) | p(s(bool,X49)) | ~sP8(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f2493,f237])).
fof(f2493,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X48)) | p(s(bool,X49)) | ~sP8(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f386,f696])).
fof(f3014,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,X44,X43) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f2492,f237])).
fof(f2492,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,X44,X43) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f378,f696])).
fof(f3013,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f2491,f237])).
fof(f2491,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f369,f696])).
fof(f3012,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f2490,f237])).
fof(f2490,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f350,f696])).
fof(f3011,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f2489,f237])).
fof(f2489,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f346,f696])).
fof(f3010,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f2488,f237])).
fof(f2488,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f315,f696])).
fof(f3009,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f2487,f237])).
fof(f2487,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f312,f696])).
fof(f3008,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f2486,f237])).
fof(f2486,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f297,f696])).
fof(f3007,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f2485,f237])).
fof(f2485,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f296,f696])).
fof(f3006,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f2484,f237])).
fof(f2484,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f290,f696])).
fof(f3005,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f2480,f237])).
fof(f2480,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f259,f696])).
fof(f2451,plain,(
  ( ! [X152,X151,X150] : (sP5('T_0','T_0','const.bool.COND_3'(s(bool,X150),s(bool,X150),s(bool,X151))) | s(bool,X150) = s(bool,X152) | s(bool,'T_0') = s(bool,X152)) )),
  inference(superposition,[],[f833,f696])).
fof(f2449,plain,(
  ( ! [X146,X144,X145] : (~sP5('F_0','T_0','const.bool.COND_3'(s(bool,X144),s(bool,X144),s(bool,X145))) | s(bool,X144) = s(bool,X146) | s(bool,'T_0') = s(bool,X146)) )),
  inference(superposition,[],[f832,f696])).
fof(f2447,plain,(
  ( ! [X140,X138,X139] : (sP5('T_0','const.bool.COND_3'(s(bool,X138),s(bool,X138),s(bool,X139)),'T_0') | s(bool,X138) = s(bool,X140) | s(bool,'T_0') = s(bool,X140)) )),
  inference(superposition,[],[f831,f696])).
fof(f2445,plain,(
  ( ! [X134,X132,X133] : (~sP5('F_0','const.bool.COND_3'(s(bool,X132),s(bool,X132),s(bool,X133)),'T_0') | s(bool,X132) = s(bool,X134) | s(bool,'T_0') = s(bool,X134)) )),
  inference(superposition,[],[f830,f696])).
fof(f2414,plain,(
  ( ! [X26,X24,X27,X25] : (sP5('T_0',X25,'const.bool.COND_3'(s(bool,X24),s(bool,X25),s(bool,X26))) | s(bool,X24) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f833,f696])).
fof(f2413,plain,(
  ( ! [X23,X21,X22,X20] : (~sP5('F_0',X21,'const.bool.COND_3'(s(bool,X20),s(bool,X21),s(bool,X22))) | s(bool,X20) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f832,f696])).
fof(f2412,plain,(
  ( ! [X19,X17,X18,X16] : (sP5('T_0','const.bool.COND_3'(s(bool,X16),s(bool,X17),s(bool,X18)),X17) | s(bool,X16) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f831,f696])).
fof(f2411,plain,(
  ( ! [X14,X12,X15,X13] : (~sP5('F_0','const.bool.COND_3'(s(bool,X12),s(bool,X13),s(bool,X14)),X13) | s(bool,X12) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f830,f696])).
fof(f2410,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s(X6,X7) = s(X6,'const.bool.COND_3'(s(bool,X5),s(X6,X7),s(X6,X8))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f282,f696])).
fof(f2409,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f255,f696])).
fof(f2314,plain,(
  ( ! [X288,X290,X289,X291] : (s(X290,f(s(bool,X291))) != s(X290,g(s(bool,X291))) | s(fun(bool,X290),X288) = s(fun(bool,X290),X289) | s(bool,'T_0') = s(bool,X291) | s(bool,'T_0') = s(bool,sK15(X288,X289,X290,bool))) )),
  inference(superposition,[],[f330,f696])).
fof(f2255,plain,(
  ( ! [X109,X110,X108] : (sP5('T_0',X108,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X109),s(bool,X110))) | s(bool,'T_0') = s(bool,X109) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f833,f696])).
fof(f2253,plain,(
  ( ! [X103,X102,X104] : (~sP5('F_0',X102,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X103),s(bool,X104))) | s(bool,'T_0') = s(bool,X103) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f832,f696])).
fof(f2251,plain,(
  ( ! [X97,X98,X96] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X97),s(bool,X98)),X96) | s(bool,'T_0') = s(bool,X97) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f831,f696])).
fof(f2249,plain,(
  ( ! [X92,X90,X91] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X92)),X90) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f830,f696])).
fof(f2207,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X17) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f696,f282])).
fof(f2196,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f696,f696])).
fof(f2181,plain,(
  ( ! [X24,X23,X25] : (s(bool,X23) = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,X24)))) )),
  inference(superposition,[],[f696,f282])).
fof(f2079,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f237,f428,f856])).
fof(f2052,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f855])).
fof(f1948,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f237,f854])).
fof(f1928,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f237,f853])).
fof(f1913,plain,(
  ( ! [X4,X3] : (sP5('T_0','F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f881,f245])).
fof(f1901,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f881,f245])).
fof(f1870,plain,(
  ( ! [X4,X3] : (~sP5('F_0','F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f880,f245])).
fof(f1858,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f880,f245])).
fof(f1826,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f879,f245])).
fof(f1814,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f879,f245])).
fof(f1790,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f878,f245])).
fof(f1778,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f878,f245])).
fof(f1747,plain,(
  ( ! [X4,X3] : (sP5('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f833,f245])).
fof(f1741,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f833,f341])).
fof(f1712,plain,(
  ( ! [X4,X3] : (~sP5('F_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f832,f245])).
fof(f1703,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f453,f436,f832,f345])).
fof(f1679,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X9)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)))) )),
  inference(superposition,[],[f831,f282])).
fof(f1677,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f831,f245])).
fof(f1671,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f831,f341])).
fof(f1645,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X9)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)))) )),
  inference(superposition,[],[f830,f282])).
fof(f1643,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f830,f245])).
fof(f1637,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f456,f441,f830,f343])).
fof(f1393,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f450,f443,f439,f428,f344])).
fof(f1355,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f456,f443,f436,f237,f343])).
fof(f1295,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13,X12)) )),
  inference(superposition,[],[f410,f282])).
fof(f1258,plain,(
  ~sP11('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1242,f398])).
fof(f1247,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X13)) | p(s(bool,X12)) | ~p(s(bool,X10)) | ~sP10(X13,X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f403,f282])).
fof(f1242,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f237,f428,f237,f403])).
fof(f1229,plain,(
  sP11('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f479,f237,f428,f402])).
fof(f1176,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X10)) | p(s(bool,X12)) | p(s(bool,X13)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13,X12)) )),
  inference(superposition,[],[f393,f282])).
fof(f1142,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1125,f381])).
fof(f1130,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X10)) | p(s(bool,X12)) | p(s(bool,X13)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X12,X13)) )),
  inference(superposition,[],[f386,f282])).
fof(f1125,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f428,f237,f386])).
fof(f1110,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f472,f428,f428,f385])).
fof(f1070,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP7(X13,X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f378,f282])).
fof(f1045,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1029,f362])).
fof(f1034,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP6(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f369,f282])).
fof(f1029,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f237,f237,f369])).
fof(f1015,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f459,f237,f237,f365])).
fof(f1011,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f998,f339])).
fof(f998,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f428,f428,f354])).
fof(f990,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f974,f340])).
fof(f979,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP3(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f350,f282])).
fof(f974,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f237,f237,f350])).
fof(f954,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP4(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f346,f282])).
fof(f949,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f237,f237,f346])).
fof(f882,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f283,f245])).
fof(f862,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54)) )),
  inference(superposition,[],[f414,f282])).
fof(f861,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50)) )),
  inference(superposition,[],[f413,f282])).
fof(f860,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X43)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46)) )),
  inference(superposition,[],[f409,f282])).
fof(f859,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42,X41)) )),
  inference(superposition,[],[f408,f282])).
fof(f858,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | ~p(s(bool,X35)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X37,X38)) )),
  inference(superposition,[],[f392,f282])).
fof(f857,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | ~p(s(bool,X31)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33)) )),
  inference(superposition,[],[f391,f282])).
fof(f854,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24)) )),
  inference(superposition,[],[f297,f282])).
fof(f853,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X19)) | sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f296,f282])).
fof(f830,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f428,f282,f361])).
fof(f831,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f237,f282,f359])).
fof(f832,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f428,f282,f361])).
fof(f833,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f237,f282,f359])).
fof(f803,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f237,f481,f360])).
fof(f805,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f237,f481,f360])).
fof(f782,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f428,f481,f358])).
fof(f783,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f481,f358])).
fof(f627,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f409])).
fof(f616,plain,(
  ( ! [X0] : (sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f237,f408])).
fof(f608,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f428,f397])).
fof(f606,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f428,f396])).
fof(f593,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f237,f392])).
fof(f582,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f237,f391])).
fof(f579,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f428,f380])).
fof(f576,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f379])).
fof(f571,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f428,f428,f374])).
fof(f563,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f428,f373])).
fof(f559,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f428,f364])).
fof(f556,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f237,f428,f363])).
fof(f548,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f428,f429])).
fof(f533,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f428,f237,f315])).
fof(f523,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f237,f312])).
fof(f520,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f237,f237,f311])).
fof(f519,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f428,f428,f310])).
fof(f481,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f428,f255])).
fof(f479,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f428,f406])).
fof(f476,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f405])).
fof(f474,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f428,f404])).
fof(f472,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f428,f389])).
fof(f469,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f388])).
fof(f466,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f387])).
fof(f464,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f428,f372])).
fof(f462,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f371])).
fof(f459,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f370])).
fof(f456,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f237,f357])).
fof(f453,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f237,f356])).
fof(f450,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f355])).
fof(f448,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f428,f353])).
fof(f446,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f352])).
fof(f443,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f351])).
fof(f441,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f428,f349])).
fof(f439,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f348])).
fof(f436,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f347])).
fof(f433,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f237,f297])).
fof(f430,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f237,f296])).
fof(f407,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f232])).
fof(f232,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f138,f155,f154])).
fof(f154,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f155,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f138,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) => p(s(bool,X15)))) <=> ((p(s(bool,X17)) | p(s(bool,X16))) & (p(s(bool,X17)) | ~p(s(bool,X15))) & (~p(s(bool,X16)) | p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.integral.REAL_LT_MIN','thm.sat.sat_27_prove_ltb')).
fof(f408,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f233])).
fof(f409,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f233])).
fof(f410,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f233])).
fof(f403,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f231])).
fof(f231,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f230])).
fof(f230,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f229])).
fof(f229,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f154])).
fof(f404,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f231])).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f231])).
fof(f406,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f231])).
fof(f396,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f228])).
fof(f228,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f227])).
fof(f227,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f226])).
fof(f226,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f155])).
fof(f397,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f228])).
fof(f398,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f228])).
fof(f413,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f399])).
fof(f399,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f228])).
fof(f400,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f228])).
fof(f401,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f228])).
fof(f402,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f228])).
fof(f390,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f108,f152,f151])).
fof(f151,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f152,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f108,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) | p(s(bool,X15)))) <=> ((p(s(bool,X17)) | ~p(s(bool,X16))) & (p(s(bool,X17)) | ~p(s(bool,X15))) & (p(s(bool,X16)) | p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.integral.REAL_LT_MIN','thm.sat.sat_25_prove_ltb')).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f225])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f225])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f225])).
fof(f386,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f222])).
fof(f222,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f221])).
fof(f221,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f151])).
fof(f387,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f223])).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f223])).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f223])).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f219])).
fof(f219,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f218])).
fof(f218,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f152])).
fof(f380,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f220])).
fof(f381,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f220])).
fof(f414,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f382])).
fof(f382,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f220])).
fof(f384,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f385,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f220])).
fof(f373,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f216])).
fof(f216,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f106,f149,f148])).
fof(f148,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f149,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f106,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) & p(s(bool,X15)))) <=> ((p(s(bool,X17)) | ~p(s(bool,X16)) | ~p(s(bool,X15))) & (p(s(bool,X16)) | ~p(s(bool,X17))) & (p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.integral.REAL_LT_MIN','thm.sat.sat_23_prove_ltb')).
fof(f374,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f217])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f217])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f217])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f148])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f215])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f215])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f215])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f212])).
fof(f212,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f211])).
fof(f211,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f149])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f213])).
fof(f364,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f213])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f415,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f368])).
fof(f368,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f358,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f104,f146,f145,f144,f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f144,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f145,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f146,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> s(bool,X15) = s(bool,X16)) <=> ((p(s(bool,X17)) | p(s(bool,X16)) | p(s(bool,X15))) & (p(s(bool,X17)) | ~p(s(bool,X15)) | ~p(s(bool,X16))) & (p(s(bool,X16)) | ~p(s(bool,X15)) | ~p(s(bool,X17))) & (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)))))),
  file('thm.integral.REAL_LT_MIN','thm.sat.sat_2|49|_prove_ltb')).
fof(f359,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f210])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f210])).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f210])).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f143])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f209])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f209])).
fof(f357,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f209])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f206])).
fof(f206,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f205])).
fof(f205,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f144])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f207])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f207])).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f207])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f203])).
fof(f203,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f202])).
fof(f202,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f145])).
fof(f347,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f348,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f204])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f204])).
fof(f339,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f200])).
fof(f200,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f199])).
fof(f199,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f146])).
fof(f340,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f341,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f201])).
fof(f342,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f201])).
fof(f343,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | ~p(s(bool,X2)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X1)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X0)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f330,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK15(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK15(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK15(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK15(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.integral.REAL_LT_MIN',aHL_EXT)).
fof(f310,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f189])).
fof(f311,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f189])).
fof(f429,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f295,f428])).
fof(f295,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f181])).
fof(f181,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f296,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f297,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f255,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.integral.REAL_LT_MIN','thm.bool.EQ_CLAUSES|split|0')).
fof(f256,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f162])).
fof(f22061,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508,f21507,f21506,f21505,f22060])).
fof(f22059,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508,f21507,f21506,f21505])).
fof(f22058,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508,f21507,f21506])).
fof(f22057,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508,f21507])).
fof(f22056,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509,f21508])).
fof(f22055,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511,f21509])).
fof(f22054,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513,f21511])).
fof(f22053,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514,f21513])).
fof(f22052,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515,f21514])).
fof(f22051,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516,f21515])).
fof(f22050,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517,f21516])).
fof(f22049,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518,f21517])).
fof(f22048,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519,f21518])).
fof(f22047,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522,f21519])).
fof(f22044,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523,f21522])).
fof(f22043,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528,f21523])).
fof(f22042,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21524,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528])).
fof(f21524,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f450,f8684,f8679,f425,f344])).
fof(f8679,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f348])).
fof(f8684,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f352])).
fof(f22041,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21525,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528])).
fof(f21525,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f450,f443,f8679,f425,f344])).
fof(f22040,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530,f21528])).
fof(f22039,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21529,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530])).
fof(f21529,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f453,f8684,f436,f425,f345])).
fof(f22038,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539,f21530])).
fof(f22037,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21531,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539])).
fof(f21531,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f453,f8684,f8679,f425,f345])).
fof(f22032,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540,f21539])).
fof(f22031,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546,f21540])).
fof(f22028,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547,f21546])).
fof(f22027,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548,f21547])).
fof(f22026,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549,f21548])).
fof(f22025,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550,f21549])).
fof(f22024,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551,f21550])).
fof(f22023,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554,f21551])).
fof(f22022,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555,f21554])).
fof(f22021,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556,f21555])).
fof(f22020,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557,f21556])).
fof(f22019,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560,f21557])).
fof(f22018,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561,f21560])).
fof(f22017,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562,f21561])).
fof(f22016,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563,f21562])).
fof(f22015,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566,f21563])).
fof(f22014,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568,f21566])).
fof(f22013,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21567,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568])).
fof(f21567,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0') | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8655,f425,f358])).
fof(f8655,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f255])).
fof(f22012,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571,f21568])).
fof(f22011,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21569,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571])).
fof(f21569,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8655,f425,f358])).
fof(f22010,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21570,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571])).
fof(f21570,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8829,f425,f361])).
fof(f8829,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl5),
  inference(unit_resulting_resolution,[],[f481,f427,f756])).
fof(f22009,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572,f21571])).
fof(f22008,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575,f21572])).
fof(f22007,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21573,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575])).
fof(f21573,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f12441,f425,f361])).
fof(f12441,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl5),
  inference(subsumption_resolution,[],[f12426,f428])).
fof(f12426,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl5),
  inference(superposition,[],[f1325,f8829])).
fof(f22006,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21574,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575])).
fof(f21574,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8829,f425,f361])).
fof(f22005,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576,f21575])).
fof(f22004,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578,f21576])).
fof(f22003,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21577,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578])).
fof(f21577,plain,(
  ~sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f12441,f425,f361])).
fof(f22002,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583,f21578])).
fof(f21999,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593,f21583])).
fof(f21994,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594,f21593])).
fof(f21993,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595,f21594])).
fof(f21992,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596,f21595])).
fof(f21991,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599,f21596])).
fof(f21990,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600,f21599])).
fof(f21989,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601,f21600])).
fof(f21988,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602,f21601])).
fof(f21987,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605,f21602])).
fof(f21986,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606,f21605])).
fof(f21985,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608,f21606])).
fof(f21984,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609,f21608])).
fof(f21983,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621,f21609])).
fof(f21978,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622,f21621])).
fof(f21977,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628,f21622])).
fof(f21976,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21624,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628])).
fof(f21624,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f428,f8764,f425,f385])).
fof(f8764,plain,(
  ( ! [X0,X1] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f389])).
fof(f21975,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21625,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628])).
fof(f21625,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f425,f8764,f425,f385])).
fof(f21974,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629,f21628])).
fof(f21973,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644,f21629])).
fof(f21972,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21631,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644])).
fof(f21631,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f428,f8764,f425,f385])).
fof(f21971,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21632,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644])).
fof(f21632,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f425,f8764,f425,f385])).
fof(f21968,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645,f21644])).
fof(f21967,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646,f21645])).
fof(f21966,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647,f21646])).
fof(f21965,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648,f21647])).
fof(f21964,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650,f21648])).
fof(f21963,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651,f21650])).
fof(f21962,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652,f21651])).
fof(f21961,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653,f21652])).
fof(f21960,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655,f21653])).
fof(f21959,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656,f21655])).
fof(f21958,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657,f21656])).
fof(f21957,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658,f21657])).
fof(f21956,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665,f21658])).
fof(f21955,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666,f21665])).
fof(f21954,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667,f21666])).
fof(f21953,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668,f21667])).
fof(f21952,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672,f21668])).
fof(f21949,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683,f21672])).
fof(f21944,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694,f21683])).
fof(f21942,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21686,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694])).
fof(f21686,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f237,f8806,f425,f402])).
fof(f8806,plain,(
  ( ! [X0,X1] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f406])).
fof(f21938,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695,f21694])).
fof(f21937,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696,f21695])).
fof(f21936,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697,f21696])).
fof(f21935,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700,f21697])).
fof(f21933,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701,f21700])).
fof(f21932,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708,f21701])).
fof(f21929,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710,f21708])).
fof(f21928,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl92)),
  inference(global_subsumption,[],[f21709,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710])).
fof(f21709,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8723,f425,f415])).
fof(f8723,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f371])).
fof(f21927,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712,f21710])).
fof(f21926,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f21711,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712])).
fof(f21792,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl3 | $spl10)),
  inference(unit_resulting_resolution,[],[f425,f2962])).
fof(f10629,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl10 | $spl92)),
  inference(unit_resulting_resolution,[],[f10135,f2962])).
fof(f3991,plain,(
  ( ! [X156,X157] : (p(s(bool,X157)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X156),s(bool,X157)),'T_0')) ) | $spl10),
  inference(superposition,[],[f2962,f283])).
fof(f6045,plain,(
  ( ! [X387,X388,X386] : (p(s(bool,X388)) | sP1('const.bool.COND_3'(s(bool,X386),s(bool,X387),s(bool,X388)),'T_0') | s(bool,'T_0') = s(bool,X386)) ) | $spl10),
  inference(superposition,[],[f2962,f882])).
fof(f3820,plain,(
  ( ! [X14,X15] : (p(s(bool,X14)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),'T_0')) ) | $spl10),
  inference(superposition,[],[f2962,f282])).
fof(f3822,plain,(
  ( ! [X4] : (sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4)) ) | $spl10),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f2962,f3821])).
fof(f3821,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4)) ) | $spl10),
  inference(subsumption_resolution,[],[f3812,f255])).
fof(f3812,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,'T_0') | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl10),
  inference(superposition,[],[f2962,f696])).
fof(f21711,plain,(
  ( ! [X0] : (sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8724,f425,f415])).
fof(f8724,plain,(
  ( ! [X0,X1] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f427,f372])).
fof(f21925,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713,f21712])).
fof(f21924,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719,f21713])).
fof(f21919,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720,f21719])).
fof(f21918,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726,f21720])).
fof(f21913,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728,f21726])).
fof(f21912,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f21911,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728])).
fof(f21911,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl3 | $spl5)),
  inference(forward_demodulation,[],[f21727,f8829])).
fof(f21727,plain,(
  s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl3 | $spl5)),
  inference(unit_resulting_resolution,[],[f8655,f425,f756])).
fof(f21910,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729,f21728])).
fof(f21909,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730,f21729])).
fof(f21908,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731,f21730])).
fof(f21907,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732,f21731])).
fof(f21906,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733,f21732])).
fof(f21905,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734,f21733])).
fof(f21904,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738,f21734])).
fof(f21902,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742,f21738])).
fof(f21900,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745,f21742])).
fof(f21898,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748,f21745])).
fof(f21896,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751,f21748])).
fof(f21894,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754,f21751])).
fof(f21892,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755,f21754])).
fof(f21891,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756,f21755])).
fof(f21890,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757,f21756])).
fof(f21889,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759,f21757])).
fof(f21888,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760,f21759])).
fof(f21887,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762,f21760])).
fof(f21886,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763,f21762])).
fof(f21885,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765,f21763])).
fof(f21884,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766,f21765])).
fof(f21883,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768,f21766])).
fof(f21882,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769,f21768])).
fof(f21881,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771,f21769])).
fof(f21880,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772,f21771])).
fof(f21879,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774,f21772])).
fof(f21878,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775,f21774])).
fof(f21877,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777,f21775])).
fof(f21876,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778,f21777])).
fof(f21875,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780,f21778])).
fof(f21874,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783,f21780])).
fof(f21872,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786,f21783])).
fof(f21870,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788,f21786])).
fof(f21869,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792,f21788])).
fof(f21867,plain,(
  $false | ($spl0 | $spl3 | $spl6 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f21791,f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792])).
fof(f21791,plain,(
  sP1('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl3 | $spl6)),
  inference(unit_resulting_resolution,[],[f425,f2958])).
fof(f21866,plain,(
  $false | ($spl0 | $spl3 | $spl10 | $spl92)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f949,f954,f974,f979,f990,f998,f1011,f1015,f1029,f1034,f1045,f1070,f1110,f1125,f1130,f1142,f1176,f1229,f1242,f1247,f1258,f1295,f1355,f1393,f1637,f1643,f1645,f1671,f1677,f1679,f1703,f1712,f1741,f1747,f1778,f1790,f1814,f1826,f1858,f1870,f1901,f1913,f1928,f1948,f2052,f2079,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2962,f3821,f3822,f3820,f5125,f5139,f5141,f5144,f5137,f5221,f5235,f5237,f5240,f5233,f5315,f5329,f5331,f5334,f5394,f5408,f5410,f5413,f5406,f5492,f5495,f5553,f5556,f5585,f5588,f5649,f5652,f5907,f5909,f5943,f5945,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5982,f5984,f5986,f5988,f5996,f5997,f5999,f6045,f6357,f6360,f6372,f6397,f6399,f6402,f6391,f6393,f6444,f6447,f6667,f6669,f6672,f6661,f6663,f6712,f6715,f6729,f6755,f6757,f6760,f6749,f6751,f6806,f6809,f6823,f6844,f6846,f6849,f6840,f6842,f6881,f6884,f6893,f6921,f6923,f6926,f6995,f6998,f7017,f7035,f7037,f7040,f7079,f7082,f7101,f7127,f7129,f7132,f7121,f7123,f7172,f7175,f7187,f7205,f7207,f7210,f7202,f7204,f7322,f7325,f7401,f7406,f7403,f7398,f3033,f2304,f1480,f286,f6361,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f7329,f7328,f7320,f7319,f7318,f7317,f7302,f7214,f7213,f7203,f7179,f7178,f7170,f7166,f7165,f7164,f7144,f7136,f7135,f7122,f7077,f7059,f6993,f6965,f6888,f6887,f6879,f6877,f6876,f6875,f6858,f6853,f6852,f6841,f6813,f6812,f6804,f6800,f6799,f6798,f6778,f6764,f6763,f6750,f6719,f6718,f6710,f6706,f6705,f6704,f6676,f6675,f6662,f6451,f6450,f6442,f6438,f6437,f6436,f6417,f6406,f6405,f6392,f6321,f6318,f6317,f6308,f6305,f6304,f6295,f6294,f6293,f6292,f6291,f6290,f6289,f6288,f6287,f6286,f6285,f6284,f6283,f6280,f6198,f6196,f6195,f6193,f6180,f6178,f6176,f6174,f6139,f6138,f6137,f6113,f6015,f6013,f6012,f6006,f6004,f6003,f6001,f5990,f5947,f5908,f5880,f5879,f5877,f5876,f5875,f5873,f5871,f5869,f5867,f5864,f5863,f5854,f5853,f5852,f5851,f5850,f5849,f5848,f5847,f5846,f5845,f5844,f5843,f5842,f5841,f5840,f5839,f5838,f5837,f5836,f5834,f5755,f5753,f5752,f5750,f5739,f5737,f5735,f5733,f5685,f5684,f5666,f5647,f5646,f5645,f5633,f5583,f5569,f5551,f5550,f5549,f5537,f5490,f5489,f5488,f5476,f5407,f5234,f5138,f3991,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2267,f2265,f2264,f2262,f2208,f2182,f2128,f2104,f2004,f1976,f1914,f1898,f1871,f1855,f1852,f1829,f1827,f1811,f1793,f1791,f1775,f1773,f1750,f1748,f1715,f1713,f1706,f1680,f1678,f1646,f1644,f1635,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f428,f283,f260,f259,f6341,f7469,f7470,f6337,f7076,f7034,f6988,f6916,f6014,f6011,f6010,f6009,f6008,f5998,f5995,f5994,f5993,f5992,f5981,f5958,f5956,f5955,f5954,f5953,f5952,f6056,f6058,f6059,f6060,f7462,f7464,f7465,f7466,f6055,f6057,f6061,f6062,f7461,f7463,f7467,f7468,f2311,f2564,f1546,f422,f9195,f9192,f9186,f9180,f9179,f9174,f9172,f9168,f9162,f9156,f9150,f9144,f9138,f9132,f9131,f9128,f9127,f9126,f9123,f9122,f9119,f9118,f9117,f9116,f9115,f9945,f9944,f9943,f9942,f10037,f10038,f10042,f10043,f10044,f10047,f10048,f10053,f10055,f10059,f10065,f10067,f10068,f10069,f10070,f10071,f10075,f10077,f10079,f10080,f10081,f10086,f10088,f10089,f10090,f10097,f10100,f10102,f10106,f10117,f10118,f10119,f10120,f10124,f10126,f10128,f10130,f10135,f10141,f10142,f10143,f10144,f10145,f10146,f10147,f10148,f10149,f10150,f10151,f10152,f10153,f10154,f10155,f10156,f10157,f10158,f9982,f9984,f9986,f9988,f10167,f10168,f10171,f10172,f10173,f10174,f10175,f10180,f10181,f10292,f10297,f10306,f10629,f10623,f10617,f10587,f10581,f10575,f10569,f10557,f10556,f10551,f10549,f10547,f10544,f10539,f10538,f10534,f10533,f10532,f10527,f10512,f10507,f10506,f10504,f10501,f10500,f10496,f10495,f10494,f10493,f10492,f10488,f10486,f10480,f10479,f10474,f10473,f10467,f10434,f10433,f10432,f10431,f10425,f10424,f10418,f10417,f10416,f10411,f10407,f10403,f10402,f10401,f10400,f10398,f10397,f10396,f10393,f10391,f10386,f10385,f10384,f10383,f10376,f10375,f10367,f10366,f10365,f10360,f10359,f10358,f10353,f10339,f10335,f10332,f10331,f10329,f10323,f10717,f10783,f10788,f10809,f10825,f10844,f10842,f10867,f10872,f10878,f10906,f10923,f11153,f11156,f11162,f11164,f11166,f11167,f11169,f11171,f11172,f11173,f11174,f11212,f11215,f11221,f11223,f11225,f11226,f11228,f11230,f11232,f11233,f11353,f11410,f11463,f11514,f11735,f11759,f11775,f11834,f11952,f11980,f11997,f12003,f12136,f12138,f12208,f12345,f12347,f12660,f12695,f12732,f12770,f12907,f12931,f13014,f13016,f13019,f13013,f13067,f13069,f13072,f13066,f13099,f13120,f13122,f13125,f13119,f13171,f13173,f13176,f13170,f13202,f13203,f13204,f13205,f13206,f13290,f13291,f13305,f13726,f13768,f13774,f13862,f14079,f14138,f14176,f14217,f14218,f14265,f14312,f14353,f14354,f14396,f14400,f14545,f14551,f14553,f14555,f14556,f14562,f14563,f14564,f14566,f14567,f14568,f14603,f14609,f14611,f14613,f14616,f14620,f14621,f14622,f14625,f14626,f15017,f15029,f15746,f15759,f15771,f15816,f15861,f15908,f15953,f15958,f16108,f16150,f16202,f16251,f16304,f16348,f16394,f16406,f16420,f16448,f16460,f16474,f16766,f16807,f16810,f16844,f16885,f16888,f16922,f16934,f16948,f16971,f16974,f16986,f17000,f17014,f17026,f17040,f17063,f17066,f17078,f17092,f17782,f17817,f17902,f17936,f17938,f17945,f17947,f17950,f17952,f17957,f17958,f17959,f17961,f17962,f17963,f18065,f18067,f18094,f18096,f18099,f18101,f18106,f18107,f18108,f18110,f18111,f18112,f18119,f18121,f18128,f18130,f18133,f18135,f18140,f18141,f18142,f18146,f18178,f18223,f18225,f18252,f18254,f18257,f18259,f18264,f18265,f18266,f18270,f18280,f18281,f18318,f18343,f18392,f18430,f18467,f18512,f18547,f18548,f18586,f18611,f18656,f18660,f19217,f19223,f19343,f19468,f19475,f19477,f19480,f19487,f19488,f19491,f19492,f19493,f19534,f19568,f19605,f19639,f19651,f19665,f19679,f19691,f19705,f19722,f19728,f19834,f19841,f19843,f19848,f19853,f19854,f19858,f19859,f19988,f20000,f20087,f20099,f20113,f20220,f20247,f20249,f20252,f20259,f20260,f20264,f20265,f20371,f20383,f20397,f20491,f20503,f20587,f20614,f20616,f20621,f20626,f20627,f20632,f20642,f20654,f20668,f20686,f20725,f20763,f20775,f20789,f20807,f20813,f20852,f20898,f20910,f20923,f20960,f21000,f21040,f21078,f21185,f21197,f21211,f21310,f21322,f21336,f21422,f21434,f21448,f21465,f21468,f21486,f9194,f9185,f9171,f9161,f9149,f9137,f9130,f9125,f9121,f9110,f9108,f9106,f9105,f9104,f9103,f9099,f9098,f9091,f9090,f9086,f9085,f9080,f9063,f9062,f9061,f9056,f9051,f9050,f9045,f9036,f9031,f9029,f9028,f9025,f9024,f9023,f9022,f9021,f9018,f9016,f9011,f9010,f9006,f9005,f9000,f8989,f8988,f8987,f8986,f8985,f8983,f8981,f8980,f8979,f8978,f8974,f8973,f8968,f8967,f8963,f8962,f8957,f8953,f8951,f8950,f8947,f8946,f8945,f8944,f8942,f8941,f8940,f8938,f21488,f21492,f21499,f21500,f7486,f425,f21792])).
fof(f21504,plain,(
  $false | ($spl5 | $spl138)),
  inference(subsumption_resolution,[],[f21503,f428])).
fof(f21503,plain,(
  p(s(bool,'F_0')) | ($spl5 | $spl138)),
  inference(forward_demodulation,[],[f21502,f8829])).
fof(f21502,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | $spl138),
  inference(unit_resulting_resolution,[],[f428,f21494,f429])).
fof(f21501,plain,(
  $false | ($spl5 | $spl138)),
  inference(unit_resulting_resolution,[],[f8818,f21494])).
fof(f8818,plain,(
  ~sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f428,f427,f429])).
fof(f21498,plain,(
  $false | ($spl5 | $spl136)),
  inference(subsumption_resolution,[],[f21497,f428])).
fof(f21497,plain,(
  p(s(bool,'F_0')) | ($spl5 | $spl136)),
  inference(forward_demodulation,[],[f21496,f8829])).
fof(f21496,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | $spl136),
  inference(unit_resulting_resolution,[],[f428,f21490,f429])).
fof(f21495,plain,(
  $false | ($spl5 | $spl136)),
  inference(unit_resulting_resolution,[],[f8822,f21490])).
fof(f8822,plain,(
  ~sP0('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl5),
  inference(unit_resulting_resolution,[],[f428,f427,f429])).
fof(f7486,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl92),
  inference(cnf_transformation,[],[f7486_D])).
fof(f7486_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f21494,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl138),
  inference(cnf_transformation,[],[f21494_D])).
fof(f21494_D,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f21492,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl0),
  inference(superposition,[],[f8941,f1480])).
fof(f21490,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl136),
  inference(cnf_transformation,[],[f21490_D])).
fof(f21490_D,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f21488,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl0),
  inference(superposition,[],[f8940,f1480])).
fof(f21484,plain,(
  $false | ($spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f21483,f428])).
fof(f21483,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl5 | $spl92)),
  inference(forward_demodulation,[],[f21482,f8829])).
fof(f21482,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | ($spl2 | $spl92)),
  inference(subsumption_resolution,[],[f21469,f237])).
fof(f21469,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | ($spl2 | $spl92)),
  inference(superposition,[],[f10037,f485])).
fof(f485,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f256])).
fof(f13301,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool))))) ) | $spl132),
  inference(cnf_transformation,[],[f13301_D])).
fof(f13301_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f13303,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl135),
  inference(cnf_transformation,[],[f13303_D])).
fof(f13303_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl135),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl135])])).
fof(f13291,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK15(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1546,f696])).
fof(f13290,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1546,f696])).
fof(f13212,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl126),
  inference(cnf_transformation,[],[f13212_D])).
fof(f13212_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f13208,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool))) ) | $spl122),
  inference(cnf_transformation,[],[f13208_D])).
fof(f13208_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f13215,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl131),
  inference(cnf_transformation,[],[f13215_D])).
fof(f13215_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f13206,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK15(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1545,f245])).
fof(f13213,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl128),
  inference(cnf_transformation,[],[f13213_D])).
fof(f13213_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f13205,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK15(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1545,f696])).
fof(f13204,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK15(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1545,f696])).
fof(f13207,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl120),
  inference(cnf_transformation,[],[f13207_D])).
fof(f13207_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f13210,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl125),
  inference(cnf_transformation,[],[f13210_D])).
fof(f13210_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f13203,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK15(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1545,f696])).
fof(f13202,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1545,f696])).
fof(f13174,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) | $spl118),
  inference(cnf_transformation,[],[f13174_D])).
fof(f13174_D,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f13176,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13175])).
fof(f13175,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13159,f756])).
fof(f13159,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f914,f696])).
fof(f13173,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13172])).
fof(f13172,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13158,f756])).
fof(f13158,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f914,f696])).
fof(f13123,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) | $spl116),
  inference(cnf_transformation,[],[f13123_D])).
fof(f13123_D,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f13125,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13124])).
fof(f13124,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13108,f756])).
fof(f13108,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f913,f696])).
fof(f13122,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13121])).
fof(f13121,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13107,f756])).
fof(f13107,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f913,f696])).
fof(f13070,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) | $spl114),
  inference(cnf_transformation,[],[f13070_D])).
fof(f13070_D,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f13072,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13071])).
fof(f13071,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13055,f756])).
fof(f13055,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f862,f696])).
fof(f13069,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13068])).
fof(f13068,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13054,f756])).
fof(f13054,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f862,f696])).
fof(f13017,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) | $spl112),
  inference(cnf_transformation,[],[f13017_D])).
fof(f13017_D,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f13019,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13018])).
fof(f13018,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13002,f756])).
fof(f13002,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f861,f696])).
fof(f13016,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13015])).
fof(f13015,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13001,f756])).
fof(f13001,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f861,f696])).
fof(f8316,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7612,f7652])).
fof(f7652,plain,(
  ( ! [X0,X1] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f449])).
fof(f449,plain,(
  ( ! [X0,X1] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f353])).
fof(f7648,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f7506,f282])).
fof(f7506,plain,(
  s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(superposition,[],[f286,f7496])).
fof(f7496,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7416,f486])).
fof(f486,plain,(
  s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f256])).
fof(f7416,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl1),
  inference(superposition,[],[f482,f1480])).
fof(f482,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f255])).
fof(f7612,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(superposition,[],[f1875,f7496])).
fof(f1875,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f1853,f485])).
fof(f1853,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f454,f437,f880,f345])).
fof(f437,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f347])).
fof(f454,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f356])).
fof(f8310,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7606,f7651])).
fof(f7651,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f447])).
fof(f447,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f352])).
fof(f7606,plain,(
  ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,'T_0'),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(superposition,[],[f1797,f7496])).
fof(f1797,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f1769,f485])).
fof(f1769,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f457,f441,f878,f345])).
fof(f457,plain,(
  ( ! [X0,X1] : (sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f357])).
fof(f8290,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542,f7544,f8281,f8284,f8286,f8289])).
fof(f8289,plain,(
  ( ! [X75] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7562,f7859])).
fof(f7562,plain,(
  ( ! [X75] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,'T_0')))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f881,f7496])).
fof(f8286,plain,(
  ( ! [X73] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7560,f7859])).
fof(f7560,plain,(
  ( ! [X73] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'T_0')))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f880,f7496])).
fof(f8284,plain,(
  ( ! [X72] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X72),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7559,f7859])).
fof(f7559,plain,(
  ( ! [X72] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f879,f7496])).
fof(f8281,plain,(
  ( ! [X70] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7557,f7859])).
fof(f7557,plain,(
  ( ! [X70] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X70),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f878,f7496])).
fof(f7544,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f833,f7496])).
fof(f7542,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f832,f7496])).
fof(f7540,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f831,f7496])).
fof(f7538,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f830,f7496])).
fof(f8274,plain,(
  ( ! [X35,X34] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7534,f237])).
fof(f7534,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X34,X35)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f414,f7496])).
fof(f8272,plain,(
  ( ! [X33,X32] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7533,f237])).
fof(f7533,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X32,X33)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f413,f7496])).
fof(f8270,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X28,X29)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8269,f7782])).
fof(f8269,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X28,X29)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7531,f237])).
fof(f7531,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X28,X29)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f409,f7496])).
fof(f8267,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X20,X21)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8266,f7782])).
fof(f8266,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X20,X21)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7527,f237])).
fof(f7527,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X20,X21)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f392,f7496])).
fof(f8264,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X19,X18)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8263,f7782])).
fof(f8263,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X19,X18)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7526,f237])).
fof(f7526,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X19,X18)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f391,f7496])).
fof(f8261,plain,(
  ( ! [X5] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X5)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7518,f237])).
fof(f7518,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),X5)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f297,f7496])).
fof(f8259,plain,(
  ( ! [X4] : (sP0(X4,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7517,f237])).
fof(f7517,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(X4,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f296,f7496])).
fof(f8257,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8202,f282])).
fof(f8202,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X0),s('type.realax.real',X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f286])).
fof(f8184,plain,(
  ( ! [X75] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7715])).
fof(f8183,plain,(
  ( ! [X73] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7714])).
fof(f8182,plain,(
  ( ! [X72] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X72),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7713])).
fof(f8181,plain,(
  ( ! [X70] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7712])).
fof(f8150,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7144])).
fof(f8141,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f6965])).
fof(f8131,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f6858])).
fof(f8118,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f6778])).
fof(f8093,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f6417])).
fof(f8240,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,X7)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8070,f7859])).
fof(f8070,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f6280])).
fof(f8228,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,X6)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8017,f7859])).
fof(f8017,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f5834])).
fof(f7960,plain,(
  ( ! [X0] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f5000])).
fof(f7927,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f2128])).
fof(f7925,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f2104])).
fof(f7921,plain,(
  ( ! [X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1911])).
fof(f7920,plain,(
  ( ! [X0] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1910])).
fof(f7919,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1898])).
fof(f7917,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1874])).
fof(f7915,plain,(
  ( ! [X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1868])).
fof(f7914,plain,(
  ( ! [X0] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1867])).
fof(f7913,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1855])).
fof(f7912,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1852])).
fof(f7911,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1829])).
fof(f7909,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1824])).
fof(f7908,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1823])).
fof(f7907,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1811])).
fof(f7905,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1796])).
fof(f7904,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1793])).
fof(f7902,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1788])).
fof(f7901,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1787])).
fof(f7900,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1775])).
fof(f7899,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1773])).
fof(f7898,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1750])).
fof(f7896,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1715])).
fof(f7894,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1706])).
fof(f7893,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1680])).
fof(f7891,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1646])).
fof(f7889,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1635])).
fof(f8217,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8216,f7782])).
fof(f8216,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7877,f7782])).
fof(f7877,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45)) | ~p(s(bool,X44))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f912])).
fof(f8215,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8214,f7782])).
fof(f8214,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7874,f7782])).
fof(f7874,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f909])).
fof(f8213,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7871,f7782])).
fof(f7871,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | ~p(s(bool,X23))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f906])).
fof(f8212,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7870,f7782])).
fof(f7870,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | ~p(s(bool,X20))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f905])).
fof(f7868,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f881])).
fof(f7867,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f880])).
fof(f7866,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f879])).
fof(f7865,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f878])).
fof(f7862,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f283])).
fof(f7859,plain,(
  ( ! [X276] : (s(bool,'T_0') = s(bool,X276)) ) | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858])).
fof(f7858,plain,(
  ( ! [X273,X275,X276,X274] : (s(fun(X273,bool),X274) = s(fun(X273,bool),X275) | s(bool,X276) = s(bool,g(s(X273,sK15(X274,X275,bool,X273)))) | s(bool,'T_0') = s(bool,X276)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7800,f7496])).
fof(f7800,plain,(
  ( ! [X273,X275,X276,X274] : (s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(fun(X273,bool),X274) = s(fun(X273,bool),X275) | s(bool,X276) = s(bool,g(s(X273,sK15(X274,X275,bool,X273)))) | s(bool,'T_0') = s(bool,X276)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7798,f2564])).
fof(f7857,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0))))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7799,f7798])).
fof(f7799,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0))))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7798,f1546])).
fof(f7798,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7797,f7782])).
fof(f7797,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7516,f237])).
fof(f7516,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f290,f7496])).
fof(f7754,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6890])).
fof(f7752,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6855])).
fof(f7748,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6726])).
fof(f7747,plain,(
  sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6723])).
fof(f7745,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6681])).
fof(f7792,plain,(
  ( ! [X101,X99,X100] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X99)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X101)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7741,f7782])).
fof(f7741,plain,(
  ( ! [X101,X99,X100] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X99)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X101) | ~p(s(bool,X99))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6636])).
fof(f7791,plain,(
  ( ! [X94,X95,X93] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X94),s(bool,X93)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X95)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7740,f7782])).
fof(f7740,plain,(
  ( ! [X94,X95,X93] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X94),s(bool,X93)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X95) | ~p(s(bool,X93))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6633])).
fof(f7790,plain,(
  ( ! [X92,X90,X91] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X91),s(bool,X90)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7739,f7782])).
fof(f7739,plain,(
  ( ! [X92,X90,X91] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X91),s(bool,X90)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ~p(s(bool,X90))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6632])).
fof(f7789,plain,(
  ( ! [X68,X66,X67] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X66),s(bool,X67)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X68)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7738,f7782])).
fof(f7738,plain,(
  ( ! [X68,X66,X67] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X66),s(bool,X67)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X68) | ~p(s(bool,X66))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6623])).
fof(f7788,plain,(
  ( ! [X61,X62,X60] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X62)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7737,f7782])).
fof(f7737,plain,(
  ( ! [X61,X62,X60] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X62) | ~p(s(bool,X60))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6620])).
fof(f7787,plain,(
  ( ! [X59,X57,X58] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7736,f7782])).
fof(f7736,plain,(
  ( ! [X59,X57,X58] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ~p(s(bool,X57))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6619])).
fof(f7784,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X28,X29)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7732,f7782])).
fof(f7732,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X28,X29) | ~p(s(bool,X28))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6607])).
fof(f7783,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X19,X18)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7727,f7782])).
fof(f7727,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X19,X18) | ~p(s(bool,X18))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6602])).
fof(f7782,plain,(
  ( ! [X9] : (p(s(bool,X9))) ) | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722])).
fof(f7722,plain,(
  ( ! [X8,X9] : (~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X9) | ~p(s(bool,X8)) | p(s(bool,X9))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6597])).
fof(f7721,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | p(s(bool,X7))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6596])).
fof(f7720,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X6) | p(s(bool,X6))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6595])).
fof(f7719,plain,(
  ( ! [X5] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X5)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6594])).
fof(f7718,plain,(
  ( ! [X4] : (sP0(X4,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6593])).
fof(f7717,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6585])).
fof(f7716,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK14))))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6584])).
fof(f7715,plain,(
  ( ! [X75] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,'T_0')))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6517])).
fof(f7714,plain,(
  ( ! [X73] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'T_0')))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6515])).
fof(f7713,plain,(
  ( ! [X72] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6514])).
fof(f7712,plain,(
  ( ! [X70] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X70),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6512])).
fof(f7711,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6499])).
fof(f7710,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6497])).
fof(f7709,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6495])).
fof(f7708,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6493])).
fof(f7707,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6456])).
fof(f7706,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6455])).
fof(f7705,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6454])).
fof(f7704,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6453])).
fof(f7703,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f6356])).
fof(f7702,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f5628])).
fof(f7701,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7648,f5532])).
fof(f7698,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f2040])).
fof(f7697,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1912])).
fof(f7695,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1869])).
fof(f7694,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1825])).
fof(f7692,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1789])).
fof(f7690,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1746])).
fof(f7687,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1711])).
fof(f7685,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1676])).
fof(f7683,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1642])).
fof(f7681,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1581])).
fof(f7677,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1458])).
fof(f7674,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1434])).
fof(f7673,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1433])).
fof(f7672,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1412])).
fof(f7670,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1405])).
fof(f7669,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1404])).
fof(f7666,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1372])).
fof(f7662,plain,(
  ( ! [X0] : (sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f689])).
fof(f7661,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f687])).
fof(f7660,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f649])).
fof(f7657,plain,(
  ( ! [X0,X1] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f480])).
fof(f7656,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f475])).
fof(f7655,plain,(
  ( ! [X0,X1] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f473])).
fof(f7654,plain,(
  ( ! [X0,X1] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f465])).
fof(f7653,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f463])).
fof(f7650,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f442])).
fof(f7649,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f440])).
fof(f7647,plain,(
  ( ! [X0] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK13)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK12))))) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7505,f237])).
fof(f7505,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK13)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK12))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f332,f7496])).
fof(f7498,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f428,f7496,f361])).
fof(f7499,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f237,f7496,f359])).
fof(f7500,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f428,f7496,f361])).
fof(f7501,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f237,f7496,f359])).
fof(f7472,plain,(
  ( ! [X80,X79] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X80)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',X79),s('type.realax.real',X80)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X79),s('type.realax.real',X80)))) ) | $spl4),
  inference(superposition,[],[f1511,f1480])).
fof(f7471,plain,(
  ( ! [X78,X77] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X78)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',X77),s('type.realax.real',X78)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X77),s('type.realax.real',X78)))) ) | $spl2),
  inference(superposition,[],[f1510,f1480])).
fof(f7362,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,X3) | p(s(bool,X3)) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f7084,f245])).
fof(f7332,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,X3) | p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl2),
  inference(superposition,[],[f7042,f696])).
fof(f7330,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f7316,f237])).
fof(f7316,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f1296,f6356])).
fof(f7327,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(subsumption_resolution,[],[f7312,f237])).
fof(f7312,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f1296,f486])).
fof(f7326,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7311,f237])).
fof(f7311,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f1296,f485])).
fof(f7263,plain,(
  ( ! [X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,X3) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f7000,f245])).
fof(f7223,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,X3) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl2),
  inference(superposition,[],[f6928,f696])).
fof(f7215,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f7201,f237])).
fof(f7201,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f1295,f6356])).
fof(f7212,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(subsumption_resolution,[],[f7197,f237])).
fof(f7197,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f1295,f486])).
fof(f7211,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7196,f237])).
fof(f7196,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f1295,f485])).
fof(f7180,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X57,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X58)))) ) | $spl1),
  inference(subsumption_resolution,[],[f7163,f237])).
fof(f7163,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X57,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X58)))) ) | $spl1),
  inference(superposition,[],[f1248,f6356])).
fof(f7177,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X42)))) ) | $spl4),
  inference(subsumption_resolution,[],[f7159,f237])).
fof(f7159,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X42)))) ) | $spl4),
  inference(superposition,[],[f1248,f486])).
fof(f7176,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7158,f237])).
fof(f7158,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39)))) ) | $spl2),
  inference(superposition,[],[f1248,f485])).
fof(f7138,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'T_0',X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f6607])).
fof(f7137,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X57,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)))) ) | $spl1),
  inference(subsumption_resolution,[],[f7120,f237])).
fof(f7120,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | p(s(bool,X57)) | ~p(s(bool,X58)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X57,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)))) ) | $spl1),
  inference(superposition,[],[f1247,f6356])).
fof(f7134,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X42),s(bool,X43)))) ) | $spl4),
  inference(subsumption_resolution,[],[f7116,f237])).
fof(f7116,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X42),s(bool,X43)))) ) | $spl4),
  inference(superposition,[],[f1247,f486])).
fof(f7133,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7115,f237])).
fof(f7115,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)))) ) | $spl2),
  inference(superposition,[],[f1247,f485])).
fof(f7095,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X0,'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f6606])).
fof(f7084,plain,(
  ( ! [X39,X38,X40] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'T_0')),X39,X38) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f7083,f485])).
fof(f7083,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X39,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f7068,f237])).
fof(f7068,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X39,X38)) ) | $spl2),
  inference(superposition,[],[f1177,f485])).
fof(f7053,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'T_0',X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f6603])).
fof(f7042,plain,(
  ( ! [X39,X38,X40] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X40)),X39,X38) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f7041,f485])).
fof(f7041,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X40)),X39,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f7026,f237])).
fof(f7026,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X40)),X39,X38)) ) | $spl2),
  inference(superposition,[],[f1176,f485])).
fof(f7011,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X0,'T_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f6602])).
fof(f7000,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'T_0')),X38,X39) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6999,f485])).
fof(f6999,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X38,X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6980,f237])).
fof(f6980,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X38,X39)) ) | $spl2),
  inference(superposition,[],[f1131,f485])).
fof(f6964,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(subsumption_resolution,[],[f6956,f237])).
fof(f6956,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(superposition,[],[f1511,f696])).
fof(f6955,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X8)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.bool.COND_3'(s(bool,X6),s('type.realax.real',X7),s('type.realax.real',X8)))))) | s(bool,'T_0') = s(bool,X6)) ) | $spl4),
  inference(superposition,[],[f1511,f882])).
fof(f6951,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f6943,f237])).
fof(f6943,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl2),
  inference(superposition,[],[f1510,f696])).
fof(f6942,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X8)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.bool.COND_3'(s(bool,X6),s('type.realax.real',X7),s('type.realax.real',X8)))))) | s(bool,'T_0') = s(bool,X6)) ) | $spl2),
  inference(superposition,[],[f1510,f882])).
fof(f6928,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X40)),X38,X39) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6927,f485])).
fof(f6927,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X40)),X38,X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6908,f237])).
fof(f6908,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X40)),X38,X39)) ) | $spl2),
  inference(superposition,[],[f1130,f485])).
fof(f6890,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f6596])).
fof(f6889,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6874,f237])).
fof(f6874,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)))) ) | $spl1),
  inference(superposition,[],[f1071,f6356])).
fof(f6886,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6870,f237])).
fof(f6870,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)))) ) | $spl4),
  inference(superposition,[],[f1071,f486])).
fof(f6885,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6869,f237])).
fof(f6869,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)))) ) | $spl2),
  inference(superposition,[],[f1071,f485])).
fof(f6855,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f6595])).
fof(f6854,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6839,f237])).
fof(f6839,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)))) ) | $spl1),
  inference(superposition,[],[f1070,f6356])).
fof(f6851,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6835,f237])).
fof(f6835,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)))) ) | $spl4),
  inference(superposition,[],[f1070,f486])).
fof(f6850,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6834,f237])).
fof(f6834,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)))) ) | $spl2),
  inference(superposition,[],[f1070,f485])).
fof(f6814,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl1),
  inference(subsumption_resolution,[],[f6797,f237])).
fof(f6797,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl1),
  inference(superposition,[],[f1035,f6356])).
fof(f6811,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6793,f237])).
fof(f6793,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f1035,f486])).
fof(f6810,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6792,f237])).
fof(f6792,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f1035,f485])).
fof(f6765,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58)) ) | $spl1),
  inference(subsumption_resolution,[],[f6748,f237])).
fof(f6748,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58)) ) | $spl1),
  inference(superposition,[],[f1034,f6356])).
fof(f6762,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6744,f237])).
fof(f6744,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f1034,f486])).
fof(f6761,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6743,f237])).
fof(f6743,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f1034,f485])).
fof(f6726,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f453,f441,f6455,f345])).
fof(f6723,plain,(
  sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(unit_resulting_resolution,[],[f6454,f341])).
fof(f6720,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl1),
  inference(subsumption_resolution,[],[f6703,f237])).
fof(f6703,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X57)),X58)) ) | $spl1),
  inference(superposition,[],[f980,f6356])).
fof(f6717,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6699,f237])).
fof(f6699,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f980,f486])).
fof(f6716,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6698,f237])).
fof(f6698,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f980,f485])).
fof(f6681,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'T_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f237,f456,f441,f6453,f343])).
fof(f6677,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58)) ) | $spl1),
  inference(subsumption_resolution,[],[f6660,f237])).
fof(f6660,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X59)),X58)) ) | $spl1),
  inference(superposition,[],[f979,f6356])).
fof(f6674,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6656,f237])).
fof(f6656,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f979,f486])).
fof(f6673,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6655,f237])).
fof(f6655,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f979,f485])).
fof(f6638,plain,(
  ( ! [X107,X105,X106] : (~p(s(bool,X105)) | p(s(bool,X106)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X107),s(bool,X105)),X106)) ) | $spl1),
  inference(subsumption_resolution,[],[f6531,f237])).
fof(f6531,plain,(
  ( ! [X107,X105,X106] : (~p(s(bool,'T_0')) | ~p(s(bool,X105)) | p(s(bool,X106)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X107),s(bool,X105)),X106)) ) | $spl1),
  inference(superposition,[],[f955,f6356])).
fof(f6637,plain,(
  ( ! [X103,X102,X104] : (~p(s(bool,X102)) | p(s(bool,X103)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X102),s(bool,X104)),X103)) ) | $spl1),
  inference(subsumption_resolution,[],[f6530,f237])).
fof(f6530,plain,(
  ( ! [X103,X102,X104] : (~p(s(bool,'T_0')) | ~p(s(bool,X102)) | p(s(bool,X103)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X102),s(bool,X104)),X103)) ) | $spl1),
  inference(superposition,[],[f954,f6356])).
fof(f6636,plain,(
  ( ! [X101,X99,X100] : (~p(s(bool,X99)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X99)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X101)) ) | $spl1),
  inference(subsumption_resolution,[],[f6529,f237])).
fof(f6529,plain,(
  ( ! [X101,X99,X100] : (~p(s(bool,'T_0')) | ~p(s(bool,X99)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X99)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X101)) ) | $spl1),
  inference(superposition,[],[f912,f6356])).
fof(f6633,plain,(
  ( ! [X94,X95,X93] : (~p(s(bool,X93)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X94),s(bool,X93)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X95)) ) | $spl1),
  inference(subsumption_resolution,[],[f6527,f237])).
fof(f6527,plain,(
  ( ! [X94,X95,X93] : (~p(s(bool,'T_0')) | ~p(s(bool,X93)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X94),s(bool,X93)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X95)) ) | $spl1),
  inference(superposition,[],[f910,f6356])).
fof(f6632,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,X90)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X91),s(bool,X90)),X92,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6526,f237])).
fof(f6526,plain,(
  ( ! [X92,X90,X91] : (~p(s(bool,'T_0')) | ~p(s(bool,X90)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X91),s(bool,X90)),X92,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f909,f6356])).
fof(f6517,plain,(
  ( ! [X75] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,'T_0')))) ) | $spl1),
  inference(superposition,[],[f881,f6356])).
fof(f6515,plain,(
  ( ! [X73] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'T_0')))) ) | $spl1),
  inference(superposition,[],[f880,f6356])).
fof(f6514,plain,(
  ( ! [X72] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f879,f6356])).
fof(f6512,plain,(
  ( ! [X70] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X70),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f878,f6356])).
fof(f6623,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,X66)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X66),s(bool,X67)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X68)) ) | $spl1),
  inference(subsumption_resolution,[],[f6510,f237])).
fof(f6510,plain,(
  ( ! [X68,X66,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X66)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X66),s(bool,X67)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X68)) ) | $spl1),
  inference(superposition,[],[f860,f6356])).
fof(f6620,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,X60)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X62)) ) | $spl1),
  inference(subsumption_resolution,[],[f6508,f237])).
fof(f6508,plain,(
  ( ! [X61,X62,X60] : (~p(s(bool,'T_0')) | ~p(s(bool,X60)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X62)) ) | $spl1),
  inference(superposition,[],[f858,f6356])).
fof(f6619,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6507,f237])).
fof(f6507,plain,(
  ( ! [X59,X57,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f857,f6356])).
fof(f6499,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | $spl1),
  inference(superposition,[],[f833,f6356])).
fof(f6497,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | $spl1),
  inference(superposition,[],[f832,f6356])).
fof(f6495,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f831,f6356])).
fof(f6493,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f830,f6356])).
fof(f6610,plain,(
  ( ! [X35,X34] : (~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X34,X35)) ) | $spl1),
  inference(subsumption_resolution,[],[f6489,f237])).
fof(f6489,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X34,X35)) ) | $spl1),
  inference(superposition,[],[f414,f6356])).
fof(f6609,plain,(
  ( ! [X33,X32] : (~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X32,X33)) ) | $spl1),
  inference(subsumption_resolution,[],[f6488,f237])).
fof(f6488,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X32,X33)) ) | $spl1),
  inference(superposition,[],[f413,f6356])).
fof(f6608,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X31,X30)) ) | $spl1),
  inference(subsumption_resolution,[],[f6487,f237])).
fof(f6487,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X31,X30)) ) | $spl1),
  inference(superposition,[],[f410,f6356])).
fof(f6607,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X28,X29) | ~p(s(bool,X28))) ) | $spl1),
  inference(subsumption_resolution,[],[f6486,f237])).
fof(f6486,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X28,X29)) ) | $spl1),
  inference(superposition,[],[f409,f6356])).
fof(f6606,plain,(
  ( ! [X26,X27] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X27,X26) | p(s(bool,X26))) ) | $spl1),
  inference(subsumption_resolution,[],[f6485,f237])).
fof(f6485,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X27,X26)) ) | $spl1),
  inference(superposition,[],[f408,f6356])).
fof(f6605,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6484,f237])).
fof(f6484,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f403,f6356])).
fof(f6604,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X23,X22)) ) | $spl1),
  inference(subsumption_resolution,[],[f6483,f237])).
fof(f6483,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X23,X22)) ) | $spl1),
  inference(superposition,[],[f393,f6356])).
fof(f6603,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X20,X21) | ~p(s(bool,X20))) ) | $spl1),
  inference(subsumption_resolution,[],[f6482,f237])).
fof(f6482,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X20,X21)) ) | $spl1),
  inference(superposition,[],[f392,f6356])).
fof(f6602,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X19,X18) | ~p(s(bool,X18))) ) | $spl1),
  inference(subsumption_resolution,[],[f6481,f237])).
fof(f6481,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X19,X18)) ) | $spl1),
  inference(superposition,[],[f391,f6356])).
fof(f6601,plain,(
  ( ! [X17,X16] : (p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X16,X17)) ) | $spl1),
  inference(subsumption_resolution,[],[f6480,f237])).
fof(f6480,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X16,X17)) ) | $spl1),
  inference(superposition,[],[f386,f6356])).
fof(f6600,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6479,f237])).
fof(f6479,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f378,f6356])).
fof(f6599,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X13)) ) | $spl1),
  inference(subsumption_resolution,[],[f6478,f237])).
fof(f6478,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X13)) ) | $spl1),
  inference(superposition,[],[f369,f6356])).
fof(f6598,plain,(
  ( ! [X10,X11] : (~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X11)) ) | $spl1),
  inference(subsumption_resolution,[],[f6477,f237])).
fof(f6477,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X11)) ) | $spl1),
  inference(superposition,[],[f350,f6356])).
fof(f6597,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X9)) ) | $spl1),
  inference(subsumption_resolution,[],[f6476,f237])).
fof(f6476,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X9)) ) | $spl1),
  inference(superposition,[],[f346,f6356])).
fof(f6596,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | p(s(bool,X7))) ) | $spl1),
  inference(subsumption_resolution,[],[f6475,f237])).
fof(f6475,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | sP1(X7,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f315,f6356])).
fof(f6595,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X6) | p(s(bool,X6))) ) | $spl1),
  inference(subsumption_resolution,[],[f6474,f237])).
fof(f6474,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X6)) ) | $spl1),
  inference(superposition,[],[f312,f6356])).
fof(f6594,plain,(
  ( ! [X5] : (sP0('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X5)) ) | $spl1),
  inference(subsumption_resolution,[],[f6473,f237])).
fof(f6473,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | sP0('const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),X5)) ) | $spl1),
  inference(superposition,[],[f297,f6356])).
fof(f6593,plain,(
  ( ! [X4] : (sP0(X4,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(subsumption_resolution,[],[f6472,f237])).
fof(f6472,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(X4,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f296,f6356])).
fof(f6585,plain,(
  s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))) = s('type.realax.real','const.real.min_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(forward_demodulation,[],[f6461,f282])).
fof(f6461,plain,(
  s('type.realax.real','const.real.min_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(superposition,[],[f286,f6356])).
fof(f6584,plain,(
  ( ! [X0] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK14)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))))) ) | $spl1),
  inference(subsumption_resolution,[],[f6460,f237])).
fof(f6460,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',sK14)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))))) ) | $spl1),
  inference(superposition,[],[f332,f6356])).
fof(f6453,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f6356,f361])).
fof(f6454,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f237,f6356,f359])).
fof(f6455,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f6356,f361])).
fof(f6456,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f6356,f359])).
fof(f6449,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6432,f237])).
fof(f6432,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f955,f486])).
fof(f6448,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6431,f237])).
fof(f6431,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f955,f485])).
fof(f6404,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6387,f237])).
fof(f6387,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f954,f486])).
fof(f6403,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6386,f237])).
fof(f6386,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f954,f485])).
fof(f6356,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(subsumption_resolution,[],[f6344,f428])).
fof(f6344,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s('type.realax.real',sK14))) | $spl1),
  inference(superposition,[],[f1325,f514])).
fof(f6328,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f467,f679])).
fof(f6329,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f468,f679])).
fof(f6331,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f470,f679])).
fof(f6332,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f471,f679])).
fof(f5882,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f467,f678])).
fof(f5883,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f468,f678])).
fof(f5885,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f470,f678])).
fof(f5886,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f471,f678])).
fof(f5654,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5643,f237])).
fof(f5643,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(superposition,[],[f912,f486])).
fof(f5653,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5642,f237])).
fof(f5642,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f912,f485])).
fof(f5628,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f475,f656])).
fof(f5630,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f477,f656])).
fof(f5631,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f478,f656])).
fof(f5596,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f5590,f245])).
fof(f5590,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'T_0')),X40,X38) | p(s(bool,X38))) ) | $spl2),
  inference(forward_demodulation,[],[f5589,f485])).
fof(f5589,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X40,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f5578,f237])).
fof(f5578,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X40,X38)) ) | $spl2),
  inference(superposition,[],[f911,f485])).
fof(f5558,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5547,f237])).
fof(f5547,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(superposition,[],[f910,f486])).
fof(f5557,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5546,f237])).
fof(f5546,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f910,f485])).
fof(f5532,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f475,f655])).
fof(f5534,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f477,f655])).
fof(f5535,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f478,f655])).
fof(f5518,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f5000,f696])).
fof(f5510,plain,(
  ( ! [X10,X9] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f5000,f696])).
fof(f5499,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f5000,f245])).
fof(f5497,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5486,f237])).
fof(f5486,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f909,f486])).
fof(f5496,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),X40,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5485,f237])).
fof(f5485,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),X40,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f909,f485])).
fof(f5463,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f4964,f696])).
fof(f5455,plain,(
  ( ! [X10,X9] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f4964,f696])).
fof(f5444,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f4964,f245])).
fof(f5417,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f4414,f696])).
fof(f5415,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5404,f237])).
fof(f5404,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(superposition,[],[f860,f486])).
fof(f5414,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5403,f237])).
fof(f5403,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f860,f485])).
fof(f5368,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f4384,f696])).
fof(f5342,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,X3) | p(s(bool,X3)) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl2),
  inference(superposition,[],[f5336,f696])).
fof(f5336,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),X40,X38) | p(s(bool,X38))) ) | $spl2),
  inference(forward_demodulation,[],[f5335,f485])).
fof(f5335,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X39)),X40,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f5324,f237])).
fof(f5324,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X39)),X40,X38)) ) | $spl2),
  inference(superposition,[],[f859,f485])).
fof(f5302,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1911,f696])).
fof(f5294,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1911,f696])).
fof(f5283,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1911,f245])).
fof(f5266,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1910,f696])).
fof(f5258,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1910,f696])).
fof(f5247,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1910,f245])).
fof(f5242,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5231,f237])).
fof(f5231,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X43)) ) | $spl4),
  inference(superposition,[],[f858,f486])).
fof(f5241,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5230,f237])).
fof(f5230,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f858,f485])).
fof(f5207,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1875,f696])).
fof(f5199,plain,(
  ( ! [X10,X9] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1875,f696])).
fof(f5188,plain,(
  ( ! [X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1875,f245])).
fof(f5170,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1874,f696])).
fof(f5162,plain,(
  ( ! [X10,X9] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1874,f696])).
fof(f5151,plain,(
  ( ! [X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1874,f245])).
fof(f5146,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5135,f237])).
fof(f5135,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f857,f486])).
fof(f5145,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),X40,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5134,f237])).
fof(f5134,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),X40,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f857,f485])).
fof(f5112,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1868,f696])).
fof(f5104,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1868,f696])).
fof(f5093,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1868,f245])).
fof(f5077,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1867,f696])).
fof(f5069,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1867,f696])).
fof(f5058,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1867,f245])).
fof(f5022,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1824,f696])).
fof(f5014,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1824,f696])).
fof(f5003,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1824,f245])).
fof(f5000,plain,(
  ( ! [X0] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1824,f341])).
fof(f4986,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1823,f696])).
fof(f4978,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1823,f696])).
fof(f4967,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1823,f245])).
fof(f4964,plain,(
  ( ! [X0] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1823,f341])).
fof(f4929,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1797,f696])).
fof(f4921,plain,(
  ( ! [X10,X9] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1797,f696])).
fof(f4910,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1797,f245])).
fof(f4892,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1796,f696])).
fof(f4884,plain,(
  ( ! [X10,X9] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1796,f696])).
fof(f4873,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1796,f245])).
fof(f4836,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1788,f696])).
fof(f4828,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl4),
  inference(superposition,[],[f1788,f696])).
fof(f4817,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f1788,f245])).
fof(f4802,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1787,f696])).
fof(f4794,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f1787,f696])).
fof(f4783,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f1787,f245])).
fof(f4735,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1745,f696])).
fof(f4705,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1744,f696])).
fof(f4631,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1724,f696])).
fof(f4600,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1723,f696])).
fof(f4518,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1710,f696])).
fof(f4489,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1709,f696])).
fof(f4417,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1675,f696])).
fof(f4414,plain,(
  ( ! [X0] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1675,f341])).
fof(f4387,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1674,f696])).
fof(f4384,plain,(
  ( ! [X0] : (sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1674,f341])).
fof(f4306,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1657,f696])).
fof(f4275,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1656,f696])).
fof(f4228,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl4),
  inference(superposition,[],[f1641,f696])).
fof(f4200,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1640,f696])).
fof(f514,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f260])).
fof(f1642,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(superposition,[],[f830,f514])).
fof(f1654,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f1636,f514])).
fof(f1636,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f447,f440,f830,f345])).
fof(f1676,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(superposition,[],[f831,f514])).
fof(f1711,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | $spl1),
  inference(superposition,[],[f832,f514])).
fof(f1725,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f1702,f514])).
fof(f1702,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f449,f441,f832,f345])).
fof(f1746,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | $spl1),
  inference(superposition,[],[f833,f514])).
fof(f1787,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f878,f485])).
fof(f1788,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f878,f486])).
fof(f1789,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(superposition,[],[f878,f514])).
fof(f1794,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f1774,f514])).
fof(f1774,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f447,f440,f878,f345])).
fof(f1796,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f1770,f486])).
fof(f1770,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f458,f441,f878,f345])).
fof(f1823,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f879,f485])).
fof(f1824,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f879,f486])).
fof(f1825,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(superposition,[],[f879,f514])).
fof(f1867,plain,(
  ( ! [X0] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(superposition,[],[f880,f485])).
fof(f1868,plain,(
  ( ! [X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl4),
  inference(superposition,[],[f880,f486])).
fof(f1869,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | $spl1),
  inference(superposition,[],[f880,f514])).
fof(f1874,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f1854,f486])).
fof(f1854,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f455,f438,f880,f345])).
fof(f1876,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f1851,f514])).
fof(f1851,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f449,f441,f880,f345])).
fof(f1910,plain,(
  ( ! [X0] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(superposition,[],[f881,f485])).
fof(f1911,plain,(
  ( ! [X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl4),
  inference(superposition,[],[f881,f486])).
fof(f1912,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | $spl1),
  inference(superposition,[],[f881,f514])).
fof(f2113,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X0) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2112,f485])).
fof(f2112,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X0)) ) | $spl2),
  inference(subsumption_resolution,[],[f2105,f237])).
fof(f2105,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),X0)) ) | $spl2),
  inference(superposition,[],[f907,f485])).
fof(f2137,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0'))) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2136,f485])).
fof(f2136,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f2129,f237])).
fof(f2129,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) ) | $spl2),
  inference(superposition,[],[f908,f485])).
fof(f2417,plain,(
  ( ! [X39,X37,X38,X36] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X37),s(bool,X36)),X38) | p(s(bool,X38)) | s(bool,X36) = s(bool,X39) | s(bool,'T_0') = s(bool,X39)) ) | $spl2),
  inference(superposition,[],[f2113,f696])).
fof(f2418,plain,(
  ( ! [X43,X41,X42,X40] : (sP1(X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X40))) | p(s(bool,X41)) | s(bool,X40) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) ) | $spl2),
  inference(superposition,[],[f2137,f696])).
fof(f1510,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1501,f237])).
fof(f1501,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X0))))) ) | $spl2),
  inference(superposition,[],[f331,f485])).
fof(f1511,plain,(
  ( ! [X1] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X1)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X1))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1502,f237])).
fof(f1502,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',X1)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',X1))))) ) | $spl4),
  inference(superposition,[],[f331,f486])).
fof(f2416,plain,(
  ( ! [X35,X33,X34,X32] : (sP1(X33,'const.bool.COND_3'(s(bool,X32),s(bool,X32),s(bool,X34))) | p(s(bool,X33)) | s(bool,X32) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) ) | $spl2),
  inference(superposition,[],[f2088,f696])).
fof(f2415,plain,(
  ( ! [X30,X28,X31,X29] : (sP1('const.bool.COND_3'(s(bool,X28),s(bool,X28),s(bool,X29)),X30) | p(s(bool,X30)) | s(bool,X28) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl2),
  inference(superposition,[],[f2061,f696])).
fof(f2153,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2137,f245])).
fof(f2143,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2113,f245])).
fof(f2120,plain,(
  ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f428,f2101,f402])).
fof(f2101,plain,(
  ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f428,f1302])).
fof(f2088,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2087,f485])).
fof(f2087,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X1)))) ) | $spl2),
  inference(subsumption_resolution,[],[f2080,f237])).
fof(f2080,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X1)))) ) | $spl2),
  inference(superposition,[],[f856,f485])).
fof(f2061,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2060,f485])).
fof(f2060,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X1)),X0)) ) | $spl2),
  inference(subsumption_resolution,[],[f2053,f237])).
fof(f2053,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X1)),X0)) ) | $spl2),
  inference(superposition,[],[f855,f485])).
fof(f2049,plain,(
  ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f428,f2044,f402])).
fof(f2044,plain,(
  ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f428,f1301])).
fof(f2040,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl1),
  inference(subsumption_resolution,[],[f2035,f428])).
fof(f2035,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,X2) = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl1),
  inference(superposition,[],[f756,f514])).
fof(f2021,plain,(
  ~sP11('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f1995,f398])).
fof(f1995,plain,(
  ~sP10('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f237,f1254])).
fof(f1974,plain,(
  ~sP11('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f1962,f398])).
fof(f1962,plain,(
  ~sP10('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f237,f1253])).
fof(f1921,plain,(
  ~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f1884,f381])).
fof(f1884,plain,(
  ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f428,f428,f1138])).
fof(f1845,plain,(
  ~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f1831,f381])).
fof(f1831,plain,(
  ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f428,f428,f1137])).
fof(f1760,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f448,f441,f1582,f344])).
fof(f1745,plain,(
  ( ! [X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | $spl4),
  inference(superposition,[],[f833,f486])).
fof(f1744,plain,(
  ( ! [X0] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(superposition,[],[f833,f485])).
fof(f1728,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f449,f441,f1580,f345])).
fof(f1710,plain,(
  ( ! [X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | $spl4),
  inference(superposition,[],[f832,f486])).
fof(f1709,plain,(
  ( ! [X0] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(superposition,[],[f832,f485])).
fof(f1724,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f1704,f485])).
fof(f1704,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f454,f437,f832,f345])).
fof(f1723,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f1705,f486])).
fof(f1705,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))),s(bool,X0)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f455,f438,f832,f345])).
fof(f1689,plain,(
  ~sP4('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f456,f449,f1559,f343])).
fof(f1675,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f831,f486])).
fof(f1674,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f831,f485])).
fof(f1641,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f830,f486])).
fof(f1640,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f830,f485])).
fof(f1657,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f1631,f485])).
fof(f1631,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f457,f441,f830,f345])).
fof(f1656,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f1632,f486])).
fof(f1632,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f458,f441,f830,f345])).
fof(f1580,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f428,f514,f361])).
fof(f1581,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f237,f514,f359])).
fof(f1582,plain,(
  ~sP5('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f428,f514,f361])).
fof(f1559,plain,(
  ~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f237,f482,f360])).
fof(f1562,plain,(
  ~sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f237,f482,f360])).
fof(f1433,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f457,f449,f441,f428,f345])).
fof(f1434,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f458,f449,f441,f428,f345])).
fof(f1453,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f454,f446,f439,f428,f345])).
fof(f1454,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f455,f446,f439,f428,f345])).
fof(f1456,plain,(
  sP5('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f453,f447,f440,f428,f345])).
fof(f1457,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f454,f447,f440,f428,f345])).
fof(f1458,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f455,f447,f440,f428,f345])).
fof(f1394,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f451,f444,f439,f428,f344])).
fof(f1395,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f452,f445,f439,f428,f344])).
fof(f1403,plain,(
  sP5('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | $spl1),
  inference(unit_resulting_resolution,[],[f450,f443,f440,f428,f344])).
fof(f1404,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f451,f444,f440,f428,f344])).
fof(f1405,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f452,f445,f440,f428,f344])).
fof(f1407,plain,(
  sP5('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f457,f448,f441,f428,f344])).
fof(f1408,plain,(
  sP5('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f458,f448,f441,f428,f344])).
fof(f1411,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f457,f448,f442,f428,f344])).
fof(f1412,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f458,f448,f442,f428,f344])).
fof(f1356,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f456,f444,f436,f237,f343])).
fof(f1357,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f456,f445,f436,f237,f343])).
fof(f1360,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f456,f444,f437,f237,f343])).
fof(f1361,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f456,f445,f437,f237,f343])).
fof(f1364,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0') | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f456,f444,f438,f237,f343])).
fof(f1365,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f456,f445,f438,f237,f343])).
fof(f1368,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f456,f449,f441,f237,f343])).
fof(f1369,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f456,f812,f441,f237,f343])).
fof(f1370,plain,(
  ~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f456,f814,f441,f237,f343])).
fof(f1372,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f456,f448,f442,f237,f343])).
fof(f1373,plain,(
  sP5('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f456,f449,f442,f237,f343])).
fof(f1329,plain,(
  ~sP7('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f1307,f362])).
fof(f1307,plain,(
  ~sP6('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f428,f1041])).
fof(f1302,plain,(
  ( ! [X2,X3] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1292,f237])).
fof(f1292,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f410,f486])).
fof(f1301,plain,(
  ( ! [X0,X1] : (~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1291,f237])).
fof(f1291,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f410,f485])).
fof(f1281,plain,(
  ~sP7('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f1269,f362])).
fof(f1269,plain,(
  ~sP6('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f428,f1040])).
fof(f1254,plain,(
  ( ! [X2,X3] : (~sP10(X3,X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | ~p(s(bool,X3)) | p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1244,f237])).
fof(f1244,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | ~p(s(bool,X3)) | ~sP10(X3,X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f403,f486])).
fof(f1253,plain,(
  ( ! [X0,X1] : (~sP10(X1,X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ~p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1243,f237])).
fof(f1243,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP10(X1,X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f403,f485])).
fof(f1230,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f480,f237,f428,f402])).
fof(f1213,plain,(
  ~sP3('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f428,f986])).
fof(f1196,plain,(
  ~sP3('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f428,f985])).
fof(f1188,plain,(
  ~sP5('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f1154,f341])).
fof(f1184,plain,(
  ( ! [X2,X3] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2) | p(s(bool,X3)) | p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1173,f237])).
fof(f1173,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f393,f486])).
fof(f1183,plain,(
  ( ! [X0,X1] : (~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1172,f237])).
fof(f1172,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f393,f485])).
fof(f1154,plain,(
  ~sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f428,f961])).
fof(f1138,plain,(
  ( ! [X2,X3] : (~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | p(s(bool,X3)) | p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1127,f237])).
fof(f1127,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f386,f486])).
fof(f1137,plain,(
  ( ! [X0,X1] : (~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1126,f237])).
fof(f1126,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f386,f485])).
fof(f1111,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f473,f428,f428,f385])).
fof(f1106,plain,(
  ~sP5('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f1094,f341])).
fof(f1094,plain,(
  ~sP4('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f428,f960])).
fof(f1075,plain,(
  ( ! [X2,X3] : (~sP7(X3,X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1067,f237])).
fof(f1067,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP7(X3,X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f378,f486])).
fof(f1074,plain,(
  ( ! [X0,X1] : (~sP7(X1,X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1066,f237])).
fof(f1066,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP7(X1,X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f378,f485])).
fof(f1041,plain,(
  ( ! [X2,X3] : (~sP6(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1031,f237])).
fof(f1031,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP6(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3)) ) | $spl4),
  inference(superposition,[],[f369,f486])).
fof(f1040,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1030,f237])).
fof(f1030,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f369,f485])).
fof(f1016,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f460,f237,f237,f365])).
fof(f1017,plain,(
  sP7('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f461,f237,f237,f365])).
fof(f986,plain,(
  ( ! [X2,X3] : (~sP3(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f976,f237])).
fof(f976,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP3(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3)) ) | $spl4),
  inference(superposition,[],[f350,f486])).
fof(f985,plain,(
  ( ! [X0,X1] : (~sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f975,f237])).
fof(f975,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP3(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f350,f485])).
fof(f966,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f237,f631])).
fof(f961,plain,(
  ( ! [X2,X3] : (~sP4(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f951,f237])).
fof(f951,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP4(X2,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3)) ) | $spl4),
  inference(superposition,[],[f346,f486])).
fof(f960,plain,(
  ( ! [X0,X1] : (~sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f950,f237])).
fof(f950,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f346,f485])).
fof(f936,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f237,f630])).
fof(f812,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f428,f485,f361])).
fof(f814,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f428,f486,f361])).
fof(f816,plain,(
  ~sP5('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f485,f361])).
fof(f817,plain,(
  ~sP5('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f486,f361])).
fof(f790,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f237,f485,f359])).
fof(f791,plain,(
  sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f237,f486,f359])).
fof(f792,plain,(
  sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f237,f485,f359])).
fof(f793,plain,(
  sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f237,f486,f359])).
fof(f776,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f620])).
fof(f757,plain,(
  ( ! [X0] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f619])).
fof(f738,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f237,f597])).
fof(f687,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f463,f428,f415])).
fof(f689,plain,(
  ( ! [X0] : (sP7('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f465,f428,f415])).
fof(f679,plain,(
  ( ! [X2,X3] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f677,f237])).
fof(f677,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f414,f486])).
fof(f678,plain,(
  ( ! [X0,X1] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f676,f237])).
fof(f676,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f414,f485])).
fof(f671,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f467,f237,f414])).
fof(f672,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f468,f237,f414])).
fof(f674,plain,(
  ( ! [X0] : (sP9('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f470,f237,f414])).
fof(f675,plain,(
  ( ! [X0] : (sP9('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f471,f237,f414])).
fof(f656,plain,(
  ( ! [X2,X3] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f654,f237])).
fof(f654,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f413,f486])).
fof(f655,plain,(
  ( ! [X0,X1] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f653,f237])).
fof(f653,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f413,f485])).
fof(f649,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f475,f237,f413])).
fof(f651,plain,(
  ( ! [X0] : (sP11('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f477,f237,f413])).
fof(f652,plain,(
  ( ! [X0] : (sP11('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f478,f237,f413])).
fof(f631,plain,(
  ( ! [X2,X3] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f629,f237])).
fof(f629,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f409,f486])).
fof(f630,plain,(
  ( ! [X0,X1] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f628,f237])).
fof(f628,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f409,f485])).
fof(f624,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f237,f596])).
fof(f620,plain,(
  ( ! [X2,X3] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2) | p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f618,f237])).
fof(f618,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f408,f486])).
fof(f619,plain,(
  ( ! [X0,X1] : (sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f617,f237])).
fof(f617,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f408,f485])).
fof(f607,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f237,f586])).
fof(f597,plain,(
  ( ! [X2,X3] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f595,f237])).
fof(f595,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f392,f486])).
fof(f596,plain,(
  ( ! [X0,X1] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f594,f237])).
fof(f594,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f392,f485])).
fof(f590,plain,(
  ( ! [X0] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f237,f585])).
fof(f586,plain,(
  ( ! [X2,X3] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f584,f237])).
fof(f584,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f391,f486])).
fof(f585,plain,(
  ( ! [X0,X1] : (sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f583,f237])).
fof(f583,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f391,f485])).
fof(f575,plain,(
  sP1('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl4),
  inference(unit_resulting_resolution,[],[f428,f537])).
fof(f560,plain,(
  sP1('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f428,f536])).
fof(f555,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f428,f527])).
fof(f537,plain,(
  ( ! [X1] : (sP1(X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | p(s(bool,X1))) ) | $spl4),
  inference(subsumption_resolution,[],[f535,f237])).
fof(f535,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1(X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(superposition,[],[f315,f486])).
fof(f536,plain,(
  ( ! [X0] : (sP1(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f534,f237])).
fof(f534,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f315,f485])).
fof(f530,plain,(
  sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f428,f526])).
fof(f527,plain,(
  ( ! [X1] : (sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1) | p(s(bool,X1))) ) | $spl4),
  inference(subsumption_resolution,[],[f525,f237])).
fof(f525,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl4),
  inference(superposition,[],[f312,f486])).
fof(f526,plain,(
  ( ! [X0] : (sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f524,f237])).
fof(f524,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(superposition,[],[f312,f485])).
fof(f480,plain,(
  ( ! [X0,X1] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f406])).
fof(f477,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f405])).
fof(f478,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f405])).
fof(f475,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f404])).
fof(f473,plain,(
  ( ! [X0,X1] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f389])).
fof(f470,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f388])).
fof(f471,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f388])).
fof(f467,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f387])).
fof(f468,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f387])).
fof(f465,plain,(
  ( ! [X0,X1] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f372])).
fof(f463,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f371])).
fof(f460,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f370])).
fof(f461,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f370])).
fof(f458,plain,(
  ( ! [X0,X1] : (sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f357])).
fof(f455,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f356])).
fof(f451,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f355])).
fof(f452,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f355])).
fof(f444,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f351])).
fof(f445,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f351])).
fof(f442,plain,(
  ( ! [X0,X1] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f349])).
fof(f440,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f423,f348])).
fof(f438,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f347])).
fof(f434,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f297])).
fof(f435,plain,(
  ( ! [X0] : (sP0('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f297])).
fof(f431,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f424,f296])).
fof(f432,plain,(
  ( ! [X0] : (sP0(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f426,f296])).
fof(f8287,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542,f7544,f8281,f8284,f8286])).
fof(f8285,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542,f7544,f8281,f8284])).
fof(f8282,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542,f7544,f8281])).
fof(f8279,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542,f7544])).
fof(f8278,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540,f7542])).
fof(f8277,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538,f7540])).
fof(f8276,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274,f7538])).
fof(f8275,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272,f8274])).
fof(f8273,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270,f8272])).
fof(f8271,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267,f8270])).
fof(f8268,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264,f8267])).
fof(f8265,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261,f8264])).
fof(f8262,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259,f8261])).
fof(f8260,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257,f8259])).
fof(f8258,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184,f8257])).
fof(f8256,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8255,f7782])).
fof(f8255,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8189,f237])).
fof(f8189,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f321])).
fof(f8254,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183,f8184])).
fof(f8253,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182,f8183])).
fof(f8252,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181,f8182])).
fof(f8251,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150,f8181])).
fof(f8250,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8163,f8217])).
fof(f8163,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','T_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7302])).
fof(f8249,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141,f8150])).
fof(f8248,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8144,f8215])).
fof(f8144,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f7059])).
fof(f8247,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131,f8141])).
fof(f8246,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118,f8131])).
fof(f8245,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093,f8118])).
fof(f8244,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240,f8093])).
fof(f8241,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228,f8240])).
fof(f8229,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f236,f235,f234,f237,f245,f256,f255,f282,f290,f287,f297,f296,f429,f315,f312,f311,f310,f330,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f426,f424,f423,f432,f431,f430,f435,f434,f433,f438,f437,f436,f440,f439,f442,f441,f445,f444,f443,f447,f446,f449,f448,f452,f451,f450,f455,f454,f453,f458,f457,f456,f461,f460,f459,f463,f462,f465,f464,f468,f467,f466,f471,f470,f469,f473,f472,f475,f474,f478,f477,f476,f480,f479,f482,f481,f486,f485,f519,f520,f523,f526,f527,f530,f533,f536,f537,f548,f555,f556,f559,f560,f563,f571,f575,f576,f579,f582,f585,f586,f590,f593,f596,f597,f606,f607,f608,f616,f619,f620,f624,f627,f630,f631,f652,f651,f649,f655,f656,f675,f674,f672,f671,f678,f679,f689,f687,f696,f738,f756,f757,f776,f783,f782,f793,f792,f791,f790,f805,f803,f817,f816,f814,f812,f833,f832,f831,f830,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f882,f936,f949,f960,f961,f954,f966,f974,f985,f986,f979,f990,f998,f1011,f1017,f1016,f1015,f1029,f1040,f1041,f1034,f1045,f1074,f1075,f1070,f1094,f1106,f1111,f1110,f1125,f1137,f1138,f1130,f1142,f1154,f1183,f1184,f1176,f1188,f1196,f1213,f1230,f1229,f1242,f1253,f1254,f1247,f1258,f1269,f1281,f1301,f1302,f1295,f1307,f1329,f1373,f1372,f1370,f1369,f1368,f1365,f1364,f1361,f1360,f1357,f1356,f1355,f1412,f1411,f1408,f1407,f1405,f1404,f1403,f1395,f1394,f1393,f1458,f1457,f1456,f1454,f1453,f1434,f1433,f1562,f1559,f1582,f1581,f1580,f1637,f1656,f1657,f1640,f1641,f1643,f1645,f1671,f1674,f1675,f1677,f1679,f1689,f1723,f1724,f1703,f1709,f1710,f1712,f1728,f1741,f1744,f1745,f1747,f1760,f1778,f1790,f1814,f1826,f1831,f1845,f1858,f1870,f1884,f1901,f1913,f1921,f1928,f1948,f1962,f1974,f1995,f2021,f2040,f2044,f2049,f2052,f2061,f2079,f2088,f2101,f2120,f2143,f2153,f2181,f2196,f2207,f2249,f2251,f2253,f2255,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2415,f2416,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f3033,f2304,f1480,f286,f1511,f1510,f3034,f3032,f3031,f1325,f332,f331,f321,f320,f2311,f2564,f3030,f3029,f2522,f2520,f2519,f2517,f2463,f2461,f2460,f2458,f2418,f2417,f2267,f2265,f2264,f2262,f2208,f2182,f2137,f2128,f2113,f2104,f2004,f1976,f1914,f1912,f1911,f1910,f1898,f1876,f1875,f1874,f1871,f1869,f1868,f1867,f1855,f1852,f1829,f1827,f1825,f1824,f1823,f1811,f1797,f1796,f1794,f1793,f1791,f1789,f1788,f1787,f1775,f1773,f1750,f1748,f1746,f1725,f1715,f1713,f1711,f1706,f1680,f1678,f1676,f1654,f1646,f1644,f1642,f1635,f1546,f1545,f1296,f1248,f1177,f1131,f1071,f1035,f980,f955,f914,f913,f912,f911,f910,f909,f908,f907,f906,f905,f896,f881,f880,f879,f878,f844,f514,f428,f283,f260,f259,f4200,f4228,f4275,f4306,f4384,f4387,f4414,f4417,f4489,f4518,f4600,f4631,f4705,f4735,f4783,f4794,f4802,f4817,f4828,f4836,f4873,f4884,f4892,f4910,f4921,f4929,f4964,f4967,f4978,f4986,f5000,f5003,f5014,f5022,f5058,f5069,f5077,f5093,f5104,f5112,f5125,f5139,f5141,f5144,f5145,f5146,f5137,f5138,f5151,f5162,f5170,f5188,f5199,f5207,f5221,f5235,f5237,f5240,f5241,f5242,f5233,f5234,f5247,f5258,f5266,f5283,f5294,f5302,f5315,f5329,f5331,f5334,f5336,f5342,f5368,f5394,f5408,f5410,f5413,f5414,f5415,f5406,f5407,f5417,f5444,f5455,f5463,f5476,f5490,f5492,f5495,f5496,f5497,f5488,f5489,f5499,f5510,f5518,f5535,f5534,f5532,f5537,f5551,f5553,f5556,f5557,f5558,f5549,f5550,f5569,f5583,f5585,f5588,f5590,f5596,f5631,f5630,f5628,f5633,f5647,f5649,f5652,f5653,f5654,f5645,f5646,f5666,f5684,f5685,f5834,f5836,f5837,f5838,f5839,f5840,f5841,f5842,f5843,f5844,f5845,f5846,f5847,f5848,f5849,f5850,f5851,f5852,f5853,f5854,f5733,f5735,f5737,f5739,f5863,f5864,f5867,f5750,f5752,f5753,f5755,f5869,f5871,f5873,f5875,f5876,f5877,f5879,f5880,f5886,f5885,f5883,f5882,f5907,f5908,f5909,f5943,f5945,f5947,f5952,f5953,f5954,f5955,f5956,f5958,f5959,f5960,f5961,f5962,f5963,f5964,f5965,f5966,f5967,f5968,f5969,f5970,f5971,f5972,f5973,f5974,f5975,f5976,f5981,f5982,f5984,f5986,f5988,f5990,f5992,f5993,f5994,f5995,f5996,f5997,f5998,f5999,f6001,f6003,f6004,f6006,f6008,f6009,f6010,f6011,f6012,f6013,f6014,f6015,f6055,f6056,f6057,f6058,f6059,f6060,f6061,f6062,f6113,f6137,f6138,f6139,f6280,f6283,f6284,f6285,f6286,f6287,f6288,f6289,f6290,f6291,f6292,f6293,f6294,f6295,f6174,f6176,f6178,f6180,f6304,f6305,f6308,f6193,f6195,f6196,f6198,f6317,f6318,f6321,f6332,f6331,f6329,f6328,f6337,f6341,f6356,f6357,f6360,f6361,f6372,f6397,f6399,f6402,f6403,f6404,f6405,f6406,f6391,f6392,f6393,f6417,f6442,f6444,f6447,f6448,f6449,f6450,f6451,f6436,f6437,f6438,f6456,f6455,f6454,f6453,f6584,f6585,f6593,f6594,f6595,f6596,f6597,f6598,f6599,f6600,f6601,f6602,f6603,f6604,f6605,f6606,f6607,f6608,f6609,f6610,f6493,f6495,f6497,f6499,f6619,f6620,f6623,f6512,f6514,f6515,f6517,f6632,f6633,f6636,f6637,f6638,f6667,f6669,f6672,f6673,f6674,f6675,f6676,f6677,f6661,f6662,f6663,f6681,f6710,f6712,f6715,f6716,f6717,f6718,f6719,f6720,f6704,f6705,f6706,f6723,f6726,f6729,f6755,f6757,f6760,f6761,f6762,f6763,f6764,f6765,f6749,f6750,f6751,f6778,f6804,f6806,f6809,f6810,f6811,f6812,f6813,f6814,f6798,f6799,f6800,f6823,f6844,f6846,f6849,f6850,f6851,f6852,f6853,f6854,f6840,f6841,f6842,f6855,f6858,f6879,f6881,f6884,f6885,f6886,f6887,f6888,f6889,f6875,f6876,f6877,f6890,f6893,f6921,f6923,f6926,f6928,f6916,f6942,f6951,f6955,f6964,f6965,f6993,f6995,f6998,f7000,f6988,f7011,f7017,f7035,f7037,f7040,f7042,f7034,f7053,f7059,f7077,f7079,f7082,f7084,f7076,f7095,f7101,f7127,f7129,f7132,f7133,f7134,f7135,f7136,f7137,f7121,f7122,f7123,f7138,f7144,f7170,f7172,f7175,f7176,f7177,f7178,f7179,f7180,f7164,f7165,f7166,f7187,f7205,f7207,f7210,f7211,f7212,f7213,f7214,f7215,f7202,f7203,f7204,f7223,f7263,f7302,f7320,f7322,f7325,f7326,f7327,f7328,f7329,f7330,f7317,f7318,f7319,f7332,f7362,f7398,f7401,f7403,f7406,f7407,f7408,f7409,f7410,f7411,f7412,f7413,f7414,f7415,f7496,f7461,f7462,f7463,f7464,f7465,f7466,f7467,f7468,f7469,f7470,f7471,f7472,f7501,f7500,f7499,f7498,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7656,f7657,f7660,f7661,f7662,f7666,f7669,f7670,f7672,f7673,f7674,f7677,f7681,f7683,f7685,f7687,f7690,f7692,f7694,f7695,f7697,f7698,f7701,f7702,f7703,f7704,f7705,f7706,f7707,f7708,f7709,f7710,f7711,f7712,f7713,f7714,f7715,f7716,f7717,f7718,f7719,f7720,f7721,f7722,f7782,f7783,f7784,f7787,f7788,f7789,f7790,f7791,f7792,f7745,f7747,f7748,f7752,f7754,f7798,f7857,f7858,f7859,f7862,f7865,f7866,f7867,f7868,f8212,f8213,f8215,f8217,f7889,f7891,f7893,f7894,f7896,f7898,f7899,f7900,f7901,f7902,f7904,f7905,f7907,f7908,f7909,f7911,f7912,f7913,f7914,f7915,f7917,f7919,f7920,f7921,f7925,f7927,f7960,f8228])).
fof(f8223,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7918,f7652])).
fof(f7918,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1875])).
fof(f8222,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7906,f7651])).
fof(f7906,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f1797])).
fof(f8211,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7863,f237])).
fof(f7863,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f428])).
fof(f8210,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8209,f7782])).
fof(f8209,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7860,f7859])).
fof(f7860,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7859,f259])).
fof(f7794,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7793,f7782])).
fof(f7793,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7507,f237])).
fof(f7507,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f321,f7496])).
fof(f7781,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7696,f454])).
fof(f7696,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1876])).
fof(f7780,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7693,f457])).
fof(f7693,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1794])).
fof(f7779,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7691,f457])).
fof(f7691,plain,(
  ~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1760])).
fof(f7778,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7689,f454])).
fof(f7689,plain,(
  ~sP2('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1728])).
fof(f7777,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7688,f454])).
fof(f7688,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1725])).
fof(f7776,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7686,f437])).
fof(f7686,plain,(
  ~sP4('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1689])).
fof(f7775,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7684,f457])).
fof(f7684,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1654])).
fof(f7774,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7682,f1407])).
fof(f7682,plain,(
  ~sP5('F_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1582])).
fof(f7773,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7680,f1453])).
fof(f7680,plain,(
  ~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1580])).
fof(f7772,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7679,f792])).
fof(f7679,plain,(
  ~sP5('T_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1562])).
fof(f7771,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7678,f790])).
fof(f7678,plain,(
  ~sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1559])).
fof(f7770,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7675,f816])).
fof(f7675,plain,(
  sP5('F_0','T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1456])).
fof(f7769,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7668,f1106])).
fof(f7668,plain,(
  sP5('T_0','F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1403])).
fof(f7768,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7665,f812])).
fof(f7665,plain,(
  sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1368])).
fof(f7767,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7664,f2044])).
fof(f7664,plain,(
  sP11('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1230])).
fof(f7766,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7663,f1845])).
fof(f7663,plain,(
  sP9('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f1111])).
fof(f7765,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7764,f481])).
fof(f7764,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7659,f485])).
fof(f7659,plain,(
  s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f514])).
fof(f7763,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7658,f485])).
fof(f7658,plain,(
  s(bool,'T_0') != s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f7648,f482])).
fof(f7495,plain,(
  ( ! [X17,X16] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X16,X17)) ) | $spl110),
  inference(cnf_transformation,[],[f7495_D])).
fof(f7495_D,plain,(
  ( ! [X17,X16] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X16,X17)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f7415,plain,(
  ( ! [X17,X16] : (sP10('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X16,X17) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f480,f1480])).
fof(f7494,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | $spl108),
  inference(cnf_transformation,[],[f7494_D])).
fof(f7494_D,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f7414,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f475,f1480])).
fof(f7493,plain,(
  ( ! [X12,X13] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X12,X13)) ) | $spl106),
  inference(cnf_transformation,[],[f7493_D])).
fof(f7493_D,plain,(
  ( ! [X12,X13] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X12,X13)) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f7413,plain,(
  ( ! [X12,X13] : (sP8('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X12,X13) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f473,f1480])).
fof(f7492,plain,(
  ( ! [X10,X11] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X10,X11)) ) | $spl104),
  inference(cnf_transformation,[],[f7492_D])).
fof(f7492_D,plain,(
  ( ! [X10,X11] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X10,X11)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f7412,plain,(
  ( ! [X10,X11] : (sP6('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X10,X11) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f465,f1480])).
fof(f7491,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X9)) ) | $spl102),
  inference(cnf_transformation,[],[f7491_D])).
fof(f7491_D,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X9)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f7411,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X9) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f463,f1480])).
fof(f7490,plain,(
  ( ! [X6,X7] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X6,X7)) ) | $spl100),
  inference(cnf_transformation,[],[f7490_D])).
fof(f7490_D,plain,(
  ( ! [X6,X7] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X6,X7)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f7410,plain,(
  ( ! [X6,X7] : (sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X6,X7) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f449,f1480])).
fof(f7489,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X5)) ) | $spl98),
  inference(cnf_transformation,[],[f7489_D])).
fof(f7489_D,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X5)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f7409,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X5) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f447,f1480])).
fof(f7488,plain,(
  ( ! [X2,X3] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) | $spl96),
  inference(cnf_transformation,[],[f7488_D])).
fof(f7488_D,plain,(
  ( ! [X2,X3] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f7408,plain,(
  ( ! [X2,X3] : (sP4('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X2,X3) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f442,f1480])).
fof(f7487,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) | $spl94),
  inference(cnf_transformation,[],[f7487_D])).
fof(f7487_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f7407,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),X1) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))) ) | $spl1),
  inference(superposition,[],[f440,f1480])).
fof(f7323,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0') | p(s(bool,X2))) ) | $spl90),
  inference(cnf_transformation,[],[f7323_D])).
fof(f7323_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0') | p(s(bool,X2))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f7325,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0')) )),
  inference(condensation,[],[f7324])).
fof(f7324,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7309,f756])).
fof(f7309,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1296,f696])).
fof(f7322,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0')) )),
  inference(condensation,[],[f7321])).
fof(f7321,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7308,f756])).
fof(f7308,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1296,f696])).
fof(f7208,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0') | p(s(bool,X2))) ) | $spl88),
  inference(cnf_transformation,[],[f7208_D])).
fof(f7208_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0') | p(s(bool,X2))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f7210,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0')) )),
  inference(condensation,[],[f7209])).
fof(f7209,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7194,f756])).
fof(f7194,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1295,f696])).
fof(f7207,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0')) )),
  inference(condensation,[],[f7206])).
fof(f7206,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7193,f756])).
fof(f7193,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1295,f696])).
fof(f7173,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | ~p(s(bool,X2))) ) | $spl86),
  inference(cnf_transformation,[],[f7173_D])).
fof(f7173_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | ~p(s(bool,X2))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f7175,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) )),
  inference(condensation,[],[f7174])).
fof(f7174,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X31))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7156,f756])).
fof(f7156,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X31))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1248,f696])).
fof(f7172,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) )),
  inference(condensation,[],[f7171])).
fof(f7171,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X26))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7155,f756])).
fof(f7155,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X26))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1248,f696])).
fof(f7130,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | ~p(s(bool,X2))) ) | $spl84),
  inference(cnf_transformation,[],[f7130_D])).
fof(f7130_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | ~p(s(bool,X2))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f7132,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) )),
  inference(condensation,[],[f7131])).
fof(f7131,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7113,f756])).
fof(f7113,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1247,f696])).
fof(f7129,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) )),
  inference(condensation,[],[f7128])).
fof(f7128,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7112,f756])).
fof(f7112,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1247,f696])).
fof(f7080,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) ) | $spl82),
  inference(cnf_transformation,[],[f7080_D])).
fof(f7080_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f7082,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) )),
  inference(condensation,[],[f7081])).
fof(f7081,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7066,f756])).
fof(f7066,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1177,f696])).
fof(f7079,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) )),
  inference(condensation,[],[f7078])).
fof(f7078,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7065,f756])).
fof(f7065,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1177,f696])).
fof(f7038,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) ) | $spl80),
  inference(cnf_transformation,[],[f7038_D])).
fof(f7038_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f7040,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) )),
  inference(condensation,[],[f7039])).
fof(f7039,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f7024,f756])).
fof(f7024,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1176,f696])).
fof(f7037,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) )),
  inference(condensation,[],[f7036])).
fof(f7036,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f7023,f756])).
fof(f7023,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1176,f696])).
fof(f6996,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2) | p(s(bool,X2))) ) | $spl78),
  inference(cnf_transformation,[],[f6996_D])).
fof(f6996_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2) | p(s(bool,X2))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f6998,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2)) )),
  inference(condensation,[],[f6997])).
fof(f6997,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6978,f756])).
fof(f6978,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1131,f696])).
fof(f6995,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2)) )),
  inference(condensation,[],[f6994])).
fof(f6994,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6977,f756])).
fof(f6977,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1131,f696])).
fof(f6924,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2) | p(s(bool,X2))) ) | $spl76),
  inference(cnf_transformation,[],[f6924_D])).
fof(f6924_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2) | p(s(bool,X2))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f6926,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2)) )),
  inference(condensation,[],[f6925])).
fof(f6925,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6906,f756])).
fof(f6906,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1130,f696])).
fof(f6923,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2)) )),
  inference(condensation,[],[f6922])).
fof(f6922,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6905,f756])).
fof(f6905,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1130,f696])).
fof(f6882,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) ) | $spl74),
  inference(cnf_transformation,[],[f6882_D])).
fof(f6882_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6884,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) )),
  inference(condensation,[],[f6883])).
fof(f6883,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6867,f756])).
fof(f6867,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1071,f696])).
fof(f6881,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) )),
  inference(condensation,[],[f6880])).
fof(f6880,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6866,f756])).
fof(f6866,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1071,f696])).
fof(f6847,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) ) | $spl72),
  inference(cnf_transformation,[],[f6847_D])).
fof(f6847_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f6849,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) )),
  inference(condensation,[],[f6848])).
fof(f6848,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6832,f756])).
fof(f6832,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1070,f696])).
fof(f6846,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) )),
  inference(condensation,[],[f6845])).
fof(f6845,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6831,f756])).
fof(f6831,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1070,f696])).
fof(f6807,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl70),
  inference(cnf_transformation,[],[f6807_D])).
fof(f6807_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f6809,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6808])).
fof(f6808,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6790,f756])).
fof(f6790,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1035,f696])).
fof(f6806,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6805])).
fof(f6805,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6789,f756])).
fof(f6789,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1035,f696])).
fof(f6758,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl68),
  inference(cnf_transformation,[],[f6758_D])).
fof(f6758_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f6760,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6759])).
fof(f6759,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6741,f756])).
fof(f6741,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1034,f696])).
fof(f6757,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6756])).
fof(f6756,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6740,f756])).
fof(f6740,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1034,f696])).
fof(f6713,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl66),
  inference(cnf_transformation,[],[f6713_D])).
fof(f6713_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f6715,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6714])).
fof(f6714,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6696,f756])).
fof(f6696,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f980,f696])).
fof(f6712,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6711])).
fof(f6711,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6695,f756])).
fof(f6695,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f980,f696])).
fof(f6670,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl64),
  inference(cnf_transformation,[],[f6670_D])).
fof(f6670_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f6672,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6671])).
fof(f6671,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6653,f756])).
fof(f6653,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f979,f696])).
fof(f6669,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6668])).
fof(f6668,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6652,f756])).
fof(f6652,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f979,f696])).
fof(f6445,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl62),
  inference(cnf_transformation,[],[f6445_D])).
fof(f6445_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f6447,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6446])).
fof(f6446,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6429,f756])).
fof(f6429,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f955,f696])).
fof(f6444,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6443])).
fof(f6443,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6428,f756])).
fof(f6428,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f955,f696])).
fof(f6400,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl60),
  inference(cnf_transformation,[],[f6400_D])).
fof(f6400_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6402,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6401])).
fof(f6401,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6384,f756])).
fof(f6384,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f954,f696])).
fof(f6399,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6398])).
fof(f6398,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6383,f756])).
fof(f6383,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f954,f696])).
fof(f6358,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) ) | $spl56),
  inference(cnf_transformation,[],[f6358_D])).
fof(f6358_D,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6359,plain,(
  ( ! [X8] : (p(s(bool,X8))) ) | $spl58),
  inference(cnf_transformation,[],[f6359_D])).
fof(f6359_D,plain,(
  ( ! [X8] : (p(s(bool,X8))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f6360,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X11)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X10),s('type.realax.real',X9))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X9),s('type.realax.real',X10)))) )),
  inference(subsumption_resolution,[],[f6348,f255])).
fof(f6348,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X11)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X10),s('type.realax.real',X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X9),s('type.realax.real',X10)))) )),
  inference(superposition,[],[f1325,f696])).
fof(f6357,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X8)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) )),
  inference(subsumption_resolution,[],[f6347,f255])).
fof(f6347,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X8)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X6),s('type.realax.real',X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1325,f696])).
fof(f5650,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) | $spl54),
  inference(cnf_transformation,[],[f5650_D])).
fof(f5650_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f5652,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5651])).
fof(f5651,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5640,f756])).
fof(f5640,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f912,f696])).
fof(f5649,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5648])).
fof(f5648,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5639,f756])).
fof(f5639,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f912,f696])).
fof(f5586,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) ) | $spl52),
  inference(cnf_transformation,[],[f5586_D])).
fof(f5586_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5588,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) )),
  inference(condensation,[],[f5587])).
fof(f5587,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5576,f756])).
fof(f5576,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f911,f696])).
fof(f5585,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) )),
  inference(condensation,[],[f5584])).
fof(f5584,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,'T_0')),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5575,f756])).
fof(f5575,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,'T_0')),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f911,f696])).
fof(f5554,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) | $spl50),
  inference(cnf_transformation,[],[f5554_D])).
fof(f5554_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f5556,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5555])).
fof(f5555,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5544,f756])).
fof(f5544,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f910,f696])).
fof(f5553,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5552])).
fof(f5552,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5543,f756])).
fof(f5543,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f910,f696])).
fof(f5493,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) ) | $spl48),
  inference(cnf_transformation,[],[f5493_D])).
fof(f5493_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5495,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) )),
  inference(condensation,[],[f5494])).
fof(f5494,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5483,f756])).
fof(f5483,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f909,f696])).
fof(f5492,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) )),
  inference(condensation,[],[f5491])).
fof(f5491,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5482,f756])).
fof(f5482,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f909,f696])).
fof(f5411,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) | $spl46),
  inference(cnf_transformation,[],[f5411_D])).
fof(f5411_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f5413,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5412])).
fof(f5412,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5401,f756])).
fof(f5401,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f860,f696])).
fof(f5410,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5409])).
fof(f5409,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5400,f756])).
fof(f5400,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f860,f696])).
fof(f5332,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) ) | $spl44),
  inference(cnf_transformation,[],[f5332_D])).
fof(f5332_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5334,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) )),
  inference(condensation,[],[f5333])).
fof(f5333,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5322,f756])).
fof(f5322,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f859,f696])).
fof(f5331,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) )),
  inference(condensation,[],[f5330])).
fof(f5330,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X26)),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5321,f756])).
fof(f5321,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X26)),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f859,f696])).
fof(f5238,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) | $spl42),
  inference(cnf_transformation,[],[f5238_D])).
fof(f5238_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f5240,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5239])).
fof(f5239,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5228,f756])).
fof(f5228,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f858,f696])).
fof(f5237,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5236])).
fof(f5236,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5227,f756])).
fof(f5227,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f858,f696])).
fof(f5142,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) ) | $spl40),
  inference(cnf_transformation,[],[f5142_D])).
fof(f5142_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f5144,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) )),
  inference(condensation,[],[f5143])).
fof(f5143,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5132,f756])).
fof(f5132,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f857,f696])).
fof(f5141,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) )),
  inference(condensation,[],[f5140])).
fof(f5140,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5131,f756])).
fof(f5131,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f857,f696])).
fof(f3270,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150,f3151,f3153,f3269])).
fof(f3269,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | $spl8),
  inference(forward_demodulation,[],[f3185,f282])).
fof(f3185,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X0),s('type.realax.real',X1)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f286])).
fof(f3153,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f2128])).
fof(f3151,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f2104])).
fof(f3150,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f2004])).
fof(f3149,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1976])).
fof(f3144,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1898])).
fof(f3136,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1855])).
fof(f3135,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1852])).
fof(f3134,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1829])).
fof(f3129,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1811])).
fof(f3125,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1793])).
fof(f3120,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1775])).
fof(f3119,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1773])).
fof(f3118,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1750])).
fof(f3114,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1715])).
fof(f3111,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1706])).
fof(f3110,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1680])).
fof(f3106,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1646])).
fof(f3103,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1635])).
fof(f3100,plain,(
  ( ! [X14,X17,X15,X16] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17,X16) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1296])).
fof(f3099,plain,(
  ( ! [X14,X17,X15,X16] : (~sP10(X17,X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15))) | ~p(s(bool,X15)) | p(s(bool,X16)) | ~p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1248])).
fof(f3098,plain,(
  ( ! [X14,X17,X15,X16] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17,X16) | ~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1177])).
fof(f3097,plain,(
  ( ! [X14,X17,X15,X16] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X16,X17) | ~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1131])).
fof(f3096,plain,(
  ( ! [X14,X17,X15,X16] : (~sP7(X17,X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1071])).
fof(f3095,plain,(
  ( ! [X14,X17,X15,X16] : (~sP6(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f1035])).
fof(f3094,plain,(
  ( ! [X14,X17,X15,X16] : (~sP3(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f980])).
fof(f3093,plain,(
  ( ! [X14,X17,X15,X16] : (~sP4(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f955])).
fof(f3208,plain,(
  ( ! [X54,X52,X53,X51] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~p(s(bool,X52))) ) | $spl8),
  inference(forward_demodulation,[],[f3092,f2959])).
fof(f3092,plain,(
  ( ! [X54,X52,X53,X51] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~p(s(bool,X52)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f914])).
fof(f3206,plain,(
  ( ! [X47,X50,X48,X49] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~p(s(bool,X48))) ) | $spl8),
  inference(forward_demodulation,[],[f3091,f2959])).
fof(f3091,plain,(
  ( ! [X47,X50,X48,X49] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~p(s(bool,X48)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f913])).
fof(f3090,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X44)) | ~p(s(bool,X45))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f912])).
fof(f3089,plain,(
  ( ! [X39,X41,X42,X40] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42,X41) | ~p(s(bool,X40)) | p(s(bool,X41))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f911])).
fof(f3088,plain,(
  ( ! [X37,X35,X38,X36] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X37,X38) | ~p(s(bool,X36)) | ~p(s(bool,X37))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f910])).
fof(f3087,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X32)) | ~p(s(bool,X33))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f909])).
fof(f3086,plain,(
  ( ! [X30,X28,X29] : (sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | ~p(s(bool,X29)) | p(s(bool,X30))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f908])).
fof(f3085,plain,(
  ( ! [X26,X27,X25] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | ~p(s(bool,X26)) | p(s(bool,X27))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f907])).
fof(f3084,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | ~p(s(bool,X23))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f906])).
fof(f3083,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | ~p(s(bool,X20))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f905])).
fof(f3081,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f881])).
fof(f3080,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f880])).
fof(f3079,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f879])).
fof(f3078,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f878])).
fof(f3074,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f283])).
fof(f3190,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl8),
  inference(subsumption_resolution,[],[f3072,f2959])).
fof(f3072,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f259])).
fof(f3264,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f3263,f237])).
fof(f3263,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(forward_demodulation,[],[f3262,f2959])).
fof(f3262,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) | $spl8),
  inference(subsumption_resolution,[],[f3176,f237])).
fof(f3176,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) ) | $spl8),
  inference(backward_demodulation,[],[f2959,f321])).
fof(f3261,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3154,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150,f3151,f3153])).
fof(f3154,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0'))) | p(s(bool,X0))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f2137])).
fof(f3260,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150,f3151,f3153])).
fof(f3259,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3152,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150,f3151])).
fof(f3152,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),X0) | p(s(bool,X0))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f2113])).
fof(f3258,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150,f3151])).
fof(f3257,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149,f3150])).
fof(f3256,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144,f3149])).
fof(f3255,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3147,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144])).
fof(f3147,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1912])).
fof(f3254,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3146,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144])).
fof(f3146,plain,(
  ( ! [X1] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1911])).
fof(f3253,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3145,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144])).
fof(f3145,plain,(
  ( ! [X0] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1910])).
fof(f3252,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136,f3144])).
fof(f3251,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3143,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3143,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1876])).
fof(f3250,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3142,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3142,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1875])).
fof(f3249,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3141,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3141,plain,(
  ( ! [X0] : (~sP3('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1874])).
fof(f3248,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3139,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3139,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1869])).
fof(f3247,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3138,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3138,plain,(
  ( ! [X1] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1868])).
fof(f3246,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3137,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3137,plain,(
  ( ! [X0] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1867])).
fof(f3245,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135,f3136])).
fof(f3244,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134,f3135])).
fof(f3243,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129,f3134])).
fof(f3242,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3132,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129])).
fof(f3132,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1825])).
fof(f3241,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3131,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129])).
fof(f3131,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1824])).
fof(f3240,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3130,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129])).
fof(f3130,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1823])).
fof(f3239,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125,f3129])).
fof(f3238,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3128,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125])).
fof(f3128,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1797])).
fof(f3237,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3127,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125])).
fof(f3127,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)),'F_0')) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1796])).
fof(f3236,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3126,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125])).
fof(f3126,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1794])).
fof(f3235,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120,f3125])).
fof(f3234,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3123,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120])).
fof(f3123,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1789])).
fof(f3233,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3122,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120])).
fof(f3122,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1788])).
fof(f3232,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3121,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120])).
fof(f3121,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1787])).
fof(f3231,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119,f3120])).
fof(f3230,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118,f3119])).
fof(f3229,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114,f3118])).
fof(f3228,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3116,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114])).
fof(f3116,plain,(
  ( ! [X2] : (sP5('T_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1746])).
fof(f3227,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3115,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114])).
fof(f3115,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1725])).
fof(f3226,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111,f3114])).
fof(f3225,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3112,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111])).
fof(f3112,plain,(
  ( ! [X2] : (~sP5('F_0','const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1711])).
fof(f3224,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110,f3111])).
fof(f3223,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106,f3110])).
fof(f3222,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3108,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106])).
fof(f3108,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1676])).
fof(f3221,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3107,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106])).
fof(f3107,plain,(
  ( ! [X0] : (~sP2('const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1654])).
fof(f3220,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103,f3106])).
fof(f3219,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3104,f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103])).
fof(f3104,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f2959,f1642])).
fof(f3218,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100,f3103])).
fof(f3217,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099,f3100])).
fof(f3216,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098,f3099])).
fof(f3215,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097,f3098])).
fof(f3214,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096,f3097])).
fof(f3213,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095,f3096])).
fof(f3212,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094,f3095])).
fof(f3211,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093,f3094])).
fof(f3210,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208,f3093])).
fof(f3209,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206,f3208])).
fof(f3207,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090,f3206])).
fof(f3205,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089,f3090])).
fof(f3204,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088,f3089])).
fof(f3203,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087,f3088])).
fof(f3202,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086,f3087])).
fof(f3201,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085,f3086])).
fof(f3200,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084,f3085])).
fof(f3199,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083,f3084])).
fof(f3198,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081,f3083])).
fof(f3197,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080,f3081])).
fof(f3196,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079,f3080])).
fof(f3195,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078,f3079])).
fof(f3194,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074,f3078])).
fof(f3193,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f3075,f237])).
fof(f3075,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f2959,f428])).
fof(f3192,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190,f3074])).
fof(f3191,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f236,f235,f234,f237,f428,f245,f256,f255,f260,f259,f282,f283,f286,f290,f287,f297,f296,f429,f315,f312,f311,f310,f321,f320,f330,f331,f332,f345,f344,f343,f342,f341,f340,f339,f349,f348,f347,f346,f353,f352,f351,f350,f357,f356,f355,f354,f361,f360,f359,f358,f415,f365,f364,f363,f362,f372,f371,f370,f369,f378,f375,f374,f373,f385,f384,f383,f414,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f402,f401,f400,f413,f398,f397,f396,f406,f405,f404,f403,f410,f409,f408,f407,f430,f433,f436,f439,f441,f443,f446,f448,f450,f453,f456,f459,f462,f464,f466,f469,f472,f474,f476,f479,f481,f519,f520,f523,f533,f548,f556,f559,f563,f571,f576,f579,f582,f593,f606,f608,f616,f627,f696,f756,f783,f782,f805,f803,f833,f832,f831,f830,f844,f853,f854,f855,f856,f857,f858,f859,f860,f861,f862,f881,f880,f879,f878,f882,f896,f905,f906,f907,f908,f909,f910,f911,f912,f913,f914,f949,f954,f955,f974,f979,f980,f990,f998,f1011,f1015,f1029,f1034,f1035,f1045,f1070,f1071,f1110,f1125,f1130,f1131,f1142,f1176,f1177,f1229,f1242,f1247,f1248,f1258,f1295,f1296,f1325,f1355,f1393,f1480,f1545,f1546,f1637,f1635,f1643,f1644,f1645,f1646,f1671,f1677,f1678,f1679,f1680,f1706,f1703,f1712,f1713,f1715,f1741,f1747,f1748,f1750,f1775,f1773,f1778,f1790,f1791,f1793,f1811,f1814,f1826,f1827,f1829,f1855,f1852,f1858,f1870,f1871,f1898,f1901,f1913,f1914,f1928,f1948,f1976,f2004,f2052,f2079,f2104,f2128,f2181,f2182,f2196,f2207,f2208,f2249,f2251,f2253,f2255,f2262,f2264,f2265,f2267,f2304,f2311,f2314,f2409,f2410,f2411,f2412,f2413,f2414,f2957,f2961,f2964,f2967,f2970,f2973,f2976,f2979,f2982,f2985,f2988,f2991,f2994,f2997,f3000,f3003,f2445,f2447,f2449,f2451,f2458,f2460,f2461,f2463,f3005,f3006,f3007,f3008,f3009,f3010,f3011,f3012,f3013,f3014,f3015,f3016,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3024,f2504,f2506,f2508,f2510,f3025,f3026,f3027,f3028,f2517,f2519,f2520,f2522,f3029,f3030,f3031,f3032,f3033,f3034,f2564,f2567,f3040,f3042,f3044,f3046,f3048,f3050,f3052,f3054,f3056,f3058,f3060,f3062,f3064,f3066,f3068,f3070,f2959,f3190])).
fof(f3004,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) | $spl38),
  inference(cnf_transformation,[],[f3004_D])).
fof(f3004_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3070,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3069])).
fof(f3069,plain,(
  ( ! [X127,X125,X128,X126] : (~sP8('T_0',X126,X127) | sP9('T_0',X126,X127) | s(bool,X125) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) )),
  inference(subsumption_resolution,[],[f2603,f756])).
fof(f2603,plain,(
  ( ! [X127,X125,X128,X126] : (~p(s(bool,X125)) | ~sP8('T_0',X126,X127) | sP9('T_0',X126,X127) | s(bool,X125) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) )),
  inference(superposition,[],[f414,f696])).
fof(f3001,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) | $spl36),
  inference(cnf_transformation,[],[f3001_D])).
fof(f3001_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3068,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3067])).
fof(f3067,plain,(
  ( ! [X123,X121,X124,X122] : (~sP10('T_0',X122,X123) | sP11('T_0',X122,X123) | s(bool,X121) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) )),
  inference(subsumption_resolution,[],[f2602,f756])).
fof(f2602,plain,(
  ( ! [X123,X121,X124,X122] : (~p(s(bool,X121)) | ~sP10('T_0',X122,X123) | sP11('T_0',X122,X123) | s(bool,X121) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) )),
  inference(superposition,[],[f413,f696])).
fof(f2998,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl34),
  inference(cnf_transformation,[],[f2998_D])).
fof(f2998_D,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3066,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3065])).
fof(f3065,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,X118)) | p(s(bool,X119)) | ~sP11('T_0',X119,X118) | s(bool,X117) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(subsumption_resolution,[],[f2601,f756])).
fof(f2601,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,X117)) | ~p(s(bool,X118)) | p(s(bool,X119)) | ~sP11('T_0',X119,X118) | s(bool,X117) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f410,f696])).
fof(f2995,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f2995_D])).
fof(f2995_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3064,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3063])).
fof(f3063,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,X114)) | sP11('T_0',X114,X115) | s(bool,X113) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) )),
  inference(subsumption_resolution,[],[f2600,f756])).
fof(f2600,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,X113)) | ~p(s(bool,X114)) | sP11('T_0',X114,X115) | s(bool,X113) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) )),
  inference(superposition,[],[f409,f696])).
fof(f2992,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f2992_D])).
fof(f2992_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3062,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3061])).
fof(f3061,plain,(
  ( ! [X111,X109,X112,X110] : (p(s(bool,X110)) | sP11('T_0',X111,X110) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f2599,f756])).
fof(f2599,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,X109)) | p(s(bool,X110)) | sP11('T_0',X111,X110) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f408,f696])).
fof(f2989,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) | $spl28),
  inference(cnf_transformation,[],[f2989_D])).
fof(f2989_D,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3060,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f3059])).
fof(f3059,plain,(
  ( ! [X107,X105,X108,X106] : (p(s(bool,X106)) | ~p(s(bool,X107)) | ~sP10(X107,X106,'T_0') | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f2598,f756])).
fof(f2598,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,X105)) | p(s(bool,X106)) | ~p(s(bool,X107)) | ~sP10(X107,X106,'T_0') | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f403,f696])).
fof(f2986,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl26),
  inference(cnf_transformation,[],[f2986_D])).
fof(f2986_D,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3058,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3057])).
fof(f3057,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,X102)) | p(s(bool,X103)) | ~sP9('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(subsumption_resolution,[],[f2597,f756])).
fof(f2597,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X101)) | p(s(bool,X102)) | p(s(bool,X103)) | ~sP9('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f393,f696])).
fof(f2983,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl24),
  inference(cnf_transformation,[],[f2983_D])).
fof(f2983_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3056,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3055])).
fof(f3055,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X98)) | sP9('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(subsumption_resolution,[],[f2596,f756])).
fof(f2596,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP9('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f392,f696])).
fof(f2980,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl22),
  inference(cnf_transformation,[],[f2980_D])).
fof(f2980_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3054,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3053])).
fof(f3053,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X94)) | sP9('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f2595,f756])).
fof(f2595,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | ~p(s(bool,X94)) | sP9('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f391,f696])).
fof(f2977,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) | $spl20),
  inference(cnf_transformation,[],[f2977_D])).
fof(f2977_D,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3052,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f3051])).
fof(f3051,plain,(
  ( ! [X92,X90,X91,X89] : (p(s(bool,X90)) | p(s(bool,X91)) | ~sP8('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f2594,f756])).
fof(f2594,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | p(s(bool,X90)) | p(s(bool,X91)) | ~sP8('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f386,f696])).
fof(f2974,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl18),
  inference(cnf_transformation,[],[f2974_D])).
fof(f2974_D,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3050,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f3049])).
fof(f3049,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X86)) | p(s(bool,X87)) | ~sP7(X87,X86,'T_0') | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f2593,f756])).
fof(f2593,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP7(X87,X86,'T_0') | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f378,f696])).
fof(f2971,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl16),
  inference(cnf_transformation,[],[f2971_D])).
fof(f2971_D,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3048,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f3047])).
fof(f3047,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | p(s(bool,X83)) | ~sP6(X82,'T_0',X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f2592,f756])).
fof(f2592,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | p(s(bool,X83)) | ~sP6(X82,'T_0',X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f369,f696])).
fof(f2968,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl14),
  inference(cnf_transformation,[],[f2968_D])).
fof(f2968_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f3046,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f3045])).
fof(f3045,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X78)) | p(s(bool,X79)) | ~sP3(X78,'T_0',X79) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f2591,f756])).
fof(f2591,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | p(s(bool,X79)) | ~sP3(X78,'T_0',X79) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f350,f696])).
fof(f2965,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl12),
  inference(cnf_transformation,[],[f2965_D])).
fof(f2965_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f3044,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3043])).
fof(f3043,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X74)) | p(s(bool,X75)) | ~sP4(X74,'T_0',X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f2590,f756])).
fof(f2590,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP4(X74,'T_0',X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f346,f696])).
fof(f2962,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl10),
  inference(cnf_transformation,[],[f2962_D])).
fof(f2962_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3042,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f3041])).
fof(f3041,plain,(
  ( ! [X70,X72,X71] : (p(s(bool,X71)) | sP1(X71,'T_0') | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f2589,f756])).
fof(f2589,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | p(s(bool,X71)) | sP1(X71,'T_0') | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f315,f696])).
fof(f2958,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl6),
  inference(cnf_transformation,[],[f2958_D])).
fof(f2958_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f3040,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f3039])).
fof(f3039,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,X68)) | sP1('T_0',X68) | s(bool,X67) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f2588,f756])).
fof(f2588,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | sP1('T_0',X68) | s(bool,X67) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f312,f696])).
fof(f3003,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3002])).
fof(f3002,plain,(
  ( ! [X127,X125,X128,X126] : (~sP8('T_0',X126,X127) | sP9('T_0',X126,X127) | s(bool,X125) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) )),
  inference(subsumption_resolution,[],[f2443,f756])).
fof(f2443,plain,(
  ( ! [X127,X125,X128,X126] : (~p(s(bool,X125)) | ~sP8('T_0',X126,X127) | sP9('T_0',X126,X127) | s(bool,X125) = s(bool,X128) | s(bool,'T_0') = s(bool,X128)) )),
  inference(superposition,[],[f414,f696])).
fof(f3000,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2999])).
fof(f2999,plain,(
  ( ! [X123,X121,X124,X122] : (~sP10('T_0',X122,X123) | sP11('T_0',X122,X123) | s(bool,X121) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) )),
  inference(subsumption_resolution,[],[f2442,f756])).
fof(f2442,plain,(
  ( ! [X123,X121,X124,X122] : (~p(s(bool,X121)) | ~sP10('T_0',X122,X123) | sP11('T_0',X122,X123) | s(bool,X121) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) )),
  inference(superposition,[],[f413,f696])).
fof(f2997,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2996])).
fof(f2996,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,X118)) | p(s(bool,X119)) | ~sP11('T_0',X119,X118) | s(bool,X117) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(subsumption_resolution,[],[f2441,f756])).
fof(f2441,plain,(
  ( ! [X118,X120,X119,X117] : (~p(s(bool,X117)) | ~p(s(bool,X118)) | p(s(bool,X119)) | ~sP11('T_0',X119,X118) | s(bool,X117) = s(bool,X120) | s(bool,'T_0') = s(bool,X120)) )),
  inference(superposition,[],[f410,f696])).
fof(f2994,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f2993])).
fof(f2993,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,X114)) | sP11('T_0',X114,X115) | s(bool,X113) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) )),
  inference(subsumption_resolution,[],[f2440,f756])).
fof(f2440,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,X113)) | ~p(s(bool,X114)) | sP11('T_0',X114,X115) | s(bool,X113) = s(bool,X116) | s(bool,'T_0') = s(bool,X116)) )),
  inference(superposition,[],[f409,f696])).
fof(f2991,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f2990])).
fof(f2990,plain,(
  ( ! [X111,X109,X112,X110] : (p(s(bool,X110)) | sP11('T_0',X111,X110) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f2439,f756])).
fof(f2439,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,X109)) | p(s(bool,X110)) | sP11('T_0',X111,X110) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f408,f696])).
fof(f2988,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f2987])).
fof(f2987,plain,(
  ( ! [X107,X105,X108,X106] : (p(s(bool,X106)) | ~p(s(bool,X107)) | ~sP10(X107,X106,'T_0') | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f2438,f756])).
fof(f2438,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,X105)) | p(s(bool,X106)) | ~p(s(bool,X107)) | ~sP10(X107,X106,'T_0') | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f403,f696])).
fof(f2985,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2984])).
fof(f2984,plain,(
  ( ! [X103,X101,X102,X104] : (p(s(bool,X102)) | p(s(bool,X103)) | ~sP9('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(subsumption_resolution,[],[f2437,f756])).
fof(f2437,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X101)) | p(s(bool,X102)) | p(s(bool,X103)) | ~sP9('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f393,f696])).
fof(f2982,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f2981])).
fof(f2981,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X98)) | sP9('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(subsumption_resolution,[],[f2436,f756])).
fof(f2436,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP9('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f392,f696])).
fof(f2979,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f2978])).
fof(f2978,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X94)) | sP9('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f2435,f756])).
fof(f2435,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | ~p(s(bool,X94)) | sP9('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f391,f696])).
fof(f2976,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f2975])).
fof(f2975,plain,(
  ( ! [X92,X90,X91,X89] : (p(s(bool,X90)) | p(s(bool,X91)) | ~sP8('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f2434,f756])).
fof(f2434,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | p(s(bool,X90)) | p(s(bool,X91)) | ~sP8('T_0',X90,X91) | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f386,f696])).
fof(f2973,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f2972])).
fof(f2972,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X86)) | p(s(bool,X87)) | ~sP7(X87,X86,'T_0') | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f2433,f756])).
fof(f2433,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP7(X87,X86,'T_0') | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f378,f696])).
fof(f2970,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f2969])).
fof(f2969,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | p(s(bool,X83)) | ~sP6(X82,'T_0',X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f2432,f756])).
fof(f2432,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | p(s(bool,X83)) | ~sP6(X82,'T_0',X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f369,f696])).
fof(f2967,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f2966])).
fof(f2966,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X78)) | p(s(bool,X79)) | ~sP3(X78,'T_0',X79) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f2431,f756])).
fof(f2431,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | p(s(bool,X79)) | ~sP3(X78,'T_0',X79) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f350,f696])).
fof(f2964,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f2963])).
fof(f2963,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X74)) | p(s(bool,X75)) | ~sP4(X74,'T_0',X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f2430,f756])).
fof(f2430,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | ~p(s(bool,X74)) | p(s(bool,X75)) | ~sP4(X74,'T_0',X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f346,f696])).
fof(f2961,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f2960])).
fof(f2960,plain,(
  ( ! [X70,X72,X71] : (p(s(bool,X71)) | sP1(X71,'T_0') | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f2429,f756])).
fof(f2429,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | p(s(bool,X71)) | sP1(X71,'T_0') | s(bool,X70) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f315,f696])).
fof(f2957,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f2956])).
fof(f2956,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,X68)) | sP1('T_0',X68) | s(bool,X67) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f2428,f756])).
fof(f2428,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,X67)) | p(s(bool,X68)) | sP1('T_0',X68) | s(bool,X67) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f312,f696])).
fof(f422,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) | $spl0),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f424,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | $spl2),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f234,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))))),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) | (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))))) & (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f158])).
fof(f158,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) | (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1)))))) & (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1))))))),
  inference(flattening,[],[f157])).
fof(f157,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) | (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1)))))) & (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) | (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1)))))))),
  inference(nnf_transformation,[],[f111])).
fof(f111,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) <~> (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1))))))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real','const.real.min_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) <=> (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X0)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X2),s('type.realax.real',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real','const.real.min_2'(s('type.realax.real',X6),s('type.realax.real',X7)))))) <=> (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real',X6)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real','const.real.min_2'(s('type.realax.real',X6),s('type.realax.real',X7)))))) <=> (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real',X6)))) & p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X8),s('type.realax.real',X7))))))),
  file('thm.integral.REAL_LT_MIN','thm.integral.REAL_LT_MIN')).
fof(f426,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | $spl4),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f235,plain,(
  p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))))),
  inference(cnf_transformation,[],[f159])).
fof(f423,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) | $spl1),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f425,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | $spl3),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f427,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | $spl5),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f236,plain,(
  ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK13)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',sK14),s('type.realax.real','const.real.min_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))))))),
  inference(cnf_transformation,[],[f159])).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1637
% Passive clauses: 4275
% Generated clauses: 33829
% Final active clauses: 816
% Final passive clauses: 1168
% Input formulas: 44
% Initial clauses: 179
% 
% Duplicate literals: 816
% Trivial inequalities: 37
% Fw subsumption resolutions: 990
% Fw demodulations: 3644
% Bw demodulations: 967
% Condensations: 1782
% Global subsumptions: 245
% 
% Simple tautologies: 91
% Equational tautologies: 110
% Forward subsumptions: 21434
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 8687
% Factoring: 1
% Forward superposition: 11124
% Backward superposition: 4391
% Self superposition: 57
% Equality factoring: 32
% Equality resolution: 1
% 
% Split clauses: 127
% Split components: 260
% SAT solver clauses: 5054
% SAT solver unit clauses: 231
% SAT solver binary clauses: 1907
% 
% Sat splits: 127
% Sat splitting refutations: 278
% 
% Memory used [KB]: 16247
% Time elapsed: 1.318 s
% ------------------------------
% ------------------------------
% Success in time 2.611 s
